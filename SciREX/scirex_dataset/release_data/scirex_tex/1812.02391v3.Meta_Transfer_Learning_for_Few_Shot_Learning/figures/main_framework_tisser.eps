%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: main_framework_tisser.pdf
%%Creator: (Adobe Acrobat 19.8.0)
%%For: yaoyaoliu
%%CreationDate: 5/12/18, 11:56
%%BoundingBox: 0 0 307 246
%%HiResBoundingBox: 0 0 307 246
%%CropBox: 0 0 307 246
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 397 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 91.163280, 2018/06/22-11:31:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreatorTool="Google"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -246 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 246 li
307 246 li
307 0 li
cp
clp
gsave
0 246 mo
307 246 li
307 0 li
0 0 li
0 246 li
clp
gsave
0 0 mo
307.358 0 li
307.358 246.063 li
0 246.063 li
0 0 li
clp
307 246 mo
0 246 li
0 244.926 li
307 244.614 li
307 246 li
0 243.426 mo
0 238.956 li
91.7676 238.956 li
91.7621 243.333 li
0 243.426 li
91.7621 243.333 mo
91.7676 238.956 li
107.05 238.956 li
107.05 237.231 li
107.36 237.231 li
107.36 238.161 li
192.99 238.161 li
192.99 220.894 li
200.401 220.894 li
198.627 222.668 li
203.501 220.894 li
203.502 220.894 li
203.501 220.894 li
203.502 220.894 li
198.627 219.119 li
200.401 220.894 li
200.401 220.894 li
192.99 220.894 li
192.99 218.41 li
201.557 218.41 li
203.915 218.41 li
203.915 223.79 li
202.451 223.79 li
202.451 237.231 li
203.915 237.231 li
203.915 238.161 li
289.545 238.161 li
289.545 230.414 li
307 230.414 li
307 243.114 li
91.7621 243.333 li
203.915 204.969 mo
192.99 204.969 li
192.99 203.626 li
186.733 203.626 li
186.733 190.666 li
101.103 190.666 li
101.103 192.09 li
91.8261 192.09 li
91.8311 188.038 li
307 187.819 li
307 202.044 li
282.876 202.044 li
282.876 190.666 li
197.246 190.666 li
197.246 204.107 li
203.915 204.107 li
203.915 204.969 li
91.8261 192.09 mo
0 192.09 li
0 188.132 li
91.8311 188.038 li
91.8261 192.09 li
0 187.382 mo
0 185.142 li
87.52 185.142 li
87.52 185.623 li
91.8342 185.623 li
91.8321 187.288 li
0 187.382 li
91.8321 187.288 mo
91.8342 185.623 li
118.465 185.623 li
118.465 183.037 li
193.952 183.037 li
193.952 176.317 li
204.322 176.317 li
193.952 176.317 li
193.952 169.596 li
157.087 169.596 li
157.087 163.855 li
197.929 163.855 li
197.929 170.087 li
204.326 170.087 li
204.326 183.037 li
282.696 183.037 li
282.696 185.253 li
307 185.253 li
307 187.069 li
91.8321 187.288 li
282.696 169.596 mo
253.086 169.596 li
253.086 156.646 li
250.272 156.646 li
250.272 154.027 li
307 153.97 li
307 156.882 li
282.696 156.882 li
282.696 169.596 li
101.929 157.253 mo
93.8712 157.253 li
93.8712 155.827 li
91.8714 155.827 li
91.8734 154.189 li
141.776 154.138 li
141.776 156.646 li
101.929 156.646 li
101.929 157.253 li
91.8714 155.827 mo
0 155.827 li
0 154.282 li
91.8734 154.189 li
91.8714 155.827 li
0 152.782 mo
0 151.185 li
91.8772 151.185 li
91.8753 152.689 li
0 152.782 li
91.8753 152.689 mo
91.8772 151.185 li
100.176 151.185 li
100.176 130.58 li
141.776 130.58 li
141.776 152.638 li
91.8753 152.689 li
250.272 152.527 mo
250.272 144.931 li
307 144.931 li
307 152.47 li
250.272 152.527 li
142.34 106.934 mo
100.176 106.934 li
100.176 86.5315 li
91.9579 86.5315 li
91.9605 84.4382 li
142.34 84.387 li
142.34 106.934 li
307 89.7261 mo
250.836 89.7261 li
250.836 84.2766 li
307 84.2194 li
307 89.7261 li
91.9579 86.5315 mo
0 86.5315 li
0 84.5318 li
91.9605 84.4382 li
91.9579 86.5315 li
93.8752 83.6863 mo
93.8752 51.996 li
92.001 51.996 li
92.0012 51.8149 li
108.956 51.8149 li
108.956 51.0456 li
144.049 51.0098 li
144.049 55.0604 li
97.7184 55.0604 li
97.7184 78.7059 li
142.34 78.7059 li
142.34 83.6369 li
93.8752 83.6863 li
250.836 83.5265 mo
250.836 78.7067 li
304.609 78.7067 li
304.609 55.0609 li
236.791 55.0609 li
236.791 71.6001 li
232.377 71.6001 li
232.395 50.9199 li
307 50.844 li
307 83.4694 li
250.836 83.5265 li
231.627 71.6001 mo
225.306 71.6001 li
225.306 55.0602 li
174.994 55.0602 li
174.994 50.9783 li
231.645 50.9207 li
231.627 71.6001 li
92.001 51.996 mo
0 51.996 li
0 51.8149 li
92.0012 51.8149 li
92.001 51.996 li
108.956 50.2955 mo
108.956 17.2796 li
92.0443 17.2796 li
92.0446 17.0635 li
231.674 16.9214 li
231.646 50.1707 li
174.994 50.2283 li
174.994 46.378 li
144.049 46.378 li
144.049 50.2598 li
108.956 50.2955 li
232.396 50.1699 mo
232.425 16.9206 li
307 16.8447 li
307 50.094 li
232.396 50.1699 li
92.0443 17.2796 mo
0 17.2796 li
0 17.1572 li
92.0446 17.0635 li
92.0443 17.2796 li
0 15.6571 mo
0 0 li
59.6547 0 li
59.6547 3.34446 li
46.2628 3.34446 li
46.2628 11.8957 li
73.0265 11.8957 li
73.0265 11.7953 li
155.186 11.7953 li
155.186 11.8957 li
181.95 11.8957 li
181.95 11.7953 li
237.055 11.7953 li
237.055 0 li
247.049 0 li
247.049 11.7962 li
307 11.7962 li
307 15.3446 li
0 15.6571 li
175.236 3.34446 mo
155.773 3.34446 li
155.773 0 li
175.236 0 li
175.236 3.34446 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
204.322 176.317 mo
193.952 176.317 li
204.322 176.317 li
f
.75 lw
0 lc
1 lj
8 ml
[] 0 dsh
true sadj
187.952 176.317 mo
201.751 176.317 li
.750271 .679713 .654902 .901945 cmyk
@
201.751 176.317 mo
200.908 177.16 li
203.225 176.317 li
200.908 175.473 li
cp
ef
0 lj
10 ml
201.751 176.317 mo
200.908 177.16 li
203.225 176.317 li
200.908 175.473 li
cp
@
203.502 220.894 mo
203.501 220.894 li
203.502 220.894 li
200.401 220.894 mo
192.99 220.894 li
200.401 220.894 li
0 0 0 0 cmyk
f
1 lj
8 ml
186.99 220.894 mo
200.932 220.894 li
.750271 .679713 .654902 .901945 cmyk
@
200.932 220.894 mo
200.088 221.737 li
202.406 220.894 li
200.088 220.05 li
cp
ef
200.932 220.894 mo
200.667 220.628 li
198.627 222.668 li
203.502 220.894 li
198.627 219.119 li
200.667 221.159 li
200.932 220.894 li
200.667 220.628 li
200.932 220.894 li
201.197 220.628 li
200.353 219.785 li
200.088 220.05 li
199.96 220.403 li
201.309 220.894 li
199.96 221.385 li
200.088 221.737 li
200.353 222.002 li
201.462 220.894 li
201.197 220.628 li
200.932 220.894 li
f
[3 2.25 ] 0 dsh
110.078 373.63 mo
277.11 373.63 li
277.11 537.591 li
110.078 537.591 li
cp
@
117.309 391.631 mo
267.592 391.631 li
267.592 423.875 li
117.309 423.875 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
[] 0 dsh
117.308 391.631 mo
267.592 391.631 li
267.592 423.875 li
117.308 423.875 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (NAAAAA+TimesNewRomanPSMT)%%Title: (NAAAAA+TimesNewRomanPSMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /NAAAAA+TimesNewRomanPSMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-568 -307 2000 1007} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3416 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 22 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |41 <001C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |72 <001C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |88 <001C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A199CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E169A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97520325221F3417C7781EB09765> |85 <001C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |3 <001C60D8A8C9B8707C25> |91 <001C60D8A8C9B7A73DD670F5272DD145294083C4293196A1DBA349EF195DAADD76F8FA5D95CD31B7A1C2B32491F1D3BDEAF32234D0995EB67A2BEF06777B5B8AB01E1FC457D70FEE563CF2C0C851F3CC8B137B00E8CC0DDAE3A128D9A2319F3FF89B241236A311487E7B00ABDB18C5C11783A73226CB9112660CA25988169831DBD8D37F0570522652B666847FB24934B522403DA00EF77D9BF6494155BEACD6C4576905B10BBFDD62A70CAEE193F073806BE591E56E5DC8424D64A808D7528EBE8928C7E8D537D6DCC6918CF06863B4A936B7CA4331A2F9> |70 <001C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |82 <001C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA436702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |300 <001C60D8A8C9B6079F62B6C457A2BD444B4188DADB7D9355E563DF5904FA1257A5CE1188FED760C467086E341252AFD4CE81D4D4F4BC851C90F719C08768DF99CED3FA6562838EAE1D4803EE0732DD60E6A49A991428F9569045DEF3D5650315D4BF9391E471B64AD13446F2D2236D7B602344F21658C3F512A0EB2CF0AE15F641BBF94DF82B861AD7240471533DF7D718C6FBF2D5D7F227C20144C2161462433CF31709869AB0E616309A670D029BC2D2D70C47AC5F35D2053AB9E76742F6B4C8D0761C818093A07FD69D7AF3EF6E16CA9D> |11 <001C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |83 <001C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F75904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF1C7730E7CC0F462D79552DFA> |16 <001C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |76 <001C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |81 <001C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |71 <001C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D203065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A36815EA1CE5876FAC4F83CDFE1BD4A> |9 <001C60D8A8C9B6FF86FA653C89FD5B24EA84E60BF0DFF76DFD47C2EE40B1C0C34956A21B5F70B428C9F3DC373D0AB662EF43DE806F43C321FA75E329A40B22E4EA36D1126C2267B8280551A5852E862F9D9205F3511F55CBA6ED891E64F83CB71615D85081A2C25631CDFA9AC5C039B8BD1A737261F91B732F20841E473AEC39C6FFB23B9AEA8A3D6270483258492A10DB6242051ADF50F1F2C1271592CDB2D9E1BDE5691A8E0D63066A76144BA894C3C97F311D95CEB73B35F33A38CDD66FF75091E68D3DEB2F131A798B69C8DBC6815E391ACAFF2B6AA94B0713AD150611E56B727E424DC4364163A64373EB50430E20A951E62FC5DB40A18908C50B050BC6C6C7ACB4C4405F26A4632E8B2FB82EA1846874A8AAA69994C42D0ECE392A0E00568F34F292A1F650E70E107C76F9D3AB3D1C95826A1391405FF52203D2DFC35EDE83AEF1C312A1378AD501FBC263CA4E7632279A8E16DA4B761AF2D5CE> |73 <001C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |93 <001C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D77DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |12 <001C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /NAAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/NAAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBUW+TimesNewRomanPSMT /NAAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPutTCTBUW+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf145.64 406.898 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000H\000[\000W\000U\000D\000F\000W\000R\000U)[6.672 5.31592 5.31592 3.32391 6 3.99591 5.31592 3 5.31592 6 3.32391 3.99591 5.31592 5.31592 3.32391 6 0 ]xsh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (OAAAAA+ArialMT)%%Title: (OAAAAA+ArialMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /OAAAAA+ArialMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-665 -325 2000 1006} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3417 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 8 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |3 <001C60D8A8C9B854D00D> |73 <001C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |88 <001C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /OAAAAA+ArialMT-Identity-H /Identity-H 0 [/OAAAAA+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBUX+ArialMT /OAAAAA+ArialMT-Identity-H findfont ct_VMDictPutTCTBUX+ArialMT [12 0 0 -12 0 0 ]msf227.261 406.898 mo(\000\003)shTCTBUW+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf230.595 406.898 mo(\001,)shTCTBUW+TimesNewRomanPSMT [9 0 0 -9 0 0 ]msf152.473 418.268 mo(\000\013\000S\000U\000H)sh166.954 418.268 mo(\000\020\000W\000U\000D\000L\000Q\000H\000G\000\003\000\011\000\003\000I\000U\000R\000]\000H\000Q\000\014)[2.99693 2.49294 2.99693 3.98694 2.49294 4.5 3.98694 4.5 2.25 6.99294 2.25 2.99693 2.99693 4.5 3.98694 3.98694 4.5 0 ]xshTCTBUX+ArialMT [12 0 0 -12 0 0 ]msf289.367 461.719 mo(\000I\000H\000D\000W\000X\000U\000H)[3.32391 6.672 6.672 3.32391 6.672 3.99591 0 ]xsh117.309 487.785 mo
268.135 487.785 li
268.135 520.03 li
117.309 520.03 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
117.309 487.785 mo
268.135 487.785 li
268.135 520.029 li
117.309 520.029 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 7 GetGlyphDirectory54 <001C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE904907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE13D22435E5FCC1B5A000DE> |79 <001C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527D6441CE02F5A28D63A618F> |74 <001C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F60847F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AEA8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA707BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA45E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD70E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC8191E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D3002781921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46F1C707> |75 <001C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |51 <001C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CFB31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF12086F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC628> |80 <001C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE955617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B517996> |301 <001C60D8A8C9B60E3AA590701702B87C4D4D42E3DD07A9FA6114894514D5A2AD92DD88854A51DF664D76861BB550CFDCD59BB5EFCEACD9F30BF4050BC1E723AB30A31587FB4070C6118140C931AD887E77B7F2C2228F066CAF432313DA63F43DD906D1E513C370ADC670A43335AEC0555E8C63F31CA3E4ABAA1DE0B8BA868AD1FD974E0118753CDD47E0AB62E89731EC50827AF0E733E3757085D7C2334635BCEED1677964EF3F62A1D3543C0649> |!endend end
%ADOEndSubsetFont
TCTBUW+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf125.008 503.053 mo(\0006\000F\000D\000O\000L\000Q\000J\000\003\000\011\000\003\0006\000K\000L\000I\000W\000L\000Q\000J\000\003\0003\000D\000U\000D\000P\000\003\001-)[6.67199 5.31592 5.31592 3.32391 3.32391 6 6 3 9.32391 3 6.672 6 3.32391 3.99591 3.32391 3.32391 6 6 3 6.672 5.31592 3.99591 5.31592 9.32391 3 0 ]xshTCTBUW+TimesNewRomanPSMT [9 0 0 -9 0 0 ]msf166.992 514.422 mo(\000\013\000P\000H\000W\000D\000\020\000O\000H\000D\000U\000Q\000H\000U\000\014)[2.99693 6.99294 3.98694 2.49294 3.98694 2.99693 2.49294 3.98694 3.98694 2.99693 4.5 3.98694 2.99693 0 ]xsh345.887 406.821 mo
407.706 406.821 li
407.706 511.065 li
345.887 511.065 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
345.887 406.821 mo
407.706 406.821 li
407.706 511.065 li
345.887 511.065 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory38 <001C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |86 <001C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |!endend end
%ADOEndSubsetFont
TCTBUW+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf353.801 456.213 mo(\000&\000O\000D\000V\000V\000L\000I\000L\000H\000U)[7.992 3.32391 5.31592 4.66809 4.66809 3.32391 3.99591 3.32391 5.31592 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (PAAAAA+TimesNewRomanPS-ItalicMT)%%Title: (PAAAAA+TimesNewRomanPS-ItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /PAAAAA+TimesNewRomanPS-ItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-498 -307 1333 1023} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2535 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704AA3988900AFCFF05DD> |537 <001C60D8A8C9B7500429806B3CC3CECBF4DCF29C0F0C82434F579D345F126384A4209A082268F024BEA92B9EEC1DA480B64FE380ED6D63DA9C32895F036573ED01479229C835A4A0710EB0D9CBB07E04E7496DA9FDCFCAFC9D3C323150E286D3CE113FB80E69EDB11118B8630C55A22E8E102E59FA093D0EEBA7AD821F2215C748118A471F7275ACF016B3F67C0347B2BBE79749D1B9AE8B3DE490BFE4A82D30B369> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H /Identity-H 0 [/PAAAAA+TimesNewRomanPS-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBUY+TimesNewRomanPS-ItalicMT /PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H findfont ct_VMDictPutTCTBUY+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf373.849 470.463 mo(\002\031)sh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 12 GetGlyphDirectory86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |91 <001C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |11 <001C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |83 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |16 <001C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |12 <001C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf497.899 414.528 mo(\000V\000R\000I\000W\000P\000D\000[\000\003\000O\000R\000V\000V\000\003)[6 6.672 3.32391 3.32391 9.99591 6.672 6 3.32391 2.664 6.672 6 6 0 ]xsh497.562 428.778 mo(\000\013\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\014)[3.99591 6.672 6.672 2.664 3.99591 3.32391 3.99591 6.672 2.664 6.672 2.664 6.672 6.672 0 ]xsh1.5 lw
[6 4.5 ] 0 dsh
531.242 396.258 mo
531.242 377.508 li
376.801 377.508 li
376.801 397.817 li
.735531 .0832532 1 .00570687 cmyk
@
374.323 397.817 mo
376.801 404.624 li
379.279 397.817 li
cp
ef
0 lj
10 ml
[] 0 dsh
374.323 397.817 mo
376.801 404.624 li
379.279 397.817 li
cp
@
1 lj
8 ml
[6 4.5 ] 0 dsh
531.241 512.809 mo
531.241 550.024 li
192.714 550.024 li
192.714 529.037 li
0 1 1 0 cmyk
@
195.191 529.038 mo
192.714 522.23 li
190.236 529.038 li
cp
ef
0 lj
10 ml
[] 0 dsh
195.191 529.037 mo
192.714 522.23 li
190.236 529.037 li
cp
@
1 lj
8 ml
[6 4.5 ] 0 dsh
531.241 512.809 mo
531.241 549.559 li
376.8 549.559 li
376.8 520.061 li
@
379.278 520.061 mo
376.8 513.254 li
374.323 520.061 li
cp
ef
0 lj
10 ml
[] 0 dsh
379.278 520.061 mo
376.8 513.254 li
374.323 520.061 li
cp
@
1 lj
8 ml
192.45 423.875 mo
192.567 434.765 li
@
190.089 434.792 mo
192.639 441.572 li
195.044 434.739 li
cp
ef
0 lj
10 ml
190.089 434.792 mo
192.639 441.572 li
195.044 434.739 li
cp
@
1 lj
8 ml
192.722 487.785 mo
192.688 479.4 li
@
195.165 479.389 mo
192.66 472.592 li
190.21 479.41 li
cp
ef
0 lj
10 ml
195.165 479.389 mo
192.66 472.592 li
190.21 479.41 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 3 GetGlyphDirectory48 <001C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |90 <001C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |75 <001C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf100.868 338.576 mo(\0000\000H\000W\000D\000\003\000W\000U\000D\000Q\000V\000I\000H\000U\000U\000L\000Q\000J\000\003\000R\000I\000\003\000Q\000H\000X\000U\000R\000Q\000\003\000Z\000H\000L\000J\000K\000W\000V)[9.99591 6.672 3.32391 6.672 3.32391 3.32391 3.99591 6.672 6.672 6 3.32391 6.672 3.99591 3.99591 2.664 6.672 6.672 3.32391 6.672 3.32391 3.32391 6.672 6.672 6.672 3.99591 6.672 6.672 3.32391 8.664 6.672 2.664 6.672 6.672 3.32391 0 ]xsh100.868 339.355 mo
289.634 339.355 li
289.634 340.435 li
100.868 340.435 li
100.868 339.355 li
cp
f
1 lj
8 ml
87.3769 420.471 mo
101.078 420.343 li
.735531 .0832532 1 .00570687 cmyk
@
101.101 422.82 mo
107.885 420.279 li
101.055 417.865 li
cp
ef
0 lj
10 ml
101.101 422.82 mo
107.885 420.279 li
101.055 417.865 li
cp
@
1 lj
8 ml
179.269 457.08 mo
179.269 457.08 li
179.269 449.722 185.26 443.757 192.651 443.757 cv
196.2 443.757 199.604 445.16 202.113 447.659 cv
204.623 450.157 206.033 453.546 206.033 457.08 cv
206.033 464.438 200.042 470.402 192.651 470.402 cv
185.26 470.402 179.269 464.438 179.269 457.08 cv
cp
0 1 1 0 cmyk
@
4.36534 509.356 mo
44.8653 509.356 li
44.8653 479.356 li
4.36534 479.356 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 246 ]ct
[40.5 0 0 30 4.36534 -263.356 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 54 
/H 40 
/M[54 0 0 -40 0 40 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
4MSYE]XYAPXK/D-ZGOH"Y/Jc0`5'1%]Y(AAVPgAl[^EKN\?)9jS=Q4@R[BP6Su8HqXKB1<Xfeh2Z*OA8
1:"0bX/CcOZ`L7/WN*#%Wj&h>^9t2LZ*:F<Y+_McVPKoWTV\]YS$8W_Y,J:rW2m)'ri?C*X/DkgL6A"!
';;A(XK8D-XK@q\S"caTV59rWP5^aTP`h)iQ'mf$Um[[KroG-\io/hRhr!DOj5el^O3HA:jQ#7ZjP7Z)
g!AL7ro,othiq_iG^+1>?"8#5BQ)maMrhO^[Bcm=Wh>H7US,WEcAf?ZcHO/A]=kVFNh)f-T!c);\$i<.
0V+f+S<oG%Pa\2@V6d5*]r.j2WNi_7[Ca#NZ`L4&Bq;H4Yc=b(Wi_G<R\Z1KZ*4/21:4BdVPp;\P`M0*
WgB0WTr+utYd(O=Y-5=I[A^4'Umu1XQ(+>BW335+RY$ifKTMn(rhgI)T9l%6P`CNRM3F?kOeJ,2VVg=h
*SoT1hUp#gYf5/OU_%:D^t.Q,iSrd)0kG8hGN.Z^ia(E=I=cug=@>>FBSL#-^4;I0[^`Q?U8F!.NfTa/
_8+<o^X1$A_8*^r];q^%Unb$&['[9N\$iZQ\$W94T;Jm&^:h7o]t^MGXfJe7^8ds0ZF$g<Xbrj\YH=n*
$*1,/Vl@#5]X=sBYlCp*YQhA=\@o;UYl(X>Xg51:\$`QRY+;JkVk^)ZJWQ=lT;S[fX9Q22YFV8TV#@,E
Vl-AfVkg&]V4jZ\VPg;hVPi;/h:^K:c]`=4]A;N.ej"W2h;.2Qio9"IVU!c4h;eLo!9=(<!TW/Dio&D6
gu7;kjY>o*\?`63SVW,ZO.W5a^sB9rc,@T:^q74g]Xt_b]=G;X\$i]R\[o>][^EEG['mKZrOj/aWiE2&
Za6s2PbbOkYHG'oTX1f&XJr4tXf\c)Y6;,7YHY8/Y6V;9Z*LX=YH@`*"gP;:['mO`\"8YQUSji_S;E8q
TV/3^Y-+n,Vl6AdUS@LZ"f/#mUnspeV_b3IVr-FigtC5YAk$pBgZ%;A=``-OhrWnXi8NbXj5]4\ioB(Y
ioB([j5].YiSieUj6$:$(q$`SZ`0UVLR"=&XLl'`Y.2`q_nWt"]XnN^\[o>\[^N`V\$l:F#dh(N\@K/[
\[h^Qrk9ARYHY:<[D9Dc\@8cJYdg@#[]Z^6XfAA&Xfnn2rilC*"gG57Yd(G/YPYL%YTp<Q[Cs2SX.lAa
U7-jpS"QLSW3!,&Xf8=rUS=K\V5:)fV5=0h!N)^mV?*Nkr2(@ii8<MNfuq"Yg"YHFin%XWe_f?Jk2P@[
ir.m;ir.p;irA'=iqh^4jX@UFY-Y1+Tr=liX09+Fa10C5_Sa.'^:h4k\\#G^\@]2X\$rlY]",<L\-9FQ
\[fGhrOrQ>YHY:<['m?J$*pnCZ*CmB[]lt7XT>K(r2p1+YHG+6riZF,YHP2,Y5tf.rN7<IYct=3ZEL@.
VkBfYTUCh'T;/-ZW2cnsXJr1pUSFZ^VuELmVZ*FjVZWcmV5F6i*N#^li83DLgtU]CiSWVRiREgkhr<VW
k2YL`ioB)'jQ#:]io9sts5`t8!TiJBjVYG6YHb+,WN;ktYd1jJ^VA"1_83n$]Y(fS],eGn\@9#Y\[]/X
[^WfW\@K2]]"5Sg^:h4pYd(L=rj*HI['I!BZF76R]WeWDXf\Y)Xf\b/YHG(5r3-+(rN?:*YHIr0r2p1)
XKAP+ri-j7V5BiWT:27;R%U+IW2Qi"XfSP%V59r^V>d@mV>7%dVZ*J.io/kSi8<GMhVmDOiS<2?cf!dA
k2u[&rSmn=qW%S7qr@_;r8e@LYI(R<Wi`:sXfe_,#.h:W_Tg$7rkJKIrO`'?$b<dW\%9,[\\#D`\Gj#D
]"#Jf^:h4prNR*DZEpsEZF.'EZadl^Yct=5XfJM)Xo>L#Y5ka)Y6(l1Y5PO)Y-7c+*3HEIY-4k+WN2km
S=Q@DR[9G7TqeNaX/`5$WN#lm!2KFh!Mu[lVuNUmV[0/tVP^9KiS`Vmi""T%iSEDNhqQH)i8WeZk540=
jSRs;jSn0>jSe-=jT"9<jWWcl['?sBZ)t+5ZF-sJ]"GPWb/(m.^V%1f\@K5`\[oD`rjVs=rjN$@\@B)Z
rji'B#JIgb^9OoJZ2V$/Zi738ZEpgEbbDtXYl:a-XK&;'Xn]+!Yl([+Y-5&+XrOLFXfSS(WiDnmTq@mL
RY6BUU8"TaX/rS1X/i)rV"U\hWMc_nVu3CoVr?UmrS[b7ro+%=hr<E&TOYXoio]C`j58eSj5f:]jRM:-
jVPJ=\@AuTYck11YctRG]VL:d_83n$]=@jLrj`KL]=,/W\@K)Y\@K,Z\c'#>]tV2Z^'1^CYHP49rj!0C
ZEpsGdB%D`ZELC4XKAS*Y-%],!j8c3"0eu4YkP=*Y-"k/Y-+`&WZ/%@WiDhjSt2=>N.#2iSti6_XKA\0
XK84oUo"'g!3,pp"0&2rWVr_$VPg;hVP`D6io9pqrnnLJh;5nK&7aSWk2t^`iSieUjQ,@^rSmM1r8dq?
rk/oV]",;Y\$rfR]=YkZS\2\N]`,VD\cfXY]Y2#X\b<W7]D]GC^Ab86XoP['YRe(H`O(f>Z*:F7Xf\\,
XfVK(ribamrM^7,XK/J$WM?2YSX+_JM@H8SVP^AmY-"b,VPU/eri,mp$)jc"WMc\mW2HQjVZ#Qlj5T(W
io9"Xi8Ddj24NRajQ5I`iSrnWrT4"<$fpC/jQ,@^j5f7]jSS$P]Y1qh\[f2X\@/fP]">Vma25R)rOiWO
]=kkj^:q:l]=YYc!P5oA\cKFSrk&*B#/@:BY-"h/riZa7Yd(R@\Cnp0Yct:5riH7'Xf^un!3Q4&*Nc??
WiN8'Xf\S%U7e'LR=pZmU8"N^WN*&$X/`)sV@]](Vl6MkW2QVlW2HSlW2QWnVZ3RojT"9?irA!:iXk)+
i7bHRhW!PVjlGL_ioB+ujo4<@j8S*Aj5f:]r8de;!Tq/r^')-^]Y1uW]+;Qf^:h:r]tV1o]Xk\e]t=6X
!P5o?\cTFS])9/?^&>YH^TFU:Wt2;3X0/S.Yd:XA\@8iMYc\25XfSV+XK;B&q5s_$or\=tW;`e;X/rG)
W2l\gStM[DS"?@LVP^DsXfSS)W2HPlWMfWm#cFT"Vl?SnWMf]l"K1ABj5^*t!9F.>%,g+%gYC]Gj5oC_
io9strT4.@jSRs?j5f7]j8S-;jTFY[^V9QX!5/<E%DKNk^V.@o]Xtee]=YZQ^](bE]".^L!P>rB]DK;E
Xf\Y*rMpU6Xfnq7Za@0M['?j<Y-"h-XKAT&Xo>L'YP,+!Xo,=)W2Q_sXT#:7WiDkjT:_[CS"6:KV5:2l
Xf\\,rM]^qs/5do#,eGuWMuenrh]jsVWHq"j8J!:j:LA0i8<>Ehr<\Xjl>C\ioB%sk5OB@jS@j7jSS$P
_83n%^V@Lt^:q:p^qde'^V@Fprj`$@"2)4U[f*rF]">Pb]=bcT]HOo"]=kki]tV1n^:pVIVl-DhW2H\t
YHP@B\@T,VZEg[;riH7'W29HpoWA1rq5tg;VlZo#XfSY*WhcD[S=5k9S=Z@KUo^VuXfo".Vl-KfW;rmp
W!TB!Vl-DhjQ,:ZrS\FMjQ,@Xh:pT<hVd>QjPo4[io&\ljoON'ro<_5qrJF+_8*k$^V7It^;%Fs^V7Is
^](qG]E>jW[C,tJ*P8qr]Xthh]"5Pd]Xthg]=kqm]tV4[WMZMgVQ$I,XK8V.Za-pEZa@$BY-+k.XfA1n
rN5Rl!3Q4&+/l-=XKJ\,XJr4rV4O?OSXuFGU8=]fX/iJ2Z)FRuW:QtjW2QSkrMCLnj5JtTiSrhWjlGL\
iS`VOhr3SVjl>C^i7n=XrT=(>#34e*j5]4\r8[n?k5FBI]">Sc]=Y_f]D]AC]=e-T*4ibl\%&iPZ*LXD
\@ArU]",G]^V%(f]Xk_e\\%jL"hM4P]rnL:XsgKVY-5"2YHY47Z*L[=YH=t/Wi;u!Vl[#(Z)4P#X/2r"
VlQkuX/i60X/3&)YHP15WN)kqV54'ds.oXh.\NH,V5:;qYd(O@Z*UR7Unb6"Z*1L3XKo%3Ycb16Y-Xmt
UnaZ]j5]4\q;hP8ro"mYjPo1Whqd)Eh;RASin`PMiSEYVhVmJPiSi_Rh>Q@7ioU0O!P5oB]E5^X]`#Ji
]=Y_g]t:h\WjT1>Y-"h2YHkRI\$WHL\$``O\@AoQ\[&NF[C*X?Xobf2Yl:mUYcb.2Xf/"pWMuo#Y-Y@+
VlH_jUnsraW1g,fUSFlpZa-j@Y,S@uWV`OlV#R4hTa.<gVQ-`)]!;7@s/dTATsqA4Z*h!GZF$mGZ*C^E
Yb7S\TV81AjQ,@^jQ5LajlGL_j8It:jlPO^gst<<hVH`7f=oqoi8<8Ch;6oDf\bT@gYh&KiSieW[C3KL
YHY:9[C3NLYct=5R[9_HUnXEGS!KG+O,]<_T9Q"8W1BfXTsC;hWMQ/h[L9FK\@T>VYH=q-XfhT()60^;
WjfLFZE:4/Vl6MmXJN#*Z*(C9Xfeo-Y7.Y=YHY48YctC;YHG&-YQV5;ZE^_7YQ1s-ZR3&d[^`ZS]"lP/
bf@f?a25^*_77@i]!])YYIV$I[^r]<TqS6WV$,`7hqm/fh?2Znhqn@f1>CC0f\G'-cb[`>a2P!bb.?'E
f$)jsg==g5e_Aj3eDK<GioB+\ZF%!BXfSV)TqnHUrgl-?OH5B]Pa%PuR#m](O-uc5TTke)X/DkbTs^l%
W3*)$[^3KQ\@\oGY,eS(XJr.qVPU,aV5'i[V%0`0Y,A.pW2Zl(Y-YI<ZMq'1YHbC:rilp9Z*1F:ZELL9
Y-G79Zi7<a[_BDf_SjF4bbUr:^s'g@e&p1\_T0L%]"#Sl_m6\X]=>#MYdCXAYbIbbU8+O`h]gk1gtUN0
da?:]aiM;JFHEuJa2GL+\&Zb3c.UUtb0@ZVg'cZafAYNAgYU`Bj5L!tDrd"BQ'7AmOcGZlR$Eo$P`^EE
IY*T@O+`g_Q(+25TUUt/Q\h,tR@BY=T<"Z_Wh[&0]XYGbVQ?brVPp8aUSFHQS=Q1>R$aSPY-+b'X/iD,
ZEUaE^Ugtm\[o;\\[JuR[^<BKYd(@8Z*)L"bB)%ZeCiX/eC`^?j5fI+W5@67cd_$rbf.<1]XPMg[CO2_
[C<NNZ*LF8Y,ee$USX`[VR+"R]stPUWO04CXJVtoT3><DYJ%]\V8pEpd*U7oeBQRob1>.of[nm2hqQuE
guIDTj5T0eS"6(?St2CCStGtQ#+^0kIZBSR.[#mTOcu9/Uo()VSstt:SXZCQT9uFPS>)^eXg,4=^8e05
X/MtoVPC#`rh3/]TWP/sZ)k(.WMur#Y-bOB[(EfW]XG>[[C!ES[C!HP[]m-EZ*CIP_na+*_8F:5_o9dA
bK\DZ`7N8Xc-=_dccNu3[Bm-HZ*_*JZa@!=+0r>[XgG=;URn*NUSc)Tcd'bZbK.cJai)*7^qH:uV>e;8
^q.+k`R!2jgYLE6f[AL,f\>99e_K$6gtUlGi8WbXTVA3SStMaKS=Q4@S=>t8PDG3^P`_5uN0TWoUnXK`
T:;:/UP=JoR@K(hPD4dGVOrF8X0/n>['d6FI^#uUWi;nmV50liXf\\&Wi;nnWN3,*Z*^jG['mBKZ+.6M
[&T_*[CNiMS9Ld+ZF$mC[CEcY]"u1u`5fsBccF\db0\PZb21:``4!.aY-tsR`jNIu\%TDcUr(!ha.83,
P+&)ugY:E4f%&9pcHXMP`koL1ZFRoe]Y_Uh+iD4?g"=p6f[J?ifrVd:daY"*bd>'uUKnUWNo7%@Whc<e
TimqXT:MLAR[AYZM3X<fOHPBbMM-e;KnYD@Ko(_!G_pX$F#AAtJq0,3)MOKMZEpmEZa6g;X/r7tV59u_
X/)huWi)emVl?bq[&9V+WMR%nUM,(LI%#7BIYWi@LQ6<oG_qliX0Aq>\%0&b^;.Y,aj&8\`n/8Tf$r:0
ak#%j_lh1hXi%$:D1JR:UjYFaP)t]SB,#B;O5SsQgXk'-e]uRfbK%T;]:tRra259p[\^pLTY$M6\X8,\
BRg@1FWb33!&$Ao1H>mE)E2$+Y-F_!X.,lVI\<-lSV`SdNI%(XS!0/)@>::dS9-#qO'.oBPY_@8FDHdC
0TgL@Jtb^QS$'*'Z*q!E\$`TMXg"n/X.4]UQA_,cNep\XQWokm-#%j$NBDq_!Hr!XHO;3Q@t8`n58]Hb
T:hsPV5:Q#\@B>r^=19?P'aX/a.fuFB8s!*I[Y$o@?Ocg8s`B\LNI0d'fD4sP\lOE'S`:=i8WPLi7Hc9
f?V:\ZbqGS'T>q]:i9bE."2;5$igPl!+,^q!!";R"=sNQ4:F=fAH2]u\$)NiPa.>lN/<F2HAHTqGVVIB
=bL+'IKL@<6Z-?5*L&s<=*8Zd8<[>?:'lZ6IY3rFPpfG9ZFIKb]<f/@Xe'T]Que=6/2huOFAQF`"r);E
@oijXJiRO:AS(p)Khd.a$$(H7N.?d47BrPWS>3$U]:6@0IuLpoX,o;+P[')WI#&FZKL99Q!ZI@nH<,01
#"k.dO&$@@O+N"-JK[=SiS'mBf9X`hVf*=tIWZQ/,ldp(!@.^V)ZTj_!!`Q*!'^Gr!"BD<!($]E!!",s
*]bQ*!!)#OJ4GEYA!]TAC'6AH/p(7s+HS!r;d"bU"Hm+rNs?#\@r.-)RhZg1E.aA\9:pm/G,K<mW2tD=
M3_SE7#GOc2M!Pu;udYW)dkitCB4Ha9hK^;ILCNn;/JIB#mu)[@rhZ.IqOsYT48G#O_m4*JQ.puKObNL
KedjX![!+DE_]Va"pfQN7<&;/NE9P;9oKf(O(<?d$:Br"MIVoY%@)>X!%:&5C]H<s!!"ML&HMk3-iaVT
!#P\9-ia5g!!"qX!uq:u!!#%^&17GX5SHm!IWPboD2]Y=E-O"!'noKb,)dad?2u.=.=ZS2Q444MBJZ1h
!-E]fRnK)B!Ge31V+:iNP`UudS/$L5.g9j81mK,6:B;i$-#?Z`(k`l@?o!*7"_^j`N",hi?oWHgGrG^u
HU3EA!,Ze/Jq&jpD0m9'@;%!G(4AgX.$,p!04=o(PUL`r6^&&lBN6:,"9<(R7uTcm706eU;49`VIYE,q
G_ZlH0E;(Z&-,9%-N4!<56)/p!!#Ig&ISS!!!!E.!':/\"UkAg!&=NS!]U0Z!!!ud.k;o8!"Y>%",V7g
Q6VJj!AKlnFD_*qS2bA@+.+2X>)48s7KPuEIQ36uLkl$[W(W1s!*k1QLd?%h@Y"adG%<C_*.1*T-A<[R
>6#.c,u\RmIMDuUEYss$!A]'QF&6al!#ptYG@CPCCdiP,@L,bk%gdi/5*@4O;$\qD05tV1*1f0+L*iH8
&5@?`M(eogIOoS@EcM.&P!+#"!)%/pFZ*Y6#uEY_!$_pQ63&e?!"29s$3^D09`P;:!(?ed!ZM,8rW$1R
!#kqS('">:!$;IH!"o8O!!WE(K`DpR@8r%3NCF"&O"#'j!",#f<f8#h0E=/)(m9"A.\&nJBMjEm#')Ud
:'MRi%4;>t!)@J5&V*YGF!#Wc![E%6?!dR7@XL4%E=m[E!%im;I:E6sKJHh35ACE(=XGa^!Y?Uf+U8b_
5(!JOO'PS7.u6S#08qDsE!6i>:0*8uShL=(NXp;5!$R"S?WBC1$3OTb1HtsS-41ju'*(68!!#"[!$M=l
rW!<[!!`f1!'C5],lgL8!!tsl,m42J2uj*_"99&7!!DloD.EZ'SP+'W0U,'05Em^HI/sJ#<'l$`IR!o\
Jf@m!!XE$Y0d?rT"oo;E!sSc+!!3-#!X;Um!#^&6;.1>^/H@5>(L(,G"`?^cBcq4K![;V):K.N,<$Nt>
$RuG_'Fk<R"onW*!!*0)6Ym2]4fhM)LH(Yp$Ug16G^0i7M-Wi63/U6:.Xr=39`Y>f)Bp"$*s2KM"onc)
!"K&1!!39l!WW3m!!X/<0`D%[/cZ:h!!!u=!#bhVrW!$?!!!&b!#.s)6D-5cHmt4E!CMhaDI`kN@6c1M
@37T]!!4_]$kr[A$31,+!!!'!!!!'!!!36&"9&:&?7c.*Gog3p'Q5B".Vf>d7Kiii1*BC00I$W&.1d"*
"9B&6"9S]*"9JQ'"98K'"onc-!!#\i%8*ohKRbhD70uGD+DYL%&8=cpCG&+7%14d!%1rR?#5\Dq!!!'!
!!#am!!Q4"&.S[krW!6L!!E<&!!3-#!oX,!+9jER-!F7eEuP6,7iiU)!t,MQ$P3UO!s/Q.!r;m$!<<*#
!!*0#!"8l3!"B)F.>&E<,&nJG77%Ym'*&q.'G;_p#mh(F$3C;1!!36+!<<*&!!!*'!W`?&!W2pC!rrH*
%N]@,#q:6G:eDU<)$V3J*?-R@(DIo"&Hr@>!<N?+!Vl^+!WrN-"9JT)!sJZ1"V;o"rVup<r;Zg%nc7_N
)A<P[&O$RH,7,Fp!!!B,!s\f-!XSl3!<WT/qu?^"q#D03!X&Z8)(IXHG(>^B[Kcd=/dE71"Vq":$j?V3
!rrB'"TST(!!<&u!sAu6!rDs!!<N<J!sTA[.R79SH\.n$!YRI%+Wq+5"p+i8!X/o;%LNdN#QOl/!W<!!
!XSZ'%fl\6"U55@(a_",?uLOM[Enm["V<(?b6.nK!<W6#'ES@B!!3-(!<<-#"TS],"TST+"p=]%('5*l
,r@tqG)D`\UTCl7]t:u\!WiB(rW!Z7!X8W+!!E<("9A],!WW<&!!NW6!rW-1!W`QA+XA^%:hY9:S=lg`
riH@,#6k>7"o\Q9"U>A9"To#5$4R7N":,&4!<WT1$4@%A"oSE5"VW%*1-er[Kq#*RZ)Xn)X/=JK(]b'q
=,jQ+ioB+[jo>Mc!"/i.#Qt,/!!`E&!s/N(!rDs2!<i]=(a:_/A8ZaTS=QCMXL,CF'XtTd]tD"h^&S6:
!!iW+"p4i,!!N9$!sJi."T&03!s]8J*$d:1>\%f.PEr2LX/rE!XV\.C!XAl1%Kun@#Qb/2#m(21%hAgN
!sJQ')[$EW(*P.V5ZV3/K9Vn7\[8WHYHY4/W2chrVY1#T!#G\@&MdF"`7<Z#hr3MOjlPRaj5p=C!<N-!
!!N9$!t#&3"o\K9&f3&Q5>5$^BP;*oD2+=?UStE'[/@0UZF%'LZEgmJ]`8-8!W`<%!!<3$!=&Z/"U##5
'Gi#E2F9l3?=RLNBPiKs]<eiLqm$.)!Nr[+YmR\;!X8c1!s8T*#Q=cA$j6hB#7(SQ)(R=&92T/8G^4jn
K:TQXXo>=+Xf\b/YHP14W;`dtW2A_X$3CD=$P*q'ER<Isro*h6"Q/.qiSuKJiSrnZ!!331!"9;G'cJMG
1H832;cmCRLmOX+TqR^3L5:VHPG>IkZ*1I>r3@r[Yck13[^<QW!!<<1!=B2B&f)W2.kX(V:/Fr/H&@]Q
V43U%Jr6"qZ*^d@ZEjA4$*^Y;Y-P@;Z*1;U!sSr>!tGhP()nVF0Jl9o<*ELLJ<QIu^Ta],Tr>u^[]ZX1
Xo>=0XKAY.YHP4:WiW5#W2B%a&-2eG,>)3n`0Y()5#?m>\_R#>rnnaQhVI/Kio9"[4\8RaB7#>gPaJ#1
Tq\NdR$F(&Uo:N!Z*17*Tq%XFVld,(X/2\oXehtsY->(0VkfraV7!ol4@`IRCialVLQRLZR\H[f\?N9?
YcY%-Wi,ip!NWF'Z3R_C['R$F['Tb;/[Maj\$NHGXuSg@>?u,lH\d]KOdhoH\%'&[ZF7$FZF%$O]u7h&
[]cg8YH=o;X/N/%Y-"k4Za?g9X0&=srW$^8!Y64m3C-e@B6:Q(e'Gteg>C]BgY10)bKJ;dhr*DKh;-uI
h;7#Hhqm2Dh:piCioI&8X/`D.['dHMZELX<[C<EBWjAt;XgG14XfS:iSY)jWUo1)eTqS9TR?<McMMQ_5
M2@b6T;Sb#XK8J&X0&J%XKAS)Xg,22Yl_,1YPtR-XK/>%Xg>CBrj5n<[^EQR]=#,RZ+@!6WOK(2\$E?D
ZE^X9Y-P79Yct:5Xg,"3YdCXA['d<Q^VILgZa-p>Z)k%/YdqQjbgOqNWMHDmV4P`ZeDB'>hr<PMhV[2I
iS`VLiS`W9gu-rBgY:9*cdLV'gYCW?gY:N<eBPtJ]==hhH@jl3J,~>

%%EndBinary
grestore
np
3.61534 478.606 mo
45.6153 478.606 li
45.6153 510.105 li
3.61534 510.105 li
cp
.750271 .679713 .654902 .901945 cmyk
@
51.198 511.981 mo
72.948 511.981 li
72.948 476.731 li
51.198 476.731 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 246 ]ct
[21.75 0 0 35.25 51.198 -265.981 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 29 
/H 47 
/M[29 0 0 -47 0 47 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
$5X`f$ipV=!!s,GrX27""rJO1*@F!IBLl*E?p6"l/28nB2^Bk*-6Xfe/h\n:4Z>c1EhI?#YF/oP1Ft:D
6rH3Q?sd)<<_cLf=Ckf^P/.+,df098li7Y"'jM1jN(3t9AkFm!,q1Pt3'pA*5"._!:.7#a/P0#U8QL"A
5YQ*.;G:"f>")4a:K1M*>[CB&4%Nq3So9:bS7Y]FDHBnIG^k.$R?ir&PDb6EG@Q&qdJpf0qZ!,e%KcM-
#QXu.!<`K+"TeT&*=*ij%OR9/"X\8">=M+G7SQid=%lC_6s<GT,pl03=CXj'H!s#dC3!ruB3f+XBl.Ns
CisQ:Bj3tqB7ZFcK<(;H6'7OmNK9="[(XZ#ZFI9?SW8J:FJ7._Ze>6URK+0@$j6_8#7;(]'+5?_#SdXI
!!!9O9FE807K``X9O:@g5s@_-<*2pl76F1;9.V,M<aeBuG$mE45$D`NC2dQe=^,?MChn!#@V04E5[Su,
B7m1G>SLCcO-H0)R&R*t`jiLYRY?T^Cho<[s/juSp6#CU!Y5PH"9Sf3%M]Nc$3LD9#64`++\2hdL-G_F
-S8@S:K17i9N#1t:-10m91g]V5?),f??fsD!#-q\7:9qJ@U*MeK6M;bB3o@k:IS]?QZ%\VN)V2o<eGIY
[Bm?H]@><FV3Z4WO_\]o`;dI5s6G[D!)Nat#8.UW#S/+)'a=[>"pb2/"!'uG1kS!n'H@`O&Op#6<_u:_
:eEQ#92S(t,=,49@:aUl56_E24t0NTHtQkl@X<!.C2A$(6V1j5R#daZV288/3Bq=WLr@TR[]I$X\!r_=
Obm@^QG<@ls8VDHquBk$+"@m2"q2=Z!WiT9!rr<((J$bgJNNuI-lPZ(=^GH7?;XNu;Dp@+;Dnn,5>,F3
EckkZ!"0E$1LY3@@VojoNJW",H@B6_9P&14WMH/;;(+IbAQ4VeWt_87VPV&9P)bH_G=c\6Z2OIts4EA0
!+ZBP)%.;k%43/"!t,_B!!!*39p0^A0`iIe.ToJ`>>]C&MLU1g6nh/12$kQk87[g.DdP^4,U#`XGACTI
VQ6T*\;tfTIpY01@r8!HW1&!,2-<CmH`j*,qUaHnf)Me+KT^Kb7rX?es2b0=bD?,t>64jS&dMLGZ^8.H
'*/=O!<<*$$XC]2@3kq]='B*?CM[:!SXQ(1L.=!l:b`b05>,LFG]I.W4uZ,4A9*!3PHhO(^r2LaGC<^c
9keL=Xf%\29O:\+BleiiJ,[(n]"5qBD1[U^;eV,is4%)K`.e7'!!*-+'H[]^e'cam`Xi.V%K6?B!tA>B
LhIq4;H-q8?YjI_EdhqE@q/"a9i*JW+[Sh3OF;@_5r1>o=_2T"CPSscYKb=WH?t$E6VD06TWY8bGt_%5
@Vg.=OajS#ea)u(NbsT0Cf"i.XT-Q<s2fuq!!39.'cm`FSSs&_PEQOY$P*.9E!6_O^m0$j!Bs4aDJ+0>
DdQ0SA8,gR4Ao0:)(%gH@Z>SR@6Q;)>%Vc.M0ro6/p=_/OaDG*>XV>'E13r.S9IOa6X"2=J;nnp>VUZ8
Y^0i6Mec.'OJ_Hos8Tue!!!',$6q5@#64`9CgmeS%2/X?!<s!E9Y6*r,QL;9@W6%3Is#Qg!(U^790,gJ
3>s,1877C!DdGLa6X+;HOd(N?6jQhfRuVc;JR:i>Bkrj6V3u?p5#,EuCl+F1HqP#WSX+G.J;J8DAriV<
eGoQ]HN4$I$4Jg[,SU.W'g4;Z!=9A>!!!0/4h6)O*WTMX?=dJmIt;WjFXA_3=Aq^i>sob]8PiuZH#R"J
<ErpFCQjg+I;pns?>kO>G_9Np95AO7YH"+886ob7B4d-gJ!5RK6Y:RlE.jC!;.Ylgkfir([<;QR!sSrj
5T)0l!!!$+%g3=\!WW3*&5C!%B,gngE*QdSJV/#rJk@pi:esqb;Hc$j(dq)-KQM-711Op(@q_<pI"[#E
3a-0DJolKH2aM+qPcL^OEC4P[?=IB-R=Lcn?;"aGG^Ft#CdM6\Utt,3s0$AI$3C;48P'j^2#[IX":,DC
(&e1W":[btJR]JrAntCO=+5dGOcFd6H#Qhr=^aT7-;I3>D/=&I<\%]n?=[Z<P^A:CDf(J^G)LNp?9C_o
CPAU\ST$f6H"C]'W2koq\=B"rTS]@sP&a0)P+T\ls$Wl"#Rph="C,(TCgJ>/9IUK'%ikZN!!ru`D/3Yr
!+TbE>>os&E/Tp@NIlLjC2Ift;d*d@ASH((=t*cl?".93Ncfk&Nf8^kR?Y"KX,M"FQA1]sVPA2sDg,`+
A"f]PYKY>0l-ZTe\&>;&VpWQGrr5d#Ad&SE"9MIp)+f7"@\7[&HW4l8$QD\m8mZR`)?=SK/jVRUR[0>*
JrtkLNf8mTN/s<qSXuCDT6rJ7:GkO(Ngl6#Nc]r.Q(421R@BcqStM^JTV8<=5a#nH:H=0+QHlk3^8],T
X1H'fe_8Hucd0_L_I=A`rW#kUHWHhV/mq;*H"hhaOeT+m]tV8"c:e433@[QjK8tSCQ@=aKMi3FMMN!LV
PaIr/SXt?u:d$U/97r+NIZ88sKT27YOd2/tR%9k@TqSBJ9l!fL3E8LrN.7M2S$]0&W1pW']>E=[g=F`u
_qT)1r;^.N4=!+2,u%!A@T-rUFG,sYZF@BZb]*W'>V7ZO4"VFJMK+6$KnY26L51SGNfo`pR@B15E`b+S
-pB7(7"8`kJqT8HNJrm\OI)H+TV89W?'TXt4<Z^;+^Lk'VlC?2WM$5lZb"B9kMk4F`TVjp"o83B5SGq@
8QJD[<*a9eOJ/\[\B1NLLN+LE!Y>M:,B.URJqa/V5DP,WNf]KkQC4+HP&;]_%N>c^+Ceo'J:s#FMi<^Z
OdDN,TV/-XC<_tt)@$rc$8d<nV5CAnU8Fuu^<YO"j9F>lbKZ/m)u9PN%h^QY8Q8DW;IFBlOIW2RZGOBg
G?>@U!"'#H+Ad32G^k*gIXm$'Ll77POH,EgB6-of"UG_O(`u4aH@(I.N/3ITQ^*l(R[p%FW-4GC*XVu[
'-&l<T<tT/X/W2*^W5'dmdB?)hT_`<!rW,t!#?\>1/UY678d]?Jr5\VU7na++!M^5!r`0q!=pr+HZ4CX
G'JCdKSG5;LkUY9O)Q<c'+,!L!=05gC3+HLL4t,2M3!^ZO,oKjSu%*$2]322!sArY7@U0CZCmYZW3s@\
aO8`#nG1kIpAbC:/0I;=0em-$;IaK\EclY]M6K#@!t,J@!s&B%4`54VFDkr8FaJRgJV/W,L4GA/!!WuE
%13@G"#k"6G(YO$I"I04N/imZOIW#@TF_tU('t0Q$Q)g;W2mM2U8G-*`Q??Ug"Z,kg>qu.&KDrA4uOlA
3(d=]A86(#NK(4EGlmpE;$@:-!bZk(G'@tDFEr7_K7\i5JsDCaOp(pk!sT/F#RFd_G)(p7KS5/@P)kin
R@L"LW3$jK$O?h?'+,b1\ZildZ_ae5`QZrglgsc$fZDD5!$)D+01SZ'00)L(B5VjAM2/IF`PEJu!XK,B
&J,C]-$"-JEbfE5Fa8@fJqo>CO-,Tc'F"[H%1j6f&m]a.O-Q9$P)tk*Sg'i%USk,q.2WC&$P"'o/qgjS
g?$l+eBlnCqYKpLl/:+=d.dSh#r+D<?s?<1=_*&BMj'p2XLPsW*tf%r%M99]&7]QnCiF0(FE;VNIR/F5
Jqo/?O,=__%1j-b'G)!`EH-YiPE(NVMis<gPae8=VPgRK+r2"*&KDWBK!DPtd`TGC^W5$fiTU76mGZ^J
p]*)U,U5?B9L23;:1S<]FbQ$NWjK5L&.f<W$OQnK@V9:`Bk(RhCiONAH$t-lJq8`1#R(So$OI1N#9$lf
DM=(:Ob\aMOckihR%L(OVm.<a&ePBW((WE][^=03e]c1Wcf4-KkP>#Lm,Hgq!'U`5*]-8T4[D>*>@_5Y
G_hKSWil^:&.JgR%g<VUC2.?qA79@nF*)YQI"$X!KSY6]":GJA%MB-e?#jtBOXli]N/Wg_Q'7N'StW'[
Yne/h&I8jd'0(fZ]$oZibK\AclgO3,q>9mOinX;/6jb4d4AAF07nH]iC2%^<MNa^5Y6G7@#m:\L$5-`Y
An#=Z?#+7qEd)_SIY*9*Lk>[-"pG/='Fl$eF)m/$S!/hnPahZ>!Lof!UT:E"%h]9X"UlFi4H7+if^7bN
f%o]jrri)dk2+ng!)s:N,<8:b4%E%NBl.^.I?L"pXfi9F%h/aQ&.K=^An5:[?smbeEccSPI=Hm&L5CNb
!XK&:$kj-j@<HUGOI_i#Pa\56S!okAV5gN"(`!Ym#7MU\)a9:u][c02kh"tqr;QonmGm'Yp]*)Y-6Y36
9LhWRB6/3<H\.NRWNE?J)B'V1'GD&c?"ISTARAeZCijoLI"6j$LPUnB%L<OC&.K?g'O5j(Mj:0:OI;c:
rgt!tUnaohZR-b0)%[?&+#f1u`SUOms5<\Lrrhu]iS)u[!*TXV-94[u<D-V>J:iK1MjBs8ZEkAT$5*[M
!s/I$@qK.]?sm_eFaALcK7ei4MN*Ds!!ET7#7(S<;fm8GRAZsDR%^:JTUh[LV5gW&*>/\k#6YYO,C[MN
kl1S_ir/fT"o\)XgsspL!&+L#.R6j6=%Q\BKntPCNL-BD\@<"]'b_)i%1EA1FEqYBDf9#mB5MX.FFAdt
N0&,X!$_RH"$:g^NLHK2Xfo.B\[fJf_SF%(apeps&eu3)*@GLDhZ!NS%/^))rUKF>g!%LN]#"+@!'2`-
8nM^K?tO\DR@0tZ_T0pKWsfRT'G;)i$j/>%GAMPNH"^u9JVJo8NK90_Oa6g(+p.lK-uOTsSu&6m\[f5[
[^ru^]t_=b$kO*d(`4A8,ZD2(qu7#hf[/'jaM>R&\Z#6&$R/)9G_h!&M4h8i]1p/^c-F\`EtT<0)]0J0
'+lL"GAD5BEHQMXM3!UWPF%](R;i?9$OR7N%Lj'qB7u/4VPK`RTqeBWTq\E\Vl5:X&/Gut)Bg+N4.!V,
r;R-$kMPF^gs!sca2.KM((rr%CP$YFGE8Q$V5^]9_nsGZ'GqZ'(_d`!&do+JGAD2HG'/(^MNNm[OdDH%
R:RlP#RUeB$4RCS&6X^ET;e]USY2dRU7n?XV5L85%1s9e'G_]/,pn>Zd/Wb;rsJYbh;mVPdE]tVV"XjM
"[karQ\B0tNi'"XWNWtM_T*W/'GCr`%hB3Y"]]qkF*i(]LQS!oR@B\9St2B[&/#Qa%1a*b((jgWO,]^4
WgK3Frh1R0Tq\B\VJ-SS&If0^)&XM7G-o!:n,*.bkge)0da61V`5\/<!(@#f8o:&TI>O`/]Xk_h_TBsA
&f)8u&.K3a'+kRSHua@NE.`t.Q^aD4S=ZFISo>;V&e5?_'bqZ&@$-S>X/;>ST;&$R,GCj,V5U;;',;/k
&/-!%-6RWH_p\JXs8;'1daHLda2,O.ZM+>q#$Ol8LNnK3V7=.L]u%h8cce!L%hB'U%1WgN!`XMkI#<Z1
Ko;.]Q^abEVkp8C',;5p',DE%',"K0Q_g[[[C!HQ\[f5W[Bm6HZPa`')]0P;,pOWXGe__uhrVu*a2,0k
XKAM%W2Q]i!*]P,BoT6lYI;Eqe^`C/h;@)GNuB)a+sA3V+VbYrI!UO.MM[.NQC4,3VQ-c"Z^r0\,pO`a
.465[A!E^dX/iY=\$i`T[^3<GZE^kd.kWM01cRBL0nIF7jO=Xnc,mo<\@&B>W26GiY4ho/$"ejg\Zrod
bL"bhgYLfHiSrVj<%q6L;,^Cq@WHgVQC!MiQC=A;USFffW2QLh;,U:j<E3"$>\\bUTqnKr]",;Z[C!=>
ZPp5jE,ouCG^k3tNM+)ej3l>p_n*C^ZDsn&VZNisXnr/8!s8Z2'fg?6]=c2-daZt(hVI,Jhr!8h>T$aL
>?Y05>$l#fIZ0SDL5V1[QC=>9TUq^Ar`B\6>$G3:?smMeLRY$5]t;#X\KeVn[^ETR\p/III=Qm)LQR^f
Y1!@4f#PnL_7-_OX/`2%XgJ$1rs&K.IL-;k,><N^[^s8rc-t7tgYCT<g=BJ5>$G*3='&L+>$u2iIYE?+
M2mgcR@0P6R[][I=B\p7?=.&N@q9A!M3sj)StMaJTqJ*QU84NYIt*0,NfTKlT:_g[_VkIks8;?LiS2r5
d*Bn]d00^Y#6tM@#n@CT(bS^0O,&ab,,;3D\%05f_8*`c<`W:#<)QUm<EijFDKU2LH%CU(MN<mcrg5:'
;cHat=^#$8?=IJ^EI<J!QC=52R[fk;StMgQUj799J;B&DO-lB4XLZ@&l2CVfr:]UFhUg6(df'=e"9\l4
"pbPI(F(e/=_r/.LQ.OfTWY]6]Xqc!B4YX_@9m/A?=[\aDK9f6Dfp5OIY<H6OHPloAnG^jCi0/j,BeKd
KnkVLStDXLTV8!NTV&!TUOI]ILQRahSY<$i]tqe8f_b\%qXs4:gt($b%1Wm\&el&o)^d=!5u(QlBQAKR
M3+!oVQdP=@q9"W?=$f>>$YQI4_JGFE,9B1F*i=eJr#8CNJq=VA7]FiD/O?9H@1$hJqobaT:qdGS=Z=E
T;&!(H@^[-NL?0.W3<P9\\ZD`s#B`BlK@C<#n%.O%hTBf)BgFV00)C(?u'h0IYN`FR@p@MH$OLTDJj-%
AnYjlCi+-1?XI;QCM@bhE-)##)KU7QJ:N9,M274SOHP]hQ^t4]Yd:L<YctI>rj=b:JVK#JQ_UFd\@oPf
_8X^Eda?Xjd_a&DbK7lN*ZlRO-n6i&3^,kt6q^Tk<*EjKEcle\MiX*eOam~>

%%EndBinary
grestore
np
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf21.0676 524.785 mo(\000H\000S\000L\000\020\000W\000H\000V\000W)[6.672 6.672 2.664 3.99591 3.32391 6.672 6 0 ]xsh-12.3657 436.008 mo
32.6343 436.008 li
32.6343 403.758 li
-12.3657 403.758 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 246 ]ct
[45 0 0 32.25 -12.3657 -190.008 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 60 
/H 43 
/M[60 0 0 -43 0 43 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
,[kJ-CiFZDD.6mT;Fj2=4$u(q7o<Z<I>*2qF_b5J1ERPN&J"aM2%0d!&f`,F/g(iB)&jP;)B'A(/N5^K
2Ea/Z0.ne(-R9iY)&!]%)^R=%5s.+d2CTUU'G1cO#SRLK"9f/G)&jP-#mq+O&J>T_$4-J.kPtVe!qlTr
!s]2<\c<1TFEqqNI<fdEA6`/.72\6L4ZPhs8Qg"SIs5aG@T5?;(_mYo%LrpVr<ii>'HA;W.39K.*\8BR
*#feT5!_:l5<h%^0eY"(,9e3D'GVE!+>>Q52`!-B-56Rn%LECH#7(S5"U>5>&f)c2&.eaP";2:Y%h@q+
p&G'noDesq"q:_6!!NB)!W`B(`;gj*Knk81K7A)dEb])e;Fs>D78Zr]?>aRtAm/CT<_G+h'+kcd&.]6Z
$4ROV$kF-o4"qs)r?EU7,pjs#5X@On4ZP8P0J4k&+<MRA*?uaL-SdD6/hAM..2iR!#Q4f7"9SZ-"U5,6
$4n3l%f?\:%1NdVh>m3K!Wr]1])X"+LP^Y7K7A,jGB.P1>Z4Eo;dj-ECNF/o;FO/L7l)D(&cE1A%1ERQ
1_10.&/?!0,9@jJ+s\H`/1iM=6U3gs4?52U1c-s>-mg/b-nd8)1H-s7*uZ.J-6*U&"pOr.!WrH+rWWi9
#Rh7Q#m^hE$OdRX&esj9!s8`/!os?m!!\17MM?h=KDp?@I!TmOB4G:P@:Wk^C1'Xs/M8\5-QO*A&J#B`
&J>!Q$kX-g(De2;,:4os3BRX96q9j14Zkbb3&U[k(c3s#/1Dnt.4d)&/hndq&If<n+s%O,"U+f+'a"O=
!<N?,"pG/5"9eu;%MKQr*$-3l!!<B,!!2`m!!2Bc!W`9%quFe<!.t-$2M$F,I=$9`FDl&0?=e"h@q9"A
5:nE8/L)5U)&!Pm&eu,m%Lip^()I`3.5*J=78?`]=^#)jr&4^81bg^01GL[?0.o.60/kO7/1M\S%1F*p
)AESc"Tni0"9ei.!<NB.rWNW8$kF$m,UY&k/M6Jm!t#/2"SD`q!s7um#lt,2$O[CN$O@(.!7h,TI!^3f
I!U*arcKo9EcH&;Det0#OE"lD<_>8)/1Vh\*ZGn2(E",0()7Ms'G_T,,qUu54@W(A;H$\#r%S7,0J`PZ
$8*qa0J5[p8MMYE,:"6E',hi/'F+gF!WrN-"9JZ-!W`?*#71nT'cA2C.Olr!/FNQ?"VV+6!!*3(rW!!#
!Wr6!%0?S7$4@:N&J#H[$3^Um!9=,&G]e.QF`_\GEH,o8D/X<0AT4Bf[=;^t=&(e7/L_YT)ZCTd)]Th:
)]Th6'GVT3,:t].2*:e)$q*TW/hAP*/1W5&/1g`M'J1jb0jKKN4")L'*Z>e5)Aj(k"U+f.%gE1@#6b52
!X8u<%hoZk)#bQX*?ZKn!!3ie)YO.2!WE''!s8T,!s/T(!"/i3!t#DD#7CeC!<MNe!!DEbnc3T:AnGCM
:f:>!?!:#m7oj,6DMka!E+<Zn>Y%(?4=_C%+s%mP*uuCE*ZGk5+t4u],UXi[*[E0^.PEV,/1i7n*ZuXT
.462R(aCUZ.m[cO.j?Aj+W_@=*uYY'$O7%H#mL\A#mCA5$P3p\&etu`%Ls!`&/#ctmJm8$&GZ;E!WW3/
"p>)7"9\f1!s&B&"pt_F&J,BU"9A\C!+,_3>@(T-2`*Ze76ide1-%X0A7f^s@UE>@=]8!L,9\Nc-RgT#
0J>.7,pFlo,oI@EPDC@k*$-=M,q:Dk,pt#X"U#AR(DI2W!=BMb,9nWd+<VXG+=83I%1jBf%M/OQ'bqH!
$jmR\%Kc_JE+fg`$k!UU&.oTQ!:9ad!W2p4$OI1M&J#B`&-iFL&I8C;'5Ln_!!C@D!>Z%;!":eQ76iji
/g_qo-R'c;-7glSr`ii8?<UH/<),k<.3p;]+!2OG+s\EW*@<?\&0F$&]9k5a&e5d#+!;[@*[DmK)ANeq
%h&dK#7M4g,9\3N+WVLA*$6"2$k<gS$OmLR%M99]$P4-b!t-E*VLBZp$O.+RrXo;5"9o#!!;c`r!rN$$
!sA`1"TAW:"U#,@"TSZCEK+fP!<<*#bl@ejHQ`(`)Da6.2`j2X+t"ch/i#=G4A\pX?WL?+>>8'i=ZeN$
0I%>N'Ft]h(DJ/:)]9GDFg@<?0dRYJ(EFS=+!213(E">>(Ch#i&ebus)B'P5*[2LB',qf0*>0#%((CHP
"Tni1#6bYI$4-qS</uB!,8gsr$kj9Q&cD\1!X%fi!!2rs!!2rs%gW7=!<EWuEGn2_&Hi(6"O@&L!Aktn
!"0ba*%NZm.532$0f].s)*UP]7S$0l<D>SG7m/R\0/":b)Aj;1)&!WX'bMX,Wg['=%1X?s*@)^N+Wqj6
#7_Xp)]U"?*$-=L,pFEX,p=HT5:7Ka)B]h1&f28m%L`[R%1<CF#mM&>ML%K&"9T/D%MTHf&eP]S!"&l:
#6bD7"9AQ)!W)j0!u_US!XT2;!!*'"!s8T*!!33"!!EKlD.51!#5eH'!rrB'dJs:u(\@\c'/Da#)C$d`
,UkH-5=%Y'4A%k!?+t\B3&<<K0I.bh+WhdL+;be*)%oB3Z>h3'%jr\G/1_tV.4Zkr-NtJ;(_7?(*u>k;
,5rlL,98*P(GCP4$4mUW'+tTZ&J>Wd&ePQY"q(VfJs04N"p>bZ&fMZ$(E"),'EACP"98Q1#64c)"9AT$
!!3R%-N*oE!rW*%"pG/7"TAB9!<=6RF$g66!!NQ,#mUP;#6k>7!!)Ee!"nPt!ZjB'o)M0SEcFGd)&Nu*
*[W?k2*4)G/0lBFeVPD!1GgR)+<21;(De#,&K*&QMmJ*n)'0nG/0c>m0.8Y30J4q8<)kO`%hf<`3#*2G
(`OP?(*XS26*su+&/H&n$k!FK&e5Ec%gWae,BB2e,S(P(%hfE^(Dd]%(`+#*,X+R8!s.un#:4@_!!`o?
"oSE3!rr?(!<<00&m03R'*/4>r;[0+!!!-*"U5,1!!2]lqu?b!"7H3k$U4md!)eMb?ti1L&h=tB+<2II
.PNJ.+XCdiUIuS,AhjuA.NKE@'H.i/4D([W<?N&&.3:5b-SZ_f.MjK^.4Sh$7SblQ$R$,r&Io0X&JQK:
()KQbGq:KM0gHHS$l06a$4@CU&h?eAG!?]O)&j5+#7hUX%2/mW&ebsS3AiiB!!!E%!$2.@!&&P&)uq9=
#ljr,!!3-#!W`BA4E"FU"TSf9"TAB$!W<!$!<N?*"RQ0iHPQAWpAb4M&+9L+68L>f@TYW3.2O-M)'0kA
*#fk9A&Yli,'8u1*@NNW,o.UI+^h.IBIFcA+"/We+Z1Vj3Fle_.ju_m0dIo#9110@*"*Go$PF*b)&<r#
9r"(K&63g#&fW)/'*esV$QhQYIR"8A"9]#<#ltJ<!>ILW(Cgf]%QuEn4\A![#6jr(.g6%`#u[k:@O?#I
1_UiI#S[OV&eIKYJk$LY$3gnI$4@gc$Qh])+;>G$'C>c(!S5a%!!XhE!!+W0r;c?fIOHp).Q^^65p7L2
/LE(u,8qF5+EP$$SsumdIq)2!%3-B79Tu]8/g2;^/1)G`,q:Aq>GTKQD(71p1*%Yb*%XBA/f#6K*>fh8
'GV>m)-WMlI!LX5@8/d&$4@7R0PlML&dJRG%L<1A#R(A;/o[#/5n+GC(a^j`,:Po7"<mjK"TeQ%.g,qX
%UYpMR[Ud`ED/A*!Y,YR1iS1Z)\3Ae'+5!L#nmsf4EZpB8e`*^)smV2"Hg2\4c4[t!Vuct(.AN$!!49a
7/R#o0/"n+/NHU7;DosM/hh_u/0d\eFJ#J!PFJABOFq@$/K[&lTURtW;.<'<-nm,>;`H:!QbUhXO&'D9
KHVN^*Zcak8i\19'cnA/)]h.3@#'hjG(#:*GAL>)+qZ2$JTi@B1dNMq%MK6q/f"j@C5e=9B/)q[@k0)W
,9SKn5q3WR"9Sc,!"ptS?^rIBU7%soW/l%-,9mgL;gip?$Tq!;&fMf/001R(3.%@&U38b"AT$o9$3a@Q
7Q*qoA1nZ"r;Zm#0dZDk,TM!+GSL2Y"qE%.-n-A^.m[Q93%6R8,<Bk:U84olSXYq4C.hGtAOL<_VO_9`
5A?e%I5Fu1:P4aZKqc;q_82t)S>2f!)B9e8&f`Mn2C'+\*#'`.NKK<hQ%OU3H;Z[^:c2<_LjhoE-:iEC
<u<\Q/6?:Z=E4>!.$8jdFFeie,9e?K'GW#T,Rsq\"98[*GDD*^[&BmrUhNOi=>s>jK6eA//M9kLR:.:(
6o\XlB5E?sTr4iIEe'((nGj1(1eUW:RTWKP70ESj!<<0+5:c^5!s'rg"oSEB"qLnE/9>laOuO"$4uXQ<
2CKn*/gD`9A5>NK.6`OdSe[fjTUhU><\dC-I?(XV*Z-Rm7Ts+NIQ<1<H(gdlTW+reWi_%tKoM',,:FQM
+Wh@71IsAO*Y]oHPEh2iPE(QWJO1VGGA;T&?l'G$.PX:X)^/a"<HiM*I>Ni;PEBWaCNXb@.kW"e,Tdd9
0L%37((2(+Q):.^bh^Oe]jX0'OF*"]@Mfb*00)[(.5lR&F.o+c$DXr9XiA>7EeKO5nGik;>'=;&TpLL^
?iC$./JU(;#5A0h'G:[=3A!sNJS_?a*=*T8.PN\80/>@6+"8[2?<B'*0o)0gSXQ%:QC+(a@Wn6)R[#r>
&K)5j!sf9)Ocu*4R@0G:XJr4rLO5,IQ&d+:-mU#])\<i(0LIrC%30VOP`puaL4Ou2@8:9jKo1@5"UkqL
!rr<%.W'!?J8TXWJrPnRM/.0YIWm=q/1Dnp)\Wu'.QfL(";?!;UnY-&^pUkmKPl%>Q(<@X"Uu(S$3LSC
6ACG_Z'LcDV8C*^Y_A.)Q]h=JoDfFC6ud!UFDtDnC_6^YDF.;SpAe5;,V3L[4$$E1Tp9U;.lfaIK6VK`
G\U]!@4!*]=A_"5L7+BoPE_8oO-"g+Bn:DYLginF6pssZ>[MT-MN3aLEbK?JLj4&_G^4RXCg^OZ@8ofk
8JQ@Y-p9O3*.!m;NeiRGJqAMf>?GcVEctAD4Z>>f91MWXC2.X&?X?`<G^*b0@:s:gATV^$Ch[-R<_j\O
0LnAX-]Y:N[_9Mu`50<YKR0&=Q$HLt5Wq;,=']3^PG5%\RuDfOXK7YIN0KWoOqe9-$O?e6!Vl]q/.d#p
EG09(@9ZnW$O7sk-lrEd!+u<5$R$rS1`?o1%6Q`h'bVB(*#Fd*Q&LKTLO=/91F,SLIn*\-R['2*P)k]^
J:iB&ASHC8G^G$lEbg&QI<gElEe@k:@:<MREGo`5Ed)n\J9>jQCg^:%*>'r:>UiO0QAUN\L4X)hGAM2:
E)p+RBP(srC0t(UBOY@[>u+d'=&Dai<+'$<?=@H!N/2k)H?3k.4=;(/EG%19UWTg]d)Wl;Z_*qYQudFe
Chdg2FD><7J;8`COb]NSJTu?]I#Ef9Ll@NK3&D`q*>Jk_r;[EB#QOm1S7?YuBj+\),q:5g"b$X`%1<X]
&dJOR().<"'F5W\#Qt53"q_=S%MBUIDIZUaDGO"u8P2WjOH=EhG`%H8L5:_LOd2<#P`gu\Jp2<^GAqS@
FFSmhJUqiXCi4-2F`_VKF`_me=%tq_=$/T'3AWKdDJi?PCOUh]H$OajL5qFZOc4j4E+`]qB3/PQ?".Vd
@:j(Q?!q#J@qK=^Bk1^c5@RhiAn4J)77B[9A;Q.UCPSXaW2$K%a3W]5k1n"^LkKnjGBInHG'o^KTrGJl
St2OHVQ6_mYGnJ(!!<6%"9eT%+9Ec4"9TK)83Ado7:g:lQ]mDM9dC_i$P3gU$OI:e,o_:Y-P-k'',;E-
*>]t@)^7sS;I"9eCLq*jHARE0Ll@">It361MM@(GKo;S2Wg&^0L4"N(It)Q_F),ZHN-]D^EcueWH['jZ
EcX6*5"8a`;bp4e?Ya7bBPVg7EH6>RHZsm_FF]m]UPa_VF_bo9E,T2q?<1$ADI6j_AnOJGDJa$#A78q8
8kW,tCh$^W?uggKH@gj:Ockp&Xg>"9YH#(]Z+J/JR"os8J:N,sI>WQ<YfEc;V5C?"\$`HHX/)`n!!3?2
"9&?U$QBlq)'1@X,:,396oRb$1etR;e9"/F,SV(9)As"q&-rXr4<#%Q*$?U\.jHA](k*BEEH?/>I#3`A
Q_C1KUo1)QPa.T&R$<\iK7Jc@SXbt,P`UTAC2nu]I=-H]C2\6,C27^/G^+:OD/*fn>[:W?B5ha0HAIK6
N/s$WM2[LYP)Fs>E,^)XPaIGUIXQ3H=(?GsDJNrj<E`X.<`iR5@UE>B<DZM-Bl%R"GCG3tN0^?AWiWV8
Y-YUNb0%W/WL]KT^Z=@tTr=QDGAMAZP`(ruS!0VKV5L>r\A#P][B$.##R1P>"q_t!.6:gQ@rR6X?t4&$
OH=Na4t.g=Atl;S4@hU\%Km.e.NBNP&IT3f%1a!a)^-7=((^i]Ll$S)LRtKFUSO`\SckpiU7%GJQl2<\
S<fA$OH5KdQ'e&1Mdfh5Q'%,hK5+k2r`g=IAnu-lBOtX^EcPo'E/BaAMi<XMKo1kHP5LM(Pa7\oKS=r+
K7e],NJr0]9P03:JqIr@9N4\Z8k`)^<)6=a8kOS`G&W#(YHXn,YGIu"\uiZ^aN-Bce(rm>aM>Es[(F#T
[^NQ)AmBVhX1Z3WPEVW*Q^4#4W26)\T:;;k*teo%=,DrNFa.1lH&QQlMuJl*Q(=YLG@P#Y:0Lt$?Z^3>
!W`jG;HR0Y$O.%D"U"u9%h/dO#6b9tPBqq[[&gC/WMZSjV5C/fUna]\W2HSjWN.#6S"#q9Tqe?XT8@8l
N/rjML4XGPARf.XBl\62rGE'tHt.,`US"3QStMaKSc5;\Sk,EFTUhaIR#R)cM1pS<O,e9a;h'CGF`D>*
8P;WF7SQcY:J"2N8XY]`JAAS)]"Ptt^r*q(_8*t0aMbs0^;dn$e&'#G^=qCle(q["CM0*1XeiV;W/R^R
Tqea!\$<-@YHLJT%NMV*eCE!`a3ME,`Qc`P`l?0FdF$(adCOj\MfF;tMP>\P"9LVR5r1GT('FmI"U,5F
&I\sQ#mks#@>(V^VQ$c#XL5OH[BQg:Yct:3Xfne.Za$F%SXQ1CS=cIHQ]c),GCG=*Lj3iZE,KN:I=HTb
Fa/"<?qbL0TU;:HT;/BdX/Z)p=f/'mUnjiZTr"NRQB7#TK8"u>NerBlB5Mm?FCJBS<)HOp?X-`0;,0l0
DI%h2]"Q(k]XY8OYd1^H[^ENO\[])]\[8fcgsX*bd_ET5]VCp9J"!4W^9F>\]XY;T^rjm?\%0,Z%g`7V
ak!B/g=+[1hr!;Ef\,!4g"4j/dam1+a0(_UDKfu<MLnqu"qr4?:Hfg3((q)f(F(+C&.oKb8m#GOUT:K'
ZDa_*Za6j3]!o#P['mQ[]WJ9F]s4K.VPKraW2ZPhIt`oLRYcKOL4t53MN3^GLkLM>K/c7nBp5-`W2c\j
W3!2)XK8G"W2Q_tXf\7fWN;h^OFVe0KTqakSSiLsOcap&G@Y,g?"7MV>ZY'-;G("tJ$H\sZa73R['HsB
\?<*DZa6p?VlRDAZ)b@Xam.p3i7-3"`J9GUeFUGae)/p.e_f]Vg="L#aoDEj!>^F;fA596e_K$=hU^ZC
gt^`CiT9+Me)'-;_3TLmE/Cs4\]Gg;8<B-+-qc6E,pk<+1++.f*Z6e$7nn?)WhlJZS"l^GTX1SjT;8d"
WhZJmZa[?N\$`H9Ts1o(R@Te7PEq]!LlRddP*20"QB.?"R$/gQ3'Cl;Tq.caMNa^'N1I/BQ'.]9VkKQO
U8+ZaVkp,LIY!`UObo*ZNJNUTJT?*\Ec5i8F),9!BOkI177g7!\%BD`SXd9lQDLh*Z`V9TZb*]^]!\iM
ZEpsliQTEReYfIOYeA6Qd)au<rrhN]s8(pW!"0?te?u;U@'bqkL>Xi'N-i1lh:/1Fe_8m8h;-hmFE5=O
X^,d_ChSHa?9_Ll:J"&P;FE<+5s6qB/LVo?L78+58</h+R"^ftT8&T9TU_:%W4S[nStWm-YGeh;S:Zfc
LQ%[dK6;WlIt<0'J:;fkJ;B%!,pOHsGESAnW/$2/R=(d#SoomkUQudTGbqO5R@C+WW1fc[WKD.KLin98
O`kJYIf=gaH?O.?@q]Ok*%E6[8UHu'^qc)!]W?q#Z*JnFZFd!"K=\.gWij+6ZFRiYZFPsh[[F/Od%65^
^;It1`4<.SWNa"Iqu@QT??s]24\*qK.]&T)+A(FuF\3q0ig5:X*6mU%f$3",K-<Nk/kDgr/f5g#7nZKD
3@lHu-SPHT?7mW^@?I4RS</u-R"g`uZ(Gj*U9^eZP+nVLV4=3m\#Za<S;s#/I=I>q6r?r[;H?q*>$P9:
@V]d1.juVn<J6p:T8AZ/SUcd!XINUjVlZhHL8UlHVj4$[W1]r^;NcHgRr*.t>rkDH92/2[;,U+^7nZQQ
0JFt&0NsI:[Bl*e^9WZf^9XqU\\GGZMitfh\%AKMVR!kC[C`!=er>otJ6$5oGC4pnL4k84K8GYPquA&E
3Kg806rqZs/l^6SPQn>:hUsYKd(e8`F1LGie(NH24*7nO,Z5-\!!!$#!WrQ/"9\f/":#6^/M9%A/5V(i
NL5ulQC*bfSXc7/Pb+qLSUR-4XehY\YI:gAUR7IOVicF>*>1+Z.Olr"0JPIE0f;$T-RUQ"-:E*@L6IXS
S"5ReR?a1hLnCT@R;\IlW268WUo:5iTo4l*U4mSh)\akR0JG4:0JY=:.4cu$.4R2/.S5+HRZ*o.PGkaR
Lp*h^NL7Vm_6A?i[C*ZcYdUjC[DSf@\@nVpD([&"4Zu"n5=.b-7mTU;9`"f9,$Hs9;F5Yh9e)!FM(qW-
fuo<kK\P5/]StP#h:g%WB%PI(*sD*6%5Bb+1EoD/Cj28:NJ<gLQB$W_SsY"sTUr'>NM)i2Wfs9h\YGR_
Uq<LgBKn[H0chhp.Ochs/hT%@3]JT@2_6(7@pa,;S:uK`Ul';PSW7ZRU78$.J>AQpVMCJ=X.#!0Sun]G
=uA/u/K?K!0.nb,.P*/(/1N2)4>8!IB4Q(VY)eCC[ZlB8\Y"9sVoH*TN/kl[Upul(Yctp;WPkmQWGb@$
9gLHs5<M(l5!VD(84Z5I!$hdQ&S$e\/W6Pq+]+t<)0*W_eLrboLM,72T&AP.>AhUDcs[+I!!,)>r^7NC
PEL<]RZN,hR?qo]TU;.&QDC(9FbY@2S#VRJ]!7QgY.M*5R#-6'0ci:o*?ZLO-RgQ'1c7'B002-UAqu+[
Pb<n\R]`/lOe@f&H'+emLh:jmR&>S/Xf%#6W3*2#P^[[Z/g3&%/1W;(0J5"71GCF;1-I]^BT.jnR'Dd(
W5,BUXN@]SNN9n<Uj.ft_76#@XgAq/R'`ou^o!$>B/h8&*#fn?+<i*Y0.eb+quA)N4ZO6\Q9ujDb^L"=
`,^Y`CsBFg%ju(\fKu_"gdk5qj5@mm0,k&b!%C]17RoI*?tsP$J:Ms(Q'6l^Q(Fh4O.Vr3Nbt5`T:;UO
TqeQr[B6!NIV3@o4tR?^(`F>7*ZuRL+X84"3BTG\3`KHpC3OlCKU.dDKTDn'JV'S_U4cj;UnF'BSsc"C
Xf\LrF^&3H4"V6r-71/h.4?Sh,U"="3^5kd4BQ*,DLHq[NLcVuRAe0?QC,n/bF!:W]?S*hW2HT)YHYIG
IV<Iu6Sobu!uMmo*W@&W+8Z$a!<i];*?>tT@9FmBAB*"Y5/E\u56ukk_3g%CJr&":i7b@T":"Ar2ap&&
8OGU*84Gm5;dNpHE.NFhOb]3aP*hl/I#aMWQ_0qL[(<Q;RTqd$-64]u+XSK[+sJ0S,!.2"-n.5:4?kqd
3'fbl5"o$]@;Bq'Fbk@*Ll%OoQuI\>N0KQlUTL]&Um+e7.OQDn3@?L6/h8D$-n,'D3%?sL4[;(e3^Q.r
6VgroAT!<ZMP607U8,QF^4_uYXL+.TU9:GqTTN,-.4-)d2'NtX)&F))(`<5j!#tn;p])97!X/uU*$e93
C/@fsa-7N.Cgh]n?'O:.iJgb:mJo1390tX)90b<q7637h4uu&(6Yfh>F(p8fNg#TUJs_auZFR<FX-H71
0d\P</g!#(/1N"r.P<CR/da6k4uk>Y696e[5%ur24?PSi5s&CJ?"R;`KnG;>F*3k-T!#9"XK7:F/heY*
4YJ*@2Dm6E0/,+90JG+23C#V\3C5e^3'fV`4Ztkq;b_7=E-ZD\St<!VLPigCSZAckYHisM/1r1u4"DF1
+W_XB*$6=JrZD1bn,O1'#6>&?"sl`+>tuLfPZWIoj5AeG4mW/.6qU0F7RTI'5sILo3&``R2*<r\5!MS?
='&dJH%_HQ\?iECWh+#]/hJS(.Olko/h\n72E*WW3;tiQ4$Z/!4Ztha4Zkbb3&``R0fM!J3BKN)&5c5*
AT*!\V6@&)Z*Td+0/<GY82)_N/ho+:1GgsI2`!9G1,qE]4Ztke2ENr^3]K&V2EaGp5t4==?!LTEFaf:N
`i#l<VQ#\`.4$8b,9e<T+=AKb.P*/*0/*;Wl2^ea"9T&K/8YX4j5JnRcW^S>!%C<.:/+DU84>m45Wq1i
3&icW3B0&X2*X)]5=S7DC4(\hLPL:k7PQYQr@SC..k)nt/1rS21B'692`j8n7/fIU4Zttk3][1!'eqU(
2E3HH4#JlV5Xe=REHQJMG]6jg5qb"m0aKQk1,(:3/h\mW0FTfp1GUpQ5sRb'5Wh704>/`U3&j&f5sIY!
4[q_'786Q\D1ZkQG^!t.4Xhg.-RU2d,U=NW,:"T`-n6i&/M?&`#6u1c*$-+4"8W#g!%Bur84Q3C84H':
69m[r4?>Jb4$>ec.k`G+0.\P'1HI?S5X.1a2E<]QrA+X30/#%61,Ahb&2Z1!1,CpS5X7Y&4[2+o4?WU)
)`Kl@4[(\Q0.ee0/hAV33\<'F2DQp?2Dm<I1]B361Fjq+.hjQd/hS_,/1iP64$#Jd5!;(m4?P\(3@d3U
4[24m0JkL?1bUF62EWWM3]SoI/hek-.Olr!-mgJt/MA_10/5180J:?F!!%N~>

%%EndBinary
grestore
np
-13.1157 403.008 mo
33.3843 403.008 li
33.3843 436.758 li
-13.1157 436.758 li
cp
.750271 .679713 .654902 .901945 cmyk
@
38.9669 437.133 mo
83.9669 437.133 li
83.9669 402.633 li
38.9669 402.633 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 246 ]ct
[45 0 0 34.5 38.9669 -191.133 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 60 
/H 46 
/M[60 0 0 -46 0 46 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!tZ"N$2soA!X/`4#6Y/1!<r`3"Te`+!WW3$!<WH/#5\H:!sAl7"U,2A()e&0)^m<m5tk0ZChieH!!2$Y
(BOU;!!*92%1Ed]*@WL$77L!N<!*4(!r`0*!WW3$!<<*&"T8Aq!<3)k!!!0$"UP8=#RM(\+='-6`;g>j
+;P\"$jm:L$P*d[&J5E['c%Q"&.K!U%hB6a'GMB$r"K&B'+PZm)]K\8*[iQg1,qKm=]f-QFSu1G"U,)7
!WrE'!X&E*%L*.D#mUeD%1N[Q#mgb=r<rT3.1$1a%M0*\%hKQs*[NO"7Sc]W>$D(1"p>5>$4-e9!s/`6
&J5!D!WW6"!$_RK"pP>=$O[(?!s8Z-!WrE("9eu5"pYYP$kj0d)C$IY6U\rp&ci"s5Vt&7,TR^G+s\EW
+W_[MrZqdl*ul:>)]Tk&+sSKa-R^GA//oTW1HIQW4$Phi1b1IH6qgQeB5eq:-m:&m0eN8U%Pfdi/ho"6
0JbO?1,1O<r\>ZW3B9,^3]]5O2*OAp6:==+4>SNC2`O#e92JY,)C-=M.k1HC(aC7V/2]:=0JYF:0.eb+
/1`D/1c@6F0JaP&1GgjA,V1i83B0&_1G^6q)'0_?,VD,C`;h>E8khf11GUX9/MT"81G:FE5!VG"6UF15
9MeYj>[V#L@V0=iCi4-(COU5EG'J@_LPU_6LO<,l:K^k>(+;:(4$#Vm3]]5\4$,\l5!VS0:/4_f>[1QC
?t3_XC2@d/FEM\IE,g)IH[p^%JV8JnG\fi14@MY;&g0.i2)dQW/M8\14$5o#7S$0H9M\J]<``O5@qKCi
A8#apDK0T5BP_R+F*)_VFUE5)@9QMX*$H^`60J:V!<E6("9eu5#71eKrXTGE$kO*g)':.K,8^gu#5\BZ
*D1'h>Zas,>?b?>>?k30>$G08=BS^-=BSj4?smMVA7fXsG'J:XJ:)TcI=[!%F+9=6Z(uS9IU6SmLDN$j
H[gBsMia'cQC=>:UR@XIV67)6]>qq2bf@rMajADZc-+;PaiMTHbfe,LaN_oC^U'nF2EjMrAd9elBm+TJ
KS5&8Mk$NK\'37KgtCTAkOncJs8Drmp\"%>i7QW2e]cFle]u=YajJ8;\Y#-_.Pj%?;?-\%1D(*)&/?$#
*?lpb1,M$U6qU0O<`s$KE-HnjOcu*#Uo^r4\@BAf[^Wug`5Amsda6m*!rW*F"r0[TP&G;L@Us"\ARAeL
?"IY]CM7EqC1h6sDfg5OIXHQpJqO&U*JoN(LQ%7NLQIXjU:@(B8R>k8UD#b?U:.JGaMYn3_o0X<c-3`1
^V%M(b/qlObK@oH`5K^<rl-5&`Q#j8a2Pp3_o9F,[^E<H=Yi6.7Y1[jE/_0-`6Q*2^VT!or;SeRq"=1E
n*T?"h:U6*dEp+\aN;ND_SsR5]Y)"u\[\]@URY(/1H%%!!!!j;GBA%\G^+RaIXllsHmOE%OHPlsSsu:G
W3EY>]=bko_SjC3`Q?0>aN`&Sa3i>iguGaBr;]e;!ujUO@prG@=&r=$<)ZXj>[:ZD?!^fB?X@,LB5)-t
DJsK5F)uJHH$FXbKnkD8N/!LWXH73p=^>UQ";k!k[DL;:eCW7#dF$=h_8=42bKJ;]"4c#Tec*uAd*pCi
da6Cgd*Bt_bK.`Eahu05^9X_53&NZbRK*^fI`9h7nGaa3rV6$PkiCd]hqd,Ag"+a&eBl@U_8=1&`4N^c
Yu3\>2`Z0_!#m.pH>deHFE2>8BObLjFEr:_It<93NKTU!US\j+Xf\e1Za7*K]=GSj`lQ3=cH">YhjslI
!!l4.%NJhd@96P/<<uN&<)Zq(>?kA2>6eG??XdY_DK,Sq"ES^1H[PgG0nP"1L51Y?QBnb;@8:!7Enq69
0PdZ(bfIoKcHjkbd*fbH`Q$*Dd*^@nf@A?ucd0u:d/_H7c-=AOai_cIa2Z*>]Y(MI75["b;RZc3->'[6
qsWtCqXXY0qXj.:iSWDDg=Xs(d*BPH`5fm9_SEk'[^E6?7l`@c6\YL>.0`OlD.R*aA7fIhBkh<tEHQDK
H[^d.OHuN8X0&Y4ZF%*P]Y;D*`P]S!`lH3Fa4/YtQ2CVrM$k7G@U`hK<Dlan;Gg:f;H$Rp<`E.$=&rI/
?tO(fCMn!,DK9lGH[gNrJV/W0Knk8>N22/):JbD`eH6:4A>6?H^;Ik/aN;WMb/M<>aO&5^eCiF*f[\O$
daHUneC)ajccjVVbKBh+"3/I!_%!cF4Zb8ZF0PiY0l+eim/J4&m-!Hji8NVOg=FWraiVTE`5KL.^rX:+
[&uYZ0g&s&rW"\X9ke*><ENI2>?tNB?!h&SCN+?;G'o+0T;/<^XK&A(ZF7EZ_84%,`Q#s=ahuBJg3<Jq
!#$c=$QC*m@UiJ?;c?Rl:f'n_;,^Fp='/R-=^,0?B527"F`__HF`r(Xqgn`u(4hL*UP2`A?=UR[!XgGa
SZfuJai_lOrQ5Yi`lQ<Jd+$Oqf%AU)e^MtGd0A%Hd*L%^bkoQqai_E8[%]oI3^K.&!t["t_;=SZ+o_0!
jl5:Mf%8R*eBlL]a2l?A`l,g9ahGTtYXLW95CIqY!&=[IAS#.T@UWYJ=B/F)>[hGeFa&(XJ;fbeVQ$T)
[^EKN\@fMl_Sa:0`5T^5_TpBZI/O$T:/DB?*F*#a=BAL%<)ZX!:JOY^;cQn%r`Tq??Xm_dEHQJPH?jd_
I"-[#KSKJ[3/3-;K9(kTJ5n[8CY+^L"X$j2V80ja`l?'>aN)BBa3)TOd+$Rtf%&9sccs_XbK\5QbKJ#J
aN+;$rlG_m^r3j_9fPR?\T7rf0l"bloDeag#Q+)XiSE,:dJhT2dEg%[`5TU2_SX%'b/_-2[\QGJ5"guL
rW!r?5@.l.?t!JM=B/6t=^Pf[G'\O`MN4'rX08q?]`,JI]tV>"`l?'=rPo)Y`Qu]WDuK_D!O<CI)]Mpe
A6)_/;$]rn:/=hg<EE9$=TVi6@1Hd]CiXW<EcZAJH[p[#K`-WULPLS>Oc,HQHX]s6he`>r+]FPt]Xu%t
`l?'>aN2EBb0&&Ve^N.&f%&3qr6>Mkc-+5OaN44u&B;K&]s;Z[5B4J9"VEA#^YJ5V#P[fRj4r>Dh&4u#
e'Q:Z`5KO0_83k"`PT."\$9XF3G4FFrW!3*2cWs];H-[tr_lfs?t*bcEHZYSLl.FaU8Y<&YctC>]"Pu!
`l?'>aN2KFa2ucRdub.A!#)sF#8\4U>$b$%9MJ5V9MJ2T;,U7h;c["(>?bE?A7odtF)uJJI"-d%L,+L>
M2[FSO-#KkPaIK"P#nTk;ud(G<g'/f\\Gu"`Q?6Hc-+5Qbg=_beC2mndEKhTao09f`Poa5_o0I2_SX.g
^^n#h\\keH:SXUN";!4u^=;KK'DV.^k25(Ng!e<kaiDE>_S*Uo]*l-XYHXh%M1%O<N]d:@6io)78Oc$8
8P;]O:fL_,?Xm_eGC4jgKSYeZUSb2sZF%3W_o0R7ai_lRcHjndf@AO!EC'Y,ErZF](K+@@:/=PW9hkU\
#>J#k:Jk"i=T2ME?!UrQDfL/OH[L9mK7o&:MN!UXP*;)kP`^ubUEuFV[?ODd"<g[)S$oW:^r"(2b0A2Q
aj&)WdF-Ile'QLdbf@iErl-&!`P]U1`59@+^V7Cr^q@D!`QPo4\pcgF&MIV%b4t\trt5+uk2Fh>e^Mpk
bK7`A_SEaorjWBIZF$U3P`8n)D`%Lp70!?<5<h:r6UjX?9i+el=^#0DDKgMXIY*98RAHsq\[f;a^Ve"2
aNMfRd*g@kd+-RibIi]=PTTr.&J%?-<D#kS8P;_U8e=Zo;cHat='/U2>[LlNCNFb"J0BDoKSG;AN/s$`
PEhE#Ock`YKU\C$X)_#:#p`E3T=VVQ,fe'Qd+-[rbK\;XdF-LkdF6@baN2B@_8=%+^qde%^V@Ls]Y+6U
'#;2rcH4VSW4lY*!=L;[YJTu*mJe:'mGZdHdF-Fgc,n#D_na%#]Xte^\Z;m"QAC6@LK?V:!"0o+2`Elb
7S-9L;cjQ=A8#duFEVn[J:rZ?Su]0q]P>3t`5^!Dc-F\`daH^pe^:(TUjc$q"98N7$URTg8kMWG8kVfN
:/G+u>[:T<=BAX.>[:fNEHHSUI=Hm'M2RFUOcblmQ'ReuP*(KTS=6pbBj1TF,>O8g]"Gu%bg=njf%&!g
d*^:jd14RPdEKnYbJhK<_Sa7+_>V+L]Y49U'>2,o^<4:GbL3n$9*#>G=0'%-qX"5'p#b/_f%&3obK%T<
^qROq]Xtb^]W86$P)"^NJl"r8!#Z_02`a#c7SQ`^?=\2)IY33"G&hkRH[gp</u>\Z\%0/e_oKmDcHjha
dF-LpcdgO4K;XL=EWH.M&I)'0<DH1f=C>QC?!1B@ra8E*='&L/?=IJYGC=FRL38!%KT1VHNf8jTO-,Ku
SsbmhG]\V.Hu3Bo!$#1Gb0nb\ahl!:a3`/Xc-=JVcHXY]cdL1ebfS5Q`lZ3<*5o_6^VRe*_SEq&Y-5=C
_6h,"\YsCY!!!^5_Y<g)!;uWl+ntKnf?`=,`nJbWb.bs-]Y;.m\[K#X]=P\p[(s\fVg31Z!%7k0@U)iG
Dg["[H?agtLPCP5E,KcLKThjr[_ArPa0WP%`6H6JccsWDcHt"df@/6sX,3[lf4tp'9Eu4=<)d@8=C5EG
@9Zi3;c?Ro=^><?A7fOoFa&%UH[gR!JqJi5LOF]+LPq1VPa%`.Q&($FMOK6WIK0?k@DUFBdEB_O`Q-!F
d)u@3"3\m5c2Pupc-4GUbK%WB`Q%nq)T]t=`l#X,]s4`K\\lD-_n!^WJH5`g=l8lLnc'm/na,5ff@JBs
cd'YVai2<>ccjGH]t1VX`4ido_oK[-[)KA4rW#Cg<gJbhJqSu2FDPK"@ps(oI!g[4R@^Ic[^Wl^^V@b)
`5os=^;7h1bg4bfb0e_daMPp>f>W4k#7^r)=B\^":JXqh;GfYR:Jake='Ag9B4c!uEd)G;H%'FXEc$GU
NK''dQ'IQ!S#NQgTpC4XR[B_JNrT/!9sDpicG7B4^;.V/bgY&?d4EerdF?Roe'Z[rd)XALb/qTC_8<t!
]=bhh\?`BH[CaN)\@T,TUB(?,8\Fojs!IdBmHiihg=+p<cd1e!hVcT*^V.1aYck:3WjK%9[BmifX0AY*
W;Q]d6Zm9I92AYl<)QUpA7TItI=dQOSuSou\ZVsF^72sAV8KsjcI(1nf$r=)gtpl?f"f&RfA#28$l'(1
<EDa_8P;o[<)ln!r`KM1>$G?C?tj.Z$u0QjDhW4fL4YDEOHfa,30fl'V5g;SMgTPbH'+8hN;s#"7A?fk
[B-dF]Y_\6bgFned*^:je()puf@SU+f##VI_oBL.^V0W])8*Ph['HsG\[.6S]"btcWW3)86*%BNh!P"2
rsSPtl0n?-j65:?h8U;Pb/(j)[^icPYH=b$Za[`jY_@V4[^E6;r;^7X3&<6A2b6nP@qfn-H$XjdJW#bR
U77CFWM?Z8YK+Z#bg"MadF-Iof\G?=fZhBp-R=u*e)$5o%LG:':d.BG;HR++>?G$*;cH^r=C#9>B4>+U
G^=4[NJj3nQ_'A&Pujfe[&91ULk0#02\mi\Tq%a>!!!s*Q\:<dYdh6X`5U'KeBu[ne^W1"g=P*7hpTp.
_nj."\[o8`^UgeWZ*V3NRtti\8M*5Z[^a)C!!3`pPCAmuk54fN)>sHun+uFtbhKqF_R$DPXgGC9WMl_l
XJ2g(Q>BSf,Va>4TUUZ6!%oN+$Q2-!>%_\lFEqJ4D/F9=LQ.:eRu3cL]WT/tbLbCsg="C"hVmJOae<N3
#lO`6(#@Qj9*GM(2d/Bq5Yt<Yr`:OK<DQFf;,gV$>@M#RA70V3BSrC9JW,M[R>m2iP)XQX1D(H;-;e`7
J0qA#TpPf[(-n("Ef700[^ir[^qn=Be'ZUne_&L,f@o03c/-:G_>_4r[^j#VWMGi%:HBRB-T#1]VTZ9N
^o.87%60D^I$j'hs8VrmkN_mC,P1NjmIJZEj28.9`4`jgYHFapRu(rN0-_kh1g,-fZ_F4_MZ*T*!$;4B
$U.!W='/O*=]J^8@VBn9KpS.$Ss[(*VTIQ/]Z\FNf=IQ-EC:?7!)3J4=1dDLcsd4i%QJ9&7TWSj=]o$9
@:<MN@:<YVAnZ$uEIiC^H%(dPOcPN_NK/Bp2&Qc/'Hft`KnbkjWhl\lStZ2b(-%@oI[R:?D60kAZF@HT
]YM7r`5om@]$&:/\Au4kZb)p(SXQ-u@QYkS)':A(Dj.?9Za7$H[]$A1":d,<@t:-!fAc)@d(I6UnEfT'
n)!!T^Wsg"WjJP4Ye-U)Tp_I$@6#GG'HAK"FdKD8VkTlSRt6:l!":(S#UMl/:/Fkk@;0?kEHubVLm!mu
KWW.RN2hiRh9L+`Bj,'j"8W!o%nW8Ahr*AIgfJ4o$O%bh>ZP-1<EN@/?=@8L?t*PUB52'rE,pYZH@UNq
OcXZs9FMI9!!4!#B8;Y7Ts1r'UoU]!QWAS9!"UH8I@%=BXo>7+Y.;BW^;%Iu`Q62/_Pb5jYbJ;!K:nu`
B29Ke'b1d!6YMCP[C!3CZaI-F['Wh_!<`WNIW(dle(*.)`m;EDi9g.-kORcqd&ajtTp(n3Ju,5eBi#Q`
&.&ag5\Q%M_7-PFVlQMdSWH0Kr;[`U$mSb?77Tj?<Fp8`F*r=eOdhZ'>aWQN94nE7-[9nP#Pe?T#<7%S
f\kcHh;I8KJ,g5e#S8J0@:3bQ>?Fm6@;p%<LPUhJNJ*+VK7fo"N+[An,S:+W!'1H@<HinHQCt+YWMuqr
WjB%@X-@f.!"pQ3DMuT<XJhYo`jEaUR?*T+P^nCWHZl!bIT^>Q2^fUQ"UYkb6"#JG\[AiPZM_'.Ys-<k
E!$4M*Go#5aj8Dc_8l#>\%f_\[)B))O/RSOTpp7+A4o!5)\3Aj,"610\'DauZE::2X/MkhU7mfi=T&4=
(^(_<:/4;7?A)dGKRI*ASS0W5K-D4eX!7ZQp](Bu0S$nDce.%2hVR/Ii;V^[`[M,r"qW&!?s%,N>ZkQF
@;oq7K620mNe)"pG%FQD0b=Bb!(%&B;fmM;NLQW7St;UVWj&n4VQ[89]=k!?!"^9%Ck9LD\#[B[V6QGJ
M0!ZtQ$m1bD-9Ir/.hsh#o"UG?%SKO[emH7Za6p@6aF&(Z*:C@V#g`*).m&s_Z/lRs4t/XM5d;-LSq>2
E-H>,8NeI2!=fVS,X5t&Wmo/&[^WfX\#cd6WMQGaU8"KQIJj-]%g3AtJRD*'F@TOc;+DTD=D]Gm(D$ZB
!#5P_>H5Zlg"=m,f\bQEio/eRioB+RBMo$;(*dm::4%"h>'jUR=Z:;PG$o<;>qmEC$ig8/#nnOL?uBq;
Od26#StMaKTV8Ki[C<<;ZF%-P\<$[j%2j%uBW]:q_8F3GI9U#r@o$HG9IUkt$ig80#SKF-I[[XT\%&oU
\$u=E&[J^HYd1U?Z*LXHK*;>^&Q;C]=dn=Ls4?4iB1?ipG%#B;>VmWL&Hi1@%M_QJOL*Zf`4s%![^NZR
[^E'6Vl$5aT:qjNNcG!t&d8@<@&nom[WiGk!!jVT!XTM@pAbI")GcC,bL"Ycr7Dn?iS`_UiSWVRi8UOW
#m:teC2u+JFb,-tIgKLR3]^PG.N'$.rW"n]*^<eSQu@V>QC+)*O-Gs"StMaKSZSonXK/J0YdCHuJH,ZY
(1qD[NlAlQ_8W<d>qS`;+VbUprW!6/)`13'M7:%*\,Nl@\$icS[^Z7E+0r5YZEpjAZG<Z&FTqpQ&55tg
J)/Grbg3e!83UB\0`iI=&cMqW$6VH.E0KA3_nNdr^;e"&]!o,W\%&E:Vl-DeTV.X6G@URO%0?Y4+g8Yr
_S/PA!!!&m!&"mSOh&]`daQRacI(.ng"=p-iS`\Ri8EVRac/"d#m:keA:H(*>AeD#LLk!O"pXu*!sg5K
A3t9VH&7]BO,o3XP*q]8VPpJpVk]l[U8P#pYGn:[Mi!>l!!X-@EC+0A`lH-=c];6G((:3E!Yc_=?@.d6
]t:ec])K>F]=>DZ[JdHc[C3HM['R'D[&\k.F*.]i!=_%b/lUKgjl+2MG=*>j&I]'X'dQ+[MPA#Gb/;<<
%`69,^q74^YH=q0Xg,7-r1aFhRsfL$FSl+F"on[,U8G!4Ql,Pt1'/=TFfiU+`QQKGaNr>ah;-rEhqm,@
hVI&GiSiUY/g;/P"p>;]<J`Xk>^9h/Km@PbrW!ZM0hQ#%H$P4(P*M/gKSttVR%0nEUHYEIUoC>nWhc;e
Y,\"YI<pL*NrT.]'h`mJ9";j\`PosA;?Hq2-9b@KN1m_j\%&uY\\,Mb]=PP^\@&cQ[J[Bm[^39G[?PfL
F*Ms7!rrf`<'!"rf`0@>eu^tB$l(Bb?@eTUgWdmY^;J"<aMPX$[C!BFZE^X9XK8N3V5'f^US*E[B5Vp<
qu@$3!!$E6MS7$=Nqr`\&ijd*^r4IEbK%?9c-Xtlg=b99gYCZChqm5Fhr3Il7hc@G+!Ljo#q\rB?9MJ2
<a8d1D*B1(=(Z&UGDM'0IXm#sG_MWSQ^F51Tr"`dWN!)*Z*::$WNMhGCBS0mI=QbF!$)h?KksMka2H$@
`lDd`=ac^;]uIq,_oKd;aN;H5rju1@]!o)S['R*EZ*CU@\?iKJJmMPjBkh2_#lkMZ>Za&Ajo>A[mB0;X
>_Jrhh:oofaO&5UeCV^I[CE]S[BZm8X/W(qVPBl[TVJ9SG?e6bCN""h!<)s)(BXY>VdssiB8-<b)%\i3
J$R/:`kK4)\[KK/e^W.#f%Ss;hV[5hiCDh[hr1RZ!s/f=&.A^O$8P5MG#2:Z>#8:&DfBN.FanjqKlM6a
H@1C$LlIdfR%L+DTVA-TW2d)(YH=jmS>;KX;g*J8KSBC*"WKRcLgR9%a2PHp^V7(Q[`-/$_8+%1`5]d9
`Po^+]XkV]\[T#U[Bm0DZEggC`k&UK=@m7ABl7_k%0.(^@W>)ckPtG,hPHaQdGE=$aNET"dFQgg`5/ji
\[J`G['Hg;Y,S=rV5'`VT;/-@;b:V:CN4Cm!"'qi!(`r)6Vq*/=rUk$Y.V<a_l0fP\%9N!b0SVee_8d1
g>(H=hr+Lm8DrCJfA'I/!"02E'GLcX#UMj:J6uSr@oQN<ATMd1H$=IUJVAo=Q'n59TV.gGTVA?^X/`>-
Yct4-VkgDlZ)a3f6=PD!N/IT7',*<iQY`G;c-"G]da#qR_o'@0]aMQc]=>>Y[^ENP\$l:D!j]/=rNZp>
['[0IZ*fon6<nJTH?]>g3"ds(TP_@4qZ$Tkn(Zs_g>(Q@eBQ4X^Uq"b\@B,\\$iNFV5'WSU8"Q^Z*0ps
TU^3e-U_'DBkI8C(g'W@6(!^BF-2rsVQ7&.Y-5CP_T:*Rf@LD^f@8@'g"kKBi8<Jli<S8rgu.#Igc,34
0F8:-'a+dF+?QEKG@,B2@:X"YA7TCqH@LR)NKoctR@TqCURdsJTVJ?_WiiP.YG_As$a-J5ZaQ6=87m.%
Jc5Wd&MTKRMQ=b?cI(%heB,eO`PTI*^:Ce_\,Nc8[/IE5[/dW5ZN@G<Zi7<>ZF$sDad$I,>AS:trW"ne
/W7/uaPu(ToBuJFqs`LpdET_M^:h1k]",8W\[f2YYHak!St;XLW2Ql%US=?PNHS#K79!i-quA'DP:fb4
Y)Sg=OI;,tXgYmXa3)cVe'uq!g"Fs-f@\m6i8EMNiSb=)hVI#GhVdA$2?Np["qV5J'G:Kj4f=?k@:WnT
?t!DWC3"l[MiO!dR@0S8SXuONS=H1CUSOumZ*:=0V5:&eYH"b2[BHK_>@Vf0"pP&>0pfM@XN8T.d*U7g
aMu*5^qdXs]"5D][^NTNrjW*?[C*?Irj!?H['[-FYHY=;Z*UBV:KLtD#6k/;/r7>#R`G6us8MrokjIEU
ai)$/]!o/Y\@K,X[(*WR[]HR)U7\$PUTgi-['?s>YG%SKC-tX"C]"/H<m4?@OHY3RNfKp+X1lQqc-Xnh
ec+,*f@em/f%AX2h>?+Ngtg]=hV@&Iio"nq!!*69$P!7Y1S(+e?t!2C@V&,HItNN7NKB9eQBml.StM^K
TUM@BTVSB`WNE8"UR[jIU8b<$X08n@[%;SH>Q=m,%Od7EZ)>.UbL"S^b/;*5_8!au]XbV`\GWc>\$rfR
[Bm4=ZmE2j[^ENGYHb@=Z*M0/D+I;#"98fUJ$ZT!jT#8UoB+<@a25U*#JIa\]XkS][f3`T]",8WXK8+h
SXlLIYdCmI['Hj>T:qmDJ6t`7qu@Kmfp5?MF*s(:VSL'gb0A8ZdaQXnf@TuR"k;)Tg"kK`h^%(8gY(63
g"YBBh;I;Oa[-:6!"B_N)Bss.Qt9fDJ;/c4MN*YqNs:]0Pa%N)S2-\,SXu:>TVA<YWMcPgSXPe0S=cOS
Y,J(nZELj=RZ%@W!Xp)j\%/c]b/D<>`P]O._#D)1]tCtg\@B#V\@9&[[^EKM[C<WT\@f2UYH=UtWMZJh
XfS\'LNs"0!"'NX[(+WUlHdGh`PB:(^;%Itrk&QL\$i`T\$rfRWroAqTUc"M&ZDbG^:h1q]!],a\[&Q@
VMKNq!"9Upe7s`3^W4@7bK\<2c2c2id5'2%f@SU*f[e[0gtplCgY1?5e'?=fe'?Lue^)k(h;bM!+V5"`
&2]E7T72EFM2I1MNW"nQOcl#rR@'D/Q^4&.Pa@l0TU_^IU7rWqS!]\9T;eZbVl$H!XL5OKYQOt,"Y"`+
[DBVtrkgn9_nj1)^q[Ur]t1eb\[K&X\@fG`\@/r\_n<Xo]<noJYc"=pVQ$SuXKJb.V$7#%"=A3%[aWOE
_nWt!]D]GV]tM"e\@K/^]tM%h]""lGTV.\ORKfdl]t:ti\I-!]]=GDU[&^4-W;HW$*n/`P^Ve4<bko[?
d*U7ke^W*sdF$FndaZt'gtC6&eC<("dF6Onf@/7!f%Js:iSrn''GMcdLTm>EOcKEr!K30@OX60SPa.T$
R$O)&OcGH_M2@F[V51;tXfJ+fR[BM2UnFBSTr"fh%Bd.MY71pU3HLt)[Cj0N_>q=L^](rV]t:qf]=PYf
^;%A%a25X/`lucG^UL\VYH+^uTV%jMUSXc`XK/*'$5,43Og_R2_oKj=_77(i]tCtf]"#8]\[];c^qRUb
YbIkXQBI>qQD^Xp^r41.b0%iF^:Ch`YckM7!"8iBH.UfrbK%WBbL4f;cu.7Ze'umre'udkbg+JRaj/;[
b/D'?db3=#cH=;T`5KX;dFZq&hr3:*MmL[D_ORK[MM[7LOd1rgOHGZgOH5?[OHYojM1^8.JW,GYU9Cc"
XdbiEOGf*[QCOM2RA-CMUTCh&Djmi6YdUpQ]*cBk_SEk$^V@Ls^&G_f]Y1th]t_D%^V\"3bg"ASa2>O%
YH=^sQ^OJ;S=Z@Jrh:%*<,@DVTV/g#a2l9<_7R+g^:sT[2nm)F`50+"^;\49W2cD`Pa7JqQ'SGN`Pp<U
m,ugGh:KW__S`si!Yf%Ci8E2A`l?*BbL"ebcN);jd!F$_b0%uVd*KeL]qhX0\%BMq`lZHTd)NW!Vj=*i
\uE*Zbf7TPhncV)Yee;?ViZstNK9-bQ'RVnP)P'SKTMFcP_t!IM2m^eS@#`>^V%(RWKNBuKS>&>OG8^]
R$O8@X/qn\QF4-2[(<i_^V7Iq]=bek]t_D"`dY\9]"Q&%]"#r*aNW)`f@SEo[^EB0M1U>/Od(9IS",:t
USOZPN/F3s^Tk\o`P]L+]Xt_e_S*k1^<!prXg>CAV5'KIQ'@,_L5(VIS=RQoSX-FYb0Zo`eCL=s]XZ%6
A6[d7bMCCcaihuTdaHUlbL"DLcc+5Zf[\0SUi2g2[C!EJZa@*P_V<n`E'uWS5CSGN9W>*mH-Y$"G^4tK
^mM*cP)YKbOck`RL5:nJMjTQeOH5-HK7o#DOeJ>P[(sJd[\T^\P)P<XMij-^Oe&,9T<##6@UEiE\$r]T
]=u%o^:h:t^qd\!^UjEZ$c0m(^r+(3aNVfVeUH*#aiM<4YFq5JOH#[!NKBd&QC=SEDdcdZP+0"d^;.Y&
]tV1re&fYI`l,@$\@ArZ[BH[5S"Gt5NK/gNM2@^o_Q9iAaMH`j\AQ\@\AYqe(^C0PJ&g$pd*Kn[d*L(_
]#D_6aN;uXdF$=^]!/TS^;%Ct\@];^XJs+^]4-J0C340ZUhG%e]99;JfQ`+3N3U6tU6h.,OHl#jKmJQ7
PDbBgMiE^]Pa\&:Un=0ZWP6-hai;B*Z'Lf?Pa7H$SX>qDV5'ilX(-'lEi$"GZFIHV]Xk\e^V7M!]u.^t
_u@Ul_S<n-bfRoMbLYA&h9X]n_S*Fd['6j;XT#7!W-GDCA8cF'NhE\c]Y;;"^;%M,cc*W/]Y:PYWMuJY
Q'RPtQ^NquL4t20NeWdaZ`_'Y_oBL+`5&pp]XtGU#Se<pGMq90da?:`dEg(TYfG#:c-=qdbK7N&V5U`9
^;7CoZE^R8^p_5,dDX&MbfA#Ub0JSge(!4]gSM?iNg.D[V3RAGO)U)6ItW<!Nei(>K8PMMPa\&:V4*jO
W4KRX_oBQqY*GE=S!oh8S=uXNUo^N%XHKK[G(I!*Za[BU]">Pf_8=.1^W+@6_SF(-`5BL6ai26BbKnMa
eCN!c`4NOdZ`p^=XK/D$VlQf!XH96DCj)7rZ*D*Z_SjC4aO&#Pb.YR,[BcU*S=Gq4Ocl*!NfJdGJ:N?,
OHZrR_7RIq^V@Fo]tCb_Y-D*<PSkj^h;$?'bf\,M`k94']?\R3b-eCZ[^NHGYdV'OYct"%TV/ZlZFe6!
c-t%ed*L1idaQt&i7k?EaIeU+W2l5RR?N_]NfoH`Nf]6dPFe5BWjfIS_T0QfTW50/_9C-MbdtK\Ulq%5
U77[DS!p"NVm*4sYHs(8Yd1RB[C<WR\[f>fXe`\H]Z%b)ajSPef\4lo^r47?cIUS#f$)O[`l#R3]tV:k
\@8fMZE^j+Un3$WPH_7*]=bu!`k]F"Tpi4uVPBNJO,]!SKnP#/R%';$KS9;QBSVA5R'*N[Q_9kMXgPO?
Z(deFj4ZI;U#"SPeC)Uaaj/,UM/L5YZ+R]IY-PRCYGnP7]XYALVk'BRSZ/p9`QZ`OeC2h"g==m5gu6tj
]#;On_5XQ*TqId:PFS55Nf8jdPFnGKX11j6_na:5TV/Nna2c]ZdE]D;W2QAZUSjo`Vl$>lYHG=?UTUf*
VmE_8[C3TT\%&oT\>Pb.\AH8#ai`#\f$r0s_o'X>f@Ss=f$hXRrjE$@]XYAXZaB\:,I+PHWM#ZDSuo*,
[^Nib^p^bRSWL%MVja*=P`1NVMi<UbS5k`8L5(2-LPh=_S"$=RR$s\@VP^W#YHOXmRcND<LY^hFe(NC&
cHb%mfl^*$fu(t\a2Ym+\\,Vibfn&F[^N<?\@]r4gt^Z<e_8j7hqm/Gi8<PPJ,~>

%%EndBinary
grestore
np
38.2169 401.883 mo
84.7169 401.883 li
84.7169 437.883 li
38.2169 437.883 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf8.59679 449.461 mo(\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\003)[6.672 6.672 2.664 3.99591 3.32391 3.99591 6.672 2.664 6.672 2.664 6.672 6.672 0 ]xsh87.3769 492.471 mo
101.078 492.343 li
0 1 1 0 cmyk
@
101.101 494.82 mo
107.885 492.279 li
101.055 489.865 li
cp
ef
0 lj
10 ml
101.101 494.82 mo
107.885 492.279 li
101.055 489.865 li
cp
@
1 lj
8 ml
277.229 420.471 mo
290.931 420.343 li
.735531 .0832532 1 .00570687 cmyk
@
290.954 422.82 mo
297.738 420.279 li
290.908 417.865 li
cp
ef
0 lj
10 ml
290.954 422.82 mo
297.738 420.279 li
290.907 417.865 li
cp
@
1 lj
8 ml
277.229 492.471 mo
290.931 492.343 li
0 1 1 0 cmyk
@
290.954 494.82 mo
297.738 492.279 li
290.908 489.865 li
cp
ef
0 lj
10 ml
290.954 494.82 mo
297.738 492.279 li
290.907 489.865 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (UAAAAA+TimesNewRomanPS-BoldItalicMT)%%Title: (UAAAAA+TimesNewRomanPS-BoldItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /UAAAAA+TimesNewRomanPS-BoldItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-547 -307 1401 1032} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2535 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 18 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD75DB9092FB01BBE833F55BB0B9375D47E84581C0C7E888E7865A7> |72 <001C60D8A8C9B77FE2CE91319F7D338D756C1E9B4908A37DB9D8BC76A8097B4ECE0530880DEDEBEB2EC13B2E74DD427D38D23345FEC35CDE01D62199655DAA6BD6A323BD5F32D058572DF5EB3EA71008324501D61DC8CE0A53A0EE5C67394CAC9A78CAB8B35A9D875A6ACBC5404DB8C5B2F78D37F38AD7EABFB1AB97A2F213DD4FD756803DB6C18BB232400BB7AE962F6F11192C6DD72C9B60BC5694F8FF9A002955889A3629AD58672BA314D85E3CE9F54BC9999F3BA9D124FC72E205E5FAA01734AC76F87554BA68AFFB75DF82> |79 <001C60D8A8C9B854D0F48AC14852E2CF1910AC81A620A2C0DA3328F546EDF35DD8FCF13358686EA79EDA7B75F04BF601D594B11657C9B91E769E086DF53F63E4EFF862F48ADAE860CABD6B13E859F2C2D581081F9B3B034A1A1FA67D4E027F9F1A9A5C534DB31C2E9D5D7CF21929D30D7A39E7656A4098B51AAC02486DCF9C> |80 <001C60D8A8C9B6FF86F56B6F6A8819927D9EC95056EEFDEECC4B201F7F999100DFF2430C2A6A1C91E0936397BD21286EC255567A870F3FF088B50EFBB591A7CB969874F0E64AF7B0AD0C58617CF2D00F4949A907A7D94D770E5E3E64F76B532FCE7B9B0B3E759B216A38218457C08B021DFF6031789310047A46F9FA5ECCF952DA9C480D900B11E1A1A8CE6BE15890AC040370E56A20704CFBDBFAE7B4408BBA0A93788A62109AEF414C535BFC3F3674636D8359576AEDAEFDC959F0F094FA75EE8AE2CA4FBC1919D65BD91C5089FCFBD065EF0C3C404C76D0B1912236352BFBEA4FFED1DCFBDFA3202432D5CA9417D48CBBA1B4C1AC43FB3C928FA79DE283A2DABEC9FF0B8BC9586D2ADFB4A5290A06BA6AB8D823E99F0E75AC74300BC383DD39DD6910D0307B72632D2C5F1E074BA1B616B1F933EEB3390EDB9883713EB57B98D4D10005783AAAF105F348E8F4814A8763A59606B9> |81 <001C60D8A8C9B7EF322B9315A4E49A96AB59DB6A87F7F24222F8240F6C59AB41150E10E339C43E0A5B8A9EC307571C60C9016585ED9DAA4B4FA337B142A46DE655DB96A9064C9A96C4E137E7B5E160004CE8AB60A9B50F2D2803749FD223E554CA916FCE486E838D1939A80F70372D353397F323980C654AC1748EF3714C4F6D5D67F55F945755F55B9ED166B66EC440052CF78C451FCF7C2722B1B22C384A9C787EA392975367C1D7ADAC72E019B8CE832ACE1380D18885D83CDEE8A4BBAD5FB8D1BF73E4956F09D6C9BB469DB1CB2A95C8837571B4D547DE3620FC6F77C78C> |87 <001C60D8A8C9B854D0F4912531593B457F49714B7E6BF362C20FC3D705C477367FA4BFB097913D8DD4EEB62AE7703EBE5B7A7340241FDE43CF7418825F8A12BFDFC3ACD3DAF8223B7399BE963AD2C76B9A3FB9B58F2D50DFC8AD3E1D300CED744CEC3E86667F9DEA919071C85F10CFC7242047C59A0C32E53077A0D764BFFA> |16 <001C60D8A8C9B81F2C5CD1ABB4081B730E7D2FF636EAE784> |90 <001C60D8A8C9B64EDFFB54122476F59242924376B51DFEFAABDDB28CF5B1E98B6FAF576556287B0804DCC96C5811430A27F132FA5AEC7C5EA30D244B91E36AEEBDF20EBBC1B808A096CB1301CB2D6EDF1108DBE92F41B853227BEDC68DDF537CEE67C75A6752B40BBB613B3C2B934E5EA77B037B59FAEE9D3E5188E8A254F1B3F8890BF44EBE42415CB51464397F57D3A81F2E4E2E2722175D9EFC7AC7CFA29B4ABD8ECACEE5992BD0AEBC9B0870EB61D109140F5A7F7FC2FC> |76 <001C60D8A8C9B854D0F4771F7E8F7EDEC16B72A6AA71F380D97FED60E02EDA3B51F939532F9801CF91AF478DE92B79D440F5376609D3B961685D8D7730A05452EE8FF20E40FFF41679D4A76A6DBFA09A0669142E885A9F5927479EB4BA3710EDDDFCF4316A5B48ABD359A85750AFA480865E520B20D7475E0665678F5EF7A55636046D100FE984A70C11B8FC1E7C18D2F0DE6FB416632007F17C86DAB776FD84B5F522D512D9D812AD42561C145DDBC3661E42BEA711E4880B69D0> |86 <001C60D8A8C9B7361F0244D2BBE2A47ED6931DF3A05D5A2C924B299EDC049167486E666DFB6053A66F5A708226A083EE8AC5900FD251B234E429441383151BD4159F480C04F3D3F4454A4DD26AA8AE40059EDE33BBFF27D1350A1853319D5AED8C69F074A4D5778FDBCC99B8B988EA76364B58074ECE73FB865321715C58D17C8F158650088FBE2721C86F468B8DA8B53DA36DE5037AD5BE48EDDE66AA61703935781F6CEBF55E7CCFD6D0215655820789866B4BA762B8DC609EA28293EB15B2550B653437E8A882B28F097909A1A7BE61E7ADD93C0AD89CA720D5A71629BFA35F89BFB2F5E86302E6> |3 <001C60D8A8C9B8707C25> |83 <001C60D8A8C9B7A73DF441C2C3D9A5C5C889BBD67819FB73D4373A2D634708E6D079BF71092D2250F9F180E7CE7E1AA6ACC58120C8AAF9119D1FBADF46B0EA796B5643E9314DDD2342398DC19C2FA0C7A73EA1369C318E731A79FC679A8E5FC35D43BB520FE149D6A6D28F08AB123019CFF142972524EACD4A4BAB05130346E22B1C95AF4417C30066CB5B84C27C095597EB916C1A29DCE1A3F11CBF93C307BF137B8C62515C698B92AACD3F9B729E2477E324DFA7F59A3FDDD9BB073FFDFA677632E71A0776251E86FB5D94C8D2BC047BC70BA9C7DE07B7AC4F8DDD974AD63FFD9A6403818CEC0029114DC6AB5E85ADB893> |85 <001C60D8A8C9B7361F02C23B46795D72653910CD93921A6FDD9CDDEAADC972AB982CC5D8D3B5FE867CBBEEFC619F5A1C2B4A972B9FED9EE648F895E4E074EC08EC6F22DFFDDDA4FA3BEB19639C658B27FC38CEB153BE4CD37CCB1259210F03A26F252BB05ACC7AD073E089DF5280B37883152B560576F11E3FF437ECA5369FBCC569CCCDE1E70144D40303ECACDE46325D1661B257361B9E51262D3B37B2E3A6E5> |82 <001C60D8A8C9B7A73DB9493E0605A6881E452811158A2196BE76120448A2BEDC4B2339F3FD440A77B3F57B63E2B44EEA2EE6C247E4674EEC42156DEB11FCC0C9EB475D341FF955D26CB247D2CBAF28B4A29AAA44ABD44B659889F45441E202D9DF71857D851DBD7AEE7F5F1B6756C6D6C4E4E9DE09D8AB388123B63998909DD105FA4881E69CEC6B6BD8E159E57E88BA1196EEF4FC378261E371E995F61647A0C5B83D98D6F43BECF281809872E04D58FFE190751EB0> |71 <001C60D8A8C9B7A73DB625092869E652A05A3995BB65D7FD0E11F891CDBD96064C425378832630AC84777B3F005698B3495ECB213256B9146DBA665ACFA3AB6C3DAC820289A04213784A780ECE6B97DC8F5760D31AC090A2AEB7C6DA40414BBB96E0D54740A3594BA26DEEA0030D803F7A2DD8FF03A48AC0B730757D5D278DA7F0B42D2FCB404447A334FC7CACBC725BCC45FFF2093993AD68C743340CB50AB68DEB2A797FD25BE407D1C50716E1A49E6D5CF2EB12BEAAF971F0EEBAB37C27AA2889E84E35C7EDE981B49781616DB2F8D6E3809FE0E00F427DE93250D0162A728501349B2DF64E1D8B4044E58C3B547D9BE90173AE2C786A4EE89B17082B7D5BC0A38E7F7607E55E8426E701A044FAC9952AA6> |88 <001C60D8A8C9B7EF322B88F691AC5309AE7BF355D9914237A10CBE825B041660F2E00F1D6F6449E9C4D37B33D82782E56A2061AF3F4B99728F4300045677A667C6B44D067D4BBE518ACD173193A4B730D7E0A186CB80A1F5693C25BFD074EA62C423D918DC4B92BBD1197B331986A8207C4A37FA765AF66694265A4C20F14A2DFC23E19580E6396EBBFCEABF7F3940D96F73AA0CF53898108F7D38E903E24C35CB2243AC608B6BBBC21DD600D7BD34DD026E693995D5CA52C4DEE7090FB81D504C09663A5A6C0266A634ADF70DA362EA346EF398A0EC39EFCF> |70 <001C60D8A8C9B77FE2CED904FC261ECC92B9EA7DEF85444D2E29F94E540BAE3FB87F81A475B5435230F1068D2C12B3DEECBF90266CD13C8342952E4F0E3BCBF36CDE5BC90A3D35D3C480C70541A966F2AE2F8D1942208FE7E1A1375A1A4067D7BC6EE56E145F36B983E93D5AE6C4EC94A41DBF9DD28BD461271CD036A2227857D547DC17775BF852D2048E9332B43010C27BACE89561692FE7C0175DA368973F9B67BC6841CEA15C030499196CE8990040301DA4ABFCC31B205268680B4EE47614> |89 <001C60D8A8C9B77FE2CEC7A69EECAC1233E1817FB9E2249A7E3F5D4D3C37DEEEB93A6B6C708F82C92FBE1DCF955F666DE0B7F1BE312E4B0472158D04405A8000D9612BE5260C70DDC4EB9365B339DEF99EDB1D4642B83DE2F6FB03B0672C6D26DDF134ABCE7F3CBEFA35BCDBB518C2C6BBDAFA3E82E00549E0E6DD6113FBF899485729AFBADF64E72D3ADF9D86F55868C207911AA67120B5BD516918E01F9DBE5640951F6EF3> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H /Identity-H 0 [/UAAAAA+TimesNewRomanPS-BoldItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBUZ+TimesNewRomanPS-BoldItalicMT /UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H findfont ct_VMDictPutTCTBUZ+TimesNewRomanPS-BoldItalicMT [10 0 0 -10 0 0 ]msf209.222 450.354 mo(\000H\000O\000H\000P\000H\000Q\000W\000\020\000Z\000L\000V\000H\000\003)[4.42993 2.76993 4.42993 7.76993 4.42993 5.56 2.76993 3.32994 6.66 2.76993 3.89006 4.42993 0 ]xsh220.043 462.354 mo(\000S\000U\000R\000G\000X\000F\000W)[5 3.89008 5 5.00002 5.56 4.42992 0 ]xsh%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (VAAAAA+TimesNewRomanPS-BoldMT)%%Title: (VAAAAA+TimesNewRomanPS-BoldMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /VAAAAA+TimesNewRomanPS-BoldMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-558 -307 2000 1026} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3416 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 3 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |11 <001C60D8A8C9B81F2C3AB57AB194F4783E7EF4F7F496E46883007B2A25484D7BF68B081B28F5DB84B2C80700F68B2197F4D5CDE8072954A020DE0D3E3CB207940EF85417B418A5B02AD6D1C3844667EA2970DE7A684C392F5B21> |12 <001C60D8A8C9B81F2C3ADC97069E12CE0DE37CDD25CB66FAD03CBE544A231EDF24E1BA640B8D926E8D777032E3B9409EC63880C3259694808B94C1D41F805DA76250378D90AB113EE8D71F0E2FC8ACB9947680B1A1D4CA4C7E> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /VAAAAA+TimesNewRomanPS-BoldMT-Identity-H /Identity-H 0 [/VAAAAA+TimesNewRomanPS-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBVA+TimesNewRomanPS-BoldMT /VAAAAA+TimesNewRomanPS-BoldMT-Identity-H findfont ct_VMDictPutTCTBVA+TimesNewRomanPS-BoldMT [10 0 0 -10 0 0 ]msf206.444 474.354 mo(\000\013)shTCTBUZ+TimesNewRomanPS-BoldItalicMT [10 0 0 -10 0 0 ]msf209.773 474.354 mo(\000Q\000H\000X\000U\000R\000Q\000\020\000O\000H\000Y\000H\000O)[5.56 4.42993 5.56 3.89008 5 5.56 3.32993 2.76993 4.42993 4.42993 4.42993 0 ]xshTCTBVA+TimesNewRomanPS-BoldMT [10 0 0 -10 0 0 ]msf261.97 474.354 mo(\000\014)sh303.671 395.74 mo
311.443 395.74 li
311.443 450.945 li
303.671 450.945 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
.75 lw
1 lj
8 ml
303.671 395.74 mo
311.442 395.74 li
311.442 450.945 li
303.671 450.945 li
cp
.750271 .679713 .654902 .901945 cmyk
@
303.671 467.74 mo
311.443 467.74 li
311.443 522.945 li
303.671 522.945 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
303.671 467.74 mo
311.442 467.74 li
311.442 522.945 li
303.671 522.945 li
cp
.750271 .679713 .654902 .901945 cmyk
@
1.5 lw
319.229 420.471 mo
332.931 420.343 li
.735531 .0832532 1 .00570687 cmyk
@
332.954 422.82 mo
339.738 420.279 li
332.908 417.865 li
cp
ef
0 lj
10 ml
332.954 422.82 mo
339.738 420.279 li
332.907 417.865 li
cp
@
1 lj
8 ml
319.229 492.471 mo
332.931 492.343 li
0 1 1 0 cmyk
@
332.954 494.82 mo
339.738 492.279 li
332.908 489.865 li
cp
ef
0 lj
10 ml
332.954 494.82 mo
339.738 492.279 li
332.907 489.865 li
cp
@
1 lj
8 ml
411.107 420.927 mo
483.249 420.402 li
.735531 .0832532 1 .00570687 cmyk
@
483.267 422.88 mo
490.056 420.353 li
483.231 417.925 li
cp
ef
0 lj
10 ml
483.267 422.88 mo
490.056 420.353 li
483.231 417.925 li
cp
@
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf497.898 492.528 mo(\000V\000R\000I\000W\000P\000D\000[\000\003\000O\000R\000V\000V\000\003)[6 6.672 3.32391 3.32391 9.99591 6.672 6 3.32391 2.664 6.672 6 6 0 ]xsh507.569 506.778 mo(\000\013\000H\000S\000L\000\020\000W\000H\000V\000W\000\014)[3.99591 6.672 6.672 2.664 3.99591 3.32391 6.672 6 3.32391 0 ]xsh1 lj
8 ml
411.107 493.834 mo
483.249 493.309 li
0 1 1 0 cmyk
@
483.267 495.786 mo
490.056 493.259 li
483.231 490.831 li
cp
ef
0 lj
10 ml
483.267 495.786 mo
490.056 493.259 li
483.231 490.831 li
cp
@
.75 lw
1 lj
8 ml
[3 2.25 ] 0 dsh
-25.4781 323.79 mo
75.4589 323.79 li
75.4589 352.16 li
-25.4781 352.16 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [9 0 0 -9 0 0 ]msf9.17182 336.115 mo(\0007\000U\000D\000L\000Q\000L\000Q\000J\000\003\000S\000K\000D\000V\000H)[5.49001 2.99693 5.004 1.998 5.004 1.998 5.004 5.00399 2.49294 5.004 5.004 5.004 4.5 0 ]xsh-3.52349 346.615 mo(\000\003\000\003\000\003\000\003\000\003\0007\000H\000V\000W\000\003\000S\000K\000D\000V\000H)[2.49294 2.49294 2.49294 2.49294 2.49293 5.49001 5.004 4.5 2.49294 2.49294 5.004 5.00399 5.004 4.5 0 ]xsh1.5 lw
[] 0 dsh
-16.6081 332.895 mo
-2.90689 332.767 li
.735531 .0832532 1 .00570687 cmyk
@
-2.88369 335.244 mo
3.89996 332.703 li
-2.93009 330.289 li
cp
ef
0 lj
10 ml
-2.88369 335.244 mo
3.89996 332.703 li
-2.93009 330.289 li
cp
@
1 lj
8 ml
-16.6081 343.817 mo
-2.90689 343.689 li
0 1 1 0 cmyk
@
-2.88369 346.166 mo
3.89996 343.625 li
-2.93009 341.211 li
cp
ef
0 lj
10 ml
-2.88369 346.166 mo
3.89996 343.625 li
-2.93009 341.211 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 2 GetGlyphDirectory70 <001C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |92 <001C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf600.176 488.183 mo(\000D\000F\000F\000X\000U\000D\000F\000\\)[6.672 6 6 6.672 3.99591 6.672 6 0 ]xsh600.513 502.433 mo(\000\013\000H\000S\000L\000\020\000W\000H\000V\000W\000\014)[3.99591 6.672 6.672 2.664 3.99591 3.32391 6.672 6 3.32391 0 ]xsh1 lj
8 ml
570.126 491.173 mo
582.363 491.023 li
0 1 1 0 cmyk
@
582.393 493.501 mo
589.169 490.94 li
582.333 488.546 li
cp
ef
0 lj
10 ml
582.393 493.501 mo
589.169 490.94 li
582.332 488.546 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: WAAAAA+Arial-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (WAAAAA+Arial-BoldMT)%%Title: (WAAAAA+Arial-BoldMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /WAAAAA+Arial-BoldMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-628 -376 2000 1018} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3417 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 5 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |80 <001C60D8A8C9B59F85D96BFFA227AFC88923A0D1805E73B422C61096C748C37D1E540D36A22F2B6BC6A899BC0DDFB70F833AC344264273BAAFC893B1FC9ED217D777A23EE663B8B086E0514F75141042C5D3D73DD911F2D1CAF8A5CBE36BAF59E972B9B495DB672C658FCC56CEAEBD4AEC19A01E1468C48C0E75D0E664717269A1A74C27B1C65DA4B01A0679EBF4AA6549A7814A2C66FB097D4B1C6FCCF629A056E668289EBF7379F0E89EA139501E> |72 <001C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC3550E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA94524E4E0809AB2B25573430347DD> |87 <001C60D8A8C9B81F2C3AD0BF8CA40D7105A9B3D27345F202DEBDE44606EFD0E90137AE13DC9D19FB7B4ABCA40FDADEB59FF02A690A47D6F26E8BDAADCFC0513C14FCD80BF39C6AFCEFE1132622D45FBB576E32F86682C5BCCAD00B4E7E375350009EFCA5AC835906F56B697B29> |68 <001C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B629FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D443463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB683778C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C920ECC30772CD6DD1CCCB84D330E3FAA> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /WAAAAA+Arial-BoldMT-Identity-H /Identity-H 0 [/WAAAAA+Arial-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBVB+Arial-BoldMT /WAAAAA+Arial-BoldMT-Identity-H findfont ct_VMDictPutTCTBVB+Arial-BoldMT [10 0 0 -10 0 0 ]msf394.445 562.082 mo(\000P\000H\000W\000D)[8.89005 5.56 3.32996 0 ]xsh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 4 GetGlyphDirectory71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |69 <001C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |78 <001C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |17 <001C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [10 0 0 -10 0 0 ]msf417.78 562.082 mo(\000\003\000J\000U\000D\000G\000L\000H\000Q\000W\000\003\000E\000D\000F\000N\000\020\000S\000U\000R\000S\000\021\000\003\000\013\000R\000Q\000F\000H\000\014)[2.76993 5.56 3.32993 5.56 5.56 2.22 5.56 5.56 2.76993 2.76993 5.56 5.56 5 5 3.32993 5.56 3.32993 5.56 5.56 2.76993 2.76993 3.32993 5.56 5.56 5 5.56 0 ]xsh1 lj
8 ml
307.557 395.74 mo
307.557 321.024 li
494.927 321.024 li
.735531 .0832532 1 .00570687 cmyk
@
494.927 323.501 mo
501.734 321.024 li
494.927 318.546 li
cp
ef
0 lj
10 ml
494.927 323.501 mo
501.734 321.024 li
494.927 318.546 li
cp
@
503.93 291.34 mo
565.749 291.34 li
565.749 350.725 li
503.93 350.725 li
cp
.189548 .0392462 .00231937 0 cmyk
ef
.75 lw
1 lj
8 ml
503.93 291.34 mo
565.749 291.34 li
565.749 350.725 li
503.93 350.725 li
cp
.750271 .679713 .654902 .901945 cmyk
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory39 <001C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |92 <001C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BAF02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DBF9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A71BC990F312D4821883A95164BCE1683B85434AFA8> |!endend end
%ADOEndSubsetFont
TCTBUW+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf511.179 311.178 mo(\000'\000L\000I\000I\000L\000F\000X\000O\000W\000\\\000\003)[8.66397 3.32391 3.99591 3.99591 3.32391 5.31592 6 3.32391 3.32391 6 0 ]xsh513.183 325.428 mo(\000S\000U\000H)sh528.495 325.428 mo(\000G\000L\000F\000W\000R\000U)[6 3.32391 5.31592 3.32391 6 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf530.559 339.678 mo(\002\031)sh%ADOBeginSubsetFont: XAAAAA+Arial-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (XAAAAA+Arial-ItalicMT)%%Title: (XAAAAA+Arial-ItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /XAAAAA+Arial-ItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-517 -325 1359 998} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2552 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |182 <001C60D8A8C9B88C08726342C1522465F6AB6934C58066C912A4B5A14C06FE109968B6981FB0AFB82C6407E8AF49B827> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /XAAAAA+Arial-ItalicMT-Identity-H /Identity-H 0 [/XAAAAA+Arial-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/TCTBVC+Arial-ItalicMT /XAAAAA+Arial-ItalicMT-Identity-H findfont ct_VMDictPutTCTBVC+Arial-ItalicMT [12 0 0 -12 0 0 ]msf536.454 339.678 mo(\000\266)sh1.5 lw
565.749 321.033 mo
580.111 320.96 li
.735531 .0832532 1 .00570687 cmyk
@
580.124 323.438 mo
586.918 320.926 li
580.099 318.482 li
cp
ef
0 lj
10 ml
580.124 323.437 mo
586.918 320.925 li
580.099 318.482 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 2 GetGlyphDirectory47 <001C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |21 <001C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [12 0 0 -12 0 0 ]msf605.149 422.823 mo(\000/\000\025\000\003\000O\000R\000V\000V)[6.672 6.672 3.32391 2.664 6.672 6 0 ]xsh1 lj
8 ml
624.185 474.791 mo
624.166 441.602 li
0 1 1 0 cmyk
@
626.644 441.601 mo
624.163 434.795 li
621.689 441.604 li
cp
ef
0 lj
10 ml
626.644 441.601 mo
624.162 434.795 li
621.689 441.604 li
cp
@
1 lj
8 ml
[6 4.5 ] 0 dsh
656.982 418.428 mo
675.732 418.428 li
675.732 272.59 li
534.833 272.59 li
534.833 282.341 li
@
532.355 282.341 mo
534.833 289.148 li
537.311 282.341 li
cp
ef
0 lj
10 ml
[] 0 dsh
532.355 282.341 mo
534.833 289.148 li
537.31 282.341 li
cp
@
1 lj
8 ml
[6 4.5 ] 0 dsh
656.982 418.428 mo
675.734 418.428 li
675.734 589.723 li
192.715 589.723 li
192.715 529.026 li
@
195.192 529.026 mo
192.715 522.219 li
190.237 529.026 li
cp
ef
0 lj
10 ml
[] 0 dsh
195.192 529.026 mo
192.715 522.219 li
190.237 529.026 li
cp
@
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: XAAAAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/XAAAAA+Arial-ItalicMT 17 GetGlyphDirectory53 <001C60D8A8C9B6079F6289E4FB616574B85DB34D3661D0AF579BEE163007634803F6CFD5CCB737C43FA305FAB5E9BE5E6B66B0724BCAD78829B28760BDD98EB12B7CC2E75D6337C5ED008EB1E288210A9D4A6FE0D3D9559F0DA87CC9A95D3BBD0EC73E0A9799C9BD7FAC7810AB389833F5838121BAB4EF5F099D0913B853CAB0AD7FDA5654B8D6013426E3B10FDB9866A34D5CB8B8E9D67C40AF5C30B02CB8B8FC1685C83DD274FBFB34> |72 <001C60D8A8C9B7EF322BFA1D840EFD3699BF97ECD2331F442555D0FD2C6CE33DCBE8371D3F092D4656CD5E21B1C983278F39140A332AF65A43F4B0CE5CF8D10ADFD32782C3A37DDF6CB69C7051AC36CAB8ED1E9D98AFA88E152E715336E997EAB89B1E4215F7D54359F8614793CB7B6145E905E00D0F076BCDE0B42A7A664676585EF2561D2C80D6F16DA76B1B3B2F433A3F41939AEC6DCC8F187D8A8076FA1569D1AB2953CAD867CFE20160AD6F335ECC> |74 <001C60D8A8C9B7EF3279B988A832F5484DC519C0ED715C2154E3BA530BDB738F0EE128FB987BF03BF8C67E82218E93E3FA17B8612B8A86A7EB65533EA607ABA7C8E27E3E46D5990A2AB0852CBCC11A7B85C025059905E524E81E8EC65C65E382933788E18B48358C1C7F6A36AFD08464ECA4FFC77C93881095A2E208505376B6029A7D612C6CC514678474A482A80D7C122CAB45EC0E12F874BDD8D33A28EF5E8CE687A24D4782AC3783FD2F20C7EB20BC916C439546E7F2EABE211C7C7E003E3D4CF9D2B1DF8E4AF57657E829E87B9E5416B9F7C725C06403169D28A1D64E51555123A033AFF4108CC624B46E856FD49DD59DBFE9DE3D7E3B9DE400> |88 <001C60D8A8C9B7EF322474A3FF2252F8D4E7B8F3A17464B056D3596A30858BE0AAC1FDA682D8F4123E912883DE59CFE3BAC9264B6889F8BE310F125B939050B0551E424964CE907343BCAD6FB65FFC33ADA6E5E8020AC72D3FB9018F181C424525E28468BF07B2156CCC6BBD5717088EDB73> |79 <001C60D8A8C9B88C087201A3A4037FE2433C2D197C1932074E1B> |68 <001C60D8A8C9B7EF32246D06B518BA4ACD5E2F5CE92BF7E283045A6D96E8CFB0FEA52B488A698D810ABDC3FDF8913508690996A9753D0E68C237D49060B14BF13C72F11025F71CD98E412DD72630CE12274384CAF60E6672FEE3DB4C05451BB1F11E9537D6E11AEEF863437FAAD8D7D9B27BF25AF2AA7C1E5FE178F507F3FB5C2A1B81B8A8BBE388250F940D0460822669BDB4183A291FEA65813C7FAF5EFE3C66D4AE7221A08F96419F4B2AE6EDA929DF3B3065279707077151FABC9D3ADD870AE6863DD5B21F955293E44D86C22BC6E7D9812BB55E780EF52E8EC84E6C1CC0B08B0B0F939125796F0326EF4445F89EB731EC0CF70696449DD1ADF4> |85 <001C60D8A8C9B81F2C3AB15E9B1A3F7E462DAF39226795265E23E094264A095A1B326FF064CE4168686F59C54569385F95255E59B1D4932AE066C9496D01B90FFE83B47D05F58EDAA5> |76 <001C60D8A8C9B88C08728B0370662B41BF7360BFB368B19277E353234DFA12683E94C5380F6C591694> |93 <001C60D8A8C9B7A73DB6F0B69891B0C2D37A19A2708A1881BDE245F8045A16DEEDFFF8BE8D58665EEF79F47D3F797354D583D640022DD506DE3119D01143096B42C00D5D19B179F4A6> |87 <001C60D8A8C9B854D0F47C238C0374D9401BE88F4E827DBF6ACD1493D301555AE9FDB97705B5DEB246C70D14D40A9195312074E63C52F6E3D89F7577AB6EB9D86C962D4AACF9757FAC6B7871A41A5812D02B983576BB62D7A8BC6D6B98DD8559487E3FB838CA3E0A199191> |82 <001C60D8A8C9B7EF320A9ABFEA5FF1C78F5840B7A5064DC8C7E41B0BBE4836C650C07B0E95CD1630A250459B821DDE69AD2AAA346BDE8670C6D478E1AD407847DA3569019FF7CD08F616AD35AD641B4CF5788A4211E6B6BF63EE7DA33B57DC4ECD3E8B6248858113BBA29F6AECE1A9288EF0C7897BB4DAE32705CDB5F650C4344FD2288FFF670C7800BC673569236E671E22EA3E2EB886D5A6BF6938C7EFCF6AD8D21ECB9E63DE5E72A0DF3DEBC27B9C026A2A36> |81 <001C60D8A8C9B7EF322B18A8E8B2674776BB317260D07AACFA3465481E4FB74827D3CE3327555DA6E18282782364AA872DF1DAFBF311A6BE634EE2284E4AEFFF0DADB39A4096DF4A18C5E17D77FC063C67E26BBA6B806187FFFD8DE25F2D58D002AEF2E409C1A7D172CB3CD1> |15 <001C60D8A8C9B854D0F43307827575E3EB3C15D1273185FD28E124271ECF3D5C9F36F7DB936B8A052EA3EC41ADC7> |3 <001C60D8A8C9B854D00D> |86 <001C60D8A8C9B7A73DBF501F5488FDBD4A20EF6D7B0506483C2B880D9827035485646843C9D459AE9CB8D1BBD974889E6F89F2D43D89F327D894D864B1BFA5AB890D16098D93759AFB3CA432904A4865393C68EE760D6EBDF0A6F29C5D9765B45C6CB22C66996E91DD921F7292E259ABFB6A982338F25D286D28A8990FBB123263F9C6EECFEC70EFF44E9EDC10ED0720F2476C4461C9BB9EE4E441F51AC84A1D9D4FF1983E0181C07DB489AADBC8B35A6747E61D103ACF8A6C8CBA20FE14406BA91F13E4D8F3CBD8B7409F7F58C0A1B26D> |73 <001C60D8A8C9B854D0F424EFEF878FA7653EDE8F351276501515153085717EC5B3FF6C4CCAF9B67B2ECDCCF20BD564E1B4A9970B29DF0576B8AD7F17018A6FCBD37F82EE418A1995E338D8A70BAA5BE87614F48B4A1692C05F0C3651CDBB> |34 <001C60D8A8C9B7EF322BACE218B4D0F06E594C6A2801E69C4B8DFE5411E8B3BFF9D988BC83F7C8D03DE8FCD114F046DF78B6278F95DEDDF7877B6E9FCFA026784EDE1BA397F45191F632024F6598A1AEA375A455921C231966DD568FD0258D420A00836EBD039DB154AF28CF0F5FFE1279284C7905884B7322CE4E45872D03DA0E44590DAE0E98C2A0E1C39DE234D577FBFD8B7F6FC36C75D8FE9EA19E0E> |!endend end
%ADOEndSubsetFont
TCTBVC+Arial-ItalicMT [12 0 0 -12 0 0 ]msf358.255 602.722 mo(\0005\000H\000J\000X\000O\000D\000U\000L\000]\000D\000W\000L\000R\000Q\000\017\000\003\000X\000V\000H\000I\000X\000O\000"\000"\000")[8.664 6.672 6.672 6.672 2.664 6.672 3.99591 2.664 6 6.672 3.32391 2.664 6.672 6.672 3.32391 3.32391 6.672 6 6.672 3.32391 6.672 2.664 6.672 6.672 0 ]xshTCTBVB+Arial-BoldMT [10 0 0 -10 0 0 ]msf529.754 601.081 mo(\000P\000H\000W\000D)[8.89001 5.56 3.32996 0 ]xshTCTBUX+ArialMT [10 0 0 -10 0 0 ]msf553.089 601.081 mo(\000\003\000J\000U\000D\000G\000L\000H\000Q\000W\000\003\000E\000D\000F\000N\000\020\000S\000U\000R\000S\000\021\000\003\000\013\000R\000Q\000F\000H\000\014)[2.76996 5.56 3.3299 5.56 5.56 2.22003 5.56 5.56 2.7699 2.76996 5.56 5.56 5 5 3.3299 5.56 3.32996 5.56 5.56 2.7699 2.76996 3.3299 5.56 5.56006 4.99994 5.56 0 ]xsh317.974 313.789 mo(\000\013\000R\000Q\000O\000\\\000\003\000L\000Q\000\003\000W\000K\000H\000\003\000O\000D\000V\000W\000\003\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\003\000H\000S\000R\000F\000K\000\014)[3.32993 5.56 5.56 2.22 5 2.76993 2.22 5.56 2.76993 2.76993 5.56 5.56 2.76993 2.22 5.56 5 2.76993 2.76993 5.56 5.56 2.22 3.32993 2.76993 3.32996 5.56 2.21997 5.56 2.22 5.56 5.56 2.76993 5.56 5.56 5.56 5.00003 5.56 0 ]xshgsave
237.055 11.7953 mo
181.95 11.7953 li
181.95 3.34446 li
175.236 3.34446 li
175.236 0 li
237.055 0 li
237.055 11.7953 li
clp
175.236 0 mo
237.055 0 li
237.055 11.7953 li
175.236 11.7953 li
cp
0 0 0 0 cmyk
f
grestore
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf184.62 8.83945 mo(\000P\000H\000W\000D\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J)[6.21594 3.54395 2.21594 3.54395 2.66394 2.21594 2.66394 3.54395 2.21594 4 2.21594 4 0 ]xsh108.956 51.8149 mo
92.0012 51.8149 li
92.0021 51.0628 li
108.956 51.0456 li
108.956 51.8149 li
92.0012 51.8149 mo
0 51.8149 li
0 51.1565 li
92.0021 51.0628 li
92.0012 51.8149 li
0 50.4064 mo
0 17.2796 li
92.0443 17.2796 li
92.0031 50.3128 li
0 50.4064 li
92.0031 50.3128 mo
92.0443 17.2796 li
108.956 17.2796 li
108.956 50.2955 li
92.0031 50.3128 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory62 <001C60D8A8C9B854D0F4A9CC5FDA760B15DDAEB4EC9E19B4B41AFD95C6BA37FE8A> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf1.77672 37.3523 mo(\0007\000U\000D\000Q\000V\000I\000H\000U\000\003\000/\000H\000D\000U\000Q\000L\000Q\000J\000\003\000>)[4.88 2.66394 4.448 4.448 4 2.21594 4.448 2.66394 2.21594 4.448 4.448 4.448 2.66394 4.448 1.776 4.448 4.44799 2.21594 0 ]xsh.788296 0 1 0 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 2 GetGlyphDirectory22 <001C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |20 <001C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf69.3006 37.3523 mo(\000\026\000\024)[4.448 0 ]xsh.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory64 <001C60D8A8C9B854D0F45A7DCAA08E9F696D25732122263BE011EFF56C1115332A> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf78.1903 37.3523 mo(\000@)sh0 83.7818 mo
0 51.996 li
92.001 51.996 li
91.9614 83.6882 li
0 83.7818 li
91.9614 83.6882 mo
92.001 51.996 li
93.8752 51.996 li
93.8752 83.6863 li
91.9614 83.6882 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf1.7905 70.9231 mo(\0000\000H\000W\000D\000\020\000/\000H\000D\000U\000Q\000L\000Q\000J\000\003\000>)[6.66394 4.448 2.21594 4.448 2.66394 4.448 4.448 4.448 2.66394 4.448 1.776 4.448 4.448 2.21594 0 ]xsh.788296 0 1 0 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory26 <001C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55546101EE3> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf57.767 70.9231 mo(\000\032)sh.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf62.2119 70.9231 mo(\000@)sh236.791 21.8642 mo
304.61 21.8642 li
304.61 45.5098 li
236.791 45.5098 li
cp
.122957 .167697 0 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 4 GetGlyphDirectory78 <001C60D8A8C9B7A73DB907772911B7C2CEAC1D2074B2642ADEDFBA1679ED254D30D2D9A5BDAE41A6A7C0D78C5D75E9522858A70EEA458FC30CFDA879F9C1CE85600A63BE4554ACA119AD822CC5727738E5E5FAC782F5B6F69100B3F9A42C95FB8AA53FD907276C4A477291A36A9FD6B1870ACEAFC297FB6D4CC1F0091BA09524439681D5D4A76F017EDD23AA69786F58BFB619D5D45A35621B583AF1C763E994CD0C086A44F5E2750B3F3193B4E6E5A27940B47B22FB55ED113A092C7013A98E096292640D2EA9CE95DF810761FDAF86F75648F6AFC27AA39909F96AF13446AC99> |21 <001C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11EC41D90433CE0F55F0A42A96AF852FD50FA> |20 <001C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |14 <001C60D8A8C9B7E7C1AF20108BE9542537F46D63CC3CA2839958A1F5DF80C8F650E8951850C571859AA14DD682> |!endend end
%ADOEndSubsetFont
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf262.93 30.117 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf275.804 33.117 mo(\000\025)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf250.464 41.367 mo(\000P\000R\000G\000H\000O)[6.21593 4 4 3.54395 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf270.44 44.367 mo(\000\024)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf273.106 41.367 mo(\000\003\000\016\000\003)[2 4.50403 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 2 GetGlyphDirectory41 <001C60D8A8C9B7D8BE19D38CCF292DFC046A81C46904D6DBA45C92F5D70D3F6EE199C42E4A4C9B3B0D87C6E3C2EDE67CD75D9ACE82154AD3064B8072C730BD5E33CCE728F682C21B15C05744AD9C71CFA42728B71E17CDFE99F456763B119BA3FA610548CF33938B2F236B852C1938DD05A18BA75E2CBAAEE0B3BF3055B956ECB1A81C46282785CBAC883541E9D58F06378B9B39109988D498391B51FF826B82A0206DB5AB25618DD21E217BBB77AE2DD83767DEE5C5D18C6FD1A87CA361B11F32974B> |55 <001C60D8A8C9B7EF323B043F7356D787F22DD5A27FFA2879B142D44CA92E81ACF7A975B0E45B81B44C53ED72199A1209DEC52D9515733C0E6C89D066C927ACEB3656C4FB019EF01B90F9D679F1D15A9D6304D98B7C01DDB7292A5060DFD76D203F0196DC3CFB7A1EE816A5CD53976C6ED6843E9C8EFEB0518A2899C5367D0814F7971EC4C722C4F59C> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf281.61 41.367 mo(\000\)\0007)[4.88 0 ]xsh165.589 71.6001 mo
147.585 71.6001 li
147.585 55.0604 li
144.049 55.0604 li
144.049 51.0098 li
174.994 50.9783 li
174.994 55.0602 li
165.589 55.0602 li
165.589 71.6001 li
144.049 50.2598 mo
144.049 46.378 li
174.994 46.378 li
174.994 50.2283 li
144.049 50.2598 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [14 0 0 -14 0 0 ]msf150.799 66.5681 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]xsh97.7184 55.0604 mo
147.585 55.0604 li
147.585 78.7059 li
97.7184 78.7059 li
97.7184 55.0604 li
.19266 .0410468 .0860609 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf114.881 63.3132 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf127.756 66.3132 mo(\000\024)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf111.33 74.5632 mo(\000P\000R\000G\000H\000O)[6.21594 4.00001 3.99999 3.54395 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf131.307 77.5632 mo(\000\024)sh165.589 55.0602 mo
225.306 55.0602 li
225.306 78.7059 li
165.589 78.7059 li
165.589 55.0602 li
.19266 .0410468 .0860609 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf187.232 63.3131 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory49 <001C60D8A8C9B64EDFF4DA474F415D5DD537FAA93C37EEC62FDC4A039CA573DD652A21E9CE136A62765D8121CCC1F8B6C69DF6675E56D02777F89248A7E9F8174321009C99A7EB5A01D10C6E86BF0A4F9A0D56B508A1E855C0FF0A6C58B1C77BA71F42A09686FC0B9D9347A0229AAC02E9F435CD8098A9D1CEA8AEE9A656F4D80C818AD8E6F22D6A0A48B5693B6D4404BEB011866D75A098B62476C7952178AF8113D66FC324EF6F1393F40514FE> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf200.106 66.3131 mo(\0001)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf183.681 74.5631 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf203.658 77.5631 mo(\0001)sh236.791 55.0609 mo
304.609 55.0609 li
304.609 78.7067 li
236.791 78.7067 li
236.791 55.0609 li
.122957 .167697 0 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf259.648 63.3139 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf272.522 66.3139 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf276.079 66.3139 mo(\000\016\000\024)[3.00269 0 ]xshTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf256.097 74.5639 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf276.074 77.5639 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf279.63 77.5639 mo(\000\016\000\024)[3.00269 0 ]xsh100.176 151.185 mo
91.8772 151.185 li
91.9579 86.5315 li
100.176 86.5315 li
100.176 106.934 li
97.4534 106.934 li
97.4534 130.58 li
100.176 130.58 li
100.176 151.185 li
91.8772 151.185 mo
0 151.185 li
0 86.5315 li
91.9579 86.5315 li
91.8772 151.185 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: WAAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/WAAAAA+Arial-BoldMT 15 GetGlyphDirectory48 <001C60D8A8C9B6B41CBB10CBFB014CB2DAA60D1E6213C9A6221D8277F76E5B198F877B8BD7F16B9ED33B8CC69F5CB1810DCABD4C90C49E0AA0E1EE> |16 <001C60D8A8C9B81F2C3A6131F04EDA09D4A0094DA9D5AC81D0> |55 <001C60D8A8C9B7D8BE19809EC35BBBBC4A9DCDD5AC6ABFFD5901D001A83F8CD3372E99> |85 <001C60D8A8C9B7361F02EEC91E54B85D1C77E667FE2BCF3D09A421FBF63CB630EA2A0B7B19FFD8078B4DB5A7731C633809BCAB3FF296D65B89F29DE6B6DB35AA635F12FEC0F1664A8FB613C79352FA72> |81 <001C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC31FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78CB8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC6AFD11F003818163793142F6A0F46BD84EFADF> |86 <001C60D8A8C9B7EF322FE651D521834CDC537E3DD6EDE0ABF561677B8E076DDC9728066ABB56D1B743872DFE7AE020F0764CE3958A51AA0338BC1551D98AE3FB37FA10E152AF1ED0A626D6C892D666067C463296034FB47068E23F64D99406EC5C2C17229C4A63CE0EFA8720ACDB7F7406ADA1BC78971EA6415F061291692781A355051246F6EE6DC9DD910EE9B57ECB7AA0A970570176A3D15D1E3F2012D47AFFA014792503A125E8700D4C4B9A85575792648D6CE60E59BBF3015C0285B0> |73 <001C60D8A8C9B81F2C5A71D50B9B0701F5A31E22DDFBF554FF2D149AB14DDEFC1B9ADBD8105EC88497FBC09B03794C95967111EB4354C8578F0E042075107F9743D9A4F26007EA81109EB5443BB577E4EC9F8677529403BA64E3F5> |3 <001C60D8A8C9B854D00D> |47 <001C60D8A8C9B7D8BE1956BCE10252E2B5E44265236D2FAF854B3B3BF8> |76 <001C60D8A8C9B854D0F456B21D2F64F910BA7B8B592C84A4B1CA21D58F6678BEC800D8864E53D53A> |74 <001C60D8A8C9B7D8BE2780ECF91BB8FE73517B0190DDC8DBC9897295332E6D8EF13268DE217D7EA63F2C2488BA6624154001DFCD86A24A51CFE6922F8614F4FD4481342B3992244B419F0D448BA14CBCD530939FD538BD00615A031E3CBF1609B0E4C3D7F5A051C575D052C1A51F88B318CA9D0C7CFDFA53AA8FB2F2EE274EE2F4C85657CA9E748262BB03EF446591D320994414EE439D72B9883F38366A41CF501DCE32006C591422CCF439307E4D3088D90FF7CD2955301C96A46D1D1545AF9D499025D541CB2077BD42919F91257F222D868E80527F0D65> |11 <001C60D8A8C9B81F2C3A38FE2380A125A3D62A2B0F4BC8C0A2696756F8DA43B0889958C87C94E22D1A3213B46963E9329DE74757B6B3A525736D1B5EF52A1F5DA4AB3530EF8C585FE2B823D2C3202FD1D141> |82 <001C60D8A8C9B7D8BE34A30C11766266259B98A0BA89715D82F7092153A6228252D7594BDD75B2A7C57DC89088F8B1FFC43993725AE434A67B356F5F6B64D528A1696640F00DD016EBC232B8C863EA85B4B724E805002B9447A61792050E5F2AB51B8800BF6303526C74FB360B7027D54FFCEDAF13BF8EA7CB1A81691C0A4FB25E1EA64C0904433C6A5F35BBF9DD5C4CBFC1A5> |88 <001C60D8A8C9B7D8BE193D97D4CEC9E264886B4FEB6039471A932F20C88E939BABF490859EEC52AD38B7ED294F8DF2A47649EF77BF43349A736D065D0A253D952638D54F7BA1B47314F68FC1495C51454777F8F9475426838BE461BAFE9BF3E443E03AAD9292AF57449A5275904AD9> |12 <001C60D8A8C9B81F2C3AAF50C85EC663E0CCB811D457CFC013664AB412D10018FBA420C16D8F84D8F6E7BA7121948DF6CD1C73671ADC1920E6D6FF996F7B703AB39EFF7B605E03487B46179AEA4BBEE9CF34960D70C11D2E> |!endend end
%ADOEndSubsetFont
TCTBVB+Arial-BoldMT [8 0 0 -8 0 0 ]msf1.7846 116.788 mo(\0000\000H\000W\000D\000\020\0007\000U\000D\000Q\000V\000I\000H\000U\000\003\000/\000H\000D\000U\000Q\000L\000Q\000J)[6.66394 4.448 2.66394 4.448 2.66394 4.88 3.11206 4.448 4.88 4.448 2.66394 4.448 3.11206 2.21594 4.88 4.44799 4.448 3.11206 4.88 2.21594 4.88 0 ]xsh1.7846 126.538 mo(\000\013\000R\000X\000U\000V\000\014)[2.66394 4.88 4.88 3.11206 4.448 0 ]xsh165.043 88.3621 mo
226.862 88.3621 li
226.862 112.008 li
165.043 112.008 li
165.043 88.3621 li
.19266 .0410468 .0860609 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [0 14 14 0 0 0 ]msf195.526 111.921 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]ysh97.4534 106.934 mo
147.319 106.934 li
147.319 130.58 li
97.4534 130.58 li
97.4534 106.934 li
.631617 .211429 .291203 .00112917 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf115.949 115.187 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xsh112.398 126.437 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xsh132.54 21.8314 mo
182.407 21.8314 li
182.407 45.477 li
132.54 45.477 li
cp
.631617 .211429 .291203 .00112917 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf149.703 30.0842 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf162.578 33.0842 mo(\000\024)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf146.152 41.3342 mo(\000P\000R\000G\000H\000O)[6.21594 4.00002 3.99998 3.54396 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf166.129 44.3342 mo(\000\024)sh-5.08326 154.287 mo
343.059 153.933 li
343.057 152.433 li
-5.08474 152.787 li
-5.08326 154.287 li
f
108.322 169.596 mo
193.952 169.596 li
193.952 183.037 li
108.322 183.037 li
108.322 169.596 li
.19266 .0410468 .0860609 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory78 <001C60D8A8C9B77FE2CE166EEA97B63D332993D624B3BA02A9E79BA32A171A9EA5DA046DD478938382FE27EB4DB4C6DEBFD32672E8D6C2AD487C26824D85C93FC73C61FFE277B70B5C4774AB85F864FF243713CFD923F00CACA232CC28FEF133DB82431602CEE4E497CBC45E484D15B0F54EFD224A38F129FE00890C4108600AB11B6A106B6DCF1D64492ABF3C69D54114DEF719DCDF6B0C803ECD535BE8224EC480A9AC22CEDDE2A0A42EDAA4F5960A90FAFFE666537CB1619596CA198F43DBF0B0707465ECF7E1FEF9E21445FD87EAE3> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf140.372 179.122 mo(\000N)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf143.919 179.122 mo(\000\003\000W\000D\000V\000N\000V)[2 2.21594 3.54395 3.11206 4 0 ]xsh87.52 185.142 mo
0 185.142 li
0 155.827 li
91.8714 155.827 li
91.8696 157.253 li
87.52 157.253 li
87.52 185.142 li
93.8712 157.253 mo
91.8696 157.253 li
91.8714 155.827 li
93.8712 155.827 li
93.8712 157.253 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory37 <001C60D8A8C9B64EDFF43B9E1D43B76E7425A98F23F483468D5596DA760F1554BAD296AA38A849FEE692D78BAC3B162E2013F61317550246D6F77AF27886D4E04AB44C473130F6FA990DAC6640A48EC2A80691207E5DDBCA7196686E7CD5C980FB78081AA13952C8D8F3373FF54323A4853D0F014ED4C5A1024912E545AAB4BA7F36D08386B7A08B38C3035C03383BB204897FB23E6B597B4E784900841F1858E5E1740AFA815171FE44AAE751E7961222B185E93D26B02E1EB5C1FF9174E0C619907BEEF9FED49CD2B96F29B7B01884> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf1.78657 173.289 mo(\0000\000H\000W\000D\000\020\000%\000D\000W\000F\000K\000\003\000>)[6.66394 4.448 2.21594 4.448 2.66394 5.328 4.448 2.21594 4 4.448 2.21594 0 ]xsh.788296 0 1 0 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf47.0938 173.289 mo(\000\032)sh.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf51.5387 173.289 mo(\000@)sh-5.08363 84.537 mo
343.058 84.1827 li
343.057 83.4327 li
-5.08437 83.787 li
-5.08363 84.537 li
f
-5.08363 51.1616 mo
343.058 50.8073 li
343.057 50.0573 li
-5.08437 50.4116 li
-5.08363 51.1616 li
f
-5.08326 17.1623 mo
343.059 16.808 li
343.057 15.3079 li
-5.08474 15.6623 li
-5.08326 17.1623 li
f
107.36 203.626 mo
192.99 203.626 li
192.99 238.161 li
107.36 238.161 li
107.36 203.626 li
.19266 .0410468 .0860609 0 cmyk
ef
107.05 238.956 mo
91.7676 238.956 li
91.7793 229.563 li
107.006 229.563 li
107.006 237.231 li
107.05 237.231 li
107.05 238.956 li
91.7676 238.956 mo
0 238.956 li
0 192.09 li
91.8261 192.09 li
91.8147 201.193 li
87.4103 201.193 li
87.4103 229.563 li
91.7793 229.563 li
91.7676 238.956 li
101.103 201.193 mo
91.8147 201.193 li
91.8261 192.09 li
101.103 192.09 li
101.103 201.193 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: WAAAAA+Arial-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/WAAAAA+Arial-BoldMT 6 GetGlyphDirectory43 <001C60D8A8C9B6079F62C490F8B363FF19A3781C29D5570EF5D5A716BB35758C02EF9D91F0CEA78D1860E5A66A118D> |71 <001C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B70A6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F47763954952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319DD7A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8A9705A6EC736D21DD4607DF3> |78 <001C60D8A8C9B7EF322B75AAFD4DB9E7AD574572B7D2556469383B3D4CBB5184BAC1997D5B0A13D1B495BE0C6B6EE29F273838B3F19F49> |37 <001C60D8A8C9B6079F41181ADFF82FD511AE28F2C86910E87A2408036CAE220A294923EA0E343A2E6A98A318DE85DC7C76B01F1EC3BBDAB8243406F64AA60EC47C4740DC38CA972359346DC4F829F6F2F025BAF490F6C12F4FDEE6E00BC02718C2A815AF9445D30C8E56633A71FE0D0177EB4631ACBF3247225C96DE555742F231ACF12ABFAF7923DBF44FBF12BDB4408FA2F2BAEBD8E7E077E25AB5122D52C15E7FE3C32CA90E2552D23E0B4ABA9EE9903B7FFBC9DA58DB417DC8D58F11CC4F5D7250D4EBACD68EE666FFFB942A580FB288> |70 <001C60D8A8C9B7EF32242001ABD2AFBBD336641D8D7284783472C96CFCC434DFC100FC24422711A9090DEA4D32109037578992AFF27835B7F260887A799CBA44C497ED942D76A3A4BD63536DE6F757481EB22D2DEF055F331ED9622202739AC583596554B76ADC212E19C7FBCE810B4022B5DAB3AF3C114AF2730DCBE9D35CB6B42E872730D77BAB> |75 <001C60D8A8C9B7D8BE30E20DCA6EE6AB6CC3B52F6392A45738EC6E57C5FD4B5006DD4CC13130165A71E6C8AD32848FD70F464465300BAF67B8EDC5E52749AF8D970E7EFFDCC8EF63F6AB31364E59004A6FCF5A143C0BB48A0AC6C4FDED1312DDD5BAEDEFE14256E656A094680FE5979938> |!endend end
%ADOEndSubsetFont
TCTBVB+Arial-BoldMT [8 0 0 -8 0 0 ]msf1.78426 213.453 mo(\000+\000D\000U\000G\000\003\0007\000D\000V\000N\000\003\0000\000H\000W\000D\000\020\000%\000D\000W\000F\000K)[5.776 4.448 3.11206 4.88 2.21594 4.88 4.448 4.448 4.448 2.21594 6.66394 4.448 2.66394 4.448 2.66394 5.776 4.448 2.66394 4.448 0 ]xsh1.78426 223.203 mo(\000\013\000R\000X\000U\000V\000\014)[2.66394 4.88 4.88 3.11206 4.448 0 ]xsh307 230.414 mo
289.545 230.414 li
289.545 218.41 li
302.494 218.41 li
302.494 204.969 li
289.545 204.969 li
289.545 203.626 li
282.876 203.626 li
282.876 202.044 li
307 202.044 li
307 230.414 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [14 0 0 -14 0 0 ]msf289.052 222.234 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]xsh201.557 218.41 mo
192.99 218.41 li
192.99 204.969 li
203.915 204.969 li
201.557 204.969 li
201.557 218.41 li
0 0 0 0 cmyk
f
192.99 218.41 mo
166.576 218.41 li
165.281 216.494 li
165.223 216.409 165.134 216.351 165.032 216.334 cv
165.012 216.331 164.991 216.329 164.971 216.329 cv
164.89 216.329 164.81 216.355 164.744 216.405 cv
162.089 218.41 li
123.265 218.41 li
122.942 217.85 122.778 217.28 122.779 216.704 cv
122.779 216.605 122.739 216.509 122.669 216.439 cv
122.599 216.369 122.502 216.329 122.404 216.329 cv
120.266 216.329 li
120.167 216.329 120.071 216.369 120.001 216.439 cv
119.931 216.509 119.891 216.605 119.891 216.704 cv
119.891 217.294 120.028 217.864 120.283 218.41 cv
118.355 218.41 li
118.355 215.184 li
135.284 215.184 li
135.284 209.52 li
118.355 209.52 li
118.355 204.969 li
192.99 204.969 li
192.99 218.41 li
.19266 .0410468 .0860609 0 cmyk
f
135.284 215.184 mo
118.355 215.184 li
118.355 209.52 li
135.284 209.52 li
135.284 215.184 li
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory182 <001C60D8A8C9B81F2C3AD971C4FAA4E2D5BE4323B2FD7DA229E02ED9CF4FFDF4788DE3AE8C5E8CCD32FA31D18A1CB22BBFDE714F6809FD7CBC0A37FB76F43547DE7071991217E40FF53F2F98131800642B5FFA8A2953836C8AD64C607E3DEDA55393BFBD> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf111.753 215.08 mo(\000N)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf115.3 215.08 mo(\000\003\000W\000D\000V\000N\000V\000\003\000\003)[2 2.21594 3.54395 3.11206 3.99999 3.11206 2 0 ]xsh%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VAAAAA+TimesNewRomanPS-BoldMT 1 GetGlyphDirectory14 <001C60D8A8C9B7E1F88DC19C3D1A20B74FF91D187454B7707D01004D7BE790C7208C53D9E2DBEA8DE733232D3B> |!endend end
%ADOEndSubsetFont
TCTBVA+TimesNewRomanPS-BoldMT [9 0 0 -9 0 0 ]msf137.278 215.08 mo(\000\016)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf142.407 215.08 mo(\000\003\000\003)[2 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf146.403 215.08 mo(\000N\000\266)[3.54395 0 ]xshTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf152.612 215.08 mo(\000\003\000K\000D)sh162.156 215.08 mo(\000U\000G\000\003\000W)sh173.036 215.08 mo(\000D\000V\000N\000V)[3.54395 3.11206 4 0 ]xsh157.087 169.596 mo
118.465 169.596 li
118.465 166.26 li
131.687 166.26 li
131.687 160.444 li
118.465 160.444 li
118.465 157.253 li
101.929 157.253 li
101.929 156.646 li
141.776 156.646 li
141.776 163.855 li
157.087 163.855 li
157.087 169.596 li
0 0 0 0 cmyk
f
157.087 170.087 mo
118.465 170.087 li
118.465 169.596 li
157.087 169.596 li
157.087 170.087 li
.19266 .0410468 .0860609 0 cmyk
f
131.687 166.26 mo
118.465 166.26 li
118.465 160.444 li
131.687 160.444 li
131.687 166.26 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf108.679 166.172 mo(\000E\000D\000W\000F\000K\000\003\000L)[4.448 4.448 2.21594 4 4.44799 2.21594 0 ]xsh204.326 169.596 mo
289.956 169.596 li
289.956 183.037 li
204.326 183.037 li
204.326 169.596 li
.19266 .0410468 .0860609 0 cmyk
ef
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf236.376 179.122 mo(\000N)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf239.923 179.122 mo(\000\003\000W\000D\000V\000N\000V)[2 2.21594 3.54395 3.11206 4 0 ]xsh204.326 170.087 mo
197.929 170.087 li
197.929 163.855 li
205.199 163.855 li
205.199 166.26 li
235.871 166.26 li
235.871 163.855 li
250.272 163.855 li
250.272 156.646 li
253.086 156.646 li
253.086 169.596 li
204.326 169.596 li
204.326 170.087 li
0 0 0 0 cmyk
f
253.086 170.087 mo
204.326 170.087 li
204.326 169.596 li
253.086 169.596 li
253.086 170.087 li
.19266 .0410468 .0860609 0 cmyk
f
235.871 166.26 mo
205.199 166.26 li
205.199 163.855 li
235.871 163.855 li
235.871 166.26 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory14 <001C60D8A8C9B7F3748941D4B1C211C787F1DCE1076406E139A12F470B397B613EE7D27104427D3AF38200F99E7A> |!endend end
%ADOEndSubsetFont
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf204.679 166.172 mo(\000E\000D\000W\000F\000K\000\003\000L\000\016\000\024)[4.448 4.448 2.21594 4 4.448 2.21594 1.776 4.66394 0 ]xsh158.194 222.878 mo
160.657 221.843 162.519 220.559 163.522 219.048 cv
163.598 218.933 163.604 218.785 163.539 218.664 cv
163.481 218.557 163.374 218.485 163.255 218.47 cv
163.334 218.41 li
165.671 218.41 li
165.709 218.467 li
165.347 218.467 li
165.22 218.467 165.103 218.53 165.033 218.636 cv
163.962 220.278 161.513 221.78 158.194 222.878 cv
.19266 .0410468 .0860609 0 cmyk
f
165.671 218.41 mo
163.334 218.41 li
164.881 217.241 li
165.671 218.41 li
f
128.098 222.873 mo
127.646 222.723 127.211 222.565 126.793 222.402 cv
124.849 221.64 123.289 220.735 122.235 219.758 cv
121.761 219.317 121.391 218.867 121.127 218.41 cv
122.42 218.41 li
122.734 219.084 123.227 219.72 123.863 220.308 cv
124.909 221.274 126.348 222.136 128.098 222.873 cv
.385382 .220493 .247654 0 cmyk
f
122.42 218.41 mo
121.127 218.41 li
120.874 217.972 120.719 217.527 120.664 217.079 cv
122.047 217.079 li
122.092 217.536 122.22 217.981 122.42 218.41 cv
f
143.16 225.62 mo
147.963 225.527 152.411 224.83 155.977 223.691 cv
159.542 222.548 162.236 220.985 163.522 219.048 cv
163.598 218.933 163.604 218.785 163.539 218.664 cv
163.474 218.543 163.346 218.467 163.209 218.467 cv
162.14 218.467 li
162.14 218.842 li
162.366 219.141 li
164.881 217.241 li
165.709 218.467 li
165.347 218.467 li
165.22 218.467 165.103 218.53 165.033 218.636 cv
163.885 220.395 161.158 221.993 157.473 223.106 cv
153.79 224.224 149.163 224.881 144.221 224.88 cv
142.084 224.88 li
136.099 224.881 130.682 223.927 126.793 222.402 cv
124.849 221.64 123.289 220.735 122.235 219.758 cv
121.179 218.776 120.641 217.749 120.641 216.704 cv
120.266 216.704 li
120.266 217.079 li
122.404 217.079 li
122.404 216.704 li
122.029 216.704 li
122.029 218.021 122.712 219.243 123.863 220.308 cv
125.595 221.909 128.408 223.223 131.927 224.157 cv
135.446 225.089 139.673 225.63 144.221 225.63 cv
144.221 224.88 li
138.237 224.881 132.819 223.927 128.931 222.402 cv
126.987 221.64 125.427 220.735 124.373 219.758 cv
123.316 218.776 122.778 217.749 122.779 216.704 cv
122.779 216.605 122.739 216.509 122.669 216.439 cv
122.599 216.369 122.502 216.329 122.404 216.329 cv
120.266 216.329 li
120.167 216.329 120.071 216.369 120.001 216.439 cv
119.931 216.509 119.891 216.605 119.891 216.704 cv
119.891 218.021 120.574 219.243 121.726 220.308 cv
123.457 221.909 126.27 223.223 129.789 224.157 cv
133.308 225.089 137.535 225.63 142.084 225.63 cv
144.221 225.63 li
149.229 225.63 153.92 224.968 157.691 223.823 cv
161.46 222.673 164.321 221.064 165.66 219.048 cv
165.347 218.842 li
165.347 219.217 li
166.416 219.217 li
166.554 219.217 166.682 219.14 166.747 219.018 cv
166.812 218.895 166.804 218.747 166.726 218.632 cv
165.281 216.494 li
165.223 216.409 165.134 216.351 165.032 216.334 cv
164.93 216.317 164.827 216.343 164.744 216.405 cv
161.914 218.543 li
161.786 218.64 161.733 218.809 161.784 218.961 cv
161.835 219.114 161.979 219.217 162.14 219.217 cv
163.209 219.217 li
163.209 218.842 li
162.896 218.636 li
161.793 220.324 159.23 221.871 155.749 222.977 cv
152.27 224.088 147.884 224.779 143.145 224.87 cv
143.16 225.62 li
.750271 .679713 .654902 .901945 cmyk
f
186.733 203.626 mo
118.355 203.626 li
118.355 201.193 li
107.05 201.193 li
107.05 192.09 li
101.103 192.09 li
101.103 190.666 li
186.733 190.666 li
186.733 203.626 li
108.373 194.464 mo
108.373 200.279 li
130.861 200.279 li
130.861 194.464 li
108.373 194.464 li
0 0 0 0 cmyk
f
186.733 204.107 mo
118.355 204.107 li
118.355 203.626 li
186.733 203.626 li
186.733 204.107 li
.19266 .0410468 .0860609 0 cmyk
f
107.05 201.193 mo
101.103 201.193 li
101.103 192.09 li
107.05 192.09 li
107.05 201.193 li
0 0 0 0 cmyk
f
130.861 200.279 mo
108.373 200.279 li
108.373 194.464 li
130.861 194.464 li
130.861 200.279 li
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf107.853 200.191 mo(\000E\000D\000W\000F\000K\000\003\000L)[4.448 4.448 2.21594 4 4.448 2.21594 0 ]xsh203.915 204.107 mo
197.246 204.107 li
197.246 190.666 li
282.876 190.666 li
282.876 202.044 li
282.302 202.044 li
282.302 203.626 li
203.915 203.626 li
203.915 204.107 li
0 0 0 0 cmyk
f
282.876 203.626 mo
282.302 203.626 li
282.302 202.044 li
282.876 202.044 li
282.876 203.626 li
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf203.996 200.191 mo(\000E\000D\000W\000F\000K\000\003\000L\000\016\000\024)[4.448 4.448 2.21594 4 4.448 2.21594 1.776 4.66394 0 ]xsh-5.08326 244.931 mo
343.059 244.577 li
343.057 243.077 li
-5.08474 243.431 li
-5.08326 244.931 li
f
155.186 3.34446 mo
181.95 3.34446 li
181.95 11.8957 li
155.186 11.8957 li
155.186 3.34446 li
.19266 .0410468 .0860609 0 cmyk
ef
307 11.7962 mo
247.049 11.7962 li
247.049 0 li
307 0 li
307 11.7962 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf268.828 8.84031 mo(\000P\000H\000W\000D\000\020\000W\000H\000V\000W)[6.21594 3.54395 2.21594 3.54395 2.66394 2.21594 3.54395 3.11206 0 ]xsh237.134 3.3446 mo
263.897 3.3446 li
263.897 11.8958 li
237.134 11.8958 li
cp
.122957 .167697 0 0 cmyk
ef
147.079 119.067 mo
160.879 119.127 li
160.882 118.377 li
147.082 118.317 li
147.079 119.067 li
.750271 .679713 .654902 .901945 cmyk
f
160.88 118.752 mo
160.033 119.592 li
162.354 118.758 li
160.04 117.905 li
160.88 118.752 li
ef
160.88 118.752 mo
160.616 118.486 li
158.568 120.516 li
163.451 118.763 li
158.583 116.968 li
160.614 119.016 li
160.88 118.752 li
160.616 118.486 li
160.88 118.752 li
161.147 118.488 li
160.307 117.641 li
160.04 117.905 li
159.911 118.257 li
161.258 118.753 li
159.906 119.239 li
160.033 119.592 li
160.297 119.858 li
161.411 118.754 li
161.147 118.488 li
160.88 118.752 li
f
-5.08363 188.137 mo
343.058 187.783 li
343.057 187.033 li
-5.08437 187.387 li
-5.08363 188.137 li
f
118.465 185.623 mo
91.8342 185.623 li
91.8348 185.142 li
93.8712 185.142 li
93.8712 157.253 li
101.929 157.253 li
101.929 170.087 li
108.322 170.087 li
108.322 183.037 li
118.465 183.037 li
118.465 185.623 li
91.8342 185.623 mo
87.52 185.623 li
87.52 185.142 li
91.8348 185.142 li
91.8342 185.623 li
0 0 0 0 cmyk
f
118.465 183.037 mo
108.322 183.037 li
108.322 170.087 li
118.465 170.087 li
118.465 183.037 li
.19266 .0410468 .0860609 0 cmyk
f
93.8712 185.142 mo
91.8348 185.142 li
91.8696 157.253 li
93.8712 157.253 li
93.8712 185.142 li
91.8348 185.142 mo
87.52 185.142 li
87.52 157.253 li
91.8696 157.253 li
91.8348 185.142 li
0 0 0 0 cmyk
f
108.322 170.087 mo
101.929 170.087 li
101.929 157.253 li
118.465 157.253 li
118.465 160.444 li
109.199 160.444 li
109.199 166.26 li
118.465 166.26 li
118.465 169.596 li
108.322 169.596 li
108.322 170.087 li
f
118.465 170.087 mo
108.322 170.087 li
108.322 169.596 li
118.465 169.596 li
118.465 170.087 li
.19266 .0410468 .0860609 0 cmyk
f
gsave
118.465 166.26 mo
109.199 166.26 li
109.199 160.444 li
118.465 160.444 li
118.465 166.26 li
clp
109.199 160.444 mo
118.465 160.444 li
118.465 166.26 li
109.199 166.26 li
cp
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf108.679 166.172 mo(\000E\000D\000W\000F\000K\000\003\000L)[4.448 4.448 2.21594 4 4.44799 2.21594 0 ]xshgrestore
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [14 0 0 -14 0 0 ]msf94.27 177.443 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]xsh107.36 223.79 mo
107.05 223.79 li
107.05 218.41 li
107.36 218.41 li
107.36 223.79 li
107.36 204.969 mo
107.05 204.969 li
107.05 204.107 li
107.36 204.107 li
107.36 204.969 li
0 0 0 0 cmyk
f
118.355 223.79 mo
107.36 223.79 li
107.36 218.41 li
118.355 218.41 li
118.355 223.79 li
118.355 204.969 mo
107.36 204.969 li
107.36 204.107 li
118.355 204.107 li
118.355 204.969 li
.19266 .0410468 .0860609 0 cmyk
f
107.006 229.563 mo
91.7793 229.563 li
91.8147 201.193 li
101.103 201.193 li
101.103 204.107 li
107.05 204.107 li
107.05 204.969 li
105.003 204.969 li
105.003 218.41 li
107.05 218.41 li
107.05 223.79 li
107.006 223.79 li
107.006 229.563 li
91.7793 229.563 mo
87.4103 229.563 li
87.4103 201.193 li
91.8147 201.193 li
91.7793 229.563 li
0 0 0 0 cmyk
f
107.36 218.41 mo
107.05 218.41 li
107.05 204.969 li
107.36 204.969 li
107.36 218.41 li
f
118.355 218.41 mo
107.36 218.41 li
107.36 204.969 li
118.355 204.969 li
118.355 209.52 li
115.655 209.52 li
111.832 209.52 li
111.832 215.168 li
115.3 215.168 li
115.3 215.184 li
118.355 215.184 li
118.355 218.41 li
.19266 .0410468 .0860609 0 cmyk
f
107.05 218.41 mo
105.003 218.41 li
105.003 204.969 li
107.05 204.969 li
107.05 218.41 li
0 0 0 0 cmyk
f
gsave
115.3 215.168 mo
111.832 215.168 li
111.832 209.52 li
115.655 209.52 li
115.3 209.52 li
115.3 215.168 li
clp
111.832 209.52 mo
115.655 209.52 li
115.655 215.168 li
111.832 215.168 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf111.753 215.08 mo(\000N)shgrestore
gsave
118.355 215.184 mo
115.3 215.184 li
115.3 215.168 li
115.655 215.168 li
115.655 209.52 li
118.355 209.52 li
118.355 215.184 li
clp
115.3 209.52 mo
118.355 209.52 li
118.355 215.184 li
115.3 215.184 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf115.3 215.08 mo(\000\003\000W\000D\000V\000N\000V\000\003\000\003)[2 2.21594 3.54395 3.11206 3.99999 3.11206 2 0 ]xshgrestore
gsave
115.655 215.168 mo
115.3 215.168 li
115.3 209.52 li
115.655 209.52 li
115.655 215.168 li
clp
115.3 209.52 mo
115.655 209.52 li
115.655 215.168 li
115.3 215.168 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf111.753 215.08 mo(\000N)shgsave
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf115.3 215.08 mo(\000\003\000W) false chp119.516 215.08 mo(\000D) false chp123.06 215.08 mo(\000V) false chp126.172 215.08 mo(\000N\000V) false chp133.284 215.08 mo(\000\003\000\003) false chpclp
115.3 209.52 mo
115.655 209.52 li
115.655 215.168 li
115.3 215.168 li
cp
f
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf111.753 215.08 mo(\000N)shgrestore
grestore
107.36 204.107 mo
107.05 204.107 li
107.05 201.193 li
118.355 201.193 li
118.355 203.626 li
107.36 203.626 li
107.36 204.107 li
f
118.355 204.107 mo
107.36 204.107 li
107.36 203.626 li
118.355 203.626 li
118.355 204.107 li
.19266 .0410468 .0860609 0 cmyk
f
107.05 204.107 mo
101.103 204.107 li
101.103 201.193 li
107.05 201.193 li
107.05 204.107 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [14 0 0 -14 0 0 ]msf94.1602 221.383 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]xsh203.915 203.626 mo
289.545 203.626 li
289.545 238.161 li
203.915 238.161 li
203.915 203.626 li
.19266 .0410468 .0860609 0 cmyk
ef
302.494 218.41 mo
289.545 218.41 li
289.545 204.969 li
302.494 204.969 li
302.494 218.41 li
0 0 0 0 cmyk
f
203.915 218.41 mo
201.557 218.41 li
201.557 204.969 li
203.915 204.969 li
203.915 218.41 li
f
289.545 218.41 mo
263.131 218.41 li
261.836 216.494 li
261.778 216.409 261.688 216.351 261.587 216.334 cv
261.566 216.331 261.546 216.329 261.525 216.329 cv
261.444 216.329 261.365 216.355 261.299 216.405 cv
258.644 218.41 li
219.82 218.41 li
219.497 217.85 219.333 217.28 219.333 216.704 cv
219.333 216.605 219.293 216.509 219.223 216.439 cv
219.154 216.369 219.057 216.329 218.958 216.329 cv
216.82 216.329 li
216.722 216.329 216.625 216.369 216.555 216.439 cv
216.486 216.509 216.445 216.605 216.445 216.704 cv
216.446 217.294 216.583 217.864 216.837 218.41 cv
203.915 218.41 li
203.915 204.969 li
289.545 204.969 li
289.545 218.41 li
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf208.307 215.08 mo(\000N)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf211.855 215.08 mo(\000\003\000W\000D\000V\000N\000V\000\003\000\003)[2 2.21594 3.54395 3.11206 4 3.11206 2 0 ]xshTCTBVA+TimesNewRomanPS-BoldMT [9 0 0 -9 0 0 ]msf233.833 215.08 mo(\000\016)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf238.962 215.08 mo(\000\003\000\003)[2 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf242.958 215.08 mo(\000N\000\266)[3.54395 0 ]xshTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf249.166 215.08 mo(\000\003\000K\000D)sh258.71 215.08 mo(\000U\000G\000\003\000W)sh269.59 215.08 mo(\000D\000V\000N\000V)[3.54395 3.11206 4 0 ]xsh254.749 222.878 mo
257.212 221.843 259.073 220.559 260.077 219.048 cv
260.152 218.933 260.159 218.785 260.094 218.664 cv
260.036 218.557 259.929 218.485 259.809 218.47 cv
259.888 218.41 li
262.226 218.41 li
262.264 218.467 li
261.901 218.467 li
261.775 218.467 261.658 218.53 261.588 218.636 cv
260.516 220.278 258.068 221.78 254.749 222.878 cv
.19266 .0410468 .0860609 0 cmyk
f
262.226 218.41 mo
259.888 218.41 li
261.436 217.241 li
262.226 218.41 li
f
224.653 222.873 mo
224.201 222.723 223.765 222.565 223.348 222.402 cv
221.404 221.64 219.844 220.735 218.79 219.758 cv
218.315 219.317 217.946 218.867 217.682 218.41 cv
218.975 218.41 li
219.289 219.084 219.782 219.72 220.418 220.308 cv
221.463 221.274 222.902 222.136 224.653 222.873 cv
.385382 .220493 .247654 0 cmyk
f
218.975 218.41 mo
217.682 218.41 li
217.429 217.972 217.274 217.527 217.219 217.079 cv
218.602 217.079 li
218.647 217.536 218.775 217.981 218.975 218.41 cv
f
239.715 225.62 mo
244.517 225.527 248.965 224.83 252.532 223.691 cv
256.096 222.548 258.791 220.985 260.077 219.048 cv
260.152 218.933 260.159 218.785 260.094 218.664 cv
260.028 218.543 259.901 218.467 259.764 218.467 cv
258.695 218.467 li
258.695 218.842 li
258.921 219.141 li
261.436 217.241 li
262.264 218.467 li
261.901 218.467 li
261.775 218.467 261.658 218.53 261.588 218.636 cv
260.44 220.395 257.713 221.993 254.028 223.106 cv
250.345 224.224 245.717 224.881 240.776 224.88 cv
238.638 224.88 li
232.654 224.881 227.236 223.927 223.348 222.402 cv
221.404 221.64 219.844 220.735 218.79 219.758 cv
217.733 218.776 217.195 217.749 217.195 216.704 cv
216.82 216.704 li
216.82 217.079 li
218.958 217.079 li
218.958 216.704 li
218.583 216.704 li
218.583 218.021 219.266 219.243 220.418 220.308 cv
222.15 221.909 224.962 223.223 228.482 224.157 cv
232.001 225.089 236.228 225.63 240.776 225.63 cv
240.776 224.88 li
234.792 224.881 229.374 223.927 225.485 222.402 cv
223.541 221.64 221.981 220.735 220.928 219.758 cv
219.871 218.776 219.333 217.749 219.333 216.704 cv
219.333 216.605 219.293 216.509 219.223 216.439 cv
219.154 216.369 219.057 216.329 218.958 216.329 cv
216.82 216.329 li
216.722 216.329 216.625 216.369 216.555 216.439 cv
216.486 216.509 216.445 216.605 216.445 216.704 cv
216.446 218.021 217.129 219.243 218.28 220.308 cv
220.012 221.909 222.825 223.223 226.344 224.157 cv
229.863 225.089 234.09 225.63 238.638 225.63 cv
240.776 225.63 li
245.784 225.63 250.475 224.968 254.246 223.823 cv
258.014 222.673 260.875 221.064 262.214 219.048 cv
261.901 218.842 li
261.901 219.217 li
262.97 219.217 li
263.109 219.217 263.236 219.14 263.301 219.018 cv
263.366 218.895 263.359 218.747 263.281 218.632 cv
261.836 216.494 li
261.778 216.409 261.688 216.351 261.587 216.334 cv
261.485 216.317 261.381 216.343 261.299 216.405 cv
258.469 218.543 li
258.34 218.64 258.288 218.809 258.339 218.961 cv
258.39 219.114 258.534 219.217 258.695 219.217 cv
259.764 219.217 li
259.764 218.842 li
259.45 218.636 li
258.348 220.324 255.785 221.871 252.304 222.977 cv
248.824 224.088 244.438 224.779 239.7 224.87 cv
239.715 225.62 li
.750271 .679713 .654902 .901945 cmyk
f
203.915 237.231 mo
202.451 237.231 li
202.451 223.79 li
203.915 223.79 li
203.915 237.231 li
0 0 0 0 cmyk
f
285.435 237.231 mo
203.915 237.231 li
203.915 223.79 li
225.06 223.79 li
225.477 223.918 225.905 224.041 226.344 224.157 cv
229.863 225.089 234.09 225.63 238.638 225.63 cv
240.776 225.63 li
245.784 225.63 250.475 224.968 254.246 223.823 cv
254.282 223.812 254.318 223.801 254.354 223.79 cv
285.435 223.79 li
285.435 237.231 li
239.7 224.87 mo
236.238 224.804 232.99 224.418 230.149 223.79 cv
249.26 223.79 li
246.401 224.421 243.144 224.804 239.7 224.87 cv
239.7 224.87 li
.19266 .0410468 .0860609 0 cmyk
f
240.776 225.63 mo
238.638 225.63 li
234.09 225.63 229.863 225.089 226.344 224.157 cv
225.905 224.041 225.477 223.918 225.06 223.79 cv
230.149 223.79 li
232.99 224.418 236.238 224.804 239.7 224.87 cv
239.7 224.87 li
243.144 224.804 246.401 224.421 249.26 223.79 cv
254.354 223.79 li
254.318 223.801 254.282 223.812 254.246 223.823 cv
250.475 224.968 245.784 225.63 240.776 225.63 cv
.750271 .679713 .654902 .901945 cmyk
f
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 12 GetGlyphDirectory82 <001C60D8A8C9B7A73DB6821681307BB58AF24E53259C166A4EBACA0E69F5B8B042F6E6706D71FE2C4006799F0D83733098F02E11647B564DF12A496B06EAD656E6D297AE5BF88AE7615ABAF60F522DC6D667D6E703D83FA4EACD5E655591C5F794B5601A90C6028B31DB06F3BFF28E5BAA1BCA504CD90A443D934E8ED98B1E48DB90AD3B6CC51A1E1FA2EC8D3518D7436B0D1C> |81 <001C60D8A8C9B7A73DF087C158A303AE922A1CFBE99458C02E528DF85BC6412E6FDD19DEE624C52F34F700473C3AF58CFD622B892B54F8D6362CC51D3848E5F8B6B32B7B11E5E94464027CCA3CF1614C8F48813802B308AF8EC8766137EB89CD5DD757628F33FCEA75D425A44D9BACEE2228E64D06D107FD7CF2CD26322E84A7ED288FE0F79BC1C309E227374927714BC56EB962BF48D51F35D6762D6E3752739DD5CCAA41E9D5E43DD7EF5CD51215167BF87390988E3AF0B364F3ACEB0FB5C2394968F3DBA5DCC32E43963EC56DCDE85C8CB04CD0FA96CC48CFDB5153D23F36F9AB24> |79 <001C60D8A8C9B854D0F428CB56497DB3751CBCE205181DF8576DE7D01F56E6658D50F3A55031CCFD90149657F347A7B8FBDA51BC713C50D2F7103D339A28E1EA0AB3CDF3E8F9F3065FE59E41F46C69A0F86CC9ACCBC34698A8315C973C638681FD1CB4E96CC4A31C9059B1294515AA76EDF0278C3082EAC668C9E35B588539A6BE> |76 <001C60D8A8C9B854D0F4620EF8AB3A43726CA9F1D5CA3F0AC21C46156AA7EAFD30B421C67072AD9E9673A39A0C73C611BF2D30694524FB9362DF4B7BF42BD403E13FE93BE1CC4B973BBB2F8A1766424F865950A3B4E0C2909B014DAC40D6C31A5A624961F141A00D5EA650DA557D976995CE1AB37642609DB19511A8C6A0216D711E915D0A16129E261DB540D787FC5DFEB3FE9BF504AACF3812EF9A0987164BC0CA8AED8AA0620C2C50ECD33D7A5F1286537664219BFD394BB743A505> |72 <001C60D8A8C9B77FE2CEBC851BC1D55BEFCC6636F8B07C124AAAAD6AC237A2E0178B712156D556EE6FB45645CC6CBEAF8E97CBE4F832E2F621B213660DC4F9A0F0631BE4B937D282930FF5CB48932FE4C3118EA58028F6EA53582C8DE2452B3135816834C0E4D947BA5BD58F1D5AB9E28423127BFB8D26FB6EEF3AB8E9B9D2410DD3AF694FFEBD7B7FE682E5B937ACC2C6A43489D3F9EF3944E87BAD6842E7160B3BC59BD87C15EE67EE949D19E2030F058D91390B17854C6C> |3 <001C60D8A8C9B8707C25> |85 <001C60D8A8C9B7361F365886EBFECCD8473E83DA137EE4FF5446DC34EB96702032A1EC6B4D0B80987318881760797A2A703BDB19E24F1B10629EC5D3297F265B468217AF43A693E97671CE6B3D388E20C056A563C2FC1423CD8BC8B3EC8EC09DC18882E406798A4EAEA9C53CBBD9B8E9BC3831F4F1A6A626135124B3F0C4D32FC8873A1B53DB02AD4C1E42492228869E79B5F7AA6DA878613B470F5F6920F42F08D0203966> |16 <001C60D8A8C9B81F2C7477F16E203787CF43D3961A33EC54> |86 <001C60D8A8C9B7361F025C7C4D0303D6CE893F51D869BCCC57F238FED481B96AB0D6B406042D64909B5B15A441860ACAD524570DEF75E4EA76578FD91FD71A8077FF6E23AAE6F0974095E4C999A83B7E16B60FBB6A5AE152855056216BA421C7B30818AA939C216FDAB05C60988B0DD7002BC261826362CD346E3A6F514F9F1431C9C48DFC0F46570808CB49BD9B3149C4A3AA291BC1EEAA3D03623F2375C9388ABFFC392B3B4B21840AE82436B62C4B88BD91D9BCB6B1AFA172883784EBAA7B75DEB4573067FB9BF34769691A6A89267BC4E51631D49211C8FFEA> |68 <001C60D8A8C9B7A73DB68C06FC199F1F2F20B1C2E3715651C87BCD4ADD68775B4647B129144EBE49EAC15F019B26773F428CC0D1BB4A6183FD1BAD53C3DC7DC1778E21FEA13949F179F397E1068E68EF5BDF24BE0DC7557B673C23D4A50497DF80D9C838AB9EEA3C59483A8E7BD334D2361BCA7F19AE87B1D972F7B79ABAD07378C084886016D514CC545EA1F4A9EE8851A3C3F902C0F0DCD2FEE069D9BC213BFD5E5AFCA4D73D61283DE2191744FD94BBAE1E2CE71F1DD86C9281938B96442B456E7FA2EA8852C51CB5A9C2A0AFF4A5706E78B9A6A93AA2E14914A3A3355D7AE853081C2D03136A31> |80 <001C60D8A8C9B6079F294C4EE7B58DD8549C7A301BB90EFCD355016DAFC9A388412536D7A2E886C8D640A4C7783E0796960D40AE1B1791784274642CCFB691F36307EDF8E8446214A1889CF4277988EC4C2195F54D6C384A6175E65E708C4048FE9229254DCCE698804A484B506134BF418D0C8628102130364D19652360BB35F09AD44B769546EF6AF789EFF3D5DFFFCA19ABB2178EE13E00C37C31B65C0B479141272F98B246D2AC399E147E05EC4B23A6D96C9AC0C70DDF5869A095C41F0D75E8A3216EEE5BE2138C33580B53CB3747DAB1DDD8B2076C83FFCDA28D75E936383254D10FA13A9B70D344720970D85450575B72C0569D3235625D419878B686876548F8DF1FAD4F3B0F8B637CEE500E8AAA6FCB94F818A9FE160DE886DB2DF71EE98486C4B97E7016F4D897B80AE8402E0025B41950E80C2D7466150DFB224CD3540E4B45D021A319CC07F7> |83 <001C60D8A8C9B7A73D8E81CAA60D14E3E98C0D2E05AFF3FB862AEA3DF0C900A6244DFC203BD831D689E22DB403066666BFF3F475FEB3829C9D7ECDAB0DC9258303ED1E42322E45D2E74BDF643BC8197209EBDB2F245FB9585F9D7C5F4C0605E973113BC15F69B61D839FC08F998D44808113D68025D33AED404EFD98528A1C4BF8833248921CD84E8766EA07C2F75403CFFB9CC1A48AD11EBE79666821D3F8B741F5FE91D0F75F9F9632B838010D323EEA8F5B163329DD917466275C63DA4FB54445D129B662802A208E18CFAD13CCA131C101542E45275DFEF10296A99CE9BEFE39650F703ED74130D9F7EBDFC13232> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf216.975 233.316 mo(\000R\000Q\000O)sh227.191 233.316 mo(\000L\000Q\000H\000\003\000U\000H\000\020\000V\000D\000P\000S\000O\000H)[2.21594 4 3.54395 2 3.11206 3.54395 2.66394 3.11206 4 5.776 4 2.21594 0 ]xsh107.36 237.231 mo
107.05 237.231 li
107.05 229.563 li
107.36 229.563 li
107.36 237.231 li
0 0 0 0 cmyk
f
189.99 237.231 mo
107.36 237.231 li
107.36 229.563 li
118.355 229.563 li
118.355 223.79 li
128.505 223.79 li
128.922 223.918 129.35 224.041 129.789 224.157 cv
133.308 225.089 137.535 225.63 142.084 225.63 cv
144.221 225.63 li
149.229 225.63 153.92 224.968 157.691 223.823 cv
157.727 223.812 157.763 223.801 157.799 223.79 cv
189.99 223.79 li
189.99 237.231 li
143.145 224.87 mo
139.683 224.804 136.435 224.418 133.595 223.79 cv
152.705 223.79 li
149.846 224.421 146.589 224.804 143.145 224.87 cv
143.145 224.87 li
.19266 .0410468 .0860609 0 cmyk
f
107.05 237.231 mo
107.006 237.231 li
107.006 229.563 li
107.05 229.563 li
107.05 237.231 li
0 0 0 0 cmyk
f
144.221 225.63 mo
142.084 225.63 li
137.535 225.63 133.308 225.089 129.789 224.157 cv
129.35 224.041 128.922 223.918 128.505 223.79 cv
133.595 223.79 li
136.435 224.418 139.683 224.804 143.145 224.87 cv
143.145 224.87 li
146.589 224.804 149.846 224.421 152.705 223.79 cv
157.799 223.79 li
157.763 223.801 157.727 223.812 157.691 223.823 cv
153.92 224.968 149.229 225.63 144.221 225.63 cv
.750271 .679713 .654902 .901945 cmyk
f
107.36 229.563 mo
107.05 229.563 li
107.05 223.79 li
107.36 223.79 li
107.36 229.563 li
0 0 0 0 cmyk
f
118.355 229.563 mo
107.36 229.563 li
107.36 223.79 li
118.355 223.79 li
118.355 229.563 li
.19266 .0410468 .0860609 0 cmyk
f
107.05 229.563 mo
107.006 229.563 li
107.006 223.79 li
107.05 223.79 li
107.05 229.563 li
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf121.53 233.316 mo(\000R\000Q\000O)sh131.746 233.316 mo(\000L\000Q\000H\000\003\000U\000H\000\020\000V\000D\000P\000S\000O\000H)[2.21594 4 3.54395 2 3.11206 3.54395 2.66394 3.11206 4 5.776 4 2.21594 0 ]xsh307 185.253 mo
282.696 185.253 li
282.696 183.037 li
289.956 183.037 li
289.956 169.596 li
282.696 169.596 li
282.696 156.882 li
307 156.882 li
307 185.253 li
0 0 0 0 cmyk
f
289.956 183.037 mo
282.696 183.037 li
282.696 169.596 li
289.956 169.596 li
289.956 183.037 li
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [14 0 0 -14 0 0 ]msf289.446 177.072 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]xsh91.7621 243.333 mo
91.7676 238.956 li
91.7621 243.333 li
91.8261 192.09 mo
91.8261 192.09 li
91.8311 188.038 li
91.8261 192.09 li
91.8321 187.288 mo
91.8342 185.623 li
91.8321 187.288 li
91.8714 155.827 mo
91.8714 155.827 li
91.8734 154.189 li
91.8714 155.827 li
91.8753 152.689 mo
91.8772 151.185 li
91.8753 152.689 li
91.9579 86.5315 mo
91.9579 86.5315 li
91.9605 84.4382 li
91.9579 86.5315 li
92.001 51.996 mo
92.001 51.996 li
92.0012 51.8149 li
92.001 51.996 li
92.0443 17.2796 mo
92.0443 17.2796 li
92.0446 17.0635 li
92.0443 17.2796 li
0 0 0 0 cmyk
f
92.0012 51.8149 mo
92.0012 51.8149 li
92.0021 51.0628 li
92.0012 51.8149 li
92.0031 50.3128 mo
92.0443 17.2796 li
92.0031 50.3128 li
f
91.9614 83.6882 mo
92.001 51.996 li
91.9614 83.6882 li
f
91.8772 151.185 mo
91.8772 151.185 li
91.9579 86.5315 li
91.8772 151.185 li
f
91.8734 154.189 mo
91.8753 152.689 li
91.8734 154.189 li
.750271 .679713 .654902 .901945 cmyk
f
91.8696 157.253 mo
91.8696 157.253 li
91.8714 155.827 li
91.8696 157.253 li
0 0 0 0 cmyk
f
91.9605 84.4382 mo
91.9614 83.6882 li
91.9605 84.4382 li
.750271 .679713 .654902 .901945 cmyk
f
92.0021 51.0628 mo
92.0031 50.3128 li
92.0021 51.0628 li
f
92.0446 17.0635 mo
92.0454 16.4036 li
92.0446 17.0635 li
f
91.7676 238.956 mo
91.7676 238.956 li
91.7793 229.563 li
91.7676 238.956 li
91.8147 201.193 mo
91.8147 201.193 li
91.8261 192.09 li
91.8147 201.193 li
0 0 0 0 cmyk
f
91.762 243.459 mo
91.7621 243.333 li
91.762 243.459 li
.750271 .679713 .654902 .901945 cmyk
f
91.8311 188.038 mo
91.8321 187.288 li
91.8311 188.038 li
f
91.8342 185.623 mo
91.8342 185.623 li
91.8348 185.142 li
91.8342 185.623 li
0 0 0 0 cmyk
f
91.8348 185.142 mo
91.8348 185.142 li
91.8696 157.253 li
91.8348 185.142 li
f
91.7793 229.563 mo
91.7793 229.563 li
91.8147 201.193 li
91.7793 229.563 li
f
.75 lw
1 lj
8 ml
92.0453 16.4035 mo
91.7619 243.459 li
.750271 .679713 .654902 .901945 cmyk
@
231.675 16.4033 mo
231.557 152.631 li
232.307 152.632 li
232.425 16.4038 li
231.675 16.4033 li
f
46.2628 3.34446 mo
73.0265 3.34446 li
73.0265 11.8957 li
46.2628 11.8957 li
46.2628 3.34446 li
.631617 .211429 .291203 .00112917 cmyk
ef
155.186 11.7953 mo
73.0265 11.7953 li
73.0265 3.34446 li
59.6547 3.34446 li
59.6547 0 li
155.773 0 li
155.773 3.34446 li
155.186 3.34446 li
155.186 11.7953 li
0 0 0 0 cmyk
f
155.773 11.7953 mo
155.186 11.7953 li
155.186 3.34446 li
155.773 3.34446 li
155.773 11.7953 li
.19266 .0410468 .0860609 0 cmyk
f
73.0265 11.7953 mo
59.6547 11.7953 li
59.6547 3.34446 li
73.0265 3.34446 li
73.0265 11.7953 li
.631617 .211429 .291203 .00112917 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf76.982 8.83945 mo(\000O\000D\000U\000J\000H\000\020\000V\000F\000D\000O\000H\000\003\000W\000U\000D\000L\000Q\000L\000Q\000J)[2.21594 3.54395 2.66394 4 3.54395 2.66394 3.11206 3.54395 3.54395 2.21595 3.54394 2 2.21594 2.66395 3.54394 2.21593 4.00001 2.21594 4 0 ]xsh165.043 125.49 mo
226.862 125.49 li
226.862 149.136 li
165.043 149.136 li
165.043 125.49 li
.19266 .0410468 .0860609 0 cmyk
ef
235.85 106.644 mo
303.669 106.644 li
303.669 130.289 li
235.85 130.289 li
235.85 106.644 li
.122957 .167697 0 0 cmyk
ef
165.043 108.65 mo
147.319 108.65 li
147.319 106.934 li
142.34 106.934 li
142.34 84.387 li
231.616 84.2961 li
231.611 89.7261 li
226.862 89.7261 li
226.862 88.3621 li
165.043 88.3621 li
165.043 108.65 li
142.34 83.6369 mo
142.34 78.7059 li
147.585 78.7059 li
147.585 74.7483 li
165.589 74.7483 li
165.589 78.7059 li
225.306 78.7059 li
225.306 71.6001 li
231.627 71.6001 li
231.617 83.5461 li
142.34 83.6369 li
0 0 0 0 cmyk
f
165.589 74.7483 mo
147.585 74.7483 li
147.585 71.6001 li
165.589 71.6001 li
165.589 74.7483 li
f
147.585 78.7059 mo
142.34 78.7059 li
142.34 71.6001 li
147.585 71.6001 li
147.585 74.7483 li
147.585 78.7059 li
.19266 .0410468 .0860609 0 cmyk
f
225.306 78.7059 mo
165.589 78.7059 li
165.589 74.7483 li
165.589 71.6001 li
183.753 71.6001 li
183.753 74.667 li
203.499 74.667 li
203.499 77.6431 li
207.706 77.6431 li
207.706 74.0271 li
203.505 74.0271 li
203.505 71.6001 li
225.306 71.6001 li
225.306 78.7059 li
f
gsave
203.499 74.667 mo
183.753 74.667 li
183.753 71.6001 li
203.505 71.6001 li
203.505 74.0271 li
203.499 74.0271 li
203.499 74.667 li
clp
183.753 71.6001 mo
203.505 71.6001 li
203.505 74.667 li
183.753 74.667 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf183.681 74.5631 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xshgrestore
gsave
207.706 77.6431 mo
203.499 77.6431 li
203.499 74.667 li
203.505 74.667 li
203.505 74.0271 li
207.706 74.0271 li
207.706 77.6431 li
clp
203.499 74.0271 mo
207.706 74.0271 li
207.706 77.6431 li
203.499 77.6431 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf203.658 77.5631 mo(\0001)shgrestore
gsave
203.505 74.667 mo
203.499 74.667 li
203.499 74.0271 li
203.505 74.0271 li
203.505 74.667 li
clp
203.499 74.0271 mo
203.505 74.0271 li
203.505 74.667 li
203.499 74.667 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf183.681 74.5631 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xshgsave
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf203.658 77.5631 mo(\0001) false chpclp
203.499 74.0272 mo
203.505 74.0272 li
203.505 74.667 li
203.499 74.667 li
cp
f
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf183.681 74.5631 mo(\000P\000R\000G\000H\000O)[6.21594 4 4 3.54395 0 ]xshgrestore
grestore
216.236 108.65 mo
215.716 108.65 li
215.716 106.882 li
216.236 106.882 li
216.236 108.65 li
178.653 108.65 mo
165.043 108.65 li
165.043 88.3621 li
226.862 88.3621 li
226.862 89.7261 li
216.236 89.7261 li
216.236 101.578 li
213.883 101.578 li
213.883 105.171 li
178.653 105.171 li
178.653 108.65 li
f
215.716 108.65 mo
206.242 108.65 li
206.242 106.277 li
204.195 106.277 li
204.195 108.65 li
178.653 108.65 li
178.653 105.171 li
213.883 105.171 li
213.883 106.882 li
215.716 106.882 li
215.716 108.65 li
f
147.319 108.65 mo
142.34 108.65 li
142.34 106.934 li
147.319 106.934 li
147.319 108.65 li
.631617 .211429 .291203 .00112917 cmyk
f
142.34 84.387 mo
142.34 83.6369 li
231.617 83.5461 li
231.616 84.2961 li
142.34 84.387 li
.750271 .679713 .654902 .901945 cmyk
f
250.836 89.7261 mo
232.361 89.7261 li
232.366 84.2953 li
250.836 84.2766 li
250.836 89.7261 li
232.367 83.5453 mo
232.377 71.6001 li
236.791 71.6001 li
236.791 78.7067 li
250.836 78.7067 li
250.836 83.5265 li
232.367 83.5453 li
0 0 0 0 cmyk
f
250.836 78.7067 mo
236.791 78.7067 li
236.791 71.6001 li
250.836 71.6001 li
250.836 78.7067 li
.122957 .167697 0 0 cmyk
f
232.366 84.2953 mo
232.367 83.5453 li
250.836 83.5265 li
250.836 84.2766 li
232.366 84.2953 li
.750271 .679713 .654902 .901945 cmyk
f
232.361 89.7261 mo
231.611 89.7261 li
231.616 84.2961 li
231.617 83.5461 li
231.627 71.6001 li
232.377 71.6001 li
232.367 83.5453 li
232.366 84.2953 li
232.361 89.7261 li
f
206.242 108.65 mo
204.195 108.65 li
204.195 106.277 li
206.242 106.277 li
206.242 108.65 li
.19266 .0410468 .0860609 0 cmyk
f
216.236 106.882 mo
215.716 106.882 li
215.716 105.171 li
213.883 105.171 li
213.883 101.578 li
216.236 101.578 li
216.236 106.882 li
f
215.716 106.882 mo
213.883 106.882 li
213.883 105.171 li
215.716 105.171 li
215.716 106.882 li
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf188.818 95.6324 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf201.692 98.6324 mo(\000\024)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf167.104 106.882 mo(\000P\000R\000G\000H\000O\000\003\000\016\000\003)[6.21594 4 4 3.54395 2.21594 2 4.50403 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory54 <001C60D8A8C9B7A73DEAD47F8C3F8F62AB49AEC986DEA2334DA4A3A6EE83D67349083E9DFAC3D0ED3D686A241C78A633F5E22EF7DEED0B3DB4A752EE8825D23B7912632317C22685A084A8CAAE6CCEF0B549377DAA258EBB69020EF173EF458832F81C961EF7240FF6094FEE889146CBFACBA4EFE204488D6013883AF0A027538CE7262FDDAFBBAB15C6F81AD8790429A1B8A34C544B0EA29284E965CC0CBFB454418459EDE732B15E49324D678E79286AEE75611426F87AE4567422FB344BDA03881E0FCAD52AD2C717B210FC9E13F2248977CC47FAA0712B5C1A2BC897F933D6D5615544B70F9D1E4890B097B4C419FADEDD598B4B2ED5C218C91FED02300E5DA1A7> |!endend end
%ADOEndSubsetFont
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf195.584 106.882 mo(\0006\0006)[4 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf203.576 109.882 mo(\000\024\000\003)[2.66666 0 ]xshTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf207.575 106.882 mo(\000\016\000\003)[4.50403 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf214.08 106.882 mo(\000\)\0007)[4.88 0 ]xshTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf223.407 109.882 mo(\000\024)sh197.929 163.855 mo
157.087 163.855 li
157.087 156.646 li
141.776 156.646 li
141.776 154.138 li
250.272 154.027 li
250.272 156.646 li
197.929 156.646 li
197.929 163.855 li
141.776 152.638 mo
141.776 130.58 li
147.319 130.58 li
147.319 126.805 li
165.043 126.805 li
165.043 149.136 li
226.862 149.136 li
226.862 147.013 li
226.891 147.013 li
226.891 144.931 li
231.563 144.931 li
231.557 152.546 li
141.776 152.638 li
232.307 152.546 mo
232.313 144.931 li
250.272 144.931 li
250.272 152.527 li
232.307 152.546 li
0 0 0 0 cmyk
f
147.319 130.58 mo
141.776 130.58 li
141.776 108.65 li
142.34 108.65 li
142.34 126.805 li
147.319 126.805 li
147.319 130.58 li
.631617 .211429 .291203 .00112917 cmyk
f
141.776 154.138 mo
141.776 152.638 li
231.557 152.546 li
231.557 152.631 li
232.307 152.632 li
232.307 152.546 li
250.272 152.527 li
250.272 154.027 li
141.776 154.138 li
.750271 .679713 .654902 .901945 cmyk
f
157.087 163.855 mo
141.776 163.855 li
141.776 156.646 li
157.087 156.646 li
157.087 163.855 li
0 0 0 0 cmyk
f
250.272 163.855 mo
235.871 163.855 li
235.871 160.42 li
205.199 160.42 li
205.199 163.855 li
197.929 163.855 li
197.929 156.646 li
250.272 156.646 li
250.272 163.855 li
f
gsave
235.871 163.855 mo
205.199 163.855 li
205.199 160.42 li
235.871 160.42 li
235.871 163.855 li
clp
205.199 160.42 mo
235.871 160.42 li
235.871 163.855 li
205.199 163.855 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [8 0 0 -8 0 0 ]msf204.679 166.172 mo(\000E\000D\000W\000F\000K\000\003\000L\000\016\000\024)[4.448 4.448 2.21594 4 4.448 2.21594 1.776 4.66394 0 ]xshgrestore
232.307 152.632 mo
231.557 152.631 li
231.557 152.546 li
231.563 144.931 li
232.313 144.931 li
232.307 152.546 li
232.307 152.632 li
.750271 .679713 .654902 .901945 cmyk
f
226.862 149.136 mo
165.043 149.136 li
165.043 126.805 li
216.236 126.805 li
216.236 138.629 li
213.319 138.629 li
213.319 143.932 li
216.236 143.932 li
216.236 144.931 li
222.685 144.931 li
222.685 147.013 li
226.862 147.013 li
226.862 149.136 li
.19266 .0410468 .0860609 0 cmyk
f
165.043 126.805 mo
147.319 126.805 li
147.319 119.068 li
159.973 119.123 li
158.568 120.516 li
163.45 118.763 li
163.451 118.763 li
163.45 118.763 li
163.451 118.763 li
158.583 116.968 li
159.976 118.373 li
147.319 118.318 li
147.319 108.65 li
165.043 108.65 li
165.043 112.008 li
178.653 112.008 li
178.653 125.49 li
165.043 125.49 li
165.043 126.805 li
216.236 125.49 mo
215.716 125.49 li
215.716 112.008 li
216.236 112.008 li
216.236 125.49 li
0 0 0 0 cmyk
f
216.236 112.008 mo
215.716 112.008 li
215.716 108.65 li
216.236 108.65 li
216.236 112.008 li
178.653 112.008 mo
165.043 112.008 li
165.043 108.65 li
178.653 108.65 li
178.653 112.008 li
.19266 .0410468 .0860609 0 cmyk
f
215.716 125.49 mo
178.653 125.49 li
178.653 112.008 li
215.716 112.008 li
215.716 125.49 li
195.526 113.195 mo
195.526 122.351 li
196.926 122.351 li
196.926 113.195 li
195.526 113.195 li
0 0 0 0 cmyk
f
215.716 112.008 mo
178.653 112.008 li
178.653 108.65 li
204.195 108.65 li
204.195 109.882 li
206.242 109.882 li
206.242 108.65 li
215.716 108.65 li
215.716 112.008 li
.19266 .0410468 .0860609 0 cmyk
f
gsave
196.926 122.351 mo
195.526 122.351 li
195.526 113.195 li
196.926 113.195 li
196.926 122.351 li
clp
195.526 113.195 mo
196.926 113.195 li
196.926 122.351 li
195.526 122.351 li
cp
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUX+ArialMT [0 14 14 0 0 0 ]msf195.526 111.921 mo(\000\021\000\021\000\021)[3.8779 3.8779 0 ]yshgrestore
147.319 126.805 mo
142.34 126.805 li
142.34 108.65 li
147.319 108.65 li
147.319 118.318 li
147.082 118.317 li
147.079 119.067 li
147.319 119.068 li
147.319 126.805 li
.631617 .211429 .291203 .00112917 cmyk
f
163.451 118.763 mo
163.45 118.763 li
163.451 118.763 li
0 0 0 0 cmyk
f
159.973 119.123 mo
147.319 119.068 li
147.079 119.067 li
147.082 118.317 li
147.319 118.318 li
159.976 118.373 li
160.35 118.75 li
159.973 119.123 li
.750271 .679713 .654902 .901945 cmyk
f
158.568 120.516 mo
159.973 119.123 li
160.35 118.75 li
159.976 118.373 li
158.583 116.968 li
163.451 118.763 li
163.45 118.763 li
158.568 120.516 li
160.88 118.752 mo
160.88 118.752 li
160.981 118.652 li
160.88 118.752 li
f
216.236 126.805 mo
165.043 126.805 li
165.043 125.49 li
178.653 125.49 li
215.716 125.49 li
216.236 125.49 li
216.236 126.805 li
.19266 .0410468 .0860609 0 cmyk
f
gsave
206.242 109.882 mo
204.195 109.882 li
204.195 108.65 li
206.242 108.65 li
206.242 109.882 li
clp
204.195 108.65 mo
206.242 108.65 li
206.242 109.882 li
204.195 109.882 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf203.576 109.882 mo(\000\024\000\003)[2.66666 0 ]xshgrestore
216.236 143.932 mo
213.319 143.932 li
213.319 138.629 li
216.236 138.629 li
216.236 143.932 li
f
226.891 147.013 mo
226.862 147.013 li
226.862 144.931 li
226.891 144.931 li
226.891 147.013 li
0 0 0 0 cmyk
f
226.862 147.013 mo
222.685 147.013 li
222.685 144.931 li
226.862 144.931 li
226.862 147.013 li
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf187.809 132.682 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf200.683 135.682 mo(\0001)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf165.649 143.932 mo(\000P\000R\000G\000H\000O\000\003\000\016\000\003)[6.21594 4 4 3.54395 2.21594 2 4.50404 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf194.129 143.932 mo(\0006\0006)[4 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf202.121 146.932 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf205.678 146.932 mo(\000\003)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf207.011 143.932 mo(\000\016\000\003)[4.50403 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf213.516 143.932 mo(\000\)\0007)[4.88 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf222.843 146.932 mo(\0001)sh307 144.931 mo
250.272 144.931 li
250.272 130.289 li
303.669 130.289 li
303.669 106.644 li
250.836 106.644 li
250.836 89.7261 li
307 89.7261 li
307 144.931 li
0 0 0 0 cmyk
f
303.669 130.289 mo
250.272 130.289 li
250.272 126.805 li
250.836 126.805 li
250.836 106.644 li
303.669 106.644 li
303.669 130.289 li
.122957 .167697 0 0 cmyk
f
235.85 108.65 mo
232.345 108.65 li
232.361 89.7261 li
250.836 89.7261 li
250.836 106.644 li
235.85 106.644 li
235.85 108.65 li
231.595 108.65 mo
226.862 108.65 li
226.862 89.7261 li
231.611 89.7261 li
231.595 108.65 li
0 0 0 0 cmyk
f
226.862 108.65 mo
225.423 108.65 li
225.423 106.277 li
224.145 106.277 li
224.145 101.578 li
216.236 101.578 li
216.236 89.7261 li
226.862 89.7261 li
226.862 108.65 li
.19266 .0410468 .0860609 0 cmyk
f
232.345 108.65 mo
231.595 108.65 li
231.611 89.7261 li
232.361 89.7261 li
232.345 108.65 li
.750271 .679713 .654902 .901945 cmyk
f
224.026 108.65 mo
216.236 108.65 li
216.236 106.882 li
224.026 106.882 li
224.026 108.65 li
.19266 .0410468 .0860609 0 cmyk
f
250.836 126.805 mo
250.272 126.805 li
250.272 108.65 li
235.85 108.65 li
235.85 106.644 li
250.836 106.644 li
250.836 126.805 li
.122957 .167697 0 0 cmyk
f
gsave
224.026 106.882 mo
216.236 106.882 li
216.236 101.578 li
224.145 101.578 li
224.145 106.277 li
224.026 106.277 li
224.026 106.882 li
clp
216.236 101.578 mo
224.145 101.578 li
224.145 106.882 li
216.236 106.882 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf214.08 106.882 mo(\000\)\0007)[4.88 0 ]xshgrestore
gsave
225.423 108.65 mo
224.026 108.65 li
224.026 106.882 li
224.145 106.882 li
224.145 106.277 li
225.423 106.277 li
225.423 108.65 li
clp
224.026 106.277 mo
225.423 106.277 li
225.423 108.65 li
224.026 108.65 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf223.407 109.882 mo(\000\024)shgrestore
gsave
224.145 106.882 mo
224.026 106.882 li
224.026 106.277 li
224.145 106.277 li
224.145 106.882 li
clp
224.026 106.277 mo
224.145 106.277 li
224.145 106.882 li
224.026 106.882 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf214.08 106.882 mo(\000\)\0007)[4.88 0 ]xshgsave
TCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf223.407 109.882 mo(\000\024) false chpclp
224.026 106.277 mo
224.145 106.277 li
224.145 106.882 li
224.026 106.882 li
cp
f
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf214.08 106.882 mo(\000\)\0007)[4.88 0 ]xshgrestore
grestore
250.272 144.931 mo
232.313 144.931 li
232.329 126.805 li
235.85 126.805 li
235.85 130.289 li
250.272 130.289 li
250.272 144.931 li
231.563 144.931 mo
226.891 144.931 li
226.891 143.396 li
226.862 143.396 li
226.862 126.805 li
231.579 126.805 li
231.563 144.931 li
0 0 0 0 cmyk
f
232.313 144.931 mo
231.563 144.931 li
231.579 126.805 li
232.329 126.805 li
232.313 144.931 li
.750271 .679713 .654902 .901945 cmyk
f
226.862 143.396 mo
223.581 143.396 li
223.581 138.629 li
216.236 138.629 li
216.236 126.805 li
226.862 126.805 li
226.862 143.396 li
.19266 .0410468 .0860609 0 cmyk
f
250.272 130.289 mo
235.85 130.289 li
235.85 126.805 li
250.272 126.805 li
250.272 130.289 li
.122957 .167697 0 0 cmyk
f
235.85 126.805 mo
232.329 126.805 li
232.345 108.65 li
235.85 108.65 li
235.85 126.805 li
231.579 126.805 mo
226.862 126.805 li
226.862 125.49 li
216.236 125.49 li
216.236 112.008 li
226.862 112.008 li
226.862 108.65 li
231.595 108.65 li
231.579 126.805 li
0 0 0 0 cmyk
f
226.862 112.008 mo
216.236 112.008 li
216.236 108.65 li
224.026 108.65 li
224.026 109.882 li
225.423 109.882 li
225.423 108.65 li
226.862 108.65 li
226.862 112.008 li
.19266 .0410468 .0860609 0 cmyk
f
232.329 126.805 mo
231.579 126.805 li
231.595 108.65 li
232.345 108.65 li
232.329 126.805 li
.750271 .679713 .654902 .901945 cmyk
f
226.862 126.805 mo
216.236 126.805 li
216.236 125.49 li
226.862 125.49 li
226.862 126.805 li
.19266 .0410468 .0860609 0 cmyk
f
250.272 126.805 mo
235.85 126.805 li
235.85 108.65 li
250.272 108.65 li
250.272 126.805 li
.122957 .167697 0 0 cmyk
f
gsave
225.423 109.882 mo
224.026 109.882 li
224.026 108.65 li
225.423 108.65 li
225.423 109.882 li
clp
224.026 108.65 mo
225.423 108.65 li
225.423 109.882 li
224.026 109.882 li
cp
.19266 .0410468 .0860609 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf223.407 109.882 mo(\000\024)shgrestore
222.685 144.931 mo
216.236 144.931 li
216.236 143.932 li
222.685 143.932 li
222.685 144.931 li
.19266 .0410468 .0860609 0 cmyk
f
gsave
222.685 143.932 mo
216.236 143.932 li
216.236 138.629 li
223.581 138.629 li
223.581 143.396 li
222.685 143.396 li
222.685 143.932 li
clp
216.236 138.629 mo
223.581 138.629 li
223.581 143.932 li
216.236 143.932 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf213.516 143.932 mo(\000\)\0007)[4.88 0 ]xshgrestore
gsave
226.891 144.931 mo
226.862 144.931 li
226.862 143.396 li
226.891 143.396 li
226.891 144.931 li
clp
226.862 143.396 mo
226.891 143.396 li
226.891 144.931 li
226.862 144.931 li
cp
0 0 0 0 cmyk
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf222.843 146.932 mo(\0001)shgrestore
gsave
226.862 144.931 mo
222.685 144.931 li
222.685 143.932 li
223.581 143.932 li
223.581 143.396 li
226.862 143.396 li
226.862 144.931 li
clp
222.685 143.396 mo
226.862 143.396 li
226.862 144.931 li
222.685 144.931 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf222.843 146.932 mo(\0001)shgrestore
gsave
223.581 143.932 mo
222.685 143.932 li
222.685 143.396 li
223.581 143.396 li
223.581 143.932 li
clp
222.685 143.396 mo
223.581 143.396 li
223.581 143.932 li
222.685 143.932 li
cp
f
.750271 .679713 .654902 .901945 cmyk
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf213.516 143.932 mo(\000\)\0007)[4.88 0 ]xshgsave
TCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf222.843 146.932 mo(\0001) false chpclp
222.685 143.397 mo
223.581 143.397 li
223.581 143.932 li
222.685 143.932 li
cp
f
TCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf213.516 143.932 mo(\000\)\0007)[4.88 0 ]xshgrestore
grestore
.750271 .679713 .654902 .901945 cmyk
TCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf259.433 113.759 mo(\000W\000D\000V\000N)[2.21594 3.54395 3.11206 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf272.307 116.759 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf275.863 116.759 mo(\000\016\000\024)[3.00269 0 ]xshTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf237.273 125.009 mo(\000P\000R\000G\000H\000O\000\003\000\016\000\003)[6.21594 4 4 3.54395 2.21593 2 4.50403 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf265.753 125.009 mo(\0006\0006)[4 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf273.745 128.009 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf277.301 128.009 mo(\000\003)shTCTBUW+TimesNewRomanPSMT [8 0 0 -8 0 0 ]msf278.634 125.009 mo(\000\016\000\003)[4.50403 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [8 0 0 -8 0 0 ]msf285.14 125.009 mo(\000\)\0007)[4.88 0 ]xshTCTBUY+TimesNewRomanPS-ItalicMT [5.33333 0 0 -5.33333 0 0 ]msf294.466 128.009 mo(\0001)shTCTBUW+TimesNewRomanPSMT [5.33333 0 0 -5.33333 0 0 ]msf298.023 128.009 mo(\000\016\000\024)[3.00269 0 ]xshgrestore
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/TCTBUY+TimesNewRomanPS-ItalicMT-Identity-H uf/TCTBUY+TimesNewRomanPS-ItalicMT /CIDFont ur/TCTBVA+TimesNewRomanPS-BoldMT-Identity-H uf/TCTBVA+TimesNewRomanPS-BoldMT /CIDFont ur/TCTBUZ+TimesNewRomanPS-BoldItalicMT-Identity-H uf/TCTBUZ+TimesNewRomanPS-BoldItalicMT /CIDFont ur/TCTBVB+Arial-BoldMT-Identity-H uf/TCTBVB+Arial-BoldMT /CIDFont ur/TCTBUX+ArialMT-Identity-H uf/TCTBUX+ArialMT /CIDFont ur/TCTBUW+TimesNewRomanPSMT-Identity-H uf/TCTBUW+TimesNewRomanPSMT /CIDFont ur/TCTBVC+Arial-ItalicMT-Identity-H uf/TCTBVC+Arial-ItalicMT /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
