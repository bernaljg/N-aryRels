%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (main_framework_meta_transf_hard_task, Copy of.pdf)
%%Creator: (Adobe Acrobat 19.8.0)
%%For: yaoyaoliu
%%CreationDate: 6/12/18, 15:23
%%BoundingBox: 0 0 837 146
%%HiResBoundingBox: 0 0 837 146
%%CropBox: 0 0 837 146
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 721 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 91.163280, 2018/06/22-11:31:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreatorTool="Google"
   xmp:ModifyDate="2018-12-06T15:23:04+08:00"
   xmp:CreateDate="2018-12-06T15:22:35+08:00"
   xmp:MetadataDate="2018-12-06T15:23:04+08:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:d1d54e3a-baec-9f4a-b417-0bc020e5ca65"
   xmpMM:InstanceID="uuid:8d392a3f-3e16-764d-b7a6-31b8430d5714"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -146 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 146 li
837 146 li
837 0 li
cp
clp
gsave
0 146 mo
837 146 li
837 0 li
0 0 li
0 146 li
clp
gsave
0 0 mo
837.01 0 li
837.01 146.683 li
0 146.683 li
0 0 li
clp
204.533 146 mo
201.318 146 li
201.318 108.875 li
1.26388 108.875 li
1.26388 146 li
0 146 li
0 0 li
110.973 0 li
110.973 22.9339 li
4.91722 22.9339 li
4.73141 22.9367 4.61624 23.0429 4.56122 23.1112 cv
4.45483 23.2488 4.41951 23.37 4.37113 23.5295 cv
4.2217 24.0713 4.11103 25.0521 4.02647 26.3698 cv
3.94362 27.6829 3.8946 29.313 3.8946 31.0806 cv
4.64471 31.0806 li
4.64471 31.0806 li
110.973 31.0806 li
110.973 35.158 li
204.298 35.158 li
204.311 36.8113 li
204.686 36.8085 li
204.703 39.0584 li
204.328 39.0612 li
204.35 42.0612 li
204.725 42.0584 li
204.742 44.3083 li
204.367 44.3111 li
204.39 47.3111 li
204.765 47.3082 li
204.782 49.5582 li
204.407 49.561 li
204.43 52.561 li
204.805 52.5581 li
204.821 54.808 li
204.446 54.8109 li
204.469 57.8106 li
204.844 57.8079 li
204.861 60.0578 li
204.486 60.0605 li
204.509 63.0605 li
204.884 63.0578 li
204.901 65.3076 li
204.526 65.3104 li
204.548 68.3104 li
204.923 68.3075 li
204.94 70.5575 li
204.565 70.5603 li
204.588 73.5603 li
204.963 73.5574 li
204.98 75.8073 li
204.605 75.8102 li
204.61 76.5052 li
189.954 76.5686 li
189.954 51.11 li
85.8384 51.11 li
85.8384 42.8882 li
.680961 42.8882 li
.680961 75.1322 li
79.2617 75.1322 li
79.2617 77.3186 li
4.52183 77.4838 li
79.2619 77.3186 li
79.2617 103.527 li
189.954 103.527 li
189.954 77.3911 li
189.957 78.0685 li
204.621 78.005 li
204.628 78.81 li
205.003 78.8072 li
205.02 81.0571 li
204.644 81.0599 li
204.667 84.0599 li
205.042 84.0571 li
205.059 86.307 li
204.684 86.3098 li
204.707 89.3098 li
205.082 89.3069 li
205.099 91.5569 li
204.724 91.5597 li
204.746 94.5594 li
205.121 94.5567 li
205.138 96.8067 li
204.763 96.8095 li
204.786 99.8093 li
205.161 99.8065 li
205.178 102.056 li
204.803 102.059 li
204.826 105.059 li
205.201 105.056 li
205.218 107.306 li
204.842 107.309 li
204.854 108.875 li
204.533 108.875 li
204.533 146 li
411.957 108.875 mo
411.659 108.875 li
411.696 77.653 li
478.684 77.5491 li
478.683 76.799 li
487.683 76.7851 li
478.683 76.799 li
478.682 76.0491 li
411.698 76.153 li
411.699 74.9259 li
487.481 74.9259 li
487.481 42.6818 li
411.737 42.6818 li
411.761 22.5794 li
411.737 42.6818 li
409.954 42.6818 li
409.954 74.9259 li
411.699 74.9259 li
411.698 76.153 li
396.289 76.1769 li
396.29 40.6554 li
282.81 40.6554 li
282.81 76.917 li
273.812 76.9559 li
273.809 76.2058 li
205.36 76.502 li
205.355 75.8044 li
204.98 75.8073 li
204.963 73.5574 li
205.338 73.5545 li
205.315 70.5547 li
204.94 70.5575 li
204.923 68.3075 li
205.298 68.3046 li
205.276 65.3049 li
204.901 65.3076 li
204.884 63.0578 li
205.259 63.055 li
205.236 60.055 li
204.861 60.0578 li
204.844 57.8079 li
205.219 57.8051 li
205.196 54.8051 li
204.821 54.808 li
204.805 52.5581 li
205.179 52.5552 li
205.157 49.5554 li
204.782 49.5582 li
204.765 47.3082 li
205.14 47.3053 li
205.117 44.3055 li
204.742 44.3083 li
204.725 42.0584 li
205.1 42.0556 li
205.077 39.0556 li
204.703 39.0584 li
204.686 36.8085 li
205.061 36.8057 li
205.048 35.158 li
298.083 35.158 li
298.083 31.0806 li
404.524 31.0806 li
404.524 31.0806 li
405.274 31.0806 li
405.274 31.0806 li
405.274 29.0108 405.205 27.0274 405.083 25.5541 cv
405.021 24.8165 404.949 24.2387 404.867 23.8266 cv
404.824 23.6194 404.782 23.4556 404.724 23.3154 cv
404.602 23.1058 li
404.547 23.0388 404.432 22.9363 404.251 22.9339 cv
298.083 22.9339 li
298.083 0 li
411.957 0 li
411.957 29.5768 li
417.482 29.5768 li
417.472 30.1223 417.467 30.6895 417.467 31.2716 cv
417.467 31.2716 li
417.467 31.2716 li
609.584 31.2716 li
609.584 31.2716 li
609.584 31.2716 li
609.584 31.2716 li
609.584 30.6969 609.579 30.1289 609.569 29.5768 cv
613.382 29.5768 li
613.382 0 li
614.133 0 li
614.133 29.3299 li
615.929 29.3299 li
615.916 29.9505 615.909 30.6012 615.909 31.2716 cv
615.909 31.2716 li
615.909 31.2716 li
833.987 31.2716 li
833.987 31.2716 li
833.987 31.2716 li
833.987 31.2716 li
833.987 30.6109 833.98 29.9589 833.967 29.3299 cv
837 29.3299 li
837 60.0393 li
811.07 60.0393 li
811.07 75.4517 li
805.554 73.3634 li
805.508 76.9118 li
795.061 76.7774 li
805.508 76.9118 li
805.462 80.4601 li
806.474 80.1068 li
806.226 79.3989 li
806.474 80.1068 li
811.07 78.5008 li
811.07 92.2832 li
837 92.2832 li
837 108.442 li
606.561 108.442 li
606.561 74.9259 li
668.67 74.9259 li
668.67 76.7774 li
606.562 76.7774 li
668.67 76.7774 li
668.67 80.326 li
669.676 79.9598 li
669.42 79.255 li
669.676 79.9598 li
678.42 76.7774 li
678.42 76.7774 li
673.333 74.9259 li
681.914 74.9259 li
681.914 42.6818 li
606.561 42.6818 li
606.561 40.5058 li
487.695 40.5058 li
487.695 108.442 li
411.957 108.442 li
411.957 108.875 li
210.674 42.8875 mo
210.674 75.1316 li
281.753 75.1316 li
281.753 42.8875 li
210.674 42.8875 li
411.659 108.875 mo
396.29 108.875 li
396.29 77.1315 li
396.291 77.6769 li
411.696 77.653 li
411.659 108.875 li
282.81 108.875 mo
205.604 108.875 li
205.593 107.304 li
205.218 107.306 li
205.201 105.056 li
205.575 105.053 li
205.553 102.054 li
205.178 102.056 li
205.161 99.8065 li
205.536 99.8038 li
205.513 96.8038 li
205.138 96.8067 li
205.121 94.5567 li
205.496 94.5539 li
205.474 91.5541 li
205.099 91.5569 li
205.082 89.3069 li
205.457 89.304 li
205.434 86.3042 li
205.059 86.307 li
205.042 84.0571 li
205.417 84.0543 li
205.395 81.0543 li
205.02 81.0571 li
205.003 78.8072 li
205.377 78.8044 li
205.371 78.0018 li
273.815 77.7058 li
273.812 76.9559 li
282.812 76.917 li
282.81 108.875 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
678.42 76.7774 mo
678.42 76.7774 li
678.42 76.7774 li
678.42 76.7774 li
668.67 76.7774 mo
606.562 76.7774 li
668.67 76.7774 li
f
1.5 lw
0 lc
1 lj
8 ml
[] 0 dsh
true sadj
606.562 76.7774 mo
669.42 76.7774 li
.75021 .679683 .670222 .90164 cmyk
@
669.42 79.255 mo
676.227 76.7774 li
669.42 74.2997 li
669.42 79.255 li
ef
669.42 79.255 mo
669.676 79.9598 li
678.42 76.7774 li
668.67 73.2287 li
668.67 80.326 li
669.676 79.9598 li
669.42 79.255 li
670.17 79.255 li
670.17 75.3709 li
674.034 76.7774 li
669.163 78.5501 li
669.42 79.255 li
670.17 79.255 li
669.42 79.255 li
f
805.508 76.9118 mo
795.061 76.7774 li
805.508 76.9118 li
0 0 0 0 cmyk
f
795.061 76.7774 mo
806.258 76.9215 li
.75021 .679683 .670222 .90164 cmyk
@
806.226 79.3989 mo
813.065 77.009 li
806.29 74.444 li
806.226 79.3989 li
ef
806.226 79.3989 mo
806.474 80.1068 li
815.258 77.0373 li
805.554 73.3634 li
805.462 80.4601 li
806.474 80.1068 li
806.226 79.3989 li
806.976 79.4085 li
807.026 75.5246 li
810.872 76.9808 li
805.979 78.6908 li
806.226 79.3989 li
806.976 79.4085 li
806.226 79.3989 li
f
.749998 lw
[2.99999 2.25 ] 0 dsh
110.921 385.109 mo
277.952 385.109 li
277.952 549.069 li
110.921 549.069 li
cp
@
118.151 403.11 mo
268.434 403.11 li
268.434 435.354 li
118.151 435.354 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
[] 0 dsh
118.151 403.11 mo
268.434 403.11 li
268.434 435.354 li
118.151 435.354 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (NAAAAA+TimesNewRomanPSMT)%%Title: (NAAAAA+TimesNewRomanPSMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /NAAAAA+TimesNewRomanPSMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-568 -307 2000 1007} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3416 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 22 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |41 <001C60D8A8C9B7EF322BE6235043C5A7A6ECCDDDC390BE41D3E01CEDAA91CB335118BB7C10CD87A1A789356A0826D033ECDD0352DC64AE55B383C11F3EB18A6F42CD78A260CB051779A3B4D92350DD65D27B671C1609DC36FBFF44C40F44FB014C0462CFF40EA9650CDFB895B99B69FA8BD3EB8152DF452581818551FCC7745E9E79F62FD5E1668E4EFD8B2F33AB5D5ED30AB06AFD78EF98B1A68AA26FC8B4D7DDC1356637FA048F199EDF19A428> |72 <001C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984A59E1CFFFD06EA629758085868D3F5F7204292> |68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272EF1EF1464C3F0D45D7CBB8749AF571E09> |87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |88 <001C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A199CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E169A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97520325221F3417C7781EB09765> |85 <001C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C360275B503E4954E912CD342> |3 <001C60D8A8C9B8707C25> |91 <001C60D8A8C9B7A73DD670F5272DD145294083C4293196A1DBA349EF195DAADD76F8FA5D95CD31B7A1C2B32491F1D3BDEAF32234D0995EB67A2BEF06777B5B8AB01E1FC457D70FEE563CF2C0C851F3CC8B137B00E8CC0DDAE3A128D9A2319F3FF89B241236A311487E7B00ABDB18C5C11783A73226CB9112660CA25988169831DBD8D37F0570522652B666847FB24934B522403DA00EF77D9BF6494155BEACD6C4576905B10BBFDD62A70CAEE193F073806BE591E56E5DC8424D64A808D7528EBE8928C7E8D537D6DCC6918CF06863B4A936B7CA4331A2F9> |70 <001C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |82 <001C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA436702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |300 <001C60D8A8C9B6079F62B6C457A2BD444B4188DADB7D9355E563DF5904FA1257A5CE1188FED760C467086E341252AFD4CE81D4D4F4BC851C90F719C08768DF99CED3FA6562838EAE1D4803EE0732DD60E6A49A991428F9569045DEF3D5650315D4BF9391E471B64AD13446F2D2236D7B602344F21658C3F512A0EB2CF0AE15F641BBF94DF82B861AD7240471533DF7D718C6FBF2D5D7F227C20144C2161462433CF31709869AB0E616309A670D029BC2D2D70C47AC5F35D2053AB9E76742F6B4C8D0761C818093A07FD69D7AF3EF6E16CA9D> |11 <001C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |83 <001C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F75904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF1C7730E7CC0F462D79552DFA> |16 <001C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |76 <001C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB8CA3E9F85837FAC6> |81 <001C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B280026130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0027198438FE663C2EACF82CEB86F7C727594> |71 <001C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D203065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A36815EA1CE5876FAC4F83CDFE1BD4A> |9 <001C60D8A8C9B6FF86FA653C89FD5B24EA84E60BF0DFF76DFD47C2EE40B1C0C34956A21B5F70B428C9F3DC373D0AB662EF43DE806F43C321FA75E329A40B22E4EA36D1126C2267B8280551A5852E862F9D9205F3511F55CBA6ED891E64F83CB71615D85081A2C25631CDFA9AC5C039B8BD1A737261F91B732F20841E473AEC39C6FFB23B9AEA8A3D6270483258492A10DB6242051ADF50F1F2C1271592CDB2D9E1BDE5691A8E0D63066A76144BA894C3C97F311D95CEB73B35F33A38CDD66FF75091E68D3DEB2F131A798B69C8DBC6815E391ACAFF2B6AA94B0713AD150611E56B727E424DC4364163A64373EB50430E20A951E62FC5DB40A18908C50B050BC6C6C7ACB4C4405F26A4632E8B2FB82EA1846874A8AAA69994C42D0ECE392A0E00568F34F292A1F650E70E107C76F9D3AB3D1C95826A1391405FF52203D2DFC35EDE83AEF1C312A1378AD501FBC263CA4E7632279A8E16DA4B761AF2D5CE> |73 <001C60D8A8C9B81F2C3A6EB915F5DDF05E4CD39F13547A7EF54F9D79FF32092BEC553783B472AF53E99B3070692992C4C512F2D79447B5EC673AA5FA8274BFE5BA294793E06A2CD85C961166E35F08CE852DFFE5F2678D2E0B1687083D40FC628A3BE0EDFC936C866DE25768CCC0F39E7FAD6F5686BB7C64B79625F56C5573F9A5214AA079CAA28A8468CCF29829FD2A747DD586D41C21A37BF93A8AC8FDD941D5FFB6450DF53658C2420EB0E5E88807E727AED5F7> |93 <001C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D77DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |12 <001C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /NAAAAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/NAAAAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUT+TimesNewRomanPSMT /NAAAAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPutHGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf146.482 418.377 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000H\000[\000W\000U\000D\000F\000W\000R\000U\001,)[6.672 5.31592 5.31592 3.32391 6 3.99591 5.31592 3 5.31592 6 3.32391 3.99591 5.31592 5.31592 3.32391 6 7.42291 0 ]xshHGWPUT+TimesNewRomanPSMT [9 0 0 -9 0 0 ]msf153.316 429.747 mo(\000\013\000S\000U\000H)sh167.796 429.747 mo(\000\020\000W\000U\000D\000L\000Q\000H\000G\000\003\000\011\000\003\000I\000U\000R\000]\000H\000Q\000\014)[2.99693 2.49294 2.99693 3.98694 2.49294 4.5 3.98694 4.5 2.25 6.99294 2.25 2.99693 2.99693 4.5 3.98694 3.98694 4.5 0 ]xsh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (OAAAAA+ArialMT)%%Title: (OAAAAA+ArialMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /OAAAAA+ArialMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-665 -325 2000 1006} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3417 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 7 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |73 <001C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |72 <001C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |68 <001C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |87 <001C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |88 <001C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |85 <001C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /OAAAAA+ArialMT-Identity-H /Identity-H 0 [/OAAAAA+ArialMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUU+ArialMT /OAAAAA+ArialMT-Identity-H findfont ct_VMDictPutHGWPUU+ArialMT [12 0 0 -12 0 0 ]msf290.21 473.198 mo(\000I\000H\000D\000W\000X\000U\000H)[3.32391 6.672 6.672 3.32391 6.672 3.99591 0 ]xsh118.151 499.263 mo
268.978 499.263 li
268.978 531.507 li
118.151 531.507 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
.749998 lw
118.151 499.263 mo
268.978 499.263 li
268.978 531.507 li
118.151 531.507 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 7 GetGlyphDirectory54 <001C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE904907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3AB444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80CE13D22435E5FCC1B5A000DE> |79 <001C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527D6441CE02F5A28D63A618F> |74 <001C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F60847F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AEA8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA707BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA45E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD70E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC8191E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D3002781921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46F1C707> |75 <001C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B585E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C4483796F735A795EACD82F245D81FB43B5> |51 <001C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CFB31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF12086F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC628> |80 <001C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F249107C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18CE6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE955617323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D987ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFEC679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B517996> |301 <001C60D8A8C9B60E3AA590701702B87C4D4D42E3DD07A9FA6114894514D5A2AD92DD88854A51DF664D76861BB550CFDCD59BB5EFCEACD9F30BF4050BC1E723AB30A31587FB4070C6118140C931AD887E77B7F2C2228F066CAF432313DA63F43DD906D1E513C370ADC670A43335AEC0555E8C63F31CA3E4ABAA1DE0B8BA868AD1FD974E0118753CDD47E0AB62E89731EC50827AF0E733E3757085D7C2334635BCEED1677964EF3F62A1D3543C0649> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf125.851 514.531 mo(\0006\000F\000D\000O\000L\000Q\000J\000\003\000\011\000\003\0006\000K\000L\000I\000W\000L\000Q\000J\000\003\0003\000D\000U\000D\000P\000\003\001-)[6.67199 5.31592 5.31592 3.32391 3.32391 6 6 3 9.32391 3 6.672 6 3.32391 3.99591 3.32391 3.32391 6 6 3 6.672 5.31592 3.99591 5.31592 9.32391 3 0 ]xshHGWPUT+TimesNewRomanPSMT [9 0 0 -9 0 0 ]msf167.835 525.901 mo(\000\013\000P\000H\000W\000D\000\020\000O\000H\000D\000U\000Q\000H\000U\000\014)[2.99693 6.99294 3.98694 2.49294 3.98694 2.99693 2.49294 3.98694 3.98694 2.99693 4.5 3.98694 2.99693 0 ]xsh346.728 418.299 mo
408.547 418.299 li
408.547 522.543 li
346.728 522.543 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
346.728 418.299 mo
408.547 418.299 li
408.547 522.543 li
346.728 522.543 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory38 <001C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |86 <001C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf354.643 467.692 mo(\000&\000O\000D\000V\000V\000L\000I\000L\000H\000U)[7.992 3.32391 5.31592 4.66809 4.66809 3.32391 3.99591 3.32391 5.31592 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (PAAAAA+TimesNewRomanPS-ItalicMT)%%Title: (PAAAAA+TimesNewRomanPS-ItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /PAAAAA+TimesNewRomanPS-ItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-498 -307 1333 1023} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2535 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704AA3988900AFCFF05DD> |537 <001C60D8A8C9B7500429806B3CC3CECBF4DCF29C0F0C82434F579D345F126384A4209A082268F024BEA92B9EEC1DA480B64FE380ED6D63DA9C32895F036573ED01479229C835A4A0710EB0D9CBB07E04E7496DA9FDCFCAFC9D3C323150E286D3CE113FB80E69EDB11118B8630C55A22E8E102E59FA093D0EEBA7AD821F2215C748118A471F7275ACF016B3F67C0347B2BBE79749D1B9AE8B3DE490BFE4A82D30B369> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H /Identity-H 0 [/PAAAAA+TimesNewRomanPS-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUV+TimesNewRomanPS-ItalicMT /PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H findfont ct_VMDictPutHGWPUV+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf374.691 481.942 mo(\002\031)sh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 13 GetGlyphDirectory86 <001C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |82 <001C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |80 <001C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |91 <001C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |3 <001C60D8A8C9B854D00D> |79 <001C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |11 <001C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |83 <001C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |76 <001C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |16 <001C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |81 <001C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |74 <001C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |12 <001C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf498.741 426.007 mo(\000V\000R\000I\000W\000P\000D\000[\000\003\000O\000R\000V\000V\000\003)[6 6.672 3.32388 3.32391 9.99591 6.672 6 3.32391 2.664 6.672 6 6 0 ]xsh498.404 440.257 mo(\000\013\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\014)[3.99591 6.672 6.672 2.66394 3.99597 3.32385 3.99597 6.672 2.66394 6.672 2.66406 6.672 6.672 0 ]xsh1.5 lw
[5.99999 4.49999 ] 0 dsh
532.083 407.736 mo
532.083 388.986 li
377.642 388.986 li
377.642 409.295 li
.709804 .0799878 1 .00381476 cmyk
@
375.165 409.295 mo
377.642 416.102 li
380.12 409.295 li
cp
ef
0 lj
10 ml
[] 0 dsh
375.165 409.295 mo
377.642 416.102 li
380.12 409.295 li
cp
@
1 lj
8 ml
[5.99999 4.49999 ] 0 dsh
532.082 524.287 mo
532.082 561.501 li
193.555 561.501 li
193.555 540.515 li
0 1 1 0 cmyk
@
196.033 540.515 mo
193.556 533.708 li
191.078 540.515 li
cp
ef
0 lj
10 ml
[] 0 dsh
196.033 540.515 mo
193.556 533.708 li
191.078 540.515 li
cp
@
1 lj
8 ml
[5.99999 4.49999 ] 0 dsh
532.082 524.287 mo
532.082 561.036 li
377.641 561.036 li
377.641 531.539 li
@
380.119 531.539 mo
377.642 524.731 li
375.164 531.539 li
cp
ef
0 lj
10 ml
[] 0 dsh
380.119 531.539 mo
377.642 524.731 li
375.164 531.539 li
cp
@
1 lj
8 ml
193.292 435.353 mo
193.409 446.243 li
@
190.931 446.27 mo
193.482 453.05 li
195.886 446.217 li
cp
ef
0 lj
10 ml
190.931 446.27 mo
193.482 453.05 li
195.886 446.217 li
cp
@
1 lj
8 ml
193.564 499.263 mo
193.53 490.877 li
@
196.008 490.867 mo
193.502 484.07 li
191.052 490.887 li
cp
ef
0 lj
10 ml
196.008 490.867 mo
193.502 484.07 li
191.052 490.887 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 3 GetGlyphDirectory48 <001C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |90 <001C60D8A8C9B6079F623B1BE11B16961396A063624588AB070AF82F2F6FEA646F6999B73C9332DE350CB17016778F548397735D109B5E72AA9A92DCB1D7264371419D7043A117419C0FAF4C> |75 <001C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf101.711 350.054 mo(\0000\000H\000W\000D\000\003\000W\000U\000D\000Q\000V\000I\000H\000U\000U\000L\000Q\000J\000\003\000R\000I\000\003\000Q\000H\000X\000U\000R\000Q\000\003\000Z\000H\000L\000J\000K\000W\000V)[9.99591 6.672 3.32391 6.672 3.32391 3.32391 3.99591 6.672 6.672 6 3.32391 6.672 3.99591 3.99591 2.664 6.672 6.672 3.32391 6.672 3.32391 3.32391 6.672 6.672 6.672 3.99591 6.672 6.672 3.32391 8.66399 6.672 2.664 6.672 6.672 3.32391 0 ]xsh101.711 350.834 mo
290.476 350.834 li
290.476 351.914 li
101.711 351.914 li
101.711 350.834 li
cp
f
1 lj
8 ml
88.2195 431.949 mo
101.921 431.821 li
.709804 .0799878 1 .00381476 cmyk
@
101.944 434.298 mo
108.727 431.757 li
101.897 429.343 li
cp
ef
0 lj
10 ml
101.944 434.298 mo
108.727 431.757 li
101.897 429.343 li
cp
@
1 lj
8 ml
180.111 468.557 mo
180.111 468.557 li
180.111 461.199 186.103 455.235 193.493 455.235 cv
197.042 455.235 200.446 456.638 202.956 459.137 cv
205.465 461.635 206.875 465.024 206.875 468.557 cv
206.875 475.915 200.884 481.88 193.493 481.88 cv
186.103 481.88 180.111 475.915 180.111 468.557 cv
cp
0 1 1 0 cmyk
@
5.20829 520.834 mo
45.7082 520.834 li
45.7082 490.834 li
5.20829 490.834 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 146 ]ct
[40.4999 0 0 29.9999 5.20829 -374.834 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 54 
/H 40 
/M[54 0 0 -40 0 40 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 54 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
#.qOX[]Z^-rh;0LXh2<gVmjLV`4`go\@AW;W2Q\nYct:8ZDaC_R[]e8R$O)-SYDjbVl72*Wi`A(Xg7r5
19[gWWi(K@W2HetW2HSqV51&qYI1^AZE^X?UR@L?SXZ%5R%9q8PcC4CY-+n,XKSk6rila/WMQPeJWH1j
%&']#Y-"b+Tqn0GSYH([!i)$>rfCcRN/EOTP`:cuP*Dm%i8NPHf@89qccX5=cFGrST!$)^bL"\k[?RVl
TXWJ$dFR!eFAc1J?s6H$;-n'<=g;[Xf=&/kXeVhdR$a;;Uq+1PLp4P(^Uq%b\ZhW^S",V2YHtO?Yc"0?
S=Q1=Q&q#gR%9tFY,850USOicYHP=;Wi;\hUo9boQ(t.RVZ*IuWJuFlRuO,LrNIZTVOsEOS!B"jOI;c'
P,+P;Y-YF@[C*9J[A]mmTqA*GAquV<S#)t\Xp:/=OGn[JTr.gf'Vh%YQ'.2aJq8T7PDtNkOd2fke'`Nd
cdU7VT9Y1tUUkp`<ecg8]=Z;6b>9Tb=Z'R4g=Fj)]7FI)AQhV`1H\WO;,NEdF4%;"Whu;XPE1fhU8PZ;
_4e6Q^V[Rp\@AuJUo1/gWjT"4Yd1R=Y-P@9Wi)YkXKoLN]XbVfUo(,fXg#"&S"ca^XfeUURf9>gW2;GN
W2cPaVQQu,Z*L[?Yck::Z*:O=Xf\e4Z*(43Xfee4ZF$pBZ`BgcSY2dQURZajQCXVEWW'"(W1BZRR[p5P
VE1ZSVP^;hUS"-OV5C2jW2QVobL"JE]u?pk>',h5_9Al8AYZT@_SssOetR\cVO"^HdaH[uf@/0uej%Hn
VkC99e`,BEe^iie[&^-qRZWJ`OJ8V`]"k>M_nj7&]XPAV\@/cP[^E9DZEUR>ZaI-HZ*:@3Y-G@I]=IpQ
)lBL4W3*+sR?*l6XfJM"NgQoMXf81qUoLJtXo>R.['?j?Z2Cj)Yl_59Yl:a1Y-+n4Z*UgEZ4EgtM3aX+
TVJ!1M3jj,VQ'Qt#-=i)USOZ[p81ffW26AgWi;qpVlJ%icGm]-Ki:!;K<Ml&U.JXj^qdt/c,S/bgt139
gsFU&e^W4*h:pW6d`ot[eCid8f\+s:Ycaq*Tph..R$j_J\@9)JYJJ&jrj`'>[i)T\[^EHIZ*^mDZ*CU?
Y-PF@['d6J[(3f[rk'APX0&S4YHFk1['@$EZ`f^`Xf\Y(Wi)_oWi`A,Z*L[=r3-@0Z*:F8Yl:g,Yc[i+
-EsYYYHb@4VPgDeV4sZMKSGebU8FijY-"h+X/2VeUSt&eW2QSjrMT^nrhoprW2HNlW%6-:cHshLU62Xg
Z,kD@WDHcr^V\+8d`g=ke(NC%cI(:tf$Vpse^2n"g"QGY1"t:5e_f9CZ*("*Tq.RAT;/9_\$`fO]>_S&
]"5Mb\@&`R\$NHNZ*CU?['mBLZEpn:Zid_C]Y49U#cXi+XgPID\@<?`[^EKJY+hf!YHFq,WMur!XfSb3
Z*:M3YQM)5Yd+/1"0eu5Y5YOJY-,"3ZEUU@ZEgU6U8FTUQAgusTqSB^XK8P*WiMtlUnsrerh][orhfXm
,c7N;W2chsW2S(dbgFeYa3VuW`lu]FV/D++aiDZNf\#*4e_<LHe(*@*e^i=)gtg`8e^rI+g"G*:i83GJ
h63u\WhQ5\URn?_X1#:G]"Z(r^:Lkb\?r]R[^<KNZa@'GZa6p@Z*^mEr3[i^]"GYd^9+NBY-k[H[CN]U
[^`o\\Z`?FYcFe&W2ZeuXK\n4Z2Lm)Yl:j+Y5b[*YPt^(XWX^HXfnn1YH=e&T:qgDP`h6$StW'ZXf\b.
X/`%oUnjmeVuW^gW$\F?W2Zbrccs_[cHX\`a4&8ZbeCZmTuP*nc,\5\d+6k"eCW:"f`'DAeBuXkf\"g-
f\,!4f[ep7gZ>K<Wi;_hTq%pUVl1!4ZamQZ_nNn!]=PWP[gojT[Bm3F[^<BK[^<HL[/RHWZb*f\]"5VV
Xfeh7Za[EP[CWrX]"GMRZa-j;X/N"uX/rE$Yl:g+Y5GI'Y5PO4Y-4t1Xfeh/X/rM.Y5YU6WMlAZSstq)
QCOSBWMocs"KST"Une!eqksLlr2:d9VPpGmVlHYmWklm(bg+V_ajJSQaO/&<TqfTJeD/O(f_sJ2f[\O(
e^N%$f[\[3rR`URg=Y$7f\tK7jfP\dXfACtV5gT"WjT7HYGo(H^:Lte[^3?J[^WZQ\$Z.@!4;a2$+.%F
['[6J[(<go]"5MdXfJV-Z*CXA['R-K]sbedRB3WuX/r>#VP^DpY-5(6Y5YU)Y5YU0Y-5%2YH>"3r2p.(
WN<3#XVn:EVPp2^R@]RrJrub!Vl?f"Yct41V59uap8A.pW2cepVZ*IsW2dhXbKg+5#L:iLeBQ+b^^toj
OiPVif[nBlcI((fcdC;AdK%\ociDMndf@nrec+/;gu>]KZa6g:W2QSiWiEA4Z(HTH]>(nf[f3T:ZF%$I
[^Z7@!j]2=r3HF2Zi7<Z]">Pc]=b8IXf\b0ZEgsJ\[fDd\Y3r0Yct.-WN)nqX/`A,Ycb15!jA`/riZF+
YHP),Y6M/2Y,ne/WrB%<XKAS+Vl?;[R$`eY@=juBVl-VtY-+k-V59ubrhojtVuEUsWi2krrMUa7WMc_o
W7T\Rf@JL#dETt\aMYr]8.8>(bKA#RbPo]pcHjkbd`p%^cd:%edaA'B!7Uqs!7q/%!8RY8rja#Y[C!3B
ZE^[=\@ArBQa+3:\@K2][^ENO]",D`rj3-B[^NTQ[^EQO\$icT])K;B]Y46E(9=R=Yck@=]=YkVMlX7l
Y-+h+W2cntrN?.%riQL.Y-+n0Xfef%Y5YL4X/rD'Y,J@rUR@O-Hub)NStW!XX/iG+XKDH!ri5sr$*'r&
Wi2qrWi2lpVZE`qrnK*[f[eO!f$r-pb0$;S.s]:dcI(>#e'cXmf%J^,daHUof%8O+f%/I)f\"m1fDaGM
hW22W\$r`NZ*:R=YckRH]<o)_]Y(ed]",;[\[]5_]=PG[\$iaN\$rcS\$icSrjVg;*PSSUXK&;$XK8S.
ZaIKW`4N:_Za?m<X/i8"WiN9$Xq7_<Y-"k0XKAY.Xfee/Xf\](Xp2#1X/`5%Y5YOOWN)_eR%'1lO-lT4
VPgJqXfee,WMl_mWi2krW2Q_rW2Q_pWi2qtWW&dtWN+V(*SB#qe^MsudEg(YcFo+&^!P*Qf@nm/f\+s3
gtUH[g&BY(fDaG&g&B\*g&B_,hW=^J(V7/f]",8Z\@T>d]t;"j]t1hc[C3TU\,Nu@]!f*E[0*nH\$l:F
!4r0A(;.A^Wi;trW2HSqX0JtA\@ohj\[8ZF#-Ou)W2chrrMot#Xo#1*Y-"e-XKAS*Xo5C>XfAG'XKJ_0
Y,\OtU7.R<OHl6,Tr4ikY5PL%VuilsW;ES)W2Q_pWi2qtWMlbnW2ePKfGiGof[J9qaNi#C\AZbDgYLK,
dFQq!e'umoeC=KHrmCqueC<%!rmhA/gt^ZAjh/7<r43]T\[oDc]Y2%k]t:tg\@8rT[^WZT]">QQZiRSA
rj<!>[^EQP\$rmF]*,gJX/W)sW"c;4Yd(dN^VdRm['Hj;X/i1uWi2rsX8]1$XfhT'#-P&1XK8P+riQI-
Y,\M'XKMQ*(TXU4URIX:Od2<,Tr4cgX0/S*X/;enVuE[sVl9Nn&#cM,WiE"sW2QVnWS6(Yf_sD1f[ea.
bKJ#D[_pJAfDa>3cdU7`ajAGZcHab_dF-LmrmUqurmhG.gYCT=hW2Gd]tXHX&%]<^]>)+s^V%7k]!\rQ
[LTgU[Bd<T]XtS\[C3NR\,Nlf\%/uY\@B,^]"5PeWMlVhUSFZ]W2Zu*]=Ytt\[f/WY-+e*Wi2bhWN<2%
o;qqn*3QEGY-+e)YH>%5Y-=t+US=$<O,]HlS=QIOXK2?&"K\K!WMoNjr2L"$W2ZbpWmoMrdNI#fdEBe\
_7mOe]>)>)a2cKSf$VCD_U[>edaHUoe^i=MfDjM&fa6BfgY1NE^V@Lrr4FGg]=bkl^V@Fq]">M`\$roS
Z*:^M]t:b_\@AuV\$i`S[^`fV\$ru^rjrHKW2QMeU8+T](TOL=YIh<W^Ugta['$R2WiDqiTVnlmX7<7l
Y-%Z*+0)?DYd(F8YH+[uUmRX<Q(",3TVn]iX0&V+V5:/jW:?l1Vl?SlW2S"ecd1"eeC<4!c-aVUbfIlD
aO/_pe^N6sXot?,f\FsSec=7ue,n1Of)F83g"b?8h;boP\@/lU\@8rWrj`'>\c0)f[^NNJZE^U7Y-,(:
['?pF[C3BU\?iWR[C<WP\$E<E[^<?NXK/J)Y-@l-"L##8Z*F;8(p:'AX/DhkVPg5gWi`=rV50u_Xf%ql
VksBiI]&pGZE^^@Y,\P$WhuShVPU/dUnOQXT:VXNV6$c'ZEpm>YcFk#Tsh85Z*p^;[BQm@Z*CU=[\T[o
USFg:f%8F"e()moe^i6tda-"T`Qc]MbgOeYa2#F,bJ^a5f$W-qk1\57g""d,e(;jodG*6tijQ>*[^WcW
\@8uYrOMp;#e@OU['$F6YHRr,(U'pDYdLd@Y-PC=['-jDYctL;Y,nk4\,EE*Xt-][Z*C[@Z*LO8X/_tg
VPU,dV5C2fT;/6ZTVA0UTqe6UUS+9WZa@'HZEX;-!iDimrh^@*UnXTUTV/!VVlQo*YHkL=XJ;RgT:<?u
ZF%*K[^<NN\?rWP\$Da#TqS6Xe_&O(dact#dam!tcd0eS`lQcff$;7:cH3u5Uo'rL_9CHV`l$'Gb0n&O
d`KPZahl!=bh]D(Y,hN#"0Si2WrAt@Vja$BT:DF;Q'R]$Pa7Q$Q^sS:S"Q=FSt;pQTq\3MVQpW5YdCmL
X/i5!W2cnuri%QNVl-JkY-"k2X/W"hU7\-RSY2jTVPU5dX/E"sW3*#"XK&5%ZEpjAYctF<ZaI=B[4S_j
ZaI?S\@J]A['mZ__7dXt]XY&HY,eq4ZE^mD['?pBZ*h!HZ*^=$U84W_6.FK9dE^+dd+-^tda?Ifb-J1b
bJh6(SueN\TS&5rOKtOeUW0LQZa\Di`Q,`ud+$4[eD&l\XfSM"VP^2_US=I]TF.9ROcl#rQ'IT!P5^at
R@K_;R[fe@Tq@gGXJ)G`UnXWhYI(XC\#ZL/W2HVoV4s]XT:VUFS"6"=.\iZ3T:MUGTr"Q]XfA=rUnb&m
Xf/2#Y-4q1XKSq;Z*LX=['[0L\@/iVrjElTZaI*FS!]tN\$j#^^:LtiYI1aCZEC@2[C!?HZEX;8/[r-_
TVS?YV:!c@cHOJS`il\PV4jWUQXsHBNgc]:PG45;Y*uB+ZF-@#PKUfW`NQc&ajA#Rbg4\Ve^2k'P`qAt
Pl6aPPEV/lP*(lWJ:`LSL'WKkLPh(MOd(q+O<0FFOHG`iQB\#-R\,tRYILsG\t#IdSt2IAR$sM2Q2[!s
P*(loUSar`SuSZiZ*LXB['7!FYdCjG[C!HP[^`iU\?`<BZEgXA[^ppt]"5Vf_SaO:aN;NCTUi=#aN2ZG
cd0bVa2P^-Y-YO=Za7*HZaI0F[C*9IUSF]]UT'9@SX5P'Ne`d`P`1EULk85hA<!+NQ\Vc?Z+mrgahXje
\"gOH]"Pbu`7)iSe'-1VhTj=)QC!o'Q^F,*R$X5-QBmf#L4tA;Lkol&L5(J?Ng5rtRZNbtOHl#nQ^j;&
R%';+QF*`qYHPO2USjuaUnXQTUS+3LSXc.BSt`3^Vl$5aV5^Z*['mBM\@&WO[^EWT[^<QT[CE`PYd(L;
Y.;9_^r""0`llKKdaH[td^--d_p$6Krlu"sbItU$]!JcMYdCaC\$KeUZF@3I[C)d%TVA3\UTLr1ZF$p>
YI(X;WiDtiI;jk4US4ENR\6XnbKeJ_\&Z1d`kf@5d_rZ@d(dcGcF(@*_W-uLR$X))Q'RSsPa%ApOH5E\
N/`gTN/igTNK9KpQ(jS0QBR_uOoCUXOc#BbOccN2IA!L@ZaR6HYc`GYXf8>"V5'fZT;J9UV4aQYUR\0W
W3NV6Za$X8Vm3%pZ)k(#Q`6gZW1oMsS"6Ud[(!HT]YMA)bKS5Ydb**`]"Z)(`lufIbf7W7]XkJX[^33J
W2m>6\#Gh&WiW:gLh_s7TYedl_SF%+_77+h[BZs:USX!9Un*sNWf;J*Up/%a`72Q0[@P?lOhJ$/IT<;)
PEgSi&RKCZUS=<IQC!u*P*D8sPECodMMmCQN/WXQLlI=MMi*@NOcGQ^O(3?lFc(/pH[pWqO`hUnP+Ate
[C*9EXf\V)W268`TUh^FTVnTWTUhRKTU_jMRAQUJVNdT^Ga`l@F$"i&Knk88C`IPLPH_:#\%9/c^raaD
bgFqle$H9k`5os=ahc68\@/Q7Z)+.pS=jVDSpd)Q4G8WLLjW\HDLIDkeC)OX`5T[+^V71^Y,@h@G)rYt
Q'R\iWKD^rG@6SXC5u8*"rLYa;%ipV0/+k/$31bl9r=eeStVpHS<n\kP`qAmOc50ARus5'Q'G^.S7\71
,Ai?=QU[*4!/,?)L^YqrEfPX@6lD>m]",5\\[\lQYHOn#WM#uNHYARsPCn^H;0.k%P@c(OHUioRJO'<X
@9@^\-[fBMEg/^(M56i=UnariXfo7E]sY_d^93B<W0XZUVk[aWTO`M8B-(B;<glO?:BuJiA:kRPNc0qm
N&_T(Ra9@2_T^B7a1f?pS[a]RC+U!86[_:);$%nP"'#U,"t]gM!'(#Z*si#p!!"_[0bI:`!&oh6T9u+:
Pa78kN,EluE/&Nj4Gd'g>]G&l'nASc?N;(-6?cCLEr\[k>)Q&[Jr+r+P),2I9sM4=X0T+0XHfNGDg7F`
M01=*H:`*O?YKZWF?3c."sA=QAk-<?!'5X'HTqgTG]&7_KI&scURma?Um\6GVk/3hWe-n"2Em+&Kjo7X
&g;`j@9*FIO$[tfE,PqNN`h35&:]LaIWBiZ5G?H5H^LsYV+cGD&KcI.'h02D!%e0k!=KYC!#ttB!<<*V
!"Ju9$31&a!%\*M)CZLW*A%6kZ^uP4Ko]W-6&9.U14_#s=9'J&-Zr6dJHH%8>??^f$C+t4Lf9TR)4#)g
NsJ:FJXUVSD@r\<GXd=H?CF05@1>&@0548`'lt="4@*T\!I.4,FU3F(GXP>B4E_#<GuA$h!Af%3NF\D`
&<`&g3cf^HO?A#$%5WMgE`rMcJ0o/-;gJWRG=t8?!!.jR?$T%s'GlR5E.A9]MfOMZO'E-U@hJbb1]^YX
.g,hP+oi&Q!!",A#QOi<!!",A!#P\9/H>hf!%S$L0*;V)!!"hc56cRB"9;P[+TQA$/<CTu:&lGo,&UWc
+IFR(F[M9#$[H8;Qjj%7HVTkuP=kphQW]qM#DeG"N/<o9HA<sRCND:l*IUT^-A<^Y<<*hb)e3/.Gm4F_
;(%).!**;_Ftn.t!).W%K.d4>E.*.\M@sWI)us8T-&!+[8HU>s-uL\E!Zm@LEc+1%&.W8M,'sFmA8F\h
5_VQ,>DQ%;4pcLbGB\.\&SNNl!!Wi349-K&!)#*J$NU5-3<0Ko!&"<P#lt#[!!!*-!%S$t!!!$P!(?kf
(*=bG*B=*.O9l#CF[)$5NDT^0PUpfi!>h+]C4mXm+:2,&*hYn&6BZdULLc'k!%=R5MKSu&JPCe^D[Tm"
#6T!T0n:3f5QW3],%"FP%=TR!BG,V*"@[2FN&^nmGU[Q*C2*_fM)KB]!(LZhE]%//9Sj5cI;_6,,_f&"
0T[o'AHj*>2eR[fPT^T1Ets?]!&]$PE)LRk!$@.]F(#&>C-Q\p?3gj40E;(m$32sa./j2S3WKEg!!#4`
!uCqsrW!!7!($Sa>U'4`!>,nD!([)-"onW5!#GV<!!%QM(6Dm#Kd_dG""]BZDK#R_P"\f0*LADZ3LCVC
E<%GS6?$I1JIVm%1d+J9(bZ=F"rI>6C]G&p9gWe?F>X+DG90pm!!HbV3'M0jHQ`A?J.d*7!#pDA>#7=o
#6@jO/N<eC+q>_#'`^@@"<!#!9n"RD64,?".VNW%&W]R`Kd2m9"YkfDF&N&]Il1J/5&1K->:MBk!tljd
*s<5W4V[qs0*)%l!$_CB$RYoX#64`Y!!"&?48o3d2?4a"!!"VO!s&N)%0-A0o`/i;!ATs4E.9O%70>]6
.sQ=?"FF$2H74)'!@<47<a#P/>9tpH#V$#Y&de^F!<<*$!!!');F:F$Ft?Bp)/^u*-Z9f(=TSbA5r3*p
Beof6DB);H"q+9P.j>?M#lkVJ"pkJ6!!<3%!sCo'%4XH5:31tEO\#pHN%f?r%hsY"8q]-V71Lbm(edR'
"%O4P(^(l^!"&o1"9&91!WW3%"@<+h!'L;c&HF3X!"1(Q#mgS3(B=FM!#GP6!#F_t'Li*gS2>P;.#gFl
6&6@m@0?U;4sgbG*]b_M!\=ch'EA+?!!3'!!!3'!!!3'!!WrE)rW$&(.f^r?*ElPYCaK-2BF%=#"ThFR
+&3S)+p%oq&.]KY!=o/5!s/H*!WW3'!!3-)!!E?'!(]lp8>\ItH81IJ#t0OjB42JbAOnXj/O_H)$8)et
&-)\6qZ-Bk!!3'!!)!4j"[`7u$NMIO!!sVF!W`9$!WW3%i;ai>"tYEQ=&BlT)?_6Q*ZHg9$OddY%g`RF
!WrT-q>^^#!!!$"!<W6#$ipM3$j@:mIhi)/D&=Nc58.05!#[R+&L@Mc#S%"F!WiB&!WrQ+!!!-%!!<<)
!<N6%qu@uE!!E?4*G-?!.!Hh07i>eS"s5uJ)CuC7'-.Mo"U4u.!WrQ+q#Cp,!s8Z/!W`<("TSf3&0c&l
!!!f5!!!/m!9=+u%LiCM4UN>V#p09M!"/c.#64f,#lt52!seu+!!!/t!#>V;"9f2N.5t.FI#X>o#65&^
"rJ*Z'`J(@"TSQ*!!30)!!3-#!rN$#":G;5qZ$Zu!WjVL"q_n)5$DQAI@UiL&N:.A+:9+n!Wif4"UYPG
#nR4F!!*6(r;Zj"#Q"K3!<E<,"pYPQ,qq\lCO1T1ci=@T$m7*j"9S]+!r`06!Wr].!WWB)!!*'&!!NB,
!!36,!r;m4!YQV$1I55cLR+R-X0K%B[_)\D!W`B%!#5P:"on])"9AN+!<rN*!!<3$"UG>7r;d`:!=0D_
,:tlLA9iusR\6[\X/iB."pG,5rW3]9#7:M9!sf#9%0m=E#Qb/1!s\r9$O-b<r;[E5&g/DQ5#lBJPFneK
W3!&#Wn%.d#pMlXMO)'(gXG3`"9JQ1!WWK/!!3-)rW!$%!WW<!!##A:#7_On0M5bhG`.rYVPpMuYHekJ
Zb!]W\[B'M!s/H.!WWE,!!3-'rW!$("TS]&!"oA=$kXF'0Lf2QCk7S-TVJB_W;`b8XK8J'XKDU/"Tf/;
!X]27"Teu3!s/rB"UY>6r;di?#7_Ll.4@>X>\eeKPbtFaZ*LR;YcOq,X/`2n!9sP#!<`i\7oPYL]ZSUL
e(!:2g"Op9!!30%r;Zg#rW!$,!<`T*!#?.^.5*hV;-IOCB4l"4Q(FYDWN3,"WW&hCWN3/)X/`>/\Gu^4
!W`<%!!<3$!=&Z/"U##4',DfA1dFH+>@:kGASQdaWNEG2Z*=21'!A@<X08e5YHG#0"U"r0!s/K-rW4MV
":,8<#R;1`.P3_Q:1%^VFF/LdQ):^dXfJM,Yd(I>ZEpj;X/rA$WTO6j!<`W5$P4RfTtSIne^aTH"4c#U
g18a_e^rd\!Wi`0$OmO[)CQdb2GR.H<F'j'PaS5?Tp(IhLl7=`TrY8oW2cnuWi;trW2HJhVQ[,.\,ZU5
$3:JA$PF0s*%<I'6q^6PCikAhQ(=5"JUN9:SYWHoYctF<Z*:G1Xp;&0Za$^<Y-&lL"U,A<%M''b)C6OZ
1.=f4<`j?gNK]g3US!a;T!Q5/ri6X7XfSS*YHb@<ZaRBHYcFh(WUBg%!>$8695'Z9;`QX"C6O[je()jm
e'n6E)q36`d*U@pfA\k];.='\JV9,LR?sM<W2cDYTKT$IX/N(sUn4$<PE_Q2UnaQPSY;mLSY)^RTq.X>
PFnAJ[5'd3<)dOLFFf%%L5qLgT;ecaXJW%sWi)bkrhfdtXo>U+[/RKj[(*WRZEUR=Zb*lZ\?N.q5Y,!\
CNXfQLldOZQ(t4VWMZf$Y-G=E]>Vb6bfRW-ZEgpEZ4F1@ZEgmC[CNo^Za6pBWModrCB4JF()eh`8Ng!X
MOLN=QFjWF_9UBN`4raj_p?f]e'ZCadF?Cde(*%"e'QF`dEU8#VPpPrXf\h4['$U7YH>(8W26>kX0&>&
V5C#]R?`o!S=?"<SXc+9R[92"NJ`XPMMI1NT<jrXU_ff(VP^8jW26DkVPgGtZ)k.2X/N(tW2]crs/l:,
?F7/J\$rlUZ*(()Unju`StN<kTVeWaWi`D+XfAM&Y,SS,Z*:C6YHbI>]"5Sg_p$?F\[JlSZF$g=ZE^gB
\$iiXVk0BKVl+m.W2$f5_8am6\[9D_`m<&W_:$QR+3)XPd*^7^^q[k7b/hfOb/M?C`4)_?S!K:lAR];X
hgb~>

%%EndBinary
grestore
np
4.45829 490.083 mo
46.4582 490.083 li
46.4582 521.583 li
4.45829 521.583 li
cp
.75021 .679683 .670222 .90164 cmyk
@
52.0409 523.459 mo
73.7908 523.459 li
73.7908 488.209 li
52.0409 488.209 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 146 ]ct
[21.75 0 0 35.2499 52.0409 -377.459 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 29 
/H 47 
/M[29 0 0 -47 0 47 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 29 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
$5OWd$ipV=!!s,GrX27!"rAF.*%!dEB1Gm8?p,ni.ki\=2'XS&,p4Ta/1iJ34#K?(DO>3cY)m$A0e4q=
5u9[F?!LH0;bTq[<FK'NMR<#X_Z/JUli7Y!&Q&lRG<Q*nA4SKq,:G2n2aL2'4@;=o9g^][/4`fR860M6
5=oX":J"AZ=$o\X9i4tt=^+`p3C[J'Q"tiPP@IF3BiJ#9F*`(cOcP<[MhH_,EF3pY_="PHs5'"@$Ng/)
rW*-(!W`B(rW!rC*)$__HU%ZYDdlj<7QX%4;d*3p:J*uW:dH?Q7t+QM7TaP:5U9u[A7B%O@pWb]ARoIo
BlIZd5t,=3OD'*CO'Y&.OG&@EMk$iR^:1)EWh5Q3J73A`_VhE5s4ib;',(WR"9J`4%M]N]$k3CQ#6=f)
"s?5<,'lBS!C'1^8l%]76q1*V:JO>@8PD`+*C*Y66We/43WM9DB7=K1?!:<4?Y3taD.-d\@n/^fH&uQc
WJXdl=E0.UP`q0$Ts;/2XeCo-K8XDUNkXAF`rFVI!!!'/"q(M7!sAuD$k*CC!sJi.!!=0("X8"H!=1#'
<&%-H;G^"_>uj]]002Zr.3:WO@ng9J@ls`).S`?:BkUjW@rQj:DCT.#B5:1.?$MEGJtn&t-::^[DN:`r
Xf&GB_R,hnDh!XWB8O.RYg<?sLAh0L!WWB7%LE=I*?Pjr!<E<-!!!';5Rf;b2$"@0&jHpq>@CN-7SZcO
1GVR!6Q@:8;.3mEDe)!8#o>]P;fHtl?<CQWD.[?mEFM1&@WIQdP96QP<%p9pB24#f^U:/<YICWtO+<(=
>&0/*f[o?ed>7]#=TKBb%g`@F'FOsC"UY;2!!<lu2FqaB!>6at7jV5B?;k-+:K14M1JC\($R%]+@rQ7(
@mU/'&NMUQCMdEnAnHgNGB@tR>rYDbD3LokR!VUV3&Y2BL7b.RRAujLZE&k<KSje?C5Jk>s8V`2L\q,\
#87gX'FG-h)?U$I%fQH-!Xh>BB4NIm+%7VZ95Rj.Ee&CWD.H$f7oM5N,<JD-J8fF54p</R7Sn/=?&5>Z
Uqa'gEH$5/2bRLlR^T,WFA+Ji7W<LGRZ,bbnb;D9TRhNLE!\sLK;.AZs674KrW!E/!?hpV8skloQtR$3
"V:S4?NLL0Z$B=k!F/T*?sID\>Bc0eNIGh:0hP4q(*Ge5AU8<8?9gV185N`4F_?]>\@9T&O*5Sh=[Ykn
C7)6%PAj,t;-[[NI#WHSa2c0?eV7abJn\%lKq[,bs6$kA!"],2!X0,Q#Y)ePa1nY`!<ro1!,;TB9:^0/
)Z`c4>@h)TBj5V-FED/.7km_7/e]?n8nEKmFCIKi1/1eXD0BQDTUDIb]8q,XGum:'Ao3m>W0VNt9i,22
E.3[jUrg6caiT9NJV.T0AW!58j8SV]J,fQM!sK8S#Vgm8C^#36$ipVArW$m>$VI@IAKh.<8mH.CG'Rn0
8JYcSE(i>j<&>F;78%0;DfT5K/N?gAD1I7_@SeXrWhtYtG'd@Y95&.(Z)*Y)7lN\6AS6@EGALA7Gc%3W
@"3iB9k9*OcKY;h[X%oR!<rcK-P?R_!"E(.#ltACrVus&$=uMqFBopf6rdT3Aq,;OC,c2^C1^'u9iX+i
,""k.H#R_.3Aj*)AoEQeIr@UY;jil+F`Mk76V1j&MQie9Dali_>@qT%Ndl7E%pP9YEF*sDCeeGqR)J=d
gotr%!!*?3/2nR[rW!*X.0fkX%fQG:!s^ZRDH%JR>@LiH?%.6QDgcXO/Oif>7T<Y[*[O?RB74`=>;fD_
?"@T,M0=,\/M^LFJ8fRY@7!LuD32-&PAs&q@:!GQLQ6Y=Il]l(F*MJLMfMR$MP&)Opt_ri!<WB+">D\I
,np=Z!=&u7$5N[C!!NfuWHq\`!,?@S?<Dc2E.NO12*t)5:f'tk2\-]l9Oi3_E*+i&@pNJQPDsd9HV-8!
@sEE@H<<'hA8@1+UQKCZBPLaX?B(+oP)ig<?>FV*HA6&s<.^X[p%R1:CBb%F!s:VI'eh0;!!EB.#R:t@
!$VLP3fS&X&ccHV;d!+NKQWB9G^"IP<Fo9?58khB93uFNDgk\9@:WSNA!E!tKnO5VLNmfnEdV%P7;6Fc
S!oOX4`5CNARq@(L9dkEP,Xb!Q[k!17ph.?[cHH$Tjn96!WrNt8K:l-*#_$b$R?,s!<<*)#UNe^<Y,7=
BN&#0IY2NpPE1ZSIq`nAF(8*NBOPLgD/i`,>@guE?B^1bI"$p-K:\6dUm@[.Cj;"lNg60)E'7uW?tE`5
RX_-B]!BGhTY%2.T7WWI\]NOfk,;_l#lt,/6Tu2HAmnPh?86%]>:'Uk5:Jfo@qQMVC.g-C3JX#eRZi5_
LQIUWO-#KgQ'[f'PEhD\12KW?5s0pfNKf9=JUroJOHbrnQ2m6MR3S5oW.@-jB08jHJX__,VO=W[Z_F+n
Y-b[Ua3N#`f?LX/'ES15;_;HJIodsm4_nJ+BPV^@OIDf8Up%Nu!(o1!7RhodJ;KP<MMR4MM2[CQO->im
Q&q2oJjE*m1.k)dKmA!#D1-qjO,AmWNfoNhQ^4,3W/OA^<#[bo6[4?3R&ZCLT;eEMVPUAu]YMY4f%JBa
CB=A6?6:mB10bkc4],$D<**C@H&%QLS#3l*!,u'm/g!)()bl-+ItE?-K8#)9MN<j]PE1cdLJVnh0et(<
/0.'(@<-gIMhm1ELl@7RPEVE(W0pkMF#uE*2_6(TRu!Z/&YkqaStW'_\%Ti+eCE!tHPlq^!%0T6.Q9IZ
4@2J1=(QK,Mj'R;L]`KP+UA,\"TflcD1I.iKnP,5Ll;7o3g#JaNJq,$CFBl,)@Hin?smr#J;]8=LP^qI
OHPirRA?Qi\;`-Z#8@RR14+eHSYMaDS=uma\@oo'#1V/Wg59;Sq>b=>%Oa%o76`t':0M:PJ;BDQX/?AK
<Y#01$4.Cg:31o/J:2fnJV8f9NK&sXMh[(#Dbh2R#SIU`*^jaeGD(d-K8>GIO-#HdPa7o<EfOiS$3LeO
)`1ieW1U/aT;&0d[(aAta3`2eg6`i\r;ccr()eqW69R@i6W7E/EHcb`Kor;O+WLjkrW#^p%P_pJDgchO
GC+srLPUhFL5CM9E$?>:$3p_8#7rFuE,U5WJ9la!M2@.IM2[IZTR]$\(_?fO":?JCPF[l7Q]d],WNWb<
]=u/&bLifg!!X/`)E9;s-t4u";-7%/@:X7rOtZk<$4@"=!<<*]Ci=-3E,0E8H[gX!KS>&6Jq\LN"V2%N
$4$k=2J?lIIt<#mI=m90LkpqGPEql-&/Z,s#mLbF(JpQlTrk#US>30m\%'2f^rjgQ_Y4$B(E4JR/L)Mo
5"\UL=C#-QFd)o<!W<!q"UY83AU8KBGB7SBH$t3sKnkJ;Mh?q>"9Sf0"q2"I#[DLmJqSr1ItNN8M2dOW
P+A>GX;2BU#6P5F$64DoV6[G*S"csj\A#\raN3&gf\#s!*="2E4$GYO002[)>@D8dE0ccmV]#dA#RV"P
%h2qnEHQ;EDJXQAH[g["KnkA:KS4gg"U#,@&/5ci>'+nDNg,Q_MN%P!,F+[dSYN*a-l<7$$P"'n/Ujn2
_oKL#^:hA,eBcRqe_/[.f(]4n#:V;q;,';N92o\MFF&auO-uZ6*YJqp%M00Z&7K?iD/a<+FE;VPJ3e^;
KS>,4K7+LE%1j-b'G)!]DJalWN/31?KoD"MNKKKoTVAD9+Vbh(&/uE>IAWjJ^UUVVZ+%Qg`5^'Me(37(
p])<=*ZZt"5W:ec5u_/q@W-RFNKokF%hB-U$OHhJ?iFULBk:akD/scGH@LEqJq&>u#R(SH$4%"L#8p``
C4Cu!Mh6S8rJDe\PaA&:W?*#k&I8aZ%QK'?Wk-3d]=PMb`lQ3AcHjqcf$a<n4pN#E/35mM2`Erq<E!%3
EI!4sOU2@*%0d7O"VY6VBP2*m@W-1,G'\LaJ:W<&JU7D#$O@"J&dfI[DJk)a/!5^DL5CnLN/j'dR%C"N
'c.Go#7VUc2hJ6:_9'O)]=c#'bK@oOe'lardeEf1#9FpB5sI+e5"JUT=C5faH\IHA"pbVD":PhK&mf-[
@V0%TCMe*6H$OddJ:W0"HN4$M"U,8I%N/JhDM3q2N/*7KOoCCBP*mG^USFe!&e#*N$QU*GL9n2(d)j/B
`m*#]da?[ug=+X$p]+7u*ZZsu4>K#c:0Ck.@;:+=M3*i1%1WgP$kEd\?Y*\SAR](aDfg,IH$t-mJ:E)r
!s/]5#7D1U)I@E$JVfVSLQ%@\P*1rkR@U(IW>?<\%0m7\$l_<a[B[Tlc-4,Ke(XfP"khP[eCi:F!+-$T
)_=$94Zu><@Us"_DL@(qOHC\()&s;'&ePITA7T+[@Ua+jFEMkSI=H`uIt2hT#Rq:U&/>im=`SJ8NLZMr
OdDQ(Q^3r,S>2m],p!g=&.fs*228WNak5>$aO1FPk2>1Qi7Zl;g<oZqC'Gh'0L/6&5Ykm,E,]l@IY<`G
PSXZ6&degF!WZ),Amo=]@VTk(G'\IaIt<-#Is_J$":5A>#R:K/E--quSXbLsR%0S4QBmu2Uo:@7&df0S
";2:jH*t60g>Li0e`#lSio&hLh:^K/p])uL*[<U59h[cJAoVm5Fa&:iP*q^J&ekrh&I]'N7WWijE,06"
Anl+$EHl_XJ:`H)qZ&DS!<Y?*Itj,SRA$@QY,n_-YdCjM]sA.Z'G;)q*ZQM:]ZAjrs8UKre(r9n^W!gt
\%/I3!!"`+69n[W>#SO9GCY4#PFnbT[>55''GD&l%1<7nBm4B7E,]E%D/aZ@H@:?qKnOsQ!&F]Y"".i2
LRFs5Y-G@F\$i`S]">PeU^I_J',MH,)^A4]`81@ks5iJ*jk&20beV')\t/Qq$QD2qBQ\<3FG?-SSPZ)^
Za@$I>S.el)Aa8,'+cBsGAMA?DK'T@I=Zp%Ko:tKNc>1.$OR7M%1Nso@t98rU7@R>Sti$RStDpWVl>1T
&/Gus)'BnI3KLAXebAA.rsASqq!me.gYC>cpAbs=2`Y)]A7'"rMiipXPH:pgZo&L5(`!r%'b_2f$rhFe
F)u;>Ed<(aJ:rQ3N/EX*/-Q:d#7(VF$kEnMJ;'8eU6M(;USFNSTq\?\WG`1W'+kon*#p4MI^$Q:q"Xjg
$2O5fna5Aogsqqh!'13A3F75V?"\JCPDtTdU8b6$(D7Ao%13UU&./S?I<9^XGC4pqMi`mZOcu&pP$\b4
&.B!X&eYoj=pKn>Pbt(:Q'qWC,FtF!Uo'u#&/#Q`%1sEo*Z9!rYeSuCo_J=KjQPU\gsXU"OS8`D"%,7V
JokgOM4CB6Tr,!']!`(a().;g&J5We$<M[uH$+1VJVArANKKEiR?j+V&JGce%1j6g)AHJ8MijX$Q'Ro3
St@7!TVA6\Vfi^f&e5Ec)]L(FG-/*_e'.I[p$:c&i7ul-bL!3^!$;>96r\/;EI!G3U7nBc[_Tbn-4:=p
$jmCP%0Zf2I=(sC/W5RMP*_N+T:_gKSr+0q'G;&o(Dd_t=G`--US4N[W3!/)Z*CXC\[eUT)]Tb5)]p=L
+s:s2]ZAm\YHtL@XK8>$WiN8(T(`4h!_?C8OG\sXS?&is[(jAtbft,F*[)[L,9e6F'3fs8JUi3.N009j
Q_'nGV5(#R*$?LN,pk#e+!+gMQ_C@TVQ$StXKSq8[C3KL]-SpY/hSn;1bgY1[DgVO%GJ4sZaI!<W3*/#
Xf8Z$!"oK8DMt!JR@L+WZ*CgWc-Xqlao,+5;,L+d;H@1FI"dE7NK06fR[^"CUS=?OQVL:P:f1.i;H?n4
HB4VkU9(K#YHkC<['dBQ\@ZNlDJjN;H$Y!qR'P-&jQ*VRYI(@5WN*&$!jAf8r;liu'E\LN0O]p5U7nNi
[^`ua_9C3Od*MYn&Qi1<='/R1Bm+rWL5h1TPF7j;SH>1FO8`,h<``C*>$YEBE.X7DTW+sjX<b$TZF%$J
[^U=!GBeF\Jq/`9PGGqEkNf4RXK\b)Vl6VqXf\u0"9&H'"`">J$lqTJMO9QpTW"rpZF7H]^qRHa>$+p.
=&i7%='/gGFa\dgIY!00LlI@TOcPT_<`N4'>$G9<@UNVXF+fU@QC+/2R@Th<StDaMTmD$7J;8rAO-c3$
UpeA"lK.9qmH<Zoj5/VKhr=V<%g<+@#6tVC$POmVAU/?AJmaCpPaS&<W2lqo<E)pt;Gp=f;H-e+BPqs;
H?k!jKS>;@N/`aSM,7)K<*!(&>$G?CBl/*FKoM4VPEV8rQ'n,6TV?ONH@(6rM27:WS>*0r`6?ifgu7,H
gYCiKjP]+u!r`9<"9\o7$kjX55"o3jCN=WHJVB5QSY;]eIUutu?XR,D=C#HMCMn39Ci496G^4afK8,&5
L14Y'AS>dpCi"-:I"6g'MNsKoS=,h6S!oe=U7lgWJ:WT9PEhN-WN`_=]YWXllgX3+kj.R$m-<pD$4@7P
%M00^(*G"Z2aL):>@M>eFF&CiMj'Qs@:EVP>[:K9=^5?EIV*82E,9B1EHuhYI=d*)K7[H;@:Ee]BkhL)
G'A+VIY*]GQC4#(Pa@c*S"6*lFaSUlL67RcStr<cXg>Rtk2bdflJ^ddl0dj,"pP>>$4@:Q&/?-++X\s(
:fL_1BP_^3I=[02Lj!u_FDYl-BkM-pCMe!2FCSiqC2n3;)L-XXIXZZgG^FddJV8Z4MMmFNNKBBuUSOc]
rhKRkV#I5OH@(3qO,o^!WN35)Y-G@E\@]8^[C<<DYHkF<ZPXQ!*?cXS-SR>83&s2o;FaD[>$bWLBQ/$:
GBJE~>

%%EndBinary
grestore
np
.75021 .679683 .670222 .90164 cmyk
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf21.9106 536.263 mo(\000H\000S\000L\000\020\000W\000H\000V\000W)[6.672 6.67199 2.664 3.99591 3.32391 6.672 6 0 ]xsh-11.5228 447.486 mo
33.4772 447.486 li
33.4772 415.237 li
-11.5228 415.237 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 146 ]ct
[44.9999 0 0 32.2499 -11.5228 -301.486 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 60 
/H 43 
/M[60 0 0 -43 0 43 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
,[G&!Bl%m3C0t7H:e!`43C,Yi78@-0G^k$[E+`<<0cq>L&.\XL2[g!#&f`)D/KYZ@(`F>7)As8&/2]CD
1cm]Q/hAM#-6jWT(_RK!)C.'t4ukP[1aj:Q'+kTX#lY&B#mLM9$5"*o*"`Ja%1Wp]%L`[Mq>f^Z!<iPu
!!<<.$3n'A%;0X%DfKuBCh$mV;b9=o4#f;]5XItACN"K=BkUjO3%5[Y&J#?]%1N1C#7V@e+ZCei)u^j,
*ul7=))XN?3B0,`1bgX9.4-5]*Y]8%().iC0f_*G0/+[c":bkI#71;6r<3]9$P=."(_7,h&J,Nd&.T09
!;6Bm!V??o!sT/:r;[!%!WiB)!Q>$XG^tBnH@C0\Df0/p<_u:R5=84C:g7[JCLU@I"]IuG*to4b%h9'Y
$OR:Q%L`g_*'#Yt+oNT2,U=Z^3'KPf2`irP0J=t+,p46J)&shD*@3Eo1G(+,0IReG#7(22'a+U>"9eu5
"UP_['+G<V$4@1L$k3[&!;-<n!sf"@!$ZfBK7/)pH?=7MDJ<H\:eaY]?!grODe*!H6Us[90d@;B%fQn>
$k!CN1_1--%hog-+rqXF+X86\.k<265X%7h3B&ZL1GUX8-RBr^-S@&$0f:O0*Z5qF,o[F$"pOr.!WrH+
rWWK/#Rh7QrWi]8$OdOV&ejd8!s8`/!os?m!!7\'K`6K%If=XFG]n">@piPC?=@5QAmInh.kNA/-6*p?
&J#B`&J5K_%hTHi(De/9+se]o3'.I46:FC'3]T,W2DY7d(c!cs.OZSn-S$_t/2&Ck&If<m+WV=)"U"`*
'a"O=!<N?,"pG/5"9eu;%MBHo)]^$j!!<B,!!2`m!!2Bc!W`9%quFe<!.Fco2LU!uH$=FPDej)u>@M>Z
?t!A64Y&$2/0Z#Q)&!Pm&el#k%Lip^'c.T0-n[886VL9S<``H^r%nL30eY170eY77/M&_./i>41.OcAO
%1=$n)AEPb"9S`/"9ei.!<N?-"U,#8$kF!k,:4ig.kL2j!t#/3"SD`q!s7um#lt,2$4@:M$O6t,!7h/J
G;aVeF`DD?Df0E.Chm^8R#5`i@T,fS0InUp(`jS3()If+)AX##&ec$!)^Hsj2*+-!9i+\e<r=TP/hSjW
/cRI&/I*mZ5ZL9,-n-Ac)\s)))]B@p"p=u0!sA`.!s/N)!X&`6%hfZp+XSTd.Olt;!!3?<#5/#t"9SQ&
!W`?(qZ%',!X&i<%1<aY&.&[I"l]OC!!I@_EH6'uD]!>.CMR[#C2.3oS&)1O@:<,/3&E07*#0@j(]bQq
r>Q+a(D@K%+X/Hm1,M#j5m]kG7kH5A/1W2"r[[st'e(X`-ne\PBK.@e,T[g=)As>("U,#-"o\Z<#6b52
!X/o;%hoWi(`XM9*$69k!!3ie)tj73!WE'"!X&B&!!E3#$N^J6$4@4H$4$n<!UKdd"6]aU!,l1Q@U2o-
:K1J$=%u%N;da0OKrUh_?tWkM7Qi^l.NBo]*ZuXJ*??4B)AX26-n-)[-6jWR,:Flf/i"b'/12P\+!E![
-6<s>+tP#h5%.MA+X\Z\*>KP8)@dDg#7:eE"pbG>"Tef7%h]<a'G1QZ%Ls0`&f)AQ!!*`Eq>_H8!WW3/
"U"u6"9\f1!s&B&"UYVE&J#<T"9A\C!*fM-=Bes"2)@<^6U!C^0K;:(@:Etd?X-]5<_u@B+s8<^-7:;s
/hJb0,U"Wj,T%.ANe8G_)]^+I,Uk2g,UOfT"U#>P()$uT!=BJ`+X/<^+!2FD+!_pD%1jEV%K[:X'`Jg[
$jdL[%Kc_JD.F1X$k!RT%hKBN!:9ad!W2p4$OI1L&.]6]%gN:J&-r::'5(MW!!C@D!>,S3!":bN6U!Fa
/L;_j,pFN8,qCZNr`KY3>?=g#;G0A3-mL)Yr>mO7,9n<O,qC&K*]oRkP:[C[%N-9.+!24<,9RpC'b:id
$OHtA$P=L*+<VXH*W@!!*Z#Fs%1idP%1E[T&J5EZ&/PfY$7'tgGT[;""qM:E&H`"9"pFGrqZ$Ttqu?^!
r<3*)%g<(B%0QY6(iP7H(]aU:!R1TG*b-,`!#dRJ1Gq0T0-MYi.P*;23'0l2<ErI(9NXqb8LQVT3%lHj
(_dJk'G_B.*?,k4.r_JM>;%6=%i66-*?H78'c%W-+VtUe&M4Y2(E")/)BBt=)\X/-*?5\*()@>`"pG)2
"U>2A$jm7F(K#s47j/]Y#7M4WrXf#.!<NAj!!!&s!!!&s!"T>;!W`916Z6d+)A!#O!!LRI!@f&^!"0__
)_!Bg-nZnt0K/nn)*C>W6q'[`;bK/?76E4V/hS(^)&F,.(_[KV'bDO&U6J\+$k40q*?uXL+<MX3#7VOm
)B0e;*$$1H,U"3T,Tn6P4=2'[)'9V.&Jc&i%1ERQ%1<CF#mM#;K69<m"9T/C%MTHe&J5TR!"&l:#6bD7
"9AT*!W)j0!uVLQ!XK,9!!*'"!s8T*!!33"!!EKjCLAdq#5eH'!rrB'dJs:m'(c/^'/2Nr)'UR\,:G6(
4[24t3_)@n>-rK.2_d!E0-_Se+<DRH*uG\((_K*(Wbj$n%ONJC.k;f=-n6Ym-3Y>8(Cq3%*Z#_8+XA<X
+rhmL(+k#'#nIFT'+tTZ&J5Qc&J5HX"q(VeI#Co<"p>bY&K)K"(E"&*'EACP"98Q1#64c)"9AT$!!3R$
-2dfD!rW*%"pG/7"TAB9!<=3OE'aj2!!NN+#mUP;#6k>7!!)Ee!"J8p!>mN]!(9P!DF#6[(_I].,q1K'
3BnQ7,9U4/KHMa!1+==f)\sD0()dr"(b%.nX+2oB*?QLV+sATl-Sd>-/M&_U;CiCj&do=3'GVE#)BBq8
+VtkXV-F?='c.Ah$O[4P%1a'^#SA"!D38ET%hf]g&e,6b((hE#()I`24@'ng!V69r,]H<T#7CkBr;[?1
!!*0&!!3N?<cLtL!<`T)!!`Q*!!EH/"pOMsqu?ag!q-*j#W)_T!)eAZ?"HMB&Lnb?*ul=F.5*8*+<tFF
S4FSs@PAB9-la*<'H.i/3b"qD;BQ]!-lk#^-86Mb.2F9Z-n/Lp6VK<J$R$)q&.T'V&JQH8'c'9FF"AdE
0Kp3P$Pj-_$4@CU&LpM5E'4mF)&j5*#7_LV$kidV&JGjP2`!H<!!!E%!$2.@!%iG")uq6;#ljr,!!3-#
!W`B@3c%qL"TSf8"TAB$!W<!$!<N?)"76'hA.\S;pAb4D%.=0,5VXo^?<&p)-l*pJ(`aY=rYnQL@(<OS
+`NH&*%!6R,S_FF+C(P7A1&6;+!rHa+>Y>e3+-8T.OQMi0-_Sr7m\R8)[d;m$P=!`(`!f!8t_SD&5mHp
&fMu,&dAaS$QhKSGs2T:"9]#<#ltG;!>ICR((L]\%6H-h4%DIR#6jr(.g6%`#u@A)?R9K;1(tTE#SRIT
&eIESIROnR#mLbG$4@da$Q_N#*u#;!'C5]&Up'k""<[=;!@08q!:^&<-SR/%3`K*D+X8co,qUJg)As/1
Dm-@4QDpj0?qVaS)]U+qNi7O]+<MgY,p+<V.4H`KT"_CA.5!>0*$ZUG.R--L'c/&6(EF>,'bh,p=-\nm
G);5d8iRas$OdS!BS'A!"pG5@#Qt>;"9\r]ClX'1%1s?m,qLDf-pB?g+TVWJ!W<!K!s8]:>a_gZP,b$h
8N.4_%Lj(,Ck5t4%Lij[$3g_@',)*@EK>W>',MT+m/R@nEK<"5D.F"L!!3`m#4qls)-o6"!"CM3/1<&/
9jCIN-mUAsIN^3c7T=AsUQpn,Tq76nBe1eW3GY(K3#,1q7NX!2.76oi.RoT/]s<Mh@sEMH+Wh^F-oa^U
,8q7:*"s524%!8*N-KAgM1p"b<$<Cs-;])2,6Tbc-O:.p$mI5;$mTD@Oc![&793eG.O?8\.5F(9'a4^B
"98E6010!/-D$WgSunT@E*OS2&gpP%FXRVY7ktYo*>g@f.31?jRA-*i4]#R%mJmRs6sr#+5&*tB&-De1
!Wa\jo)L$O?\2Yt!!!-/-RC,g+rr-t>tHq%0.eA.Dj[)fWMl8PPE]]OIS"!7BR6><@6QhdR^%)n;d)nF
MgU)G['[<OT7rT&S/`Cc*>];-/426=(EFG/-!l@bMNj9SI<Ba12)e5d<*k0%7OTQPFc'-70fLU^?Vsg@
LkpnKG@5B;GpOXX+r1h,-T*+X"9eo.#>oPoKr(Z<SsYsY8j?<5<F1/u(eQ>1:3r+1+[&+L?YO%aJXDgr
SqV'/KnJmq&csOG5^[iK6Spb(!!!$"!<k8(r;ZmE<s/C$2ZsKk"sdJ[B6#U5+>YSk0/P%%/hJ7o7po"U
1+58;R[on;Tq.^BPZ'8/LO"c[E?,lL3CHqQ/Uf[3JT[KMNgliATr4lCE.Nn''I"kD(a'k5(GS?8-QNmH
FcDK?MiWaOKml924EG.]S6ZmB+t5015oLkS>uGc`E-d:rKoh@/=D)Yo*@`T`*?uU@'JDU%+VbA(FH2lW
WO'=J\$'+%:5O1MRU-dC,VD#H:ae/EH#K+8M@,iMW1pN#JSosoL@G6M)+e.1AUeuAAPW4)"=4U.IK]EG
8.Q162_H@?@:r\qJenV+,U+ir1+k79.39ld7U&kL*&*#1S=>n7R$<l&FC9-WOHttg#8%dd$NgVA7?!7i
VNd=/SZ&E`U4[fOOHGJF-70r]+WCt/(b\09*"3d-L6%@LLkC/,JmM)XLk(5+/HcIn$3L8.!@_btCjp2D
Fao=1NJ;(bGC"?\/Lr4q-Q<^6(+D:!(Bb@lKq"L,W3N>*Z@6P0V2gdc/d)Rq%LN:E$p]>tN2;StOIWPY
XJCB'OH>G#!;$7&(H>T"<F/m%;-48/$<]8U,kh:>)]g8'-8@/DG^ad>(*bIf."?>YG'%A(@U19&4]P98
0nYj]QBIGpOcGKKBk;d7J:q<"77'=;=]epKJqf/@IW&e5LP9kkDfp8JF(no`@9l`"8OaG9%jsFs*?00`
PDOsIJUi5uB38/MA8lQc3]f2W5tFF8=(c/]BjFtB>BG!r@:!JVAn#^mA8#RX;,^.-(,&*?-maYBZDaq1
\$WHIOahM:IZAPO5!:ti9N5/#G`8)aVNZa[JYJluM2%"NO,FPS":,24pAb1<&79cg<E`F"91g*."We0s
(]jI5AcW/V+t5#W%0[(o0bY*.'G_GsNg#T\K8"r&E(Mc/8;2CZ=-K,;Q'[VnO,&.6IXYa<FEVbMIX?!H
H$jm\IX,j^?t`nR?"%VeCM[p2GC+[VD/X,o<&>R,/n.s49T#!gKoCY6*dr-FD/O5i<b#]NAnks`<F]QH
?".#4>Y\9p9heJjr`_iu@t'/aG]ItGB3RDD)E;VF2-QHSUU7P=YHt0oR?3MJEG9-"Ble6*@!R*MI#j/:
Q?IXsEcH;WJq8N.N$L#+)AEu"#6Oi(&IepE!).c;?Z0"=8i.S6+!1T+"UGD?$5!aO!tPtT$l9HZ('=aC
!WiK6$OR7O'16PC:i0uB9L_NB8S<s>CgD1=MM6\;LldaaQ^3kuMM$A"EHZGADesE@Is?EkDea$&CN+?8
DKg/BG;N8l5#tWD4#AlN1.uCu:K(nPI<TgWG_(I'req);I;j%6@:`tN?X[,FBk^ma@oZ`=>[LoL@p`hV
@:MH-=%He/7Rf^26q(O:K4APFR\6:AUT(]5_T'I,[&&D)E,BW7D/XH=Od2?,X-T$9R$XD=Tq%sPT;DSj
!<<3(qZ%`?*?>4`'/M^*/MfCc=`8Y2EaD!O(CLKX$O6qA$QC-&IN9O?%M''^'c@i%*Z#S38Pi2bE-#Z$
@q9b:K7AT2Jq/5sK8557MM6Y=RB<9KOH+s<I"-KiEH6#3COq=dCi=96G^=XYG]IbC2a'8k=Bn]t9hnr+
@q'"_F)l/:FaA7PH?=+RPbat,J:;NPCMms(?XR,;;JBoP?XRAS6YC1LAS,@W?pR:R;.XHL=^56MI!Ts`
J<,SGN1$H>TW=l]Wlhfh\!3#+Fa/7[H?XUeH]+`2TpVCAU8P)mVl?D\T`"jK"9no.!<NNA&e>Zn,p40K
.lfR@4u+WSR+B;b3Ahff',M>s$O[@I#UV;B&el*"+=8<R*u>T>'l\&0Df'cRL5V7dTUqgPUQLb*Q^F/)
O,&:8KoqjnP`1]`JoYI@K7\DpH#753Eb&fsCiOT>E,fZ+B3\SD>$5BPCN"EMLP(DBN/*.DMiNgQJ9PjI
Fb>^:Lj")iDIQRQF)br.Alqu5>#SC$=^5??=]\Ns:1n-PBP2@7It!-5S=uULVl$5dWNEP7ZDaF\P+Ahq
_mc#)Q&'HoE.s:*OctufS"lOHTr"ouYc=auSXfrf"U,#<)&OMN:0CFtChcaC=CcGm?:Qdq+"pTGM.SJ(
1*$](#Tt<-)&Wkh%MK0W%1j9o(_RGj#RH-=H?=h/V5BlYU7ReUUSXTMrL#U3R@9S0P)t]`NffKjR[Jt=
<HOIdNfS^(?tibH>$PTPB4>F^?smkjAmT>.O-#-RMM$J9Mh[5gO#W5`L4Or(H[gQnJV])):J#&OJUW,b
;bBq[8k;QM<)QFc8k;L!HZEqLQ(k%EU8+6HVQ-AlY-P?^[CEoa_mQbOWi3&'UT(2iM.0S/VkC2sXGi.*
OH>NcR@g%9S!TA((`<eh(e8C]<*is,7U^4;BlA*8Fa&:dM.'7W6pXF?6;Cij-3=/U<CBDP.0p%`"9\f0
#Rh%E#R(>6P`L!=V6I#%WMl\mV50udV50i[USalaU8Fh-TphI?Q^s_?Tq-pM@#9kuJqJPl>[q2K?tXCr
r+fSfG[P?QTUh[GR%'V6R$sP9S!f\6R\$+=St2(%MMm1?JVK,@E)oe]IX#jLCg'>#84>s?:f'kV8Ol:6
MK*sD\$iWJXKJb.X0&S;\[T&Y]tD+p_oKKqZ*pjN_.L9mXGge%P*r)8XfA"JTq@dDUogbtVPg;g3\1UR
L<$X*Wg'!JP)G^$YG\"bV6%&6W4]j0B5)9hC1qO:BHdN[0KD!?/h.J9"pG,4#7V+K#7(P>GApl=W2l_l
XK/D*ZEg[8W;W\/W2Q\oWN3(pT:D=>S=5t>SWo1J+`r'aM1p(gE,BB+FF&=ZE,fu=@9lK@R@]Y1U7J!S
Vl-BgU,Sd>U7IpMTU1e#LOOf+JrGSAIog/rFEhb3<`N$n:fL\'=%uIa9Q=fNI'L,\YdLaC['I!E[ClIM
)SEbr_S<ata1Jje\\#)NY,n(UDL%D8]!80%I^6,VX0oXT\ZN'?XU>@7(7r$fR_Z#7cI:7f_8sdEcH=)G
cFh-EcE)nJA6WMH>]+4G3!9^2/j_?2%2'-Y$kjX$(CUc_$V+3%IA*[AYH=b%X0/S*W3rn4Y-5(;]!eZ>
ZF?p2T:qpLU84TZV0mlRQ^3DRM1U;-J;&i:IY33'KRYmH8nO-STqnQZTr"]fW2->gUSO]_W2uqhSYN-T
P`:*=I=dQCQ'lB+HB!f*ATM<e>[(WJ?s6Q3;c$"a>^E3Q['d6EYHtL:Xf8V5\$`WNYcP(?]XG&X^9bo#
]"tti[(([BUUnjXXMN-'_oBpKd`KDH`P)<PIK:$rXglWuYH>[`aM+V+e'6+]d+I=4]XZPJbairj@U3r6
PE;OT*]nFj3[$^:,Tn3Y0e4Cc*?#YJ5Xe=jTrFi^QC+G@QCk=XT:Vj\Y,S.oWNEG.Yct:1T:N*fV3[U=
Q]dZ$NJ3=ROH,<`PEC`bPEUtO1,_4(O.M`,DMF.>QA:g,Q][;pUnjTJS=cILTq\3OLO4N4S;r;\MMQqC
Lja2dEc,]/DJs2sARo7U2a^&.F/ZCFVj*FET9#JEYGIts[C3B>ZaRNT]"#;agr6eN^U]r/USP'$d(?m.
ki:OWj6#1Fg"tH1r;[37E3>+O78Je\6#"JjQ#:&maj7,=W41+'e'uprQ!dq#bDAqq>$"^=Gu$:i91;'.
77]Kk2`NWC*%WH_97iP%U7mL+TpUG#T:ge!XJ22IK;c2MSXuXgZ)ab(Ya^-$P(\^^Q%3q&IXZj!Jpr&k
H$tC$(F11F5B;^HTUpagUQ]qlQ^DcGW1/oWKlj#fQ]m],Y+qSXUSEfcHA-?eOc=BnD0gPVI!9UHB45@`
BcAKH,"HjAS#iZJOL(X5WMH>:O0bgUO++:9US"6]WOBOS\[SSnRAc7@]Xa;^O0H""[^E37U7e?dYP\A;
(enG0Q81M)A0QPKH5\liN*\XfXkIr3E.4J?e&8E:enH'];C+DXD^H,;3'0>h3\Ma")'C:W1,:F/11#s5
T:V%*TULLoV6$;'TqncgMiOX/W2?&Y]X"N;X.,!6SU,[DCI1fp9i"_i>$+s2=^PiV.4HVg.oLnbR[Jke
U6g4aTW"/]S"HXTH@_`[UnWs@Y+qS^TMghrM3MamIp4m"84cEJ:ejeY8jl6D:+e.J,VN2QTVeNEPHq$=
Q*.HgA>lW:ZA"4=Wj8gtWN*A>]=k80W4n%HUO,pJ@rca=IXllsI!pX'Mu3Q%!AAMEH8nBoE[=/Ob]EuC
U<U4t1o-;FX^$nIe@NlND)#=Z(EGjE#QOl(!<<3"!sAZ+!sJp7.kN\:.SYM\MO'HcQC<kdSXZ1+OeAVI
SU-g*W265ZX0Jk.Um7:FUlTk3*"jqU.4H_s0/,4?0JbaO-7(8r,XHO1JW>P>Q'R8OP`V,UKUJX-P\cP[
UnF3AU&Li/S;2ooTRgr[)A=YM0/#"6/ho"4-n6\s-n$l).7\\@P(o<dN1Hc,K;5'6L68UGYG6?:[^`WE
UU[_?\?_Ts]YKqhBe1Gm4$,Sf4[;>%76a128c&K6)bDYZ6T/@l59arQD(%N'^7fHYBu\5rO`/1cd)r(U
;oQ:1)?]L0%50P%1*K,'C35c3M1_4FRuDl\T9XblU7S6;M5$N-VN@RZZ_NhTUU?k\A3E%>0-)Mk.4?Vo
/M/e;3&W392(Kb2?sIH,Q@O@KSV;';R#,X?S<fmpH^g4YUOn]-VO!!rS#Ds9=#2Zm.iU/q/M&>$.4Zo"
.k)u$3\M[CA79DCU54GtVi?+iW0V]LS[#&uKnuk*S%+Z]ZEpX#T"2)?T5-qf90P!k4Z`R("[5.>77K]B
!$h^M%8h$s-#S;n)FAsG'O.&NZmI;eCK/)2He-f'93J+G[8-qp!#mjT6:!nVO,eLOS;r&dSsOA_TU;.#
Q(jn6Ee><rS>D4B[B>aZX1#4*Q\Kfr0HE(k*$6:J,q(5A1LDjh/N>^M@Y0/INL>KEPbXORN1,ZfFc;oZ
KO](^PGEYrWMG3$V5^GdO*Y_J/Kceu.k3)#/hJ\21+t460KV9VAVPnZOe[h]SunW)TsphqL7l/`Rra:U
Xh'amY-8b&OftsoX.4li@lG_s)]B\;+!DmU/LrA%quA)L1+s53FZ17LTk"I4S6TkS=07NP$QrGq`&ED$
]K/<hgX2Ej-5?XR!%CW-6q'%"?"[nmI=6<qP`^NUPb4b0N1c`5Me\]WTU_aOT;&9jYH"4CIUctf4=h'[
(E+55*?Q@H+<i!r2`a#T3Dj$fAoi$3IuoY0J;TkhI"%NKRX\P&U7%40R$<i/WMuY_EEHI;3@kpm,pard
-mpAd,9S*r3'BD\3`TNtC3XuHLR"-YP+K(lO-$]KZB9"&]!e`3St)@UYd1R5H":Me5Va8n!uDdm*<$oU
*r>p`!<WH3(Dd`9:IuTc;Ot'H1REBK1^.O(R!<CgB5=^$dCY/M!sJ,o2aTbt7mT1"7RTI,:g7:<D1-_[
O+`aYOIMl2H&IrNQ^aMAYI:U-QWZ3p,oeHo+=&0U+X%sO+ZUkq-7Cl43^#M\2a9Ge4@rLR?"\+mEJ&Fm
KS>Y\PAG]+Ll[RWS#NNjS;pE$.4-2j3$p70/1N(tr[0lX-R^r54$>S\3']_j5tkEd@V^UIKU@XkR@:7f
XFHG.Tr*d.RB*?dR#=`o-m]l`1EdYS(`*r'(Ddu-)B8YUp])66!<`]J(EGae<^B*!TQLu,=AWKu9Q\,(
^2HF,!&m,55W:nu4u,,c3&<ZZ3'g)$BiShcAUobuOcOm>RZX>JZ`gL3O[h&Y,q_>3*]5K!.4-Dk/2$oR
$8+5!2_[3U3%m0PBf.S*3]B8f3Eo*[@p!c&IYWPoEKc-EW2utrUkCo_0.&85/gNA51b^U80/,+5/hJV5
4ub5U5<1AT5<1P^4#oW(8o7dKF_lbsQCsUsKWL]/VlHYoVh.)^/0cW).N^Dg*?5q9*ZuX**rmJR!#5J;
!<ii6*]Z/Q5T1Yc87f3R\$W(hli8J$84lB?69[Fp4Zk_`2Dm?J3]T/^4[rFN<*a?bJWu_3YHG".RqXN-
/H%"D-m^Gt0/>@A3&iiS2E!QZ5X.@m3&E]X3&WZP1c-jC1c%'N5#5N\9N>P<H&eJtWMcepO^9Xn/M&G*
/hJY.0JP:<1c.'E1,(C?4$>Ye3B&cT3''#W2)I-O5sRY%6VCQa=(#umL7u#PVl$8_McqMR,U+EU+WqjQ
,UY#k/2&V-/M&I9!!E?0&gUQaT>nFH[%9klli8J$84uQH8Oc$45X%:j3&`cP3B/oW1c%9S3'BZ";.k0)
JqSc%A4/()0E!I7.k)kp.4Qo%0JPIE2`<Z[6ULc:*]lGG3]K)X2E!3F1Gh!D00(gE3'BT!?#FV%FE;8#
!^84jr\#*C0eb41.kE8)0/"q60etF@4$Pno5X%4kr]2\l2`<QU5X.Cr4?Gnp5=.t9<G?l#EccA:=?@oZ
-RC&a,U4NU+X/-W-7:5n/LrC4!!`WB'G_N%%0HA+nc23@5Xn1384H!769m^r3]]8[3]T8c1at%,/M8M#
.PWn=3^,\b1,V$K1GU^?0eY.30/#"51,1O?1,:O=2`s8f5X.@o4?PYcr](oU3]T8b1Fb"-/M8V)/Mf@;
0Jt[@/h]%<1,1N_1B]H_.4Zk]/1W;'/1W5%/i5RJ3]]Ab4?GSbr\tfT3]oJe5;t2M0/547/1rb?/i,IG
0J+k0/1UTI%43AO/M&M+0.nn30/"os!!!"L~>

%%EndBinary
grestore
np
-12.2727 414.486 mo
34.2272 414.486 li
34.2272 448.236 li
-12.2727 448.236 li
cp
.75021 .679683 .670222 .90164 cmyk
@
39.8098 448.611 mo
84.8097 448.611 li
84.8097 414.112 li
39.8098 414.112 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 146 ]ct
[44.9999 0 0 34.4999 39.8098 -302.611 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 60 
/H 46 
/M[60 0 0 -46 0 46 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 60 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
!tZ"N$2soA!X/]2#6Y/1!<r`3"Te`+!WW3$!<WH/#5\H:!sAl7"9f&?'c@i,)CI'h5>"^PBkI2A!!2$Y
(BOU;!!*92%1Ea[*%39t6:=FC;$-n%!r`0*!WW3$!<<*&"T8Aq!<3)k!"B#5"U+u9#71tZ+!Wm0`;g>i
*u5S!$jm:K$P*dZ&.o<Z'GV>s%h/jR%hB3_',)/ur"K&B'+GTl)B'J4*@<6a0K)'e<E3CCE;]bU"9eu5
!WrE'!WrQ."U,,:#R:\C%1NXO#mgb=r<k._$47(D#Rq:R%Ls$d)BC%U2+(&/;--g$!<rZ5$4."@!WrK0
#S7OI!<E0#rW"/F"9o&9#R_"C"9S`/!WiH(!X&Z2"U52B&e#Ba',_r;/3uVB!"f5o4u4]1,9.LC+X/*Q
+<;IHrZ_Xi*ZH(:)B0Xs+X6n42^^"(.Ouu!*%!C"3&`i\3]]#G2*4,s;-RRI*?caP.4m2'/hS_-/hSh3
.4d,)0.nt70/,(70E*XL2E*TT3]K)X.Pj1Q5sRb*3]]#H0/Y[O5"JCH(`=M<,q18A,8_RI.Om51/hSh4
/1iA&.4Qi!0JPC@/h\pr1GL[?0I&&(3B&iU4#&H6)]9\8+<rEs5/dLN1It,,0/5.6/1`J00JP.43]oSk
5!_G#7nQNR='Am:?XRDVBkhF!Ana,>EH?8JI"[0*H%L9>6qp]`CDA3X2*!W[5<(V\2`Wo_4Zknq7nZKO
;HR%)?!UiH@:s7gDuFWCCi+37G'eXfI"-E[F(dp#3^Q/1&g0(e1Gq-O.kNA,3BBJp6UaR=8PDiQ;H-b&
?t*\\@:X"bC2Ia%A8,grDfBlEE=-Ys?<BuP)^$L[5j&+S!<E6("9\f1#71e;$k3FJ%1a$b)'0_:'+#!K
qZ%ZW7qcpH=&W.'>?tWA?!(05?!UfB>[(H=?!q&NA7kgR")2F`CAr#ZD/O3/DfB]EI?9MmTlWaD>@Ccg
(--/RH?OjnM2I:RPEhQ*Ocu6'USb,prj>/)[_',^^;.S(`l?!:ai)$5`Q-$<[(*KLYFo#T4@2>C#:Nhh
EGp,OIXcp%PF&2H]=u"t_8O1/a2uEFbg+M[aNMiUr6Q2'b/hZGb/pinWi_nU9IV\S0i.iM"Z$Sq#Rh7X
'Gqc5-7UQ$2**ug7S6BW>[V/]FF&=`Jr#JQQ^O89S<oV7UnsoKT!#3'B`\/4(BbFAGE@#mCi!s*DJj*"
?t!VXA7]4Y@/aRb@q94cCMR["Ci"!,Df9`;E,p,IF``1cQ'etWE(=,=?CVWgH^^q5Z*gpE%'m4I[Ca#Q
Z+%3V_8cJp$HC0-aMu6Abf\/QrlQ2'aiV]Lb0.iA_7[CaW)bW85=9f"-u=X7U9:d#WZ\@S][5!cj5oRg
l0%9iiniSJh:p]:f@JO%e^Dgjccs`6arS[;]<ST9QV8h_1biD=!#%k2?=I_\@qKChCMRa%-#e!PH[UEt
JqSr<Od2B)S=ZIOW2Q\pZ)jn+\%/iH\%'Q'eqjG+!)sa:)F8L\C0Y%L>?Y32<`;mt=&rF'<`E%!<EE:+
>?kH??=.&I?t!JR@Us+fDJa-3DLQu.Q=s&p>%+c@(J]R\Z+[cc_SO%*_SsO2_oTmCcICGWf\5$3f\+p/
g"=s1f@np2fDO2?e^i-q`5T$S9K"^c6]qEW7s_DJaNMrUd*Lb2o^V\U&cVb,rV?0Smd'6)l0%6iinrPj
eI:$QeA]G6UJEp)2)f^X!#lnXAm\tXA7K%P>#eO0@qTOjCM[m2Fa8CeL5?_)NfK0]P*2)qR[BS=Wi`>"
\ZEKUc[,]k!+.l"%3&ScC0b(J>$5!/<`;ps<`N1"<E)pt<EE:+>@(ZE?XI2K@:E_^CMIQtCMe!1D2!_B
Q!I$a?#I[m%PMIeYe%9Q\\#Mi_oU!8^r=@=bgP"mf@\d1g=Os/g=lP\-/7/+f@SU*f%/C#dDNi+SjP:k
3)?CS"=7NS[E->+`lQ?\j8&KErrrE#rr2W`rTjXPm-<g6fFZ`gf%&<ue%ri(U-ppp2aN,r!#u,-A6r>9
<EE=+>?Y35?!q2QAS5^sF*N+cLl@AnOU75;R@KkKWMcSh#cOi.[Aq-_drkQg'l=<t+CA\o=]eX'<)can
:Jand;,U6h;$U!!='8^3>[RJ:6"")1@qTFgC27X&D/X06GaO=_9MJcR_?18t@@<q!YdLjK]"Po"a2#L0
aNr2_f%J^0gYCW=g=P!0g"G*4g=OsUeHXLPeCN0laVD1N4#nlSDPI:D05.c1h::04iSsP+oD]p3s7c?U
mHNs"l/L^Tf[SL"da$.hgs+'SU-:ao3adaB!&=[C=]S6h9i"V^;,:(d;H-b%?XR>QBQ8?NLP^kIN/`j\
Q(4D>U84T_WN)u%VRX(Y@/U'*%hW[d)BE'oBN\J=<`N-t;,0n`qb[Vs;H$Ut>$G9<ra5q;?t!PTBP@?Z
2f*;FBR+ihM,QuM@'R$>$Rf8FUUIM?]=tql]u%\#_8aXDe(<.&g=b69h:gT=gtUT;gY(<4fDX55e'ln!
aiLlZ5rL\dOHTbW.qQ!$#N".liT0"lp%&,(r:TdMlg!g#l/L^Sf@JO#dE^%kgs"'SUI.%&4aMDQ!&=X<
<`i3t<E)pm9M%lN:K1M)@Uit_CNOoWLl71WPa%AsQ^jVAUSO]^V5L5gUq*qWAGlK<5XGo"*Eclc=]e^)
<E)iu;,0nar_i\n/6,_R>$bQE@:WkXA7oLgC2\!0E,ou?F)#N;G)h8S3`ft1N;s,);i[?TZb$+I2nZl>
^VRq5dF-Usg=Y'3f@\[+e^W-udF6Ojc-FMVaiV]HdF$+W[\$/M6;XUu"qiS#[`@Uoo)A7^r;6Bkqu7i:
s7GgIm,mHhin`G@f$D^aai267_:I/WaL%F+00DdeA,ZH1!]<hVrDXk99M%]E9i5#!@qK@dF*<"bN0'9i
S!ob5S=ZIMX/W/uWWoGuVn0+B=oJC.!Jq?q)B)XaB3876;u]\o:]=5m;c<Tn!``6&"'Jl7@/aS@@Uit]
C27^)EH-&@FEDD>I<U[+G[F=(`+f8T+Ae#`YHG:@\@B/_^VI_(`lZQSf%&I-f@\^,e^i-qd*^7hd*g7d
bKJ&NaiVrYaiLofDH&c9XA9!2/S)*'jlGP&lMp\Qrs/Asq=a4Bj5V$8iS35?eBZ@\aMl-8_U[2TaKqXQ
:cDpH8,`Jo!A6r<9Lq`J9E%I^8Q/Vk>[V&RAoVm=IYNcCPECujPaIu9V5^GpX/rD)XfJ\?['ar`!<<Xn
!='AW;-RI-;GL"`:eje\:/Ond;Gg=j;cQh"='T$<?Y!\YASPstDKB''GB\=YH@1*gMM7.NR#b1?Y#,0&
+]F>eY,nq9\%')`_Sj@/`5TpGe(2sqcHse\bg4GSbKS&NaNDND`5T^8`Pfm?_Sj4%Vj:#EQp:cb/n2'"
hV6oGiTBRsp&>'jrr)U&kNCg_gtpW5d*KhS_Sa7-$cKrl\>Z0WGrpG23rT+P!@^2t4uthm6:+(/85N/\
<*3I;B521#EdE7kM3*g_Pa\2@W2lu%Yd:aG\%TMr_7cdO2?66Q!!a8U:KUt#:ejb]:JOYZ:/Okbr_Wu#
;cQh!='Js<@/aaOB5)*uDfg)GH$XgdJ:Dp!IuK>\:7QO0O%THU+A[lYWi*//[C<`\_Sj4(_oBjGe()mp
c-X\[c-X_\bg";RaN2BB`Pom<`Pfg>`5]I%[]O>GGru0?/RGHfeC3.-i8O%lp&>'irr2[6p?(MuiniPC
f$DX`aMc'7_8O=(]q_<aMckmQ1B7Ca!!"6$2`3TW5!_J%77dDP3)Wd_A8,dnDK'iNM2dpkR$sP<VPgT"
ZF%-Q]Y2+m_7Z_BODP5E)?9jN%Ra,p91qlM9he;U9MPC]#uX]$<**.+?=@@CBd%/*CiFH?G^FdeJ:`B1
Jqeu>N1H?(V/K*/#U<-'Q`dL$5e=VD_oBjB`lZBKdaZgseCMpkb0A5Wb0.oNaN2EA`Pod7_SX.*^V@Y$
\@0#USuu?`!=C2VUpAFsg>1WEm-aHE"9&/jl2Kl_jQ"nEdF$.\aN)9=\@SlGP*(WTG_T3Zr;[3D/28k;
3'BMn77Tu];cQq)?X[GUChms/H@q3@rL>.+UoCH&[(*][^;.P&\%/emFF[peD#s\>%LYNs=%c4Z92&&S
r_<Glr_u'[;c6Ll<*!%'>[_&RBP2$qDfg,JI"$NqJV&Q3JVJr?N1HE>U1RI-#pN#uPch7#]"Z&%aNr8Z
cd^Otf$b,VeC)Rcb0A,TaiMWIaN4A#!l`'qrkTMg^V7S"[^*WW\uSb#!=:&OTWceng"kNGnFuMR*rc'5
l0@HpjPSS?d*BeU`l?!9\\,,NOc>0MMh"Pir;[]N-o!M73'BVu9Me`!Anl1!BObF^AS>k$I4gD<Q^=)/
U8P0!\[oGd^V@S#_R-k_GA)SDQ!47h%1re=<E`0m;H$_$<`W'q=oDGE='/U1>[CcF@qK1\De*O$D0KlG
H$OX^H[pO5Q]@,Zrdc)MJSS]p!$#%9\B)\1ai)6Bb1+tgcHXST_na..`r=*cdaQRgdEU"_*mDjOai_WC
_oBU4XfJh5XJ`81]:WhJ!!![1Z,lt=p&>s,mGd9cj5JtRiSiVSg#D#Bg<e<gb/M63^qBZ[$,!jMUoC]0
S98TF!%0L$:InVpBkq?oA8$1-EH,c%?Y"(oI"?s:Srf2<PFo(W\>[*O['1(I\@K&f]=bM+DM+\%<t#9Y
#87JC=C"p)<`WC,<E)^h<E)t"=]ns6?=%&L@q'"]AnPsrD>nK$DfBlDH[C?tP*M,hKnP&1NeNL@!!"-I
Zd%1Pcd9bRaMcEO^;.Vb`s9`1c-FYadaS0C+OJH[c-"8J`59F.`P]TlWjB%>ZF@EV[$Q.@!#SbQjT##T
/+DrnqY0aPo'Po.kMbIXhWO(VhV$K0eB,kN_7dXs]=>Vg\?iHEZa[6;M#IBD!D7fa@r6.*D.6aM=&r:(
@qfXsH[pd/PEqN'S=ZCPUo1ArXe)5bX0B%F^T"]U[ABFfX2CWC,mOna5[.Sp;,L.j<`E!\:f("d;cHdu
=^,-;?XI8M@:O=tFE2PKI!pR!MMd@OO-?*.R?`\aKT;(WTof<T)bQs<ahP3lZEggD]taQg4jVI&e(3(#
f\+p-dFc4A^UUV_[D0Dg]Y;"h]">8P\$`fR\%fMf[@@6t&OrkBq;^Z*n*fW-lgFH=q#C:>rq?3Yn)WWj
hq-Z(]>q^t_mdCk]!euLY,eY9\%9/YXf8S2Z*Bo!!(&YV?;!UR9he2M84uua>@D5_G_1R,NfocjNLQMj
Tob&)RBa!*]tM"c]"cVAdE0%iRE*%actEe%#s)*i8kDWK;uTc(;cH^p<)lt"=B\r.?#!_R?t".sG]n=Z
I=?p(M2.+OQ(+>4Nf8[3E.a+.TTT9V)ag*fXK&%qX0B(GaNDrZdEp4ddF6Imd*C+id+#nC^r!e#^V[^u
]"GSd^:^bUYH+OTL9%en[%RI$'L&.da2H<Ti9^%-r;?R)rVQ9\kj[QfgtgQ6be_@;aM>a/_Rd=aZ`^L8
Y.M<V[A&1uU9Cf+TD\aV,qgeu.53tY:K:S*AS#LfBl.s=G_UftMN!@QVie$[U9_&6]XP8U\\H85dE&J`
E$-0EZ*V\r#S%/&>u3^T;H-it>T$L?<E3+&>?kKA@U`n]BkWNfO-5`lR$O/-+ebm:URms4Ipbl+(+=!g
R%ocD!#e.bItj/`X/iP8\A#`W``^@%b0.uLccO)Fda61?ZELXDZF7!@ZF.$E[&g-hK4n1Q/3eNr]X*h&
!Y@DNG`SH=dG![<imlZDm-ErskhtIJfZD"IcH*f#XKA\-Y-"Y!VlQhrW1]TQ$BAdu59hh!V5'K1r;\Gj
#m_5&5>PHi@Us+R>?tQEBQA<AL4XQ$S"#M.WMI)9[(r]<YK#)B`0u*V0*_@T4;#TEUHJbb"uTUI.R6m1
=BSj3=]nU#<)cq$>?bHA@U`n]C1iTlOH,KeR?a/(Q'7,G8hpqo&gU7kKT(8QV5'=V!#7\VBPiI"WMur!
XKf(E^V[h'`lH6Gbfe,Id*g"<\?2d6XgGI8VP'H?E(r;6+so'MI%@XT\$_h/!=^rBA9<mTcdURnd)F#Y
i8<MJj4iAAe^)CSbKI`([&C")WN`IsSX>UoBL=Br-Qt6GG)W)jV3m#:!%Isd!<<E`4@`(=91quO:fLJ"
A8cI;Iu&c.R%oP5a-i-cTY\*uHY?VC%/U$!!>S(fdaY$g#7V/$C/@B%=BSm6@Ua"bAS,UhCM[s0GBSC`
JqSl5Q_0Y-OH,<]H!W9D$OROh7r!a<PF\G?US=6M!!!cmM/7I#U8.^^C8S#5W3!/(Xg,19[B-^FXK&S.
W3`OnR?j&&G[EKU)AjMF95BN^\%9/a^:Tu4!<`lcI:.>a^;.b1\[ecD_T'I2]tq4i[&^@7T:VaEVR3=i
R[B5%H<iHP'b_N5;/hVlWNE%pSXk4]r;[6G!X0Z,4[VV-8l/Vl(gpreBl\KDLMMg?Ec6YMQHZ+0>ZF?n
)$9X7?4/l@[F!:C`k=oD"UYDWB3JAG=BJd3?t*haAS,XiD/F<5GBA7`JU<$$I$0V4A4[1@"TST@4(X,0
PaJ>JT:;UQUmP&,!!!NVKm8]YU8+?QStiBlW3*2)Xg5:>?`p!'\YY^iT732tEaqc^)\`bn+[K[nS#W]t
Ydq?V[_/P9Gl\$P+F%[cXM2Hd_R-kUZGFK!`kK@(]!A!,[$Zi8OF<XfF(J&])@m,^+?j=hR^9N/XKA_&
V4W`3@Jp0E('kpN3]fJf5=ea^<aocVD0^Y[HV8X\><Pph9HRYN&I%t11'K7<WP[6>d*0nea(>;]"pbbh
FC/?q?X?r<B5)L4N/NONP`C<LRXfp]Web2-1a<P5rW"tc/lQqHLl7LbV4O<QTq\TgZD`h+!!!TUJ80eF
U8"9EV6[&+Q'7)cR>uZDQZdD:Uj6!O6T-;1$3U\J+$X"^SuK!&[^#h>6asS5[C3N"C]aeI*,8T(Y.;0Z
Za.E8UopnqVllbJLn/m4R?hnm@7WC,)\3>i+[]e!VmaFT]<S`JZ)jt"U7[Wc<W)n:'*Aql6:3jb:2WmJ
C1U%?HrVICBH.b#K,amsp](Bt-YJl#[`HkGcd'n]cdgRpRN_n="qW"r?<2,W?sI,S@ruI>K5tphO+1nj
F(.p90G"9a!)*bK;0%5CM3!pdP*2'(SuA]cTVnfs\%/+2!"^5tBmd1pWhHu*S>MI*Kl:gcO*G)PBi[_f
.M2af#nnLC>()R0X0f:B['[6J['?i&\%0#W['703!Wr`G@om`Pe&B2`];V$JSsk:_SYLdQF)G)L4!tI<
%1X$r4_0>>Zb+&d]Y;+lZF6m:WiDefTV[j!r;[T@!X`g^;a5514%geb3u/N$=<Ih^$j$)&'`oLNLSMZ-
ai26?da6OtdEBkbg#9@j6j<c0,&_0hIqE1qAnFnA2Jmqb?#Fpj0HM8C!!!','-]YKEHlb\K7o&BOoCM$
PGP(VXf%qqY-k[@MuWhe(i!YnUW'aKbHcYC=BfTL9jD:%-Q3g0!!!*,&jKKDPGPXq]=S!P!4Vs;&[\mL
Z*q-M['d9AIK]fY&Q).F<g)Cgg$H>+A4(0aEF*L*=>D$D&-N(?%2;<BLo.c*b/q`ErOiZQ]WA<9WMcSd
U7S'<DZ'PI"9JU!Nc/'dAIetF"rI[J"qUA,-58afS[5uB_TL*Gb0/#Xe(NL%`lulKc[Hl@";E"lDDH$@
CM7O#$"?@`3*B*-(`!AU!&t*%4]Q]kGBe[mLPUV6KS>AHOckifV4sc]V5CArY,@J3!!!EC@VJSm`Q6BL
`h$aF/Or,M'bU`M!!`]H1.Z)2Vm?64$+@@T\@B)Y\@ApF[MuW`[C!*3L2dD"#7jF'5C28GlfQct;FN]P
;_J1o*>/8S+UT;P:2Q!)b07uJ`lQ?Ea2>[)]tM1_YH4h)VkKiNNc\\-!!rZ.!#q&nTV\5BrVup!o`-WR
4*R+%^V[n%Y.D?caiqrMa3r>^dEBe\adR,r$jd%L,[bpI:1.X??uTXd0a7j[!!<HP9OiNlG^=[eG^Y!c
H[pp-R$X83Ssl"2TUqpSWMunlNe`:B!!!3;=):-0Vo$a*cbbN?(DR;Y!<NoV3a6fcT<>]8]t_@s]>(ti
\$rlV[CNfU\[],X[C*-1Is>mN#6Ou92bbi"^Z#+ff$\V))]TFu$k=!s5\5S9YeeK)e'A9CcH=8I_n!>V
[03tIVkp6hV?NZYH#dhBqu@$+!!,cKMN+ch'DDJ^!>I7rNi'7c[C<9?]#2A4daQ^qd`oeP^r4C>bcl49
)\a%l":HPSKJkSoB3](fB6l!*!#6>)87QjlJUW*"K7SDmG^k:#NKTEg0U%`dSXl@DTUhmVVOs&uG(,:*
!!!'88Tm`tWlW3,cHEXl!s&oY4A]pMRAR3o]"J$Q"MMOc^:jET5I\,1[^WcU[BullEG093FTqpJ%P1O<
2SnAJm+:$a3"691/4<ZgPH)15aNDTHbg4b^aMYd*]t(_b\[8]LZjWk/VQ$>YJnee1Ech3Z#mgS3;O)?p
X-[l'!*g!e=b`QG[_B,MSu]B8`QHKNdEg.cdaQ[n`k9F?^k4ZY#nRsn"UGDc9U/jE?Y*;@?=%h<+u`P9
C2I^+EGoH%Bk1^iMhm+CMi3aaSt)FFW2Q_qURn<\Tn-k[@<?aAH2[ee'g@+\9W5qA`434^A49ODP+Shm
aiqrUdaQUke%``7^qIIp]!o5[\?rWN[^ruV[\nOX<FTNO@Kd&<&0G%T35=MArQ<$L:.A?7S$'?Re^rI:
kMtglhS?tF_S3ap\?W?CYGnIrUnsc]VO;L.<G#o[BE/&3!!s8>!)&5NA7/PVrW$L<0M6&CY-=ssTVRs?
Wl`<"`Q-$DdF6Ojd*^:idET,=c%?r:!=&r?#mC_E0M%dW:0_@4;I!LNF`;DBEc?)=C1_3mAnu@*H\d?2
OHY]ePE_B)U8XofVPKcVU6SqZF*;eZJc5WQ)EN\+>bc2U^T"6;YGn+l\@fPo`kKL9c-=_ce'PnI^qI=n
]Y1qh\@8iR[CEiUZ*]cr7V64CCM<t]!#$>\D+V7tpXHdhRZjb[`lc]Vf[\j:k2tRSf>kbI_7R:j\[SuS
YH4\%VPKrTTVI<?7Up(ED/]=P$60c\4c*N,6r@5^B2<9(S=6IUN09]tRAd<p]uS%1cHsbYd*0e^dF-Ff
bKHHV\4?W##RLhL&-iIH,XJ/U?!h5K='/X4@:j+cBl%R*Ed2n_M3*j`PDtQbPF.`4U8P#jWMQ>\S>iBf
WKU%A?[76ZL&M&c&iPf5Bq)cZ]#2n?eAT>E`4j$u%)9<b]=PJ\[C*QT\@;II'Y1fc[^NTQZa@'DZa>ce
5?M`DF`RH])%eQWQYESOp"AEtk3(OXhr!)<eC;jiai(sn^)P&0^:h%dWi2P^Unk)l['?F$U7H?b-:1^<
An:f>(e6ms2h6-Q@X3QgMN3paOcc*,UoqAKaN54>aiMTIc-aqcccaS\dEg"Ya257)[4V@X%L*@U&-N7A
+$$!LG%52nr`^sZ?"@MZBl.a2H%Ud-M3!d`QB.)hP*MB-U8OrfWM,uUSZ8ThY-!n'7UpUnIJs3i&MK3?
KV?93bgY(ccb.'4a2>m5_nNjp]!\uT[C<WT\@NHc]"#>_\$icS[C*?G[C*<#@RF72D/9+N3"7BmVhMP4
o^VYMj6,%Kh;6i=e'Z:Y`l,^.]Y28%^V71fW2cJ_Unk)nZ*C."T:q9d9.WG.@UK$5-:W,(7?*CPIY)iq
G_(pBS>*-m^;.\*`Q69JaiV`Lcd0n_bKS8V!6kGb$cffrb)@kQ!!!-1$47IZ"!9V!N.>JQ?2e(o?=7>V
CiFNBJ:i]8NfB*]Pa7>iOHQ!!Unk#jVl$&XS=HOQWN3;+UOlQTEe+E!!"glHY`kcjb/;BF`m)?=a8X0[
_uIIN])K/=[f3i<\c')X\[f/WZa?sAXKA\.ZETpE9N5>7#6k/;/VLMEP-iL'l07KdiS<AIg==Wm`l#^n
^`L8']YM=p]X+r@V4XBWV6I,4\[8cHYG7_IB0]!lB`%iP7]SdGH@'LPG^,$sNh<>X\\H&&a2uBBaNVuP
ai_fOrlu\3bfe)I`Q??Mb/qoP\QojK!!Ec>%KdY)Q]m59B3SSF>tSL:D/jZAI=?d%KnbVKP*2#mMi3^\
R@0hFW2QMdS=5h5USb&gXfo19R<M\6!!E92-\]%*SuTNAbg+MbbK7uP`l>p4^;%7j\Gir>\[o>^qmn,^
[]ls>Z)Xn.XK]%=Y)I'a8-&hn$RC&,V6@_pkNqZsj5/G>eBB8_a2Z-<^V@Fq]Y)/!]XtMVV59cTUnF`i
[C*BKYHORnSsFb/6UUbO;D6(66![u7H%1^FVQ@/8]Y;8$_8OL=bKA#O`Q$'EcHaYWaMks([C3fe`6HWF
\]r0`2?s3^%2K3f+bGr@CMR<jDf'E5GBnL\I!pNrJq]2Drf;DgN/a'fT:VjRUo'l[R$j8.S=udRTqnfk
[A]@H":G8>*,i6kUp.tfdF-@gbK@rJ`l>p6_8!Uo]"#;\]=Ybi]Y1qg[C!->Vl6VqU84Z^TVSQbXIk)d
":>,9(21.a\\maug"P$.eC)[icHOAMa2Pg-]YD+k]",'_Z)4@gS=Q1FU9Cf6^rX@*_77"[Z)X@IFo25/
&Au"\EJC'dX/r_=]">Pc]YD7s_T0d?a2c9<`QQNLaM>BmY,nIsWjTLMa3_c-^<4=AK/+AV$3LhqM34'A
E,'H9FEi'/H51mYKnYA>M2$e?MN*CJOH?!$TqS<Z#G7]XR?j26TDkQ#UTLQ#ZEpV8!<<9OFKi*d_:$ZW
dETu8a]QR%_8F"$]=bV`[^Wi[]Xthf\$iTJYHFk)X/r.nUSFZ_WMcbsVk+(o!!FTd\%'r>iRcW1cd'na
cd0bV`PfX2_8XF4_S3XoYd:+!R[BS6US>$!]Y2)f`PKC#\ZW'5WMc?c!"'RO_OI3qZaR<R])B5\]t_J(
`l5m3]tD+r\\>u#^pg;:VP^>jXK]1Hb5T6i]u7n#^WF!A'GM``JuY-)IXD'6!H`kkIO0JoJV/]1L4tD:
M2-tFOH,]oUS=`eX/VkhR[TM,SXGq9S=laU'rnLFXpb^R2fG1j[DK`%aiMcJa2Z-u`?3"5_S*^s]=#&R
[(!KP\@T8\[^<HEXf&%kUS43HS"9PQ5GP0TTa;#<1MD`Q[*?nLg"=lpa3)QGa2Q$8_Sa7)^UUb[\"KLf
T9YY&OHl-,UU7A@^!G6SdDj8A^::MRY5SEM!"`SNa1J^\XK8kH^:h4o^V[k+_ns7)\?W0<Y+;5]VkfrP
PbFqTXKAJ&X1k^8Xg#R[^W4gMZY>/q]Xb\?RW`mrFEE%dH$t*iIXccnH[gR"KnkJ>LlICZPb=_LWi2qk
U7%C3PED,rR$a;8TVSBcYZ#>$U91Q%[DBQjair#M`lc<@`Pod6_SE^p]=GATriR]RZEgpK\%&fOY,e=k
S=,J$R$Nu'S"?.>T;GJ"Kp/+"[C=Q4f[n`s`;[tAb0%fKa2u9;^VRIgZEB^gQC<r"OHGfnU7nfn[C*rn
aiM*.]Xk8KXK;L6:5$'d]$7=XYdLpT`k&g3]Y2"m]=5)K[(*WNVONm$KS>DIQC+,2Su89PO,8O9KpnEa
Of5=LR&Ij/XK/>0\<ie:IWp$aH\$d%J:)fpH\$[$Ll[OXNfoNkR@^"NX0T%9YGeFgP(eI?Jrl+JMOU*"
S#NH`Q]dE1WN!5;]Yqk0`kfL._S="$\%T:B\@T8]Z`gF0['[0J\@];^[^E?EUQpL\I=$p6H%;0FKT2Rs
SWS__S!pCbbKJGdc-=8I`5fm<_SEgm\%/ZHV4jEKQ'IMpMZ/DeNK9X%XIGK8US,$)R\7'sR%p[_QtB2f
W1Ta*[C!6J]"5Yl_nNFgYG/A!Z+.NWUQ9m)HiAp(NJ[Xn-BjduZ^4iT/NP_$DD4;0LdbaCXG:q@J?6,F
T7MN;H%19lI<Kg[rd@FrJqo,?N/s'_PaRo4T;notZ`^F-VjWd/N/`aZP)b]qSXuLTXD_EMAXfX"ZbO8o
a2Gp5^UChg^:Lqi]=PS_['6X8YI1aH[CWt`]"55SY-"FdOcYHUP*Li]R$Ei#TV6.-<ah#VY-c9leC2O^
`l,g<`l>m4]tUk\X/MbcStD=:P*Cl_M2@+IQ^b%LTq\s"]tgYR]"G#GYcSQB!srP,YKabl[CO#b]!Ig&
WjAb._Z$hRXe:f5N009eP*D&kOcb?MPb!nSBie>B<df[%@[EC%L9Ib%JrGJc]V(jMK786$JVJl2L5:\E
MNa-fQCOG8SYMsRT;\WlZ+%3P[]HR&TU;+4PaRu/S"QIMUTUY*CiXE`Xfeb;]Y;4r^9t2FZF.3M[(*HL
Za-d;YHt^FZaR6Ork&KI\ZrKAW2?KlV#[BATqeK\U8"Q]@;KdpMOq,X`lQNPaN;'&Z*gsJXg,%-T:_L9
P*1oiPa7AmLk^V;MM[R_UnOfl[C!KU\%0/`Za6d7"qVR`@(F4g^qI4f^:^YAN2<VaWN*Y/St(t!J:`ZD
P*:rhMMd7IQB.E*U6V1EVkC2uV6.MEYHblDZ(S>+M3#'=TnS2KI!pEsKS>&5Ll7.QOHc$"S"?4HUn=9U
V6@)1[C3HAWh,lNR@';-R@Tn?Tr4]iXGidCEdXafY.;*Z^:_%^Xg#%5[^<6EXfel+YS=FNZ*C^E\$roY
\@/ZGWi2hqW2cfqV@02pVkg;gMOflDF-fb1YK=o4ccO;<['R*A[B-=&TUM@9QB[VqOHbuiNe`CBK8>;D
P+n\SZF@?Q]">Sc]<eoGVaubf'HiLZ^q7:i['Hj1Q_0_3Y,.AVNJEFNN;eV^N/`gQLk1,+IZ9#:O-u?1
YckC:Ydq<P\A>elXJiM<RZ4SIV1sqbK8"c,PED,nOI2Q,TqA3[Xff":[^;g)W2[)0]"5MbYd("#S=cCH
TV%jJTV/6]Y,n+nWe5VnY-5:C]"52RXKAY"S?0#tZ*1C=\@/oY]=G/KYd([F\[f>_[C3<EY-,4EZaI$@
WiE,"Y-!n^RsK%9YHZ'b`ll<;Z*C3pPG0.lR['5"NJWUML4k8GQ]dGcL4Oo-JV]/MQD(">R%9`GVd$7'
WhQ&"];R>%I)="<_o'$gXK&1nCfm"!Ll[UKL5M"KLkLGCO,T!MJp_rsI"R<DQ^sk@WhuT!Yc+nA[CW?<
ZbNuN\>?-]PE:QRKp.diOGfErS"cUVW3:ZQ[Bm?QUnk&l[^Nl_^V-t\Vl-5[U8+EUUSFQ\Wi<;-S>NEa
SZK$!\$rr][^WTJ[%EP_[BHsE[C3QT]">ViYctLA\[fDe^V..f[C*<G]"GP_['Zs>XfSe3R%p:?O.<;R
`P'%+`l5?qWKi@6U7IX?PEUuaM2@%CR@-L,P)5$JK7nu?OI_r=V3maHTr=llXfSUuTQdQPNbbf8bJDEI
_md+g^:.E6O0b+BV4*j<PED&mPb"A4R#d;bM3*mlVuF(4Z`LaP]YqY$aMl$;]79~>

%%EndBinary
grestore
np
39.0597 413.361 mo
85.5596 413.361 li
85.5596 449.361 li
39.0597 449.361 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf9.4398 460.94 mo(\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\003)[6.672 6.672 2.664 3.99591 3.32391 3.99591 6.672 2.664 6.672 2.664 6.672 6.672 0 ]xsh88.2195 503.949 mo
101.921 503.82 li
0 1 1 0 cmyk
@
101.944 506.298 mo
108.727 503.757 li
101.897 501.343 li
cp
ef
0 lj
10 ml
101.944 506.298 mo
108.727 503.757 li
101.897 501.343 li
cp
@
1 lj
8 ml
278.071 431.949 mo
291.773 431.821 li
.709804 .0799878 1 .00381476 cmyk
@
291.796 434.298 mo
298.579 431.757 li
291.749 429.343 li
cp
ef
0 lj
10 ml
291.796 434.298 mo
298.579 431.757 li
291.749 429.343 li
cp
@
1 lj
8 ml
278.071 503.949 mo
291.773 503.82 li
0 1 1 0 cmyk
@
291.796 506.298 mo
298.579 503.757 li
291.749 501.343 li
cp
ef
0 lj
10 ml
291.796 506.298 mo
298.579 503.757 li
291.749 501.343 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (UAAAAA+TimesNewRomanPS-BoldItalicMT)%%Title: (UAAAAA+TimesNewRomanPS-BoldItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /UAAAAA+TimesNewRomanPS-BoldItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-547 -307 1401 1032} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2535 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 18 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD75DB9092FB01BBE833F55BB0B9375D47E84581C0C7E888E7865A7> |72 <001C60D8A8C9B77FE2CE91319F7D338D756C1E9B4908A37DB9D8BC76A8097B4ECE0530880DEDEBEB2EC13B2E74DD427D38D23345FEC35CDE01D62199655DAA6BD6A323BD5F32D058572DF5EB3EA71008324501D61DC8CE0A53A0EE5C67394CAC9A78CAB8B35A9D875A6ACBC5404DB8C5B2F78D37F38AD7EABFB1AB97A2F213DD4FD756803DB6C18BB232400BB7AE962F6F11192C6DD72C9B60BC5694F8FF9A002955889A3629AD58672BA314D85E3CE9F54BC9999F3BA9D124FC72E205E5FAA01734AC76F87554BA68AFFB75DF82> |79 <001C60D8A8C9B854D0F48AC14852E2CF1910AC81A620A2C0DA3328F546EDF35DD8FCF13358686EA79EDA7B75F04BF601D594B11657C9B91E769E086DF53F63E4EFF862F48ADAE860CABD6B13E859F2C2D581081F9B3B034A1A1FA67D4E027F9F1A9A5C534DB31C2E9D5D7CF21929D30D7A39E7656A4098B51AAC02486DCF9C> |80 <001C60D8A8C9B6FF86F56B6F6A8819927D9EC95056EEFDEECC4B201F7F999100DFF2430C2A6A1C91E0936397BD21286EC255567A870F3FF088B50EFBB591A7CB969874F0E64AF7B0AD0C58617CF2D00F4949A907A7D94D770E5E3E64F76B532FCE7B9B0B3E759B216A38218457C08B021DFF6031789310047A46F9FA5ECCF952DA9C480D900B11E1A1A8CE6BE15890AC040370E56A20704CFBDBFAE7B4408BBA0A93788A62109AEF414C535BFC3F3674636D8359576AEDAEFDC959F0F094FA75EE8AE2CA4FBC1919D65BD91C5089FCFBD065EF0C3C404C76D0B1912236352BFBEA4FFED1DCFBDFA3202432D5CA9417D48CBBA1B4C1AC43FB3C928FA79DE283A2DABEC9FF0B8BC9586D2ADFB4A5290A06BA6AB8D823E99F0E75AC74300BC383DD39DD6910D0307B72632D2C5F1E074BA1B616B1F933EEB3390EDB9883713EB57B98D4D10005783AAAF105F348E8F4814A8763A59606B9> |81 <001C60D8A8C9B7EF322B9315A4E49A96AB59DB6A87F7F24222F8240F6C59AB41150E10E339C43E0A5B8A9EC307571C60C9016585ED9DAA4B4FA337B142A46DE655DB96A9064C9A96C4E137E7B5E160004CE8AB60A9B50F2D2803749FD223E554CA916FCE486E838D1939A80F70372D353397F323980C654AC1748EF3714C4F6D5D67F55F945755F55B9ED166B66EC440052CF78C451FCF7C2722B1B22C384A9C787EA392975367C1D7ADAC72E019B8CE832ACE1380D18885D83CDEE8A4BBAD5FB8D1BF73E4956F09D6C9BB469DB1CB2A95C8837571B4D547DE3620FC6F77C78C> |87 <001C60D8A8C9B854D0F4912531593B457F49714B7E6BF362C20FC3D705C477367FA4BFB097913D8DD4EEB62AE7703EBE5B7A7340241FDE43CF7418825F8A12BFDFC3ACD3DAF8223B7399BE963AD2C76B9A3FB9B58F2D50DFC8AD3E1D300CED744CEC3E86667F9DEA919071C85F10CFC7242047C59A0C32E53077A0D764BFFA> |16 <001C60D8A8C9B81F2C5CD1ABB4081B730E7D2FF636EAE784> |90 <001C60D8A8C9B64EDFFB54122476F59242924376B51DFEFAABDDB28CF5B1E98B6FAF576556287B0804DCC96C5811430A27F132FA5AEC7C5EA30D244B91E36AEEBDF20EBBC1B808A096CB1301CB2D6EDF1108DBE92F41B853227BEDC68DDF537CEE67C75A6752B40BBB613B3C2B934E5EA77B037B59FAEE9D3E5188E8A254F1B3F8890BF44EBE42415CB51464397F57D3A81F2E4E2E2722175D9EFC7AC7CFA29B4ABD8ECACEE5992BD0AEBC9B0870EB61D109140F5A7F7FC2FC> |76 <001C60D8A8C9B854D0F4771F7E8F7EDEC16B72A6AA71F380D97FED60E02EDA3B51F939532F9801CF91AF478DE92B79D440F5376609D3B961685D8D7730A05452EE8FF20E40FFF41679D4A76A6DBFA09A0669142E885A9F5927479EB4BA3710EDDDFCF4316A5B48ABD359A85750AFA480865E520B20D7475E0665678F5EF7A55636046D100FE984A70C11B8FC1E7C18D2F0DE6FB416632007F17C86DAB776FD84B5F522D512D9D812AD42561C145DDBC3661E42BEA711E4880B69D0> |86 <001C60D8A8C9B7361F0244D2BBE2A47ED6931DF3A05D5A2C924B299EDC049167486E666DFB6053A66F5A708226A083EE8AC5900FD251B234E429441383151BD4159F480C04F3D3F4454A4DD26AA8AE40059EDE33BBFF27D1350A1853319D5AED8C69F074A4D5778FDBCC99B8B988EA76364B58074ECE73FB865321715C58D17C8F158650088FBE2721C86F468B8DA8B53DA36DE5037AD5BE48EDDE66AA61703935781F6CEBF55E7CCFD6D0215655820789866B4BA762B8DC609EA28293EB15B2550B653437E8A882B28F097909A1A7BE61E7ADD93C0AD89CA720D5A71629BFA35F89BFB2F5E86302E6> |3 <001C60D8A8C9B8707C25> |83 <001C60D8A8C9B7A73DF441C2C3D9A5C5C889BBD67819FB73D4373A2D634708E6D079BF71092D2250F9F180E7CE7E1AA6ACC58120C8AAF9119D1FBADF46B0EA796B5643E9314DDD2342398DC19C2FA0C7A73EA1369C318E731A79FC679A8E5FC35D43BB520FE149D6A6D28F08AB123019CFF142972524EACD4A4BAB05130346E22B1C95AF4417C30066CB5B84C27C095597EB916C1A29DCE1A3F11CBF93C307BF137B8C62515C698B92AACD3F9B729E2477E324DFA7F59A3FDDD9BB073FFDFA677632E71A0776251E86FB5D94C8D2BC047BC70BA9C7DE07B7AC4F8DDD974AD63FFD9A6403818CEC0029114DC6AB5E85ADB893> |85 <001C60D8A8C9B7361F02C23B46795D72653910CD93921A6FDD9CDDEAADC972AB982CC5D8D3B5FE867CBBEEFC619F5A1C2B4A972B9FED9EE648F895E4E074EC08EC6F22DFFDDDA4FA3BEB19639C658B27FC38CEB153BE4CD37CCB1259210F03A26F252BB05ACC7AD073E089DF5280B37883152B560576F11E3FF437ECA5369FBCC569CCCDE1E70144D40303ECACDE46325D1661B257361B9E51262D3B37B2E3A6E5> |82 <001C60D8A8C9B7A73DB9493E0605A6881E452811158A2196BE76120448A2BEDC4B2339F3FD440A77B3F57B63E2B44EEA2EE6C247E4674EEC42156DEB11FCC0C9EB475D341FF955D26CB247D2CBAF28B4A29AAA44ABD44B659889F45441E202D9DF71857D851DBD7AEE7F5F1B6756C6D6C4E4E9DE09D8AB388123B63998909DD105FA4881E69CEC6B6BD8E159E57E88BA1196EEF4FC378261E371E995F61647A0C5B83D98D6F43BECF281809872E04D58FFE190751EB0> |71 <001C60D8A8C9B7A73DB625092869E652A05A3995BB65D7FD0E11F891CDBD96064C425378832630AC84777B3F005698B3495ECB213256B9146DBA665ACFA3AB6C3DAC820289A04213784A780ECE6B97DC8F5760D31AC090A2AEB7C6DA40414BBB96E0D54740A3594BA26DEEA0030D803F7A2DD8FF03A48AC0B730757D5D278DA7F0B42D2FCB404447A334FC7CACBC725BCC45FFF2093993AD68C743340CB50AB68DEB2A797FD25BE407D1C50716E1A49E6D5CF2EB12BEAAF971F0EEBAB37C27AA2889E84E35C7EDE981B49781616DB2F8D6E3809FE0E00F427DE93250D0162A728501349B2DF64E1D8B4044E58C3B547D9BE90173AE2C786A4EE89B17082B7D5BC0A38E7F7607E55E8426E701A044FAC9952AA6> |88 <001C60D8A8C9B7EF322B88F691AC5309AE7BF355D9914237A10CBE825B041660F2E00F1D6F6449E9C4D37B33D82782E56A2061AF3F4B99728F4300045677A667C6B44D067D4BBE518ACD173193A4B730D7E0A186CB80A1F5693C25BFD074EA62C423D918DC4B92BBD1197B331986A8207C4A37FA765AF66694265A4C20F14A2DFC23E19580E6396EBBFCEABF7F3940D96F73AA0CF53898108F7D38E903E24C35CB2243AC608B6BBBC21DD600D7BD34DD026E693995D5CA52C4DEE7090FB81D504C09663A5A6C0266A634ADF70DA362EA346EF398A0EC39EFCF> |70 <001C60D8A8C9B77FE2CED904FC261ECC92B9EA7DEF85444D2E29F94E540BAE3FB87F81A475B5435230F1068D2C12B3DEECBF90266CD13C8342952E4F0E3BCBF36CDE5BC90A3D35D3C480C70541A966F2AE2F8D1942208FE7E1A1375A1A4067D7BC6EE56E145F36B983E93D5AE6C4EC94A41DBF9DD28BD461271CD036A2227857D547DC17775BF852D2048E9332B43010C27BACE89561692FE7C0175DA368973F9B67BC6841CEA15C030499196CE8990040301DA4ABFCC31B205268680B4EE47614> |89 <001C60D8A8C9B77FE2CEC7A69EECAC1233E1817FB9E2249A7E3F5D4D3C37DEEEB93A6B6C708F82C92FBE1DCF955F666DE0B7F1BE312E4B0472158D04405A8000D9612BE5260C70DDC4EB9365B339DEF99EDB1D4642B83DE2F6FB03B0672C6D26DDF134ABCE7F3CBEFA35BCDBB518C2C6BBDAFA3E82E00549E0E6DD6113FBF899485729AFBADF64E72D3ADF9D86F55868C207911AA67120B5BD516918E01F9DBE5640951F6EF3> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H /Identity-H 0 [/UAAAAA+TimesNewRomanPS-BoldItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUW+TimesNewRomanPS-BoldItalicMT /UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H findfont ct_VMDictPutHGWPUW+TimesNewRomanPS-BoldItalicMT [9.99975 0 0 -9.99975 0 0 ]msf210.064 461.833 mo(\000H\000O\000H\000P\000H\000Q\000W\000\020\000Z\000L\000V\000H\000\003)[4.42982 2.76985 4.42982 7.76973 4.42982 5.55986 2.76985 3.32985 6.65984 2.76987 3.88994 4.42984 0 ]xsh220.885 473.833 mo(\000S\000U\000R\000G\000X\000F\000W)[4.99988 3.88997 4.99988 4.99988 5.55986 4.42982 0 ]xsh%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (VAAAAA+TimesNewRomanPS-BoldMT)%%Title: (VAAAAA+TimesNewRomanPS-BoldMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /VAAAAA+TimesNewRomanPS-BoldMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-558 -307 2000 1026} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3416 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 3 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |11 <001C60D8A8C9B81F2C3AB57AB194F4783E7EF4F7F496E46883007B2A25484D7BF68B081B28F5DB84B2C80700F68B2197F4D5CDE8072954A020DE0D3E3CB207940EF85417B418A5B02AD6D1C3844667EA2970DE7A684C392F5B21> |12 <001C60D8A8C9B81F2C3ADC97069E12CE0DE37CDD25CB66FAD03CBE544A231EDF24E1BA640B8D926E8D777032E3B9409EC63880C3259694808B94C1D41F805DA76250378D90AB113EE8D71F0E2FC8ACB9947680B1A1D4CA4C7E> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /VAAAAA+TimesNewRomanPS-BoldMT-Identity-H /Identity-H 0 [/VAAAAA+TimesNewRomanPS-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUX+TimesNewRomanPS-BoldMT /VAAAAA+TimesNewRomanPS-BoldMT-Identity-H findfont ct_VMDictPutHGWPUX+TimesNewRomanPS-BoldMT [9.99975 0 0 -9.99975 0 0 ]msf207.287 485.833 mo(\000\013)shHGWPUW+TimesNewRomanPS-BoldItalicMT [9.99975 0 0 -9.99975 0 0 ]msf210.617 485.833 mo(\000Q\000H\000X\000U\000R\000Q\000\020\000O\000H\000Y\000H\000O)[5.55986 4.42982 5.55986 3.88997 4.99988 5.55986 3.32985 2.76985 4.42982 4.42981 4.42982 0 ]xshHGWPUX+TimesNewRomanPS-BoldMT [9.99975 0 0 -9.99975 0 0 ]msf262.812 485.833 mo(\000\014)sh304.513 407.218 mo
312.284 407.218 li
312.284 462.423 li
304.513 462.423 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
.749998 lw
1 lj
8 ml
304.513 407.218 mo
312.284 407.218 li
312.284 462.423 li
304.513 462.423 li
cp
.75021 .679683 .670222 .90164 cmyk
@
304.513 479.218 mo
312.284 479.218 li
312.284 534.423 li
304.513 534.423 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
304.513 479.218 mo
312.284 479.218 li
312.284 534.423 li
304.513 534.423 li
cp
.75021 .679683 .670222 .90164 cmyk
@
1.5 lw
320.071 431.949 mo
333.772 431.821 li
.709804 .0799878 1 .00381476 cmyk
@
333.796 434.298 mo
340.579 431.757 li
333.749 429.343 li
cp
ef
0 lj
10 ml
333.796 434.298 mo
340.579 431.757 li
333.749 429.343 li
cp
@
1 lj
8 ml
320.071 503.949 mo
333.772 503.82 li
0 1 1 0 cmyk
@
333.796 506.298 mo
340.579 503.757 li
333.749 501.343 li
cp
ef
0 lj
10 ml
333.796 506.298 mo
340.579 503.757 li
333.749 501.343 li
cp
@
1 lj
8 ml
411.949 432.405 mo
484.09 431.88 li
.709804 .0799878 1 .00381476 cmyk
@
484.108 434.358 mo
490.897 431.831 li
484.072 429.402 li
cp
ef
0 lj
10 ml
484.108 434.358 mo
490.897 431.831 li
484.072 429.402 li
cp
@
.75021 .679683 .670222 .90164 cmyk
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf498.74 504.007 mo(\000V\000R\000I\000W\000P\000D\000[\000\003\000O\000R\000V\000V\000\003)[6 6.672 3.32388 3.32391 9.99591 6.672 6 3.32391 2.664 6.672 6 6 0 ]xsh508.412 518.257 mo(\000\013\000H\000S\000L\000\020\000W\000H\000V\000W\000\014)[3.99588 6.672 6.672 2.664 3.99591 3.32391 6.672 6 3.32391 0 ]xsh1 lj
8 ml
411.949 505.311 mo
484.09 504.786 li
0 1 1 0 cmyk
@
484.108 507.264 mo
490.897 504.737 li
484.072 502.309 li
cp
ef
0 lj
10 ml
484.108 507.264 mo
490.897 504.737 li
484.072 502.309 li
cp
@
.749998 lw
1 lj
8 ml
[2.99999 2.24999 ] 0 dsh
-24.635 335.268 mo
76.3018 335.268 li
76.3018 363.638 li
-24.635 363.638 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 1 GetGlyphDirectory55 <001C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [9 0 0 -9 0 0 ]msf10.0148 347.594 mo(\0007\000U\000D\000L\000Q\000L\000Q\000J\000\003\000S\000K\000D\000V\000H)[5.49001 2.99693 5.004 1.998 5.004 1.998 5.004 5.004 2.49294 5.004 5.004 5.004 4.5 0 ]xsh-2.68045 358.094 mo(\000\003\000\003\000\003\000\003\000\003\0007\000H\000V\000W\000\003\000S\000K\000D\000V\000H)[2.49294 2.49293 2.49293 2.49294 2.49293 5.49001 5.004 4.5 2.49294 2.49294 5.004 5.004 5.004 4.5 0 ]xsh1.5 lw
[] 0 dsh
-15.765 344.373 mo
-2.06389 344.245 li
.709804 .0799878 1 .00381476 cmyk
@
-2.04072 346.722 mo
4.74291 344.181 li
-2.08712 341.767 li
cp
ef
0 lj
10 ml
-2.04072 346.722 mo
4.74291 344.181 li
-2.08712 341.767 li
cp
@
1 lj
8 ml
-15.765 355.295 mo
-2.06389 355.167 li
0 1 1 0 cmyk
@
-2.04072 357.644 mo
4.74291 355.103 li
-2.08712 352.689 li
cp
ef
0 lj
10 ml
-2.04072 357.644 mo
4.74291 355.103 li
-2.08712 352.689 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 2 GetGlyphDirectory70 <001C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |92 <001C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf601.018 499.662 mo(\000D\000F\000F\000X\000U\000D\000F\000\\)[6.672 6 6 6.672 3.99591 6.672 6 0 ]xsh601.355 513.912 mo(\000\013\000H\000S\000L\000\020\000W\000H\000V\000W\000\014)[3.99591 6.672 6.672 2.664 3.99591 3.32391 6.672 6 3.32391 0 ]xsh1 lj
8 ml
570.967 502.651 mo
583.203 502.501 li
0 1 1 0 cmyk
@
583.234 504.979 mo
590.01 502.418 li
583.173 500.024 li
cp
ef
0 lj
10 ml
583.234 504.979 mo
590.01 502.418 li
583.173 500.024 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: WAAAAA+Arial-BoldMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (WAAAAA+Arial-BoldMT)%%Title: (WAAAAA+Arial-BoldMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /WAAAAA+Arial-BoldMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-628 -376 2000 1018} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 3417 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 5 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |80 <001C60D8A8C9B59F85D96BFFA227AFC88923A0D1805E73B422C61096C748C37D1E540D36A22F2B6BC6A899BC0DDFB70F833AC344264273BAAFC893B1FC9ED217D777A23EE663B8B086E0514F75141042C5D3D73DD911F2D1CAF8A5CBE36BAF59E972B9B495DB672C658FCC56CEAEBD4AEC19A01E1468C48C0E75D0E664717269A1A74C27B1C65DA4B01A0679EBF4AA6549A7814A2C66FB097D4B1C6FCCF629A056E668289EBF7379F0E89EA139501E> |72 <001C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC3550E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA94524E4E0809AB2B25573430347DD> |87 <001C60D8A8C9B81F2C3AD0BF8CA40D7105A9B3D27345F202DEBDE44606EFD0E90137AE13DC9D19FB7B4ABCA40FDADEB59FF02A690A47D6F26E8BDAADCFC0513C14FCD80BF39C6AFCEFE1132622D45FBB576E32F86682C5BCCAD00B4E7E375350009EFCA5AC835906F56B697B29> |68 <001C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B629FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D443463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5FE565E2F9524F3166F0EDA1C9CBD6F2D9FAE6CBD991E5FC9CACD3E5ACCC612FA46CAB683778C9E93119C2E309BBBA2FB6B108D4ACC24630A4E27912F2F48E37DD6F256C920ECC30772CD6DD1CCCB84D330E3FAA> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /WAAAAA+Arial-BoldMT-Identity-H /Identity-H 0 [/WAAAAA+Arial-BoldMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUY+Arial-BoldMT /WAAAAA+Arial-BoldMT-Identity-H findfont ct_VMDictPutHGWPUY+Arial-BoldMT [9.99975 0 0 -9.99975 0 0 ]msf395.287 573.56 mo(\000P\000H\000W\000D)[8.88986 5.55984 3.32983 0 ]xsh%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 4 GetGlyphDirectory71 <001C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |69 <001C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |78 <001C60D8A8C9B7A73DB90BDE2D32BC36BC1297E20AB90FA9E27E830D444A320C85D226D41FA634DF03A4FEE2FD90BF314563D4BF5C68> |17 <001C60D8A8C9B854D0F4604C2A88D29523E6F8C6> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [9.99975 0 0 -9.99975 0 0 ]msf418.626 573.56 mo(\000\003\000J\000U\000D\000G\000L\000H\000Q\000W\000\003\000E\000D\000F\000N\000\020\000S\000U\000R\000S\000\021\000\003\000\013\000R\000Q\000F\000H\000\014)[2.76987 5.55984 3.32983 5.55988 5.55984 2.21997 5.55984 5.55984 2.76987 2.76987 5.55984 5.55988 4.99988 4.99988 3.32983 5.55984 3.32983 5.55988 5.55988 2.76984 2.76987 3.32983 5.55981 5.55988 4.99988 5.55988 0 ]xsh1 lj
8 ml
308.398 407.218 mo
308.398 332.502 li
495.768 332.502 li
.709804 .0799878 1 .00381476 cmyk
@
495.768 334.98 mo
502.575 332.502 li
495.768 330.024 li
cp
ef
0 lj
10 ml
495.768 334.98 mo
502.575 332.502 li
495.768 330.024 li
cp
@
504.771 302.818 mo
566.59 302.818 li
566.59 362.204 li
504.771 362.204 li
cp
.184451 .0390021 .00204471 0 cmyk
ef
.749998 lw
1 lj
8 ml
504.771 302.818 mo
566.59 302.818 li
566.59 362.204 li
504.771 362.204 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 2 GetGlyphDirectory39 <001C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |92 <001C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BAF02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DBF9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A71BC990F312D4821883A95164BCE1683B85434AFA8> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf512.021 322.656 mo(\000'\000L\000I\000I\000L\000F\000X\000O\000W\000\\\000\003)[8.664 3.32391 3.99591 3.99591 3.32391 5.31592 6 3.32391 3.32391 6 0 ]xsh514.025 336.906 mo(\000S\000U\000H)sh529.337 336.906 mo(\000G\000L\000F\000W\000R\000U)[6 3.32391 5.31592 3.32391 6 0 ]xshHGWPUV+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf531.401 351.156 mo(\002\031)sh%ADOBeginSubsetFont: XAAAAA+Arial-ItalicMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (XAAAAA+Arial-ItalicMT)%%Title: (XAAAAA+Arial-ItalicMT Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /XAAAAA+Arial-ItalicMT def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-517 -325 1359 998} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 2552 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |182 <001C60D8A8C9B88C08726342C1522465F6AB6934C58066C912A4B5A14C06FE109968B6981FB0AFB82C6407E8AF49B827> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /XAAAAA+Arial-ItalicMT-Identity-H /Identity-H 0 [/XAAAAA+Arial-ItalicMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPUZ+Arial-ItalicMT /XAAAAA+Arial-ItalicMT-Identity-H findfont ct_VMDictPutHGWPUZ+Arial-ItalicMT [12 0 0 -12 0 0 ]msf537.293 351.156 mo(\000\266)sh1.5 lw
566.59 332.511 mo
580.952 332.438 li
.709804 .0799878 1 .00381476 cmyk
@
580.964 334.916 mo
587.759 332.404 li
580.939 329.961 li
cp
ef
0 lj
10 ml
580.964 334.916 mo
587.759 332.404 li
580.939 329.961 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+ArialMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/OAAAAA+ArialMT 2 GetGlyphDirectory47 <001C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |21 <001C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |!endend end
%ADOEndSubsetFont
HGWPUU+ArialMT [12 0 0 -12 0 0 ]msf605.991 434.302 mo(\000/\000\025\000\003\000O\000R\000V\000V)[6.672 6.672 3.32391 2.664 6.672 6 0 ]xsh1 lj
8 ml
625.025 486.269 mo
625.007 453.08 li
0 1 1 0 cmyk
@
627.484 453.079 mo
625.003 446.273 li
622.529 453.082 li
cp
ef
0 lj
10 ml
627.484 453.079 mo
625.003 446.273 li
622.529 453.082 li
cp
@
1 lj
8 ml
[5.99999 4.49999 ] 0 dsh
657.823 429.906 mo
676.573 429.906 li
676.573 284.068 li
535.673 284.068 li
535.673 293.819 li
@
533.196 293.82 mo
535.674 300.627 li
538.151 293.82 li
cp
ef
0 lj
10 ml
[] 0 dsh
533.196 293.82 mo
535.674 300.627 li
538.151 293.82 li
cp
@
1 lj
8 ml
[5.99999 4.49999 ] 0 dsh
657.823 429.906 mo
676.574 429.906 li
676.574 601.2 li
193.556 601.2 li
193.556 540.504 li
@
196.035 540.504 mo
193.557 533.697 li
191.079 540.504 li
cp
ef
0 lj
10 ml
[] 0 dsh
196.035 540.504 mo
193.557 533.697 li
191.079 540.504 li
cp
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: XAAAAA+Arial-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/XAAAAA+Arial-ItalicMT 17 GetGlyphDirectory53 <001C60D8A8C9B6079F6289E4FB616574B85DB34D3661D0AF579BEE163007634803F6CFD5CCB737C43FA305FAB5E9BE5E6B66B0724BCAD78829B28760BDD98EB12B7CC2E75D6337C5ED008EB1E288210A9D4A6FE0D3D9559F0DA87CC9A95D3BBD0EC73E0A9799C9BD7FAC7810AB389833F5838121BAB4EF5F099D0913B853CAB0AD7FDA5654B8D6013426E3B10FDB9866A34D5CB8B8E9D67C40AF5C30B02CB8B8FC1685C83DD274FBFB34> |72 <001C60D8A8C9B7EF322BFA1D840EFD3699BF97ECD2331F442555D0FD2C6CE33DCBE8371D3F092D4656CD5E21B1C983278F39140A332AF65A43F4B0CE5CF8D10ADFD32782C3A37DDF6CB69C7051AC36CAB8ED1E9D98AFA88E152E715336E997EAB89B1E4215F7D54359F8614793CB7B6145E905E00D0F076BCDE0B42A7A664676585EF2561D2C80D6F16DA76B1B3B2F433A3F41939AEC6DCC8F187D8A8076FA1569D1AB2953CAD867CFE20160AD6F335ECC> |74 <001C60D8A8C9B7EF3279B988A832F5484DC519C0ED715C2154E3BA530BDB738F0EE128FB987BF03BF8C67E82218E93E3FA17B8612B8A86A7EB65533EA607ABA7C8E27E3E46D5990A2AB0852CBCC11A7B85C025059905E524E81E8EC65C65E382933788E18B48358C1C7F6A36AFD08464ECA4FFC77C93881095A2E208505376B6029A7D612C6CC514678474A482A80D7C122CAB45EC0E12F874BDD8D33A28EF5E8CE687A24D4782AC3783FD2F20C7EB20BC916C439546E7F2EABE211C7C7E003E3D4CF9D2B1DF8E4AF57657E829E87B9E5416B9F7C725C06403169D28A1D64E51555123A033AFF4108CC624B46E856FD49DD59DBFE9DE3D7E3B9DE400> |88 <001C60D8A8C9B7EF322474A3FF2252F8D4E7B8F3A17464B056D3596A30858BE0AAC1FDA682D8F4123E912883DE59CFE3BAC9264B6889F8BE310F125B939050B0551E424964CE907343BCAD6FB65FFC33ADA6E5E8020AC72D3FB9018F181C424525E28468BF07B2156CCC6BBD5717088EDB73> |79 <001C60D8A8C9B88C087201A3A4037FE2433C2D197C1932074E1B> |68 <001C60D8A8C9B7EF32246D06B518BA4ACD5E2F5CE92BF7E283045A6D96E8CFB0FEA52B488A698D810ABDC3FDF8913508690996A9753D0E68C237D49060B14BF13C72F11025F71CD98E412DD72630CE12274384CAF60E6672FEE3DB4C05451BB1F11E9537D6E11AEEF863437FAAD8D7D9B27BF25AF2AA7C1E5FE178F507F3FB5C2A1B81B8A8BBE388250F940D0460822669BDB4183A291FEA65813C7FAF5EFE3C66D4AE7221A08F96419F4B2AE6EDA929DF3B3065279707077151FABC9D3ADD870AE6863DD5B21F955293E44D86C22BC6E7D9812BB55E780EF52E8EC84E6C1CC0B08B0B0F939125796F0326EF4445F89EB731EC0CF70696449DD1ADF4> |85 <001C60D8A8C9B81F2C3AB15E9B1A3F7E462DAF39226795265E23E094264A095A1B326FF064CE4168686F59C54569385F95255E59B1D4932AE066C9496D01B90FFE83B47D05F58EDAA5> |76 <001C60D8A8C9B88C08728B0370662B41BF7360BFB368B19277E353234DFA12683E94C5380F6C591694> |93 <001C60D8A8C9B7A73DB6F0B69891B0C2D37A19A2708A1881BDE245F8045A16DEEDFFF8BE8D58665EEF79F47D3F797354D583D640022DD506DE3119D01143096B42C00D5D19B179F4A6> |87 <001C60D8A8C9B854D0F47C238C0374D9401BE88F4E827DBF6ACD1493D301555AE9FDB97705B5DEB246C70D14D40A9195312074E63C52F6E3D89F7577AB6EB9D86C962D4AACF9757FAC6B7871A41A5812D02B983576BB62D7A8BC6D6B98DD8559487E3FB838CA3E0A199191> |82 <001C60D8A8C9B7EF320A9ABFEA5FF1C78F5840B7A5064DC8C7E41B0BBE4836C650C07B0E95CD1630A250459B821DDE69AD2AAA346BDE8670C6D478E1AD407847DA3569019FF7CD08F616AD35AD641B4CF5788A4211E6B6BF63EE7DA33B57DC4ECD3E8B6248858113BBA29F6AECE1A9288EF0C7897BB4DAE32705CDB5F650C4344FD2288FFF670C7800BC673569236E671E22EA3E2EB886D5A6BF6938C7EFCF6AD8D21ECB9E63DE5E72A0DF3DEBC27B9C026A2A36> |81 <001C60D8A8C9B7EF322B18A8E8B2674776BB317260D07AACFA3465481E4FB74827D3CE3327555DA6E18282782364AA872DF1DAFBF311A6BE634EE2284E4AEFFF0DADB39A4096DF4A18C5E17D77FC063C67E26BBA6B806187FFFD8DE25F2D58D002AEF2E409C1A7D172CB3CD1> |15 <001C60D8A8C9B854D0F43307827575E3EB3C15D1273185FD28E124271ECF3D5C9F36F7DB936B8A052EA3EC41ADC7> |3 <001C60D8A8C9B854D00D> |86 <001C60D8A8C9B7A73DBF501F5488FDBD4A20EF6D7B0506483C2B880D9827035485646843C9D459AE9CB8D1BBD974889E6F89F2D43D89F327D894D864B1BFA5AB890D16098D93759AFB3CA432904A4865393C68EE760D6EBDF0A6F29C5D9765B45C6CB22C66996E91DD921F7292E259ABFB6A982338F25D286D28A8990FBB123263F9C6EECFEC70EFF44E9EDC10ED0720F2476C4461C9BB9EE4E441F51AC84A1D9D4FF1983E0181C07DB489AADBC8B35A6747E61D103ACF8A6C8CBA20FE14406BA91F13E4D8F3CBD8B7409F7F58C0A1B26D> |73 <001C60D8A8C9B854D0F424EFEF878FA7653EDE8F351276501515153085717EC5B3FF6C4CCAF9B67B2ECDCCF20BD564E1B4A9970B29DF0576B8AD7F17018A6FCBD37F82EE418A1995E338D8A70BAA5BE87614F48B4A1692C05F0C3651CDBB> |34 <001C60D8A8C9B7EF322BACE218B4D0F06E594C6A2801E69C4B8DFE5411E8B3BFF9D988BC83F7C8D03DE8FCD114F046DF78B6278F95DEDDF7877B6E9FCFA026784EDE1BA397F45191F632024F6598A1AEA375A455921C231966DD568FD0258D420A00836EBD039DB154AF28CF0F5FFE1279284C7905884B7322CE4E45872D03DA0E44590DAE0E98C2A0E1C39DE234D577FBFD8B7F6FC36C75D8FE9EA19E0E> |!endend end
%ADOEndSubsetFont
HGWPUZ+Arial-ItalicMT [12 0 0 -12 0 0 ]msf359.097 614.201 mo(\0005\000H\000J\000X\000O\000D\000U\000L\000]\000D\000W\000L\000R\000Q\000\017\000\003\000X\000V\000H\000I\000X\000O\000"\000"\000")[8.664 6.672 6.672 6.672 2.664 6.672 3.99591 2.664 6 6.672 3.32391 2.664 6.672 6.672 3.32391 3.32391 6.672 6 6.672 3.32391 6.672 2.664 6.672 6.672 0 ]xshHGWPUY+Arial-BoldMT [9.99975 0 0 -9.99975 0 0 ]msf530.596 612.56 mo(\000P\000H\000W\000D)[8.88983 5.55988 3.32983 0 ]xshHGWPUU+ArialMT [9.99975 0 0 -9.99975 0 0 ]msf553.935 612.56 mo(\000\003\000J\000U\000D\000G\000L\000H\000Q\000W\000\003\000E\000D\000F\000N\000\020\000S\000U\000R\000S\000\021\000\003\000\013\000R\000Q\000F\000H\000\014)[2.76984 5.55988 3.32983 5.55988 5.55988 2.21991 5.55988 5.55988 2.76984 2.76984 5.55988 5.55988 4.99988 4.99988 3.32983 5.55988 3.32983 5.55988 5.55981 2.7699 2.76984 3.32983 5.55988 5.55981 4.99988 5.55988 0 ]xsh318.816 325.267 mo(\000\013\000R\000Q\000O\000\\\000\003\000L\000Q\000\003\000W\000K\000H\000\003\000O\000D\000V\000W\000\003\000H\000S\000L\000\020\000W\000U\000D\000L\000Q\000L\000Q\000J\000\003\000H\000S\000R\000F\000K\000\014)[3.32983 5.55988 5.55984 2.21994 4.99988 2.76987 2.21994 5.55988 2.76984 2.76987 5.55984 5.55988 2.76987 2.21994 5.55984 4.99988 2.76987 2.76987 5.55984 5.55988 2.21994 3.32983 2.76987 3.32983 5.55988 2.21994 5.55984 2.21994 5.55988 5.55984 2.76987 5.55984 5.55988 5.55988 4.99985 5.55984 0 ]xsh79.2617 51.11 mo
189.954 51.11 li
189.954 103.527 li
79.2617 103.527 li
79.2617 51.11 li
.605005 .204959 .281376 .000946059 cmyk
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VAAAAA+TimesNewRomanPS-BoldMT 16 GetGlyphDirectory41 <001C60D8A8C9B7D8BE16C0AD3299FF178E380F23EF8285ECD14E32B6FC4FA4C80A81C1367F22885BFFF85257C46061967A0BFAD29F8FCF5A785815FEC106E530C8EB839B80C8519F12ACC649019E78CD6DB38E8D81E3E87ECB25686FC8498E04F3880676F25466B5822AF8EC443DDA03986B03D7D7D9A03FFD005A0FE16BE7A8EFE9831E47150923F72B550D2570C2AB4C4C5204368FD59574148F88FC90669A7A7FF6280BDEA741FC397E07194D779BCD12> |72 <001C60D8A8C9B77FE2C1A0FFE616EB00E9CC30AEE6296E704D5E8E6E2A25CD5B841666118E2FAE181ECDCA295C531BAEC8AA2C391851649F7A3F6C1D06B8F53311D73A0F775B337F21892F2D55D51BAAE57B9A38BC3FBC0F8B7058E4F9E704709FA2F144D9397D8E7CC8EE685293C980753BDE3858AD8D5DB11A1F649D597DE968E74B3A3B8C5A39BDCB85B6D8AE6FFD00E4F0A287> |68 <001C60D8A8C9B7A73DB9E86B7E36429A2884771404E6FF662B8AA7E7384C3659F637EBD399261C63A35B069A69F76ED1A82E238E7EE163D317BE064E3858C7F7730B3F4964EB20955A37792E7E1687D8ADC075DDB7D7FB25258139553D3CB2FA10ED804622949E5930CF99F28E8A477603C46FC4F5A92DC2A1E35DB06F67F3E51B82DE37C2C17EC2E5C923B58246C88B9A4601B0D1A14F5724D07DAB747376B8430740055D15C3763245B66F59402378EFADB8789CFB2CE89C326A037B9EA75216356106F9269249DDBB95B13318EE882CB697F95419AED017DFE8527A8D8EF87BA96F46A6F3C6B37E5DC3CF5F042CB4BC684A4C1AF54058E7FE4B16C2ABDA5E4C6AEB6AC099DB4A66DB29E012598F2F12A231> |87 <001C60D8A8C9B81F2C3AE0D71D60A6D0809ACA0FF6B89A38F7E3BC89850C1DD34D082ECFCC2A4F531E37217E8E3CD02D42FE76F828E185B10A17EE368D50D1536CFAF78DF5C03ED49FE0A24E371BB0887E07856C5D39D6E9C2D58E0CAD3CB98DB35234BA12CF62ED06495FE95A32> |88 <001C60D8A8C9B7EF322BA0905ED0DC683347CE70FA474511E47D7F16FABA80631D8B81EF4E26BB958E5CD419A29585E75FE6367FE08A7CCFFE45262AE333F224F7158401337079DCB57A01C4153127AD91F464BC7389BDB2B1F912E0435254BC5B90C25CFA9CF36838EB1DC267155E152B4A4C084F64F36BC4A1C665448CADD0DC39A2B4C68518BC7B0B05DE633BA8500EE54DA457E79EC9CBA6> |85 <001C60D8A8C9B77FE2960E00E3A8DCFC480C099B33BBDDEDCBBEDD2A0D472C0A7B73DA6C507A02DE3334237527983B6592EE1B2F262F9019257EF00896B753BA1EE7B97E00D2814390DFE8166E795665E9161989E492FE9CF41E80A3FAC0B9410A0D35E8758FA16A6EBCF6A32D78AB8563CF90B05BC9CE7CBF6CAB662900B3B6694F1FC2BDC482D5EA0481674C5822C4D45FD0EE1F9108A4ECF4F95EA02DB223FEC06EA06FE96C26DCC8DC8D15> |3 <001C60D8A8C9B8707C25> |40 <001C60D8A8C9B64EDFF43CAE20020BE166EFAA2D6213597545CD5E93E6A2ECF3CB40FB12FF5A4C070DBCCCF0B65B2457F57DF6A0C7C4884A1C722677293F999B1FC2C8D08D64F002B128F3BFCD49819B5AACEFF20CE165B17EA76BCA46F17CAA0C8534F040B8DED7732E604914BB17644AD8556255CAF75EAA1ED433F63F74DA50EF21300E4F304B4F2F588004C410F1271626C943E366630C9CF2CD081974E99938D8C1D825DC2ECAC9A5CE7FB4AECC08C155FD082BF4A52E6D4F547F59189007E7> |91 <001C60D8A8C9B7A73DB9D68E3C59A537D4244B74F90AE5CF41C7B4A2C7BCA7A300F542CA93A2965E2AB86F9584D924C16737BF4180B7DA4B7375C292CAA95A0E3B2594252BA96E488864DADCA2044CBA91A0274761964E2F75E7C5D311CC85FA3455FCD6989CD236F854D42654F054105B8E0A503E8AA280D5C605BAE2185D188946DF0290DADBD2E70C64DD6894FEC8D24D6C9DAF05913AB860A656821A51421A29E857B8FCAFC52BB43B89323BB040408BE2C54B02756FD8F29437E2C56AEA7FFF343CA63AC2EF68BA76DF88EA86E6216CF5E0E5EA45C5BAFB0EDA849E2779> |70 <001C60D8A8C9B77FE2CEE96C7945B0435FFDDE211B8F948D1DBC8485861892F6D99960D947D725C2B400D72D2E2033C9690A49A5B9AEDD48C99E1E12194AA92AD9E1221612038A683F14C558C3BE52A1D282380EB81ECDEF9B33E298B18379F2DEE9473052CB47C57B3F66F7E9B2774464DA469F0AEDB78DBA5D5DA222391213D6F7DC6F471B1C2EAA711F193F31D398A5700FBD884113FD59850678DCA0650A6DD9CB70CA> |82 <001C60D8A8C9B7A73DA75A812B0D9E0D72950C400992B64791CE4BE936E35EC58E93177DA216CA6EA116FD0299C2317BCD42A8DF8FC302833AED60D02FEBA6105DB891946C90338F674D705E1347FE9120F0544578B7DAA3AE7563B3048B2698F9445592B7A6749491B2DE1FE4A1FD150BB3E20FEF7BE4E02D604E63E559C8B95FBFA7494AE1EEF5610DCF16F48AC01BFAB48671FA48799F609CBC8530028A5C8DBEF01BFDEE2A> |37 <001C60D8A8C9B64EDFFBB11F3E2A10057E50E341ABE1DBC770E1C5C06F81BB728FC2798FE7DE3D8D55194754531B662F878A1C5B52B2BC9A6A3EDB01E8FAD74764554945ACDBBFC441DBC7519AC204790E8B10B16B935FCC95B5AE677CDEDC158F367FBEAB4DECE80779208A83BA5B988094ABB02C8947DE7BBD9D5F70EFA356B1D1C419EB58119C17670AB47845E8F10893AE4CFED7310F4A2EDE886F593B1F88AC8C92C7F8B9234F7F24A3DD94F3DD1E2EFF386B3CD9BEA0954D5167541B4C28B1D6215876A5CF1DACA668DAD06206151F500A2C0940462ECF20F084902D891E2F1FCB461C960983384E140E45CB0A961888ECF5B48232> |86 <001C60D8A8C9B7361F0274264DFD1E2F12F4038CC3C2CC64F8E8B1EB247282BBD631FA3240975506A5A512CB2808310E488A51FE18729B6606AFD56EB1722AE1D8ABC20744FDC6CBF3951E8F8BD520E7CF9D93CF33B4900AFA5C5C4D000CCAD0ED41D50E319EB8B858BFAC6C03AFB2E197690568AF5E2BE9F4C558829874D2932ED897622551043851C0CC72FF3440821220BE6AECCD9E27B0282336CF762B277D88192B83BEB39BF3A8D350E4CD0CFD13DA7EB0A8BEB03D5FAECB2BB99C89132A2E8C5DCDE91DE17F55FBEFBDA6CAE805794F42115FBC221DB69DBD3240613F374A> |16 <001C60D8A8C9B81F2C3A728CE9B4C36D54571D30223019EB> |79 <001C60D8A8C9B854D09CC77F32FE56EAFD8F160C72BECE8873AE417AE0D21D5337605639AD1A151DC364880F2C65200EF41B3343ACE730AF8052A8FF79376915451BDA8AAC02C68E> |81 <001C60D8A8C9B7EF3272AED84C447117DF46F865B97FFF41B029592F0B940D3CB1496385D278F27E297025A56C69B21BCC4BF07172388925626DFA8D6C471DD2C590CEE341C9379255E659C301E8B658357553D5C99C48C092267972A8433183661DD05FE8753D94EA589F58F98A095B0B81C0D9CA47EDC3C182D840B9D342BE463CBA8C184A5066CF3C562B1180B231C61D26E2526730BDE7ED78D55D78939A01438185A1FD0EF48EAA78E89F116F3F13A5> |!endend end
%ADOEndSubsetFont
HGWPUX+TimesNewRomanPS-BoldMT [12 0 0 -12 0 0 ]msf86.0118 72.3388 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000\(\000[\000W\000U\000D\000F\000W\000R\000U\000\003)[7.32001 5.31592 6 3.99591 6.672 5.31592 5.31592 3 7.992 6 3.99591 5.31592 6 5.31592 3.99591 6 5.31592 0 ]xsh86.0118 88.8388 mo(\000%\000D\000V\000H\000\020\000O\000H\000D\000U\000Q\000H\000U)[7.992 6 4.66809 5.31592 3.99591 3.32391 5.31592 6 5.31592 6.672 5.31592 0 ]xsh79.2617 75.1322 mo
.680961 75.1322 li
.680961 42.8882 li
85.8384 42.8882 li
85.8384 51.11 li
79.2617 51.11 li
79.2617 75.1322 li
0 0 0 0 cmyk
f
85.8384 75.1322 mo
79.2617 75.1322 li
79.2617 51.11 li
85.8384 51.11 li
85.8384 75.1322 li
.605249 .204776 .280949 .000915541 cmyk
f
.75021 .679683 .670222 .90164 cmyk
HGWPUT+TimesNewRomanPSMT [9.99975 0 0 -9.99975 0 0 ]msf26.8842 56.6103 mo(\000D\000O\000O\000\020\000F\000O\000D\000V\000V)[4.42982 2.76986 2.76986 3.32984 4.42982 2.76986 4.42982 3.88998 0 ]xsh%ADOBeginSubsetFont: YAAAAA+Alegreya-Regular-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (YAAAAA+Alegreya-Regular)%%Title: (YAAAAA+Alegreya-Regular Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /YAAAAA+Alegreya-Regular def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-395 -293 1259 962} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 1345 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 12 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6747BB59FA940F9AB64323C93562785D45E93CFA0432DF171A289CB928677998AA03A32FDAF94DAD98275B4DAE9DEBB8150D376EB5BD1BC65> |438 <001C60D8A8C9B820E2DE9F28DC087F94B192F3E88EDCA5FF86637341995127B688CDB81497635D01A86872B1F75F7643351ED097FE576C81B517DE948FD039819528C0EDC853457C83FDF76C4A7CF1EB2190C81B7D82E4300DF3B02C8F9841B2D6238423A2BF5C9AED11E012470E9D98140CAEC630A026C9AB0CD3D8F67BB9E94A004D0353F5BAABCD7334FB990EF311E862F37C8AFF5DDF441181B122B3BEFAC69059D95FABD480F116> |417 <001C60D8A8C9B73CE4AB99407FD4161765501180F3FE60EFD67206E6A7E130D1C14F7F198CE560AF67F7900BA945A80CE1700D014B3CF0906F3E0FAA68EA75A73E0265ED7FE63F823BA138DD62D9CEE2ABA842CAB645E0553D7AF50D01624A5DC10E80F057A9DCDEB41117AEF479E188EB7CA56EA4CAF0E85CB677EB8ED6FCA41710078F569B35B65E7CBF2021DEA43A98AC6F1C63B1E25A7FE8C4690E275956D889283B1B83065AB6D522241AED68E12597D0DF9C2C452343D18A8B06F563644D3C8D5DCFDE1BE53EC0313A2138FBD8F21402E6A9E1DBA095C213B1334D4710C4D23E5C873BDAC9532549422B4BB1179C043B63C6B4A0679501ACB99B7E> |253 <001C60D8A8C9B74969EE2AF9212EB682135F8816A96B45D8E63B2B5EF7F5C3DBBE1B2A80D8833FB4C37E806CB33CEFC78A51BD64285B30432D51DCFF6494E2FA304766FFCA967E0CE1200B8FECD795BAEE409EA2DDB9DEF568BC0D22C2F4BE713183DF354DFA2011D8D166F34EEF9CAEBDF820B420D618F64EE32EBF82396885608CD21555EABF86902683E79285FCCC7445678C38C9ABDB299BF8A66ECF072CEB189018D0C83C91509AD95AEB6A35FCB7A06580401B2158B2E2739F2313252268F9DFE00259C57935D9F1EF3E2D964A0DA1380C2471EA72B1B1C7FF99C2F6714686806442EC6DE6D07F4556BBC0985DFCBC> |333 <001C60D8A8C9B850A990676702304D2A0B94732C9C7BB62F7B58F6C68F775C159AD47A254CC7296D8B833D8878616B462A74EEEA00EC028FDB40D9FCCA95A84109A36030C082B32E387399C510C579BF026D823454F03CF5A1D6500E6BEF8BD06DF29CD00F33180CA545833130236823D9C7986ECDF397F5666B090304B6B25D237F62C92202F530E8F90F37C16CEF92C2776D2EC6A4669BEFFF365A4E4E3F7EE68366B4F2D4E02CE7A2E5B16FA017EBDFA9CB6B9F5AE1E8E5E8BBA57F0A9A63412939F2B314F13554C0DC3AE82426> |368 <001C60D8A8C9B79747400AC41FD8773541544C52CEF6C95BF3376EC971649BCBBAA85B663082760AB05338B1342F607965E19E4D2D5F4A5233373BAAFBD287C33F94F87140FAD8A659E5DACF00D7AB453122E41CBE2779E049513C72DC7B1C38A1C1F6A54E5241DA3C1C8D711220A0839BA9F2F4E33F9F3C698734B9C7FE28824301D7E71A5F897C8BE48CF2C9AFF8E1B0D4AE53B049F9AECAB6B2B89222F17A43B1270EDD59A358EB0C1F596F201CE99825F90F0D28E7550BC920B8B4E08F6DDC2A53010BAEB6BDB82C4B2C0BFCF52C30F979BF4F2AB40D3AD47F96379DC1140722905B77438C7E318638FA044FE0F237B9ABC26E4913E26C8749DD2928516DD06B529B82F79AB048BAE7C83C6BEB0A1889CE8EB076E6738FE89E13AAED29B23046E02EF0CC799D81A7437A01BBC1677BF8F2> |2 <001C60D8A8C9B8A452A4> |425 <001C60D8A8C9B709C42BA467FB1412A5F5D23C63836E1A75EC74445CC6EE830A0ABC32540DE3DB0A07F27657897999C47C72BCD749F0667A13BDD057754A8BEE6EA2D671C7D09B42D42A12F71BEB9E30699711933D85283D0AD33A429903F170893E3A0B8ABF6765712848B8A5CD5CB40C24ED400099872AFBE2C42E44510E97FE61F6D98D326447A0ED06C0EA09A0B7297557B7B8E5E363198D3862AB627A9E9114007C6BC7D39573EEF361130D5281AF4A136DE0AD7D8CA02EACC2B24BE9640BB9D666648B19BBEB298E2EAA88183D56CD9EADF849569B9591CEF49AD6512D9B707FF6575EA80C3BB162CCF1006802645D433713E1FBA44FD03F9CFC6A1F56E469CB74FBAAD1BF2E> |366 <001C60D8A8C9B6B5ED998A62CDEB487A503DEDE823B104806840FAB61B75A02DE01A5E8255462116189A0779667349E4C15061F5B0034DD7FB738A092427B626FA4E7A4F6FD983B88451EA4F81F71E385B2A55FFF96F144C0CC2F33764E06FCBC488302171D7EFB3757B07BD387B24F4FF7566EA4A77F0F34B19C115EA2DF5F7D6395FA8BE16E747FB4C90BD74ED2B10068562D5EDE89F2314AB8E85B2C0F5BD301A0482FA931B3A47FFD095BF16F9B2148D3AF5F6F7D33BB132DD7B60B9731F2AE493FEF71D0065C4BF9F6809F3304C969ABF0234380004CD04B85123E7A6331CD6A1C87DA1ED16AC670A998D54DE6897FDB7B273BCC9B6EE55BFACFCD602F42EDA0FA04F2B50EF87FCCBA9BC8F249BC92CBAE8DE35C8C50FDCFE1196919C5837DCDD33BCDF8966D48828E9076A1D0F1CC0AA685D76A2AEAD405B2AD1076F55D16514F2FF38FFAB28DC2ECF035904ED4E29F21627B48AABDD71589AFAC49C2DB2835D7556350E864688C266FB848A554EB0A6BDFE4DD6C0D898B66D74EFFBCD91EB3004EB66E0B8D5DC2A921B6F48E8E3DAF25070C5B8A863ED62008431BE9D67E187A40688F15DED94EAB63C8745E40D6522158D9F2B3CD0C399> |414 <001C60D8A8C9B78B919E9CF110E5344A2D40258850BB40AADE91A68A0C3C971E43974A818879D0C8017DD8E0C85B411B732F1070F7F8B19073D02BE9B2CF198E84658F34112E5437B100C63103D55A871968DC08E94E32DCCEFB8B1F16DA0BEBCBC4C490EAB0D7066D2B1025D1D256C176A2B2EC8B0667091FF6038AB503D6D25BD67FD0308509AB94116255FB6133EB938D73CAE79BA071EF4E396115D47EBA0D3F710F3F53E26BF8F34F96A6ABEEFCEB2ACF97CD8967B5AF8B73F44F891DB0525CA9DE8A04B5A10C0C7BF4AC19BFF79BCEDD226FFBD693B9071607CAC64EE1652459FF0ABA09B7C57E31238D6612A1B6124CF4ABF4D2BA657CEB01CDB24F46F7AB409E8A7B1BC2692D51F32E84258E99F7E7F4ED8ADD5F86FA4CA46A7C> |357 <001C60D8A8C9B87645D643DC5820CE9E73007C0C6C877D7A7AB60EB14692D6B324B292FD381B2DF6E91A333AFFB850061F18CC8E620E642E96BBC71C54C5EA3696F42780C1753E394457226400681F5604B14A7B215298DAAEEE73BE2D89E173D22D4B6636B81C112D6BB4412ECD9742CF57F05A57B6A1E68A18432A464779ADF35B> |296 <001C60D8A8C9B77BBBAA1477DE96FC8DA181F0192620A2AB3EA4E8825075B9B03C72F4374EE3E8AF0DA84C027E882EED58576C2E323115D091E84379C7F343FFC6FDDF5A1E80B22ACDE336DF607807673F8DCA8B47C331AA1CA58D345AEA762A6A81C3095A26F3889E94A08794459415800D9E850F0374D495B111C9C75811DFDCBCCD4B041FD38861DEEE4ADEE845F88BE55C1C9A950A04C21EAA453C3B86665D94FC4530BD5E29D4AA87EE0B> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /YAAAAA+Alegreya-Regular-Identity-H /Identity-H 0 [/YAAAAA+Alegreya-Regular] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPVA+Alegreya-Regular /YAAAAA+Alegreya-Regular-Identity-H findfont ct_VMDictPutHGWPVA+Alegreya-Regular [9.99975 0 0 -9.99975 0 0 ]msf15.6252 68.6103 mo(\001\266\001\241\000\375\001M\001p\000\002\001\251\000\375\001n\001\236\001e\001\(\001\251)sh281.753 75.1316 mo
210.674 75.1316 li
210.674 42.8875 li
281.753 42.8875 li
281.753 75.1316 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 2 GetGlyphDirectory49 <001C60D8A8C9B64EDFF4DA474F415D5DD537FAA93C37EEC62FDC4A039CA573DD652A21E9CE136A62765D8121CCC1F8B6C69DF6675E56D02777F89248A7E9F8174321009C99A7EB5A01D10C6E86BF0A4F9A0D56B508A1E855C0FF0A6C58B1C77BA71F42A09686FC0B9D9347A0229AAC02E9F435CD8098A9D1CEA8AEE9A656F4D80C818AD8E6F22D6A0A48B5693B6D4404BEB011866D75A098B62476C7952178AF8113D66FC324EF6F1393F40514FE> |3 <001C60D8A8C9B8707C25> |!endend end
%ADOEndSubsetFont
HGWPUV+TimesNewRomanPS-ItalicMT [9.99975 0 0 -9.99975 0 0 ]msf234.968 56.6097 mo(\0001\000\003)[6.65984 0 ]xsh%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory43 <001C60D8A8C9B6079F62C8472A58E49E4C65298F7DBB13584B0C608B103B8F2B0C72AF215D43C457FE4678B9114F992A1CA0DD95AD962EE67821EBE89C76AF7B7C203022FE3C67E29F7C9AA5921E4D15A2645D93C73845A47B6C4F855F057FBA3B47AC2707354E73F37A88912B11BC586C19F99285C7E09F7C6AE400A135AD2578B2C1702C267512A0254A355FAF242A3E032C2D5773AA8E4D90998616B06DE2126832E624AA95B6CEA6DE0CF980ABC5058497B243E4F1F614D2E3330AC509CE2BF6F280235C57C7347C7DBE389D9DA8C428E4F439ED717BD43889835C90DE66BDF27965E2CAF6D3F8A236> |55 <001C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD97556EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58110685510DDB32C57700D5067C975D7063A496FE85C1E5> |69 <001C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9AF110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D399924398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D6603C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83F23AED1F56FC130F21> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [9.99975 0 0 -9.99975 0 0 ]msf244.135 56.6097 mo(\000+\0007)[7.21982 0 ]xsh219.85 68.6097 mo(\000P\000H\000W\000D\000\020\000E\000D\000W\000F\000K\000H\000V)[7.76973 4.42982 2.76987 4.42981 3.32985 4.99988 4.42981 2.76987 4.42981 4.99988 4.42981 0 ]xsh282.81 40.6554 mo
396.29 40.6554 li
396.29 113.198 li
282.81 113.198 li
282.81 40.6554 li
.186587 .0406806 .0832227 0 cmyk
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory40 <001C60D8A8C9B7D8BE19945133FE501067A24BBF08B984801DD42E090C7BFCA94BE6C4AA953A8A674F2ED3DEE261A8700CA873A3A1D3699D8129F8FA28DE52C44FD8214EA37190B26E64C97677BF6E1856F59EF49286A31D4133D861C74CDB92794376B13E311920B8F547FC8F105147550894C833300FA326DF7877402F2A3FD3184C9B8E130B79DB62E2735C65FD4E7A86140D8A7D764E8F05488CC1949558757A62743714E5384E2EF166B32CB849712A9C93B7CF04FCFE8063494A215FA79B98816AEC20BC3F> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf289.56 63.6971 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000\(\000[\000W\000U\000D\000F\000W\000R\000U)[6.672 5.31592 5.31592 3.32391 6 3.99591 5.31592 3 7.32001 6 3.32391 3.99591 5.31592 5.31592 3.32391 6 0 ]xsh%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VAAAAA+TimesNewRomanPS-BoldMT 1 GetGlyphDirectory48 <001C60D8A8C9B5D6EF42037EF8CB1D58C3B1520FAE759CBD55AED848DEBF5BC04F5A96DDF9D44AEE96B27030E4665082FD38C1E77B3E625D115F72339BB1049AD297E94CF95F7FA5E93AE64088982F3EAB1FD38BE8ABC4EA9CB45EB33BB1EC97D93513A915DE0561EE6E95F14B8C0ED1B7AA32968B65D98E6B775ED420A3A05912EFAA8732322BB12AE50F3C62A8BD9A3D8A386A6AC22B2C4C5AC1C76F15385D5876D8EB5356450AC8FA23BC4813785E5FFC5E46CFAF7FDC942EA3F2CB35A30512CB7D6039FEFCDD949CFD9F58A96808DF3739CB> |!endend end
%ADOEndSubsetFont
HGWPUX+TimesNewRomanPS-BoldMT [12 0 0 -12 0 0 ]msf289.56 80.1971 mo(\0000\000H\000W\000D\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[11.3159 5.31592 3.99591 6 3.99591 3.32391 5.31592 6 5.31592 6.672 5.31592 5.31592 0 ]xsh%ADOBeginSubsetFont: UAAAAA+TimesNewRomanPS-BoldItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/UAAAAA+TimesNewRomanPS-BoldItalicMT 4 GetGlyphDirectory54 <001C60D8A8C9B7EF3224B614986851DD988527341EFC0D585552431F736FAF7A7432A4ECA2508A53B25C7255D6EC90DBD01F7E699DEEC8A9FBBDD0C8F0DDE0938B463D4154586326D339EE28550903D477B2E52D748D98F9212C57AD6BC2F4D6C8DED8428E6532202EBF6BA14E4A623FFEF52087158E19482E610F7494DE4CFF6D645918E1E243551DC0D6E63739858842321BFC66888438FA46DF182AD656C7D4864DFED5AFFEAD6DA4A113FD2EF783179341CC65DEA87D3AD05A135FBAB7706E2ECFD5AF23C4F52F086459A9082B1A4254695FE6F08ED8765351EDC160522847288F43D07B4D6A35FF8B5BCA844CA5810543454F71C3> |49 <001C60D8A8C9B6079F62B1CDE12EC84D5041D4E399B69A9227D6E47B57BCEA4229E18A0EFBC80497692508A22CE81B9481AD242FFBD0D7161752B4543FD49B8533E12B4D6F4C7EE247427643145A117E91973074AD88FDE135799108246251DB0710BFC8674C1C466E141C70F6E87C129E351D39D9237DAD7A46B54D31104699D5186F4C878EA6229CAC94D6CCD0CAAD975936026B7116B5174FCAA669B8D1> |41 <001C60D8A8C9B64EDFFB05CF3B276E31DDC3F0F0724602FFFF66FCFAAB7A51CEB8E6166379686EB2EA0E7F12C1A6F7E46862E80836960BFCCF81E2E40A353DA2420B32D9CD1EAA7CFC4CEF4BFA56B2D5865031AECBAD230A9AE7AEB08E61C0C8DAC4B24CC5E734D26E7CA5BD438FC6D5FF2309CA55DAC5AA647AC19985172FD1B88E1DCD09C066C4800ECE315F70233E42C3F15DEB4B6B07D1D0725891E4ACF1DFC156964FBC55AFCA867EBE29B140D3E78AD560494BD38731CD804F0F8BF73D1769> |55 <001C60D8A8C9B7D8BE162471C7969408944E06EEB37D76DFBAFF92F58414B47CB373F0EFA49EA05BC3D283EB82B8FFF4F9ADA43DCA5D55E885AF4C04F9D8660F31F3B8FBB89BC008574E4B1AAC646D380022BA8C62AA532F13A06FFEE960D5C968DECD9F0E38889EE010F86AAE4DBDD2F6FF45FA> |!endend end
%ADOEndSubsetFont
HGWPUW+TimesNewRomanPS-BoldItalicMT [12 0 0 -12 0 0 ]msf360.517 80.1971 mo(\0006\0006)[6.672 0 ]xshHGWPUW+TimesNewRomanPS-BoldItalicMT [8.00025 0 0 -8.00025 0 0 ]msf373.861 80.1971 mo(\0001)shHGWPUX+TimesNewRomanPS-BoldMT [12 0 0 -12 0 0 ]msf379.637 80.1971 mo(\000\003)sh289.56 96.6971 mo(\000%\000D\000V\000H\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[7.992 6 4.66809 5.31592 3.99591 3.32391 5.31592 6 5.31592 6.672 5.31592 5.31592 0 ]xshHGWPUW+TimesNewRomanPS-BoldItalicMT [12 0 0 -12 0 0 ]msf357.869 96.6971 mo(\000\)\0007)[7.992 0 ]xshHGWPUW+TimesNewRomanPS-BoldItalicMT [8.00025 0 0 -8.00025 0 0 ]msf373.203 96.6971 mo(\0001)sh613.382 29.5768 mo
609.569 29.5768 li
609.542 28.1486 609.482 26.8272 609.395 25.7761 cv
609.273 24.3187 609.109 23.4999 608.937 23.4999 cv
418.114 23.4999 li
417.805 23.4999 417.547 26.0996 417.482 29.5768 cv
411.957 29.5768 li
411.957 0 li
613.382 0 li
613.382 29.5768 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Alegreya-Regular-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YAAAAA+Alegreya-Regular 5 GetGlyphDirectory282 <001C60D8A8C9B713D43CDFD1DC8A08CCB6093652850FFD2F97B736F7D51C7B1468082DD02682BF5D1B9B966B8706179C8510C44037C21F1ED13A37A184C48149E98420863E2D36C587BB2FF076475FF6238AA143C58D1A46E424C3B0F2AB15D3CCCBD11EFDBC5B6BBFAF6793B23509E0055AE7BA7EA934E53BFBEE8282AC0B1347295DB086DA956B2226E969FBC0B531CCF054BC28E1A7D2B745364E9DA3F491D0776C8207B8D13AC9DD29BADE40B5729B28E73A53DBE3CAB87F00B325F8> |320 <001C60D8A8C9B820E2909026335665F1A8BD6462A5049C1EAD3E2F4C074D8A270BE530B8F73EA8E4D6C978D92BA4FDB49DD86AD13F3647651D5352F59387326C1C60BC5793565240AA9C3F930CC41BACAD7F7109B9157FCD5149064C83E46C2CF99B685DFE5D174596D4C0AD656E3DA6B3B5F727950B7C86E53AAD2D8052445B2389CB1FDBE86AA331691BBF13FCE543BA83750A59CB628A5BDCEBE5A00228214DBE592ABFCCF81732AF2C6FF1EDD79208EC24AE8DEE4E8CE9CF067903AAE9485E7F08A324C063350D6B1DDC2CEE3C1898A6A50721B8F26F04E957D627F664E7E874C1CA6D7A11E10816882AA24A4572CDC5A1F040C5338B09> |1102 <001C60D8A8C9B73F59F536CC185D204C5DEA62C788217EC4083A37A7D56ADC062D6144490598EF7E6039E38D3114> |446 <001C60D8A8C9B79EE35E354726A541A58A8833F9EBC4A2BF1F69F7B9D4A88C20002654D20822E4995C04B6D5ADE6777F7753EBAB6E9CBE551AED5D83506830AE7F3FB063A4B034A9D7E8ACB40A74A451CAC4FB10A65443845F2BA8DC1145047C68DEDF4F89BEE286F6103AC6F4ECBBE4ABB333FB8CFD2B61914492DEE96E56F795B668BECE7E7EBA466F3F6BC73418B85A31ACF753F04608168E42EC0CD4B1BD75E0929149118DE6E9FB63BE9B89A8FA8CA8CCA5BEB8D2DA37EFCECE5A858F5529D80E660D23297E402B06FA3C6E58D81628468CF3ECC2B2C240570CC1D37DFB91A637B07BBCDC4FFD7BEF5310F2197F1353> |321 <001C60D8A8C9B7A66FFD893AFE477A1E242C9FBA64F6CEABD5B7E71DBB16D056898CDA92BA85B47D6949605628FA392B6CDCABC2ACACF59C09ACC5C526B22F33901972FFC5380190262978AD2FD4B73A61C08CA4D9D69BAB73A6E0972D0EE2B6AA12850A9B2CB3980B6C81EEFE625A75365F8F828F9993B55C4B7C5D0DB87132F226B9B4067017ACA7D23E4AE4598DBE2B459F13103ADA50D0B6A61DB9CDF620797D17E415AC7EFFC06B40E95AEED4280B4C048F6901592D0ECBE6780742014FF6430A4AC8DE267C5DC49B3E3F9998B1883398E1A745DFFFAEF2659A32E908CDB21372884F0E86B84C34A2780ED66AE297B3C38E44BF174F31426E5F9C40A603BFD95B5645A76930982DA845E5A7ED45FC2E33B76082AC4E73D67C469100FFD9DFBF497E22FA28CCDCBA862009E56538F90F36E8E169840CEB073A92155B3F03CD76544E64366843D9318540E205A1FAEAE93D41C1319C3E29B6A478FBD25F62E0A15E72219F9F83AEFDC45C8DF770218CF962B93CD9DB83B829C06ECEF1DD> |!endend end
%ADOEndSubsetFont
HGWPVA+Alegreya-Regular [14.0002 0 0 -14.0002 0 0 ]msf452.511 16.1644 mo(\001\032\001e\000\375\001\251\001\251\001M\001@\001M\001\(\001\241\000\002\001@\001M\001p\001\(\004N\001\266\001\276\001p\001M\001p\001A)[5.93604 3.41611 6.52417 5.62802 5.62799 3.94803 4.62012 3.94803 6.27209 5.36203 2.77203 4.62009 3.948 7.67224 6.27203 5.32019 4.62012 7.57416 7.67218 3.948 7.67224 0 ]xsh487.481 74.9259 mo
411.699 74.9259 li
411.737 42.6818 li
487.481 42.6818 li
487.481 74.9259 li
411.699 74.9259 mo
409.954 74.9259 li
409.954 42.6818 li
411.737 42.6818 li
411.699 74.9259 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory78 <001C60D8A8C9B7A73DB907772911B7C2CEAC1D2074B2642ADEDFBA1679ED254D30D2D9A5BDAE41A6A7C0D78C5D75E9522858A70EEA458FC30CFDA879F9C1CE85600A63BE4554ACA119AD822CC5727738E5E5FAC782F5B6F69100B3F9A42C95FB8AA53FD907276C4A477291A36A9FD6B1870ACEAFC297FB6D4CC1F0091BA09524439681D5D4A76F017EDD23AA69786F58BFB619D5D45A35621B583AF1C763E994CD0C086A44F5E2750B3F3193B4E6E5A27940B47B22FB55ED113A092C7013A98E096292640D2EA9CE95DF810761FDAF86F75648F6AFC27AA39909F96AF13446AC99> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [9.99975 0 0 -9.99975 0 0 ]msf425.539 56.404 mo(\000X\000Q\000V)sh439.429 56.404 mo(\000H\000H\000Q\000\003\000W\000D\000V\000N)[4.42981 4.42981 4.99988 2.49994 2.76987 4.42981 3.88998 0 ]xsh%ADOBeginSubsetFont: YAAAAA+Alegreya-Regular-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YAAAAA+Alegreya-Regular 2 GetGlyphDirectory1096 <001C60D8A8C9B859EB3BF9FD1EFACED327C7759CC5060F45B79D15BB8D056D210283F1E9F59AF0BF997AA5B268FC3328748A9B6E95644388E03ED613F370C18AC9F29C98549CF52939D88220A5A922F22BD5DD2B7E75144880D3ACF9EF0FDA0BF6D66030BAE01FFE1B23A1B0BDCB81D7389028A3C865EB3EB5> |1097 <001C60D8A8C9B8581A0F438D3B7DF87DA7D26759AAF1250EAAEC5C04184C793E60E50A2E74FFFBE0B6943F702CE4B1A38569112EB90B77773249F6895AB2CDF7C3C98D8B5485DBAC7079CB5153E5BF5EA78F996D0E83470AB36152F8CB1430033431DE46EEB239373043695B682771BAC30C9C4A86> |!endend end
%ADOEndSubsetFont
HGWPVA+Alegreya-Regular [9.99975 0 0 -9.99975 0 0 ]msf418.341 68.404 mo(\004H\001\266\001\241\000\375\001M\001p\000\002\001\251\000\375\001n\001\236\001e\001\(\001\251\004I)sh681.914 74.9259 mo
673.333 74.9259 li
668.67 73.2287 li
668.67 74.9259 li
606.561 74.9259 li
606.561 42.6818 li
681.914 42.6818 li
681.914 74.9259 li
0 0 0 0 cmyk
f
673.333 74.9259 mo
668.67 74.9259 li
668.67 73.2287 li
673.333 74.9259 li
.75021 .679683 .670222 .90164 cmyk
f
.75021 .679683 .670222 .90164 cmyk
HGWPUT+TimesNewRomanPSMT [9.99975 0 0 -9.99975 0 0 ]msf619.972 56.404 mo(\000X\000Q\000V)sh633.862 56.404 mo(\000H\000H\000Q\000\003\000W\000D\000V\000N)[4.42981 4.42987 4.99988 2.49994 2.76984 4.42981 3.89001 0 ]xshHGWPVA+Alegreya-Regular [9.99975 0 0 -9.99975 0 0 ]msf615.267 68.404 mo(\004H\001\266\001\(\001\251\001\266\000\002\001\251\000\375\001n\001\236\001e\001\(\001\251\004I)sh273.812 76.9559 mo
273.812 76.9559 li
282.812 76.917 li
282.81 76.917 li
273.812 76.9559 li
0 0 0 0 cmyk
f
282.81 76.917 mo
282.81 76.917 li
282.812 76.917 li
.187076 .0398871 .0834974 0 cmyk
f
189.957 78.0685 mo
273.815 77.7058 li
273.809 76.2058 li
189.951 76.5687 li
189.957 78.0685 li
.75021 .679683 .670222 .90164 cmyk
f
273.823 79.4335 mo
280.619 76.9265 li
273.801 74.4783 li
cp
ef
273.823 79.4335 mo
280.619 76.9265 li
273.801 74.4783 li
cp
@
4.52183 77.4838 mo
79.2619 77.3186 li
79.2617 77.3186 li
4.52183 77.4838 li
0 0 0 0 cmyk
f
79.2617 77.3186 mo
79.2617 77.3186 li
79.2619 77.3186 li
.605249 .204776 .280949 .000915541 cmyk
f
1 lj
8 ml
4.52183 77.4839 mo
70.2619 77.3385 li
.75021 .679683 .670222 .90164 cmyk
@
70.2672 79.8161 mo
77.0688 77.3234 li
70.2563 74.8609 li
cp
ef
0 lj
10 ml
70.2672 79.8161 mo
77.0688 77.3234 li
70.2563 74.8609 li
cp
@
478.683 76.799 mo
478.683 76.799 li
487.683 76.7851 li
478.683 76.799 li
0 0 0 0 cmyk
f
396.291 77.6769 mo
478.684 77.5491 li
478.682 76.0491 li
396.289 76.1769 li
396.291 77.6769 li
.75021 .679683 .670222 .90164 cmyk
f
478.687 79.2767 mo
485.49 76.7885 li
478.679 74.3215 li
cp
ef
478.687 79.2767 mo
485.49 76.7885 li
478.679 74.3215 li
cp
@
487.695 40.5058 mo
606.561 40.5058 li
606.561 113.049 li
487.695 113.049 li
487.695 40.5058 li
.119875 .162753 0 0 cmyk
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory48 <001C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30A9F16E8C6EE80DDA09053247> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf494.446 63.5475 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000\(\000[\000W\000U\000D\000F\000W\000R\000U)[6.672 5.31592 5.31592 3.32385 6 3.99597 5.31592 3 7.31995 6 3.32397 3.99585 5.31592 5.31592 3.32397 6 0 ]xsh494.446 80.0475 mo(\0000\000H\000W\000D\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[10.6681 5.31592 3.32385 5.31592 3.99597 3.32385 5.31592 5.31592 3.99597 6 5.31592 3.99585 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 1 GetGlyphDirectory54 <001C60D8A8C9B7A73DEAD47F8C3F8F62AB49AEC986DEA2334DA4A3A6EE83D67349083E9DFAC3D0ED3D686A241C78A633F5E22EF7DEED0B3DB4A752EE8825D23B7912632317C22685A084A8CAAE6CCEF0B549377DAA258EBB69020EF173EF458832F81C961EF7240FF6094FEE889146CBFACBA4EFE204488D6013883AF0A027538CE7262FDDAFBBAB15C6F81AD8790429A1B8A34C544B0EA29284E965CC0CBFB454418459EDE732B15E49324D678E79286AEE75611426F87AE4567422FB344BDA03881E0FCAD52AD2C717B210FC9E13F2248977CC47FAA0712B5C1A2BC897F933D6D5615544B70F9D1E4890B097B4C419FADEDD598B4B2ED5C218C91FED02300E5DA1A7> |!endend end
%ADOEndSubsetFont
HGWPUV+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf559.403 80.0475 mo(\0006\0006)[6 0 ]xshHGWPUV+TimesNewRomanPS-ItalicMT [8.00025 0 0 -8.00025 0 0 ]msf571.403 80.0475 mo(\0001)shHGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf576.731 80.0475 mo(\000\003)sh%ADOBeginSubsetFont: VAAAAA+TimesNewRomanPS-BoldMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/VAAAAA+TimesNewRomanPS-BoldMT 2 GetGlyphDirectory14 <001C60D8A8C9B7E1F88DC19C3D1A20B74FF91D187454B7707D01004D7BE790C7208C53D9E2DBEA8DE733232D3B> |20 <001C60D8A8C9B7A73DB9EF586AAA5514CED49708F80BBBB3E0C08981E71A2FDC36B865E3FCA51E6A1484F46E65841854AEA89C775394E73B1898984FBC2249D98BC6F183E16066F5FE57A76500983C69451DB2E93C4F88F69AFBA843BB16999133215C928C0CBB37486BAEE843CAAF> |!endend end
%ADOEndSubsetFont
HGWPUX+TimesNewRomanPS-BoldMT [12 0 0 -12 0 0 ]msf494.446 96.5475 mo(\000%\000D\000V\000H\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[7.992 6 4.66803 5.31592 3.99597 3.32385 5.31592 6 5.31592 6.672 5.31592 5.31592 0 ]xshHGWPUW+TimesNewRomanPS-BoldItalicMT [12 0 0 -12 0 0 ]msf562.754 96.5475 mo(\000\)\0007)[7.992 0 ]xshHGWPUW+TimesNewRomanPS-BoldItalicMT [8.00025 0 0 -8.00025 0 0 ]msf578.088 96.5475 mo(\0001)shHGWPUX+TimesNewRomanPS-BoldMT [8.00025 0 0 -8.00025 0 0 ]msf583.86 96.5475 mo(\000\016\000\024)[4.55212 0 ]xsh837 29.3299 mo
833.967 29.3299 li
833.938 27.9965 833.88 26.7664 833.798 25.7761 cv
833.676 24.3187 833.511 23.4999 833.339 23.4999 cv
616.557 23.4999 li
616.255 23.4999 616.001 25.9773 615.929 29.3299 cv
614.133 29.3299 li
614.133 0 li
837.01 0 li
837 29.3299 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Alegreya-Regular-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YAAAAA+Alegreya-Regular 2 GetGlyphDirectory474 <001C60D8A8C9B77E2C2944F89E06042648B5B12461ACBB2998423DC4AFC658DB75AA7E685001B771C3EA723D720B71DE1F029910F8481389D0EF6BB51D87CA48FBD1F3A16C3BA99C5BC383A9554D367D1EEA08611A8BE31A1DFB8DA67A766D51E4576D00C2A0234FAC309CA666AF2F4EA67A7E1FDC9D21A21BEB4F43A69B7564B930FE3DA67246C39FBA3CBF46284E7C01E0A998FAEA6CE58C0FA6DDB8B11319D6306557C9AB> |378 <001C60D8A8C9B7A9C0D3E0391221DDE3C6918F9B487A1E2BD9043C160A954AD9DE2A17AAF5F1060BC6B8FAB2732F7B92996583555DB1297EE76F4992F1CAA85D8945D30331C4AEC575061303EA53903183BAD3BD48669432F3ADD6B687ECE88B75B421546C9E935ECA4527DCD1A6B9E238B855465EC0A4B2F66C0758B7775EAECCBF1ABAFE85660CB197E903C83C6AA6207619D06AF96AB00A5FB60477EE3DF83D90E3B6BFC87B5D3E0C7BC3CB> |!endend end
%ADOEndSubsetFont
HGWPVA+Alegreya-Regular [14.0002 0 0 -14.0002 0 0 ]msf682.85 15.9176 mo(\001@\001M\001p\000\375\001e\000\002\001\(\001\332\000\375\001e\001\276\000\375\001\266\001M\001z\001p)[4.62012 3.94806 7.67218 6.52417 3.41608 2.77203 6.27209 6.23022 6.52411 3.41614 7.57416 6.52417 4.62006 3.94806 6.97217 0 ]xsh609.584 31.2716 mo
417.467 31.2716 li
417.467 30.6895 417.472 30.1223 417.482 29.5768 cv
609.569 29.5768 li
609.579 30.1289 609.584 30.6969 609.584 31.2716 cv
0 0 0 0 cmyk
f
609.569 29.5768 mo
417.482 29.5768 li
417.547 26.0996 417.805 23.4999 418.114 23.4999 cv
608.937 23.4999 li
609.109 23.4999 609.273 24.3187 609.395 25.7761 cv
609.482 26.8272 609.542 28.1486 609.569 29.5768 cv
f
.749998 lw
1 lj
8 ml
417.467 31.2715 mo
417.467 31.2715 li
417.467 26.9794 417.757 23.4999 418.114 23.4999 cv
608.937 23.4999 li
609.109 23.4999 609.273 24.3187 609.395 25.7762 cv
609.516 27.2336 609.584 29.2104 609.584 31.2715 cv
.75021 .679683 .670222 .90164 cmyk
@
833.987 31.2716 mo
615.909 31.2716 li
615.909 30.6012 615.916 29.9505 615.929 29.3299 cv
833.967 29.3299 li
833.98 29.9589 833.987 30.6109 833.987 31.2716 cv
0 0 0 0 cmyk
f
833.967 29.3299 mo
615.929 29.3299 li
616.001 25.9773 616.255 23.4999 616.557 23.4999 cv
833.339 23.4999 li
833.511 23.4999 833.676 24.3187 833.798 25.7761 cv
833.88 26.7664 833.938 27.9965 833.967 29.3299 cv
f
615.909 31.2715 mo
615.909 31.2715 li
615.909 26.9794 616.199 23.4999 616.557 23.4999 cv
833.34 23.4999 li
833.511 23.4999 833.676 24.3187 833.798 25.7762 cv
833.919 27.2336 833.987 29.2104 833.987 31.2715 cv
.75021 .679683 .670222 .90164 cmyk
@
837 92.2832 mo
811.07 92.2832 li
811.07 78.5008 li
815.258 77.0373 li
811.07 75.4517 li
811.07 60.0393 li
837 60.0393 li
837 92.2832 li
0 0 0 0 cmyk
f
811.07 78.5008 mo
811.07 75.4517 li
815.258 77.0373 li
811.07 78.5008 li
.75021 .679683 .670222 .90164 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ZAAAAA+Alegreya-Italic-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (ZAAAAA+Alegreya-Italic)%%Title: (ZAAAAA+Alegreya-Italic Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /ZAAAAA+Alegreya-Italic def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-391 -293 1352 1004} def/FontInfo 4 dict dup begin/FSType 4 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 1354 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 3 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B6747BB59FA940F9AB64323C93562785D45E93CFA0432DF171A289CB928677998AA03A32FDAF94DAD98275B4DAE9DEBB8150D376EB5BD1BC65> |3 <001C60D8A8C9B7EF32242EB49DD3F43E0D6F01B6DB73185190D705A47BA7CB91157F842EF3C7D8EF8182067FBEC1E83DA291FA5CF9C24F82F377C9C77258D6CA2433E80636EDB99381D9B3BE6BC39B39B04551DEBDAD2C09651EF17FFE59EC3D7366D01BE08D24C62B481C8BF7DFEE87A4FC10E9867E5B1F008F617EE9BEFAD9AD81DBB3F37B4DBE602ADFE37355665F6E6E765E1FD4043EAA35C4CDCF54178927FE55B5FBF7FC7C50D546DB2635154EE0C0879641B2F398C0C8FAD1B49C33BEC95C0308B0CC485A17904AA6DF4AF1DDBEBF1B264443888E74575BC039FF2C32E27A8D5BE1B085C20EE0447E869A0B0B73C1B85F> |282 <001C60D8A8C9B812A8049FDE32FE545A08D742E250150BC8A28EA65F79CE98F857DB867375718368E7BC7A204A116DD9BBDE3474162F15F1788B3E8D8FC2D38FAB9A092D18D0AD5A2D139C9734FAAB5A782F1B12FB14BFCD3F8F0284FAB09744851654C654BA6D297D459A816A1B53DE5D65921B33101D902206C450D4CB29B1AAFDB73D2F01AD27F276276A1560DAD7C47CFA07D9C2> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /ZAAAAA+Alegreya-Italic-Identity-H /Identity-H 0 [/ZAAAAA+Alegreya-Italic] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HGWPVB+Alegreya-Italic /ZAAAAA+Alegreya-Italic-Identity-H findfont ct_VMDictPutHGWPVB+Alegreya-Italic [12 0 0 -12 0 0 ]msf817.821 80.5564 mo(\000\003\001\032\001\032)sh%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory17 <001C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf832.749 80.5564 mo(\000\021)sh411.957 146 mo
411.615 146 li
411.659 108.875 li
411.957 108.875 li
411.957 146 li
411.615 146 mo
205.884 146 li
205.87 144.052 li
205.495 144.055 li
205.478 141.805 li
205.853 141.802 li
205.83 138.802 li
205.455 138.805 li
205.438 136.555 li
205.813 136.553 li
205.791 133.553 li
205.416 133.555 li
205.399 131.306 li
205.774 131.303 li
205.751 128.303 li
205.376 128.306 li
205.359 126.056 li
205.734 126.053 li
205.711 123.053 li
205.336 123.056 li
205.319 120.806 li
205.694 120.803 li
205.672 117.803 li
205.297 117.806 li
205.28 115.556 li
205.655 115.553 li
205.632 112.553 li
205.257 112.556 li
205.24 110.306 li
205.615 110.303 li
205.604 108.875 li
282.81 108.875 li
282.81 113.198 li
396.29 113.198 li
396.29 108.875 li
411.659 108.875 li
411.615 146 li
0 0 0 0 cmyk
f
396.29 113.198 mo
282.81 113.198 li
282.81 108.875 li
396.29 108.875 li
396.29 113.198 li
.187076 .0398871 .0834974 0 cmyk
f
205.134 146 mo
204.533 146 li
204.533 108.875 li
204.854 108.875 li
204.865 110.309 li
205.24 110.306 li
205.257 112.556 li
204.882 112.559 li
204.905 115.559 li
205.28 115.556 li
205.297 117.806 li
204.922 117.809 li
204.944 120.809 li
205.319 120.806 li
205.336 123.056 li
204.961 123.059 li
204.984 126.059 li
205.359 126.056 li
205.376 128.306 li
205.001 128.308 li
205.024 131.308 li
205.399 131.306 li
205.416 133.555 li
205.04 133.558 li
205.063 136.558 li
205.438 136.555 li
205.455 138.805 li
205.08 138.808 li
205.103 141.808 li
205.478 141.805 li
205.495 144.055 li
205.12 144.058 li
205.134 146 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
HGWPUT+TimesNewRomanPSMT [15.9997 0 0 -15.9997 0 0 ]msf226.086 139.501 mo(\000\013\000E\000\014\000P\000H\000W\000D\000\020\000W\000U\000D\000Q\000V\000I\000H\000U\000\003\000O\000H\000D\000U\000Q\000L\000Q\000J)[5.3278 7.99986 9.32774 12.4317 7.08777 4.43182 7.08777 5.32779 4.43182 5.32779 7.0878 7.99985 6.22406 5.32779 7.08777 5.32779 3.99994 4.43182 7.08777 7.08777 5.32782 7.99988 4.43182 7.99988 0 ]xsh837 146 mo
411.957 146 li
411.957 108.875 li
411.957 108.442 li
487.695 108.442 li
487.695 113.049 li
606.561 113.049 li
606.561 108.442 li
837 108.442 li
837 146 li
0 0 0 0 cmyk
f
606.561 113.049 mo
487.695 113.049 li
487.695 108.442 li
606.561 108.442 li
606.561 113.049 li
.119753 .163394 0 0 cmyk
f
411.957 146 mo
411.957 146 li
411.957 108.875 li
411.957 108.875 li
411.957 146 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
HGWPUT+TimesNewRomanPSMT [15.9997 0 0 -15.9997 0 0 ]msf586.575 139.068 mo(\000\013\000F\000\014\000P\000H\000W\000D\000\020\000W\000H\000V\000W)[5.32782 7.08777 9.3277 12.4317 7.08777 4.43182 7.08777 5.32782 4.43182 7.08777 6.22406 0 ]xsh201.318 146 mo
1.26388 146 li
1.26388 108.875 li
201.318 108.875 li
201.318 146 li
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 1 GetGlyphDirectory49 <001C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3ABC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63E63AE746DB94B9539BA648935E38> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [15.9997 0 0 -15.9997 0 0 ]msf9.5793 139.501 mo(\000\013\000D\000\014\000O\000D\000U\000J\000H\000\020\000V\000F\000D\000O\000H\000\003\000'\0001\0001\000\003\000W\000U\000D\000L\000Q\000L\000Q\000J)[5.3278 7.08778 9.32774 4.43181 7.08778 5.3278 7.99987 7.08778 5.32779 6.22402 7.08778 7.08778 4.43182 7.08778 3.99994 11.5518 11.5518 11.5518 3.99994 4.43182 5.32779 7.08778 4.43182 7.99986 4.43182 7.99988 0 ]xsh205.218 107.306 mo
205.201 105.056 li
205.218 107.306 li
205.178 102.056 mo
205.161 99.8065 li
205.178 102.056 li
205.138 96.8067 mo
205.121 94.5567 li
205.138 96.8067 li
205.099 91.5569 mo
205.082 89.3069 li
205.099 91.5569 li
205.059 86.307 mo
205.042 84.0571 li
205.059 86.307 li
205.02 81.0571 mo
205.003 78.8072 li
205.02 81.0571 li
204.98 75.8073 mo
204.963 73.5574 li
204.98 75.8073 li
204.94 70.5575 mo
204.923 68.3075 li
204.94 70.5575 li
204.901 65.3076 mo
204.884 63.0578 li
204.901 65.3076 li
204.861 60.0578 mo
204.844 57.8079 li
204.861 60.0578 li
204.821 54.808 mo
204.805 52.5581 li
204.821 54.808 li
204.782 49.5582 mo
204.765 47.3082 li
204.782 49.5582 li
204.742 44.3083 mo
204.725 42.0584 li
204.742 44.3083 li
204.703 39.0584 mo
204.686 36.8085 li
204.703 39.0584 li
0 0 0 0 cmyk
f
205.495 144.055 mo
205.478 141.805 li
205.495 144.055 li
205.455 138.805 mo
205.438 136.555 li
205.455 138.805 li
205.416 133.555 mo
205.399 131.306 li
205.416 133.555 li
205.376 128.306 mo
205.359 126.056 li
205.376 128.306 li
205.336 123.056 mo
205.319 120.806 li
205.336 123.056 li
205.297 117.806 mo
205.28 115.556 li
205.297 117.806 li
205.257 112.556 mo
205.24 110.306 li
205.257 112.556 li
f
204.209 23.3117 mo
204.231 26.3117 li
204.981 26.306 li
204.959 23.3062 li
204.209 23.3117 li
204.248 28.5616 mo
204.271 31.5616 li
205.021 31.5559 li
204.998 28.5561 li
204.248 28.5616 li
204.288 33.8115 mo
204.311 36.8113 li
205.061 36.8057 li
205.038 33.8057 li
204.288 33.8115 li
204.328 39.0612 mo
204.35 42.0612 li
205.1 42.0556 li
205.077 39.0556 li
204.328 39.0612 li
204.367 44.3111 mo
204.39 47.3111 li
205.14 47.3053 li
205.117 44.3055 li
204.367 44.3111 li
204.407 49.561 mo
204.43 52.561 li
205.179 52.5552 li
205.157 49.5554 li
204.407 49.561 li
204.446 54.8109 mo
204.469 57.8106 li
205.219 57.8051 li
205.196 54.8051 li
204.446 54.8109 li
204.486 60.0605 mo
204.509 63.0605 li
205.259 63.055 li
205.236 60.055 li
204.486 60.0605 li
204.526 65.3104 mo
204.548 68.3104 li
205.298 68.3046 li
205.276 65.3049 li
204.526 65.3104 li
204.565 70.5603 mo
204.588 73.5603 li
205.338 73.5545 li
205.315 70.5547 li
204.565 70.5603 li
204.605 75.8102 mo
204.628 78.81 li
205.377 78.8044 li
205.355 75.8044 li
204.605 75.8102 li
204.644 81.0599 mo
204.667 84.0599 li
205.417 84.0543 li
205.395 81.0543 li
204.644 81.0599 li
204.684 86.3098 mo
204.707 89.3098 li
205.457 89.304 li
205.434 86.3042 li
204.684 86.3098 li
204.724 91.5597 mo
204.746 94.5594 li
205.496 94.5539 li
205.474 91.5541 li
204.724 91.5597 li
204.763 96.8095 mo
204.786 99.8093 li
205.536 99.8038 li
205.513 96.8038 li
204.763 96.8095 li
204.803 102.059 mo
204.826 105.059 li
205.575 105.053 li
205.553 102.054 li
204.803 102.059 li
204.842 107.309 mo
204.865 110.309 li
205.615 110.303 li
205.593 107.304 li
204.842 107.309 li
204.882 112.559 mo
204.905 115.559 li
205.655 115.553 li
205.632 112.553 li
204.882 112.559 li
204.922 117.809 mo
204.944 120.809 li
205.694 120.803 li
205.672 117.803 li
204.922 117.809 li
204.961 123.059 mo
204.984 126.059 li
205.734 126.053 li
205.711 123.053 li
204.961 123.059 li
205.001 128.308 mo
205.024 131.308 li
205.774 131.303 li
205.751 128.303 li
205.001 128.308 li
205.04 133.558 mo
205.063 136.558 li
205.813 136.553 li
205.791 133.553 li
205.04 133.558 li
205.08 138.808 mo
205.103 141.808 li
205.853 141.802 li
205.83 138.802 li
205.08 138.808 li
205.12 144.058 mo
205.142 147.058 li
205.892 147.052 li
205.87 144.052 li
205.12 144.058 li
205.159 149.308 mo
205.182 152.308 li
205.932 152.302 li
205.909 149.302 li
205.159 149.308 li
205.199 154.558 mo
205.222 157.557 li
205.972 157.552 li
205.949 154.552 li
205.199 154.558 li
205.238 159.807 mo
205.248 161.075 li
205.998 161.07 li
205.989 159.802 li
205.238 159.807 li
.75021 .679683 .670222 .90164 cmyk
f
411.659 108.875 mo
411.659 108.875 li
411.696 77.653 li
411.659 108.875 li
411.698 76.153 mo
411.699 74.9259 li
411.698 76.153 li
411.737 42.6818 mo
411.737 42.6818 li
411.761 22.5794 li
411.737 42.6818 li
0 0 0 0 cmyk
f
411.699 74.9259 mo
411.699 74.9259 li
411.737 42.6818 li
411.699 74.9259 li
f
411.696 77.653 mo
411.698 76.153 li
411.696 77.653 li
.75021 .679683 .670222 .90164 cmyk
f
411.615 146 mo
411.615 146 li
411.659 108.875 li
411.615 146 li
0 0 0 0 cmyk
f
[2.99999 2.24999 ] 0 dsh
411.761 22.5793 mo
411.596 162.067 li
.75021 .679683 .670222 .90164 cmyk
@
404.524 31.0806 mo
298.083 31.0806 li
298.083 23.684 li
404.06 23.684 li
404.092 23.7906 404.136 23.9686 404.17 24.1884 cv
404.23 24.5431 404.286 25.0254 404.335 25.6164 cv
404.456 27.058 404.524 29.0281 404.524 31.0806 cv
110.973 31.0806 mo
4.64471 31.0806 li
4.6445 28.9433 4.71707 27.0075 4.83309 25.6164 cv
4.89068 24.9216 4.96025 24.3609 5.03303 23.9921 cv
5.05811 23.8637 5.08467 23.7577 5.10745 23.684 cv
110.973 23.684 li
110.973 31.0806 li
0 0 0 0 cmyk
f
4.64471 31.0806 mo
4.6445 28.9433 4.71707 27.0075 4.83309 25.6164 cv
4.89068 24.9216 4.96025 24.3609 5.03303 23.9921 cv
5.06878 23.809 5.10753 23.6716 5.13408 23.6082 cv
5.14778 23.578 li
5.14885 23.5763 li
4.99814 23.4821 li
5.10775 23.6194 li
5.14885 23.5763 li
4.99814 23.4821 li
5.10775 23.6194 li
4.91722 23.3809 li
4.91722 23.684 li
5.10775 23.6194 li
4.91722 23.3809 li
4.91722 23.684 li
404.251 23.684 li
404.251 23.4006 li
404.028 23.5881 li
404.041 23.6048 404.113 23.6817 404.251 23.684 cv
404.251 23.4006 li
404.028 23.5881 li
404.095 23.5314 li
404.019 23.5759 li
404.028 23.5881 li
404.095 23.5314 li
404.019 23.5759 li
404.037 23.595 404.116 23.8388 404.17 24.1884 cv
404.23 24.5431 404.286 25.0254 404.335 25.6164 cv
404.456 27.058 404.524 29.0281 404.524 31.0806 cv
405.274 31.0806 li
405.274 29.0108 405.205 27.0274 405.083 25.5541 cv
405.021 24.8165 404.949 24.2387 404.867 23.8266 cv
404.824 23.6194 404.782 23.4556 404.724 23.3154 cv
404.602 23.1058 li
404.547 23.0388 404.432 22.9363 404.251 22.9339 cv
4.91722 22.9339 li
4.73141 22.9367 4.61624 23.0429 4.56122 23.1112 cv
4.45483 23.2488 4.41951 23.37 4.37113 23.5295 cv
4.2217 24.0713 4.11103 25.0521 4.02647 26.3698 cv
3.94362 27.6829 3.8946 29.313 3.8946 31.0806 cv
4.64471 31.0806 li
.75021 .679683 .670222 .90164 cmyk
f
298.083 35.158 mo
205.048 35.158 li
205.038 33.8057 li
204.663 33.8086 li
204.646 31.5587 li
205.021 31.5559 li
205.017 31.0806 li
298.083 31.0806 li
298.083 35.158 li
204.298 35.158 mo
110.973 35.158 li
110.973 31.0806 li
204.267 31.0806 li
204.271 31.5616 li
204.646 31.5587 li
204.663 33.8086 li
204.288 33.8115 li
204.298 35.158 li
0 0 0 0 cmyk
f
204.663 33.8086 mo
204.646 31.5587 li
204.663 33.8086 li
f
205.048 35.158 mo
204.298 35.158 li
204.288 33.8115 li
204.663 33.8086 li
205.038 33.8057 li
205.048 35.158 li
204.271 31.5616 mo
204.267 31.0806 li
205.017 31.0806 li
205.021 31.5559 li
204.646 31.5587 li
204.271 31.5616 li
.75021 .679683 .670222 .90164 cmyk
f
298.083 22.9339 mo
110.973 22.9339 li
110.973 0 li
298.083 0 li
298.083 22.9339 li
0 0 0 0 cmyk
f
298.083 31.0806 mo
205.017 31.0806 li
204.998 28.5561 li
204.623 28.5588 li
204.606 26.3089 li
204.981 26.306 li
204.962 23.684 li
298.083 23.684 li
298.083 31.0806 li
204.267 31.0806 mo
110.973 31.0806 li
110.973 23.684 li
204.212 23.684 li
204.231 26.3117 li
204.606 26.3089 li
204.623 28.5588 li
204.248 28.5616 li
204.267 31.0806 li
f
204.623 28.5588 mo
204.606 26.3089 li
204.623 28.5588 li
f
205.017 31.0806 mo
204.267 31.0806 li
204.248 28.5616 li
204.623 28.5588 li
204.998 28.5561 li
205.017 31.0806 li
204.231 26.3117 mo
204.212 23.684 li
204.962 23.684 li
204.981 26.306 li
204.606 26.3089 li
204.231 26.3117 li
.75021 .679683 .670222 .90164 cmyk
f
298.083 23.684 mo
204.962 23.684 li
204.212 23.684 li
110.973 23.684 li
110.973 22.9339 li
298.083 22.9339 li
298.083 23.684 li
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Alegreya-Regular-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/YAAAAA+Alegreya-Regular 2 GetGlyphDirectory475 <001C60D8A8C9B634D6E41CA2843907864B3F02BE023188A77644FAFC8FE887341D630613C59B424EECC0FD7983855F46B7303D29E9E11A5CD37FE4B2D3A8815D6C6C8CE5F604D079B00B03FC2902DE4519FEEAE795C7B5D392482A372E58BE8A75E4C94E7F9E8AE1EAD3FE42C0BAC6430913228977E1EB2A21323B846110981715FD34CDAA19FB27C4C2D61D2510E02D1D633C3EB536FBC60829C35070FE05E1F10D53F5479F515544DBDA8133DAF39AA1C67E7220236604295DE7E1BA0744DC468E1145AE169EECE053ADF7139DFF99DB3F4E6888D785A979927769D23577A4DE13DCADF6F11DFEFC933385C210C9C43FF5F3DB35768023EDBE4EDE469F2282D656162D0DA865092FF180FBC8F8766B8F6CFC9A44AD> |328 <001C60D8A8C9B785CBE27917DD6470D0325649B6AA15EE3D84A47A4E460FC61E6DDE1CC0B20F199D510C9811DEEDE9A594F54BB5AA186BEF2E6FCEA30B9DC7D43ED6C04D0687EC638FEC0C559CBCC4A18F88A8089E34E0C3EC4089D81DEE9E1ED231DADBBAC588EAC807B0D1AB79C81B1A9EC0D491351568D91C4AC8962CA87472D84A8A4148CA0929C3AD3A2C0D6B354775E7F89BBD7EC9CA2FF38900A2D9A56538ECEBE2EDF4A8B71366F867BC790D52EFC2891F2FB083A0F3CEEA8086C56C36640837AD62AC2F86C7A5897A3388EFE36F43796803F6B5B5671B4EBBB23D087C8D8D88CCF2242F03F3572EE6FC48BE16C330670382276594D6D7FF> |!endend end
%ADOEndSubsetFont
HGWPVA+Alegreya-Regular [14.0002 0 0 -14.0002 0 0 ]msf144.761 15.3324 mo(\001\333\001H\001z\001e\001\(\000\002\001\266\001\241\000\375\001M\001p\001M\001p\001A\000\002\001\236\001H\000\375\001\251\001\()[9.87021 7.47607 6.97214 3.41611 6.27209 2.77202 4.6201 5.36205 6.52415 3.94804 7.6722 3.94803 7.67221 7.01422 2.77202 7.39214 7.47607 6.52417 5.62798 0 ]xsh678.428 40.5057 mo
797.294 40.5057 li
797.294 113.049 li
678.428 113.049 li
cp
.119875 .162753 0 0 cmyk
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: NAAAAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/NAAAAA+TimesNewRomanPSMT 3 GetGlyphDirectory37 <001C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F94023374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AEA69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC2483A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B412F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF75F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E955978F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |14 <001C60D8A8C9B7E7C1AF20108BE9542537F46D63CC3CA2839958A1F5DF80C8F650E8951850C571859AA14DD682> |20 <001C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |!endend end
%ADOEndSubsetFont
HGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf685.18 63.5475 mo(\000\)\000H\000D\000W\000X\000U\000H\000\003\000\(\000[\000W\000U\000D\000F\000W\000R\000U)[6.672 5.31592 5.31592 3.32391 6 3.99591 5.31592 3 7.32001 6 3.32391 3.99591 5.31592 5.31592 3.32391 6 0 ]xsh685.18 80.0475 mo(\0000\000H\000W\000D\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[10.6681 5.31592 3.32391 5.31592 3.99591 3.32391 5.31592 5.31592 3.99591 6 5.31592 3.99591 0 ]xsh%ADOBeginSubsetFont: PAAAAA+TimesNewRomanPS-ItalicMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.ct_GlyphDirProcs begin/PAAAAA+TimesNewRomanPS-ItalicMT 2 GetGlyphDirectory41 <001C60D8A8C9B7D8BE19D38CCF292DFC046A81C46904D6DBA45C92F5D70D3F6EE199C42E4A4C9B3B0D87C6E3C2EDE67CD75D9ACE82154AD3064B8072C730BD5E33CCE728F682C21B15C05744AD9C71CFA42728B71E17CDFE99F456763B119BA3FA610548CF33938B2F236B852C1938DD05A18BA75E2CBAAEE0B3BF3055B956ECB1A81C46282785CBAC883541E9D58F06378B9B39109988D498391B51FF826B82A0206DB5AB25618DD21E217BBB77AE2DD83767DEE5C5D18C6FD1A87CA361B11F32974B> |55 <001C60D8A8C9B7EF323B043F7356D787F22DD5A27FFA2879B142D44CA92E81ACF7A975B0E45B81B44C53ED72199A1209DEC52D9515733C0E6C89D066C927ACEB3656C4FB019EF01B90F9D679F1D15A9D6304D98B7C01DDB7292A5060DFD76D203F0196DC3CFB7A1EE816A5CD53976C6ED6843E9C8EFEB0518A2899C5367D0814F7971EC4C722C4F59C> |!endend end
%ADOEndSubsetFont
HGWPUV+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf750.136 80.0475 mo(\0006\0006)[6 0 ]xshHGWPUV+TimesNewRomanPS-ItalicMT [8.00025 0 0 -8.00025 0 0 ]msf762.136 80.0475 mo(\0001)shHGWPUT+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf767.465 80.0475 mo(\000\003)sh685.18 96.5475 mo(\000%\000D\000V\000H\000\020\000O\000H\000D\000U\000Q\000H\000U\000\003)[7.992 5.31592 4.66809 5.31592 3.99591 3.32391 5.31592 5.31592 3.99591 6 5.31592 3.99591 0 ]xshHGWPUV+TimesNewRomanPS-ItalicMT [12 0 0 -12 0 0 ]msf748.807 96.5475 mo(\000\)\0007)[7.32001 0 ]xshHGWPUV+TimesNewRomanPS-ItalicMT [8.00025 0 0 -8.00025 0 0 ]msf762.811 96.5475 mo(\0001)shHGWPUT+TimesNewRomanPSMT [8.00025 0 0 -8.00025 0 0 ]msf768.139 96.5475 mo(\000\016\000\024)[4.50415 0 ]xshgrestore
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: GDAAAA+CMSY10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /GDAAAA+CMSY10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 68 /D putdef/FontBBox {-29 -960 1116 775} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 705] def/OtherBlues [-135 -124] def/BlueScale 0.04379 def/StdHW [40] def/StdVW [40] def/StemSnapH [40 56] def/StemSnapV [40 56] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/D <1C60D8A8C9B6F64743869693E9ECBB19CD30825EC0AF9501FF1DC78FE819D46AD218888FF561B6A33149B1FF99FF5542ED5F201446A8EFBAAFE68024C7B603F3F755852D63BD1E44F80E96B258856E348E3D711543FA286838B3744B131452A12FFAA89A38E0FB6CC90DF07C3C908F14089EDA23E89BD13249D54EBF3D3AB76D5013A4FF954178DEE1077C89B01B9B> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HGWPVC+CMSY10 /GDAAAA+CMSY10 findfont ct_VMDictPut/HGWPVC+CMSY10*1 [68{/.notdef}rp /D 187{/.notdef}rp]HGWPVC+CMSY10 nfHGWPVC+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf38.595 89.879 mo(D)sh%ADOBeginSubsetFont: GDAAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVC+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/T <1C60D8A8C9B79B8EEA62BF3DB5D763042AF11C87A1981D3829A23772318340581EF8DE5B8254FEB09181435BC5F78702FE6788B829B0A2A6CDD8B0266C2FF5A1D52A63C75C68D92E71E5DB3F641EA0F1B791C6CCD7D88ACF4DEAD0F0969391B9B524148D030EF85B2F25787EB81FC8CFD7921664D7795F8BB1901FB8544DCBABA4B85B326E823030E46AC26BF6> |-/braceleft <1C60D8A8C9B7A73DB562253524F5E14A30E2D0BF696ED1EC1832959CA9D8768D378B31F9958CC81B8983D97B99095D96B7B13FD5F176637D1917CBA8C5B39E4DE518E3826A46DC89228CAF1C527CB89936763A26C8ABAEB05B83D697601A16F0C30F623A5565FC8C7E46B86FBD1170D03B6D86481EAED1D0448D97ECF43080CACC56F8DC5EAC27FF2F85FE282F323992DCE58CCAC225E57C7133C46859EF9ACC558D046684C86AF46342> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVC+CMSY10 /Encoding getdup 84 /T putdup 102 /braceleft putpop%ADOEndSubsetFont
/HGWPVC+CMSY10*1 [68{/.notdef}rp /D 15{/.notdef}rp /T 17{/.notdef}rp /braceleft 153{/.notdef}rp]HGWPVC+CMSY10 nfHGWPVC+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf221.764 89.88 mo(fT)[4.98151 0 ]xsh%ADOBeginSubsetFont: HDAAAA+CMR7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /HDAAAA+CMR7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR7.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 49 /one putdef/FontBBox {-27 -250 1122 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 446 664 674 683 703] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [36] def/StdVW [79] def/StemSnapH [28 36] def/StemSnapV [79 95] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/one <1C60D8A8C9B7E2CE5B62E9FEEC2E64DB4DF57A0DEE8F2DC4BC1D285E2D6E93583C8BA769F966BA0D2874BA4F6692804A12EE154BF6C4128EE336963B1B369FC937E51FD440B01114006718C9CD9EDADE925291DDB3291CFBE83284B5762DA660F3B8EE1736383DFDEEBA0BD582FD6608113CEA73> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HGWPVD+CMR7 /HDAAAA+CMR7 findfont ct_VMDictPut/HGWPVD+CMR7*1 [49{/.notdef}rp /one 206{/.notdef}rp]HGWPVD+CMR7 nfHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf232.162 91.375 mo(1)sh%ADOBeginSubsetFont: IDAAAA+CMSY7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /IDAAAA+CMSY7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY7.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 24 /similar putdef/FontBBox {-15 -951 1251 782} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 708] def/OtherBlues [-139 -127] def/BlueScale 0.039625 def/StdHW [49] def/StdVW [49] def/StemSnapH [49 69] def/StemSnapV [49 69] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/similar <1C60D8A8C9B5822B08C4D09C04F6C08D3906B5048CC216FE45FF80E118D6EE1E0FEE08E17C114FC012EEE5175071E48784CE7668F3354C3515C7205B24C755D65757ACA6FF5C1D945914F9A24A79315589A8A7F964E147D01B39EBAA9F24B1459BBBA01D7825916B844A6B7414B0> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HGWPVE+CMSY7 /IDAAAA+CMSY7 findfont ct_VMDictPut/HGWPVE+CMSY7*1 [24{/.notdef}rp /similar 231{/.notdef}rp]HGWPVE+CMSY7 nfHGWPVE+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf236.126 91.375 mo(\030)sh%ADOBeginSubsetFont: JDAAAA+CMMI7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /JDAAAA+CMMI7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 107 /k putdef/FontBBox {-1 -250 1171 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 441 451 463 683 703] def/OtherBlues [-204 -194] def/BlueScale 0.04379 def/StdHW [32] def/StdVW [81] def/StemSnapH [32 36] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/k <1C60D8A8C9B7DCE0346E58A1F51E7C4C69C1082EBFC4E4F7F707F4564379656105A40D2B029E40ADC01E8EFA659F22A6C18C4DA5DA066116754D5C5886EDC21111EA5D9A62B93664DE4E3C5027595619448BFBEE90529362A1E3EAEA21341C8858F496B028AB52B426A78BCC76AE1DE84CEEB909E3C2E914F547AB9297AC023A19FB5439AAB393491CFF29F4ED5F95657D7E28EC801370D07341133A025B363D666AE1FC100E8BFC32C3CC6B2F785789FF43E37586498CFFE9083D378BD47FEC31825515133345DD04A4F9F7D200930C452B491D3B11BB7D620FF9E5CF68FE79DD8F3D2025F652E39575A43D48726472FDBB71B93CD75527> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HGWPVF+CMMI7 /JDAAAA+CMMI7 findfont ct_VMDictPut/HGWPVF+CMMI7*1 [107{/.notdef}rp /k 148{/.notdef}rp]HGWPVF+CMMI7 nfHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf242.346 91.375 mo(k)sh%ADOBeginSubsetFont: GDAAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVC+CMSY10 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/braceright <1C60D8A8C9B7A73DB562253524F77EAA0C9D86D36E2A3E5029725A48EA4986EEB92642FB15114D993A3E4D78166C9507F82BF07B5E46AE791E48C3B5D13848EE2A0ED390B8EF77240E758B367FB2AC0AD1619CE65A4D162564D60A402AEB4F44AD0059F796DBE87333B0184A0747010482EB8790381C7873A7095E3FA12E2A8882D9D79D84512274A394AF253DDAAA1469882951252A742985603D0073C85F20BAEF47B61A9ECA7243ED> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVC+CMSY10 /Encoding getdup 103 /braceright putpop%ADOEndSubsetFont
/HGWPVC+CMSY10*1 [68{/.notdef}rp /D 15{/.notdef}rp /T 17{/.notdef}rp /braceleft /braceright 152{/.notdef}rp]HGWPVC+CMSY10 nfHGWPVC+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf247.247 89.88 mo(g)shHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf252.23 91.375 mo(1)shHGWPVE+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf256.194 91.375 mo(\030)sh%ADOBeginSubsetFont: JDAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVF+CMMI7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B58EDE182C7CC3D890DA6E8FAA21968CB9B76BA4413FA3EADD6E17E2371BCFB862E8F2F6F629A0F3E3F12398716CBE0C2DECEB6D5F3AF015B492F6A53D4687891B9D429D3C219C4308418429F0D79F5DD9A8C5F41F50763E5C4C4A8E83FCA23DF73F3D26F17AB88020DA01E2559C38601BDAEC255EC90D62EA73168C526D64DE2D2429B9E2698611E13A4DCDA3AB1941329082C8DA19CDEC12F23F04777B3D1F4765BB64EA65A1EE9A5CFF48FE6DD1C36C166A086420C5260F55221BB6BBB869ECC4C320FAB48AEE2F3EA224D7556337C6FB6948CC97AEECFAB0DF5805CD40B4A845465843EB014355F52068F30EA8ECC975> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVF+CMMI7 /Encoding getdup 78 /N putpop%ADOEndSubsetFont
/HGWPVF+CMMI7*1 [78{/.notdef}rp /N 28{/.notdef}rp /k 148{/.notdef}rp]HGWPVF+CMMI7 nfHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf262.414 91.375 mo(N)shHGWPVC+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf432.273 91.522 mo(T)sh%ADOBeginSubsetFont: WBAAAA+MinionPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /WBAAAA+MinionPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1990, 1991, 1992, 1994, 1997, 1998, 2000, 2002, 2004 Adobe Systems Incorporated. All rights reserved. Minion is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdef/FontBBox {-290 -360 1684 989} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-15 -0 437 453 464 478 623 636 650 665 701 712] def/OtherBlues [-257 -240] def/FamilyBlues [-15 -0 437 453 464 478 623 636 650 665 701 712] def/FamilyOtherBlues [-257 -240] def/BlueScale 0.046875 def/BlueFuzz 0 def/StdHW [32] def/StdVW [79] def/StemSnapH [32] def/StemSnapV [79] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/space <1C60D8A8C9B889970A> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4A980A717C675DD749FCAD021C86E4A82A71450A60069401092D2766EC2A38FB4B27A723A2EF044B6549AE7BD225531C9BFBD9FDEC4C158C539EAA9E47425F43D2DE9C2FA717B7B8B00C9770334A66> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/HGWPVG+MinionPro-Regular /WBAAAA+MinionPro-Regular findfont ct_VMDictPut/HGWPVG+MinionPro-Regular*1 [32{/.notdef}rp /space 223{/.notdef}rp]HGWPVG+MinionPro-Regular nfHGWPVG+MinionPro-Regular*1 [9.963 0 0 -9.963 0 0 ]msf437.693 91.522 mo( )sh%ADOBeginSubsetFont: HDAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVD+CMR7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B77D5F989B950A07335B748C2E59E5D2D6BF1E6051957DD97CEFF35302EE98FC4B787BCA44229E0EB5B1327789C7E84159A08D8DD68C92A07DE5F5A75D5A81EBAB8FA5D1E69836F3FC93F6E29FC5BFCC9DEA3989EC8EA8AA> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVD+CMR7 /Encoding getdup 40 /parenleft putpop%ADOEndSubsetFont
/HGWPVD+CMR7*1 [40{/.notdef}rp /parenleft 8{/.notdef}rp /one 206{/.notdef}rp]HGWPVD+CMR7 nfHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf440.221 86.347 mo(\()sh%ADOBeginSubsetFont: JDAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVF+CMMI7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/t <1C60D8A8C9B76C9024B562E6ACACC3BBFBFEA0392D5F04472FA97061AAE4DC52A3F98A11D8D54F25E4E1258444AF5132275DA6C5E3D0885B5B2A4654CEE34242292B9FEE69B16E5DD8A918634DD3321B8DE0F4A8FC34CE141D352DCEC7C4316AD4FCDE9B4AA88B17F80EB64AF3D0551FB1E213394E362152BE7414F5D1A1399F0E6D948396CBDF7FCCB9AE5C344B> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVF+CMMI7 /Encoding getdup 116 /t putpop%ADOEndSubsetFont
/HGWPVF+CMMI7*1 [78{/.notdef}rp /N 28{/.notdef}rp /k 8{/.notdef}rp /t 139{/.notdef}rp]HGWPVF+CMMI7 nfHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf443.336 86.347 mo(t)sh%ADOBeginSubsetFont: JDAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVF+CMMI7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/r <1C60D8A8C9B7890D00481D2C25DC59AC462738A7908647A15752A3AFFCCD82AFB55F3D209EC0B794DEDDC2CE25565929F21C086DF18DC1C50AA7E07A8388D5158D170B4268F7BBA5724DE3DDD8BF83A348FC9CABF1FB221059AF3799835E78341AE70D66B6566419F262897356C41452AE9F42AA6EEC683E691B71DBA214CE2E35D9657C9B9F4CCEEBAE48B5919D56430661EC6FCE7D881D8F19C002BBE236C2CD941C8E618DE41114FF2AB2F6723922> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVF+CMMI7 /Encoding getdup 114 /r putpop%ADOEndSubsetFont
/HGWPVF+CMMI7*1 [78{/.notdef}rp /N 28{/.notdef}rp /k 6{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]HGWPVF+CMMI7 nfHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf446.345 86.347 mo(r)sh%ADOBeginSubsetFont: JDAAAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVF+CMMI7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/e <1C60D8A8C9B79D2DDE51C8AF9A1C2C117AAD2B3599A8804571A02FD41B74BE8E9A00AC5CC45F41A1E38286496207E531A42B79D80783F6F0722D9F37C9D56876D347FE6F5612AB6913E73901C4EDB5DB5AC6ECD136C5354ABF5C0DC1E23A39841D51A447E70E05EDDF9B9B07D5A69F4F674101E48D7FD34D4DE5DF2B3162EC7B> |-/n <1C60D8A8C9B6374B4C02BBA2C2A4BDFB14D942002897AD9E721F35D86194D6438DBDEDC613997064273324A03221ED77119ACF97A1D09756CA7E107C6843B21D2503F6D3BC75D192648064781744E5678EE97FB1A6056604808404C56F7F8D9D91257F1B37A07011CB22C58E0406E0C6D4A5BC20F01F9DAAA77AA12DA66A554F2FCCCF5FB6A9C312E0AF216136CBBB0407BD13C77F63C014B8ACF17C60BC7406988C870BA107A13FF0CB13470F996F69FC27271E79FA5A5A46301340F3002E6F499CCA32312E6CC54FD83DEA5D41382D0DEBB2CBA04A7F886B0B36B4C2044E> |-/s <1C60D8A8C9B780B36FC0B82FFF96FF7BBE1C7AAB5C809901C6829D000E60ED4472D849A0693461393A400A42DE3B8661652FB48693B7CF78A6FFCA06F8F533E03C57BAD5162F309A10083065F3F1C2B6F7FF7E230349EB32B7E899462AA9E42087DF2F7A99AF1635052B8E5CE0048996F663D571D3889B89C0EE9B4D026BA350888C8667D77DF6453D12C2DC48B189B1D86BB3F53AF0C73C1C175C1303B2C51CFB2E52D560F8B82C2AC9FE8E0A7C01E95143EF> |-/u <1C60D8A8C9B6564895ABB44F5B1AFEFBFCA132211C6A6541B5DB08834BF041D483ABF9A14850DFB189517FBB3EEBCF77F6E137B07B95414A69CFC0CDED6C50164E29FE57B9F2AC63223A98C35B0CB7B186184BCFB7F7FB32E154903E1C21E96D69EDB104C08F25BB7062E461D70F335E8172BB5685EB6563F23BE1979142EE7BB0FBEBB2A5E426EACB7A3089BA6224F2595BE2CD10C944279D815D19962E484F16EB060DD1A480AE026B0D9C0C175CEFCCF471EFAC2EB172BA7ED7293BF915AA694CE6B4225F11291E013E027A2E631997592D> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVF+CMMI7 /Encoding getdup 101 /e putdup 110 /n putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/HGWPVF+CMMI7*1 [78{/.notdef}rp /N 22{/.notdef}rp /e 5{/.notdef}rp /k 2{/.notdef}rp /n 3{/.notdef}rp /r /s /t /u 138{/.notdef}rp]HGWPVF+CMMI7 nfHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf437.694 92.687 mo(unseen)[4.71024 4.92508 3.76041 3.77994 3.77997 0 ]xsh%ADOBeginSubsetFont: HDAAAA+CMR7 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.systemdict beginHGWPVD+CMR7 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenright <1C60D8A8C9B77D5F989B950A07335B748CB31A51BDF9FCF02A2BBCACD13F22BC441A3FF8286B2AF4AFEB0BAC09CB8CFC19F55A315F3EDC1D3B4CB4181963F3AF6C950ED14D564BDEFFFE139BE1E10473AE6A5D25F9A29D9AC2223E09CC1DB99271> |-systemdict /gcheck known {setglobal} if end {end} ifendHGWPVD+CMR7 /Encoding getdup 41 /parenright putpop%ADOEndSubsetFont
/HGWPVD+CMR7*1 [40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 206{/.notdef}rp]HGWPVD+CMR7 nfHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf450.263 86.347 mo(\))shHGWPVC+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf627.177 91.308 mo(T)shHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf635.135 86.133 mo(\()shHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf638.249 86.133 mo(te)[3.00995 0 ]xshHGWPVF+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf632.603 92.473 mo(unseen)[4.71027 4.92505 3.76038 3.77997 3.77997 0 ]xshHGWPVD+CMR7*1 [6.974 0 0 -6.974 0 0 ]msf645.038 86.133 mo(\))shgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/HGWPVG+MinionPro-Regular*1 uf/HGWPVG+MinionPro-Regular uf/WBAAAA+MinionPro-Regular uf/HGWPVB+Alegreya-Italic-Identity-H uf/HGWPVB+Alegreya-Italic /CIDFont ur/HGWPUT+TimesNewRomanPSMT-Identity-H uf/HGWPUT+TimesNewRomanPSMT /CIDFont ur/HGWPUX+TimesNewRomanPS-BoldMT-Identity-H uf/HGWPUX+TimesNewRomanPS-BoldMT /CIDFont ur/HGWPVD+CMR7*1 uf/HGWPVD+CMR7 uf/HDAAAA+CMR7 uf/HGWPUW+TimesNewRomanPS-BoldItalicMT-Identity-H uf/HGWPUW+TimesNewRomanPS-BoldItalicMT /CIDFont ur/HGWPUV+TimesNewRomanPS-ItalicMT-Identity-H uf/HGWPUV+TimesNewRomanPS-ItalicMT /CIDFont ur/HGWPVA+Alegreya-Regular-Identity-H uf/HGWPVA+Alegreya-Regular /CIDFont ur/HGWPUZ+Arial-ItalicMT-Identity-H uf/HGWPUZ+Arial-ItalicMT /CIDFont ur/HGWPVE+CMSY7*1 uf/HGWPVE+CMSY7 uf/IDAAAA+CMSY7 uf/HGWPUY+Arial-BoldMT-Identity-H uf/HGWPUY+Arial-BoldMT /CIDFont ur/HGWPVC+CMSY10*1 uf/HGWPVC+CMSY10 uf/GDAAAA+CMSY10 uf/HGWPVF+CMMI7*1 uf/HGWPVF+CMMI7 uf/JDAAAA+CMMI7 uf/HGWPUU+ArialMT-Identity-H uf/HGWPUU+ArialMT /CIDFont urAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
