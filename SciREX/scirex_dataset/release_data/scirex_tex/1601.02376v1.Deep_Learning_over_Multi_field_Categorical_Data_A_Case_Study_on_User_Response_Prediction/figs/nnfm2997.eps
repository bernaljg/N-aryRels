%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: nnfm2997.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: weinan
%%CreationDate: 12/31/2015
%%BoundingBox: 0 0 360 289
%%HiResBoundingBox: 0 0 360 288.5122
%%CropBox: 0 0 360 288.5122
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 9158 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD24FFA87DFD07FF7DFD20FFA87DFFFFA8A8FFA8A8
%FFA87DA8FD04FFA8FFFFFFA8FD40FF515252FF7DFFA87D2752A87DA8A87C
%A87DA87CFFA87DA8FF7CA8FFA87DFF7DA8FFFFA87DA8A852A8FFFF7D7D52
%7D52767D52527DA85252FFFFA8527DA87DA85252A87DFFA87DA8FF7DFF52
%7DFD34FF52527D52527C7D7D7C7D7C7D7D527D527D277D7DCF277D7D7D52
%7D52FF7D5227FFFF7D7C7D525252FFFFFFFD047D277D7D5252FF52A8FFFF
%527D52A8277D52A8A852527D27A85252527D7DFD34FF27FFFF2752A752FF
%527D527D5252FF7DA852A87D5252277DA87D527CFF7D277DA8FF527D5252
%A87DA8FF7D27A8FF7C27A8A8277DA852FFFFA8527DFD04527D7D7D52277D
%FD0452A8527DFD1EFFA87DFFFFFF7DFF7DA8FD0DFFA8FFFFA87DA8CFFFA8
%FFA852FFA8FFA8FFA8FFA8A852A8A8FFA8FF7D7DFF7D7DFFFFFF52FFA8FF
%A8FFFFA852A8A87DA8FF7DA8FFFFA8FFFFFFA77DA8A852FD04A87D7DA87D
%FFA87DA8FF7DFD1EFF52527DFF5152A8A851FFA8FFA8A8A8FFA8A8A8FFA8
%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFF
%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FD12
%FFA87D7DA7FF5252A87DA8A8527DA87DA87DA87DA87DA87DA87D7D7DA87D
%A87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87D7D7DA87DA87D
%A87DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87D
%A87DA87DA87D7D52A87DA87DA87DA87DA87DA87D7D7DFD12FF527C7DA87D
%7C7D517DA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0EFFA8
%FD0CFFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD0DFFA8FD0DFFCFFD0DFF
%A8FD0DFFCFFD0DFFA8FD1BFFA8A8FD1BFFA8A8FD62FF7DFD1BFFA87DFD0D
%FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA87DFD1BFF
%A8A8FD62FF7DFD1BFFA87DFD0DFFCFFD0DFFA8FD0DFFCFFD0DFFA8FD0DFF
%CFFD1BFFA87DFD1BFFA8A8FD28FF7E2B7EFD37FF7DFD1BFFA87DFD0DFFA8
%FD0CFFA97EFFFFFFFD04A97FA97F7F7F2B032B7F85A9FFA9FD07FFCFFD0D
%FFA8FD1BFFA87DFD1BFFA8A8FD1AFF2AF92AA97FA97FA97FA9A9FFA9FF7E
%557EFFA9A97FA97FA9A9FD05FFA9FD29FF7DFD1BFFA87DFD0DFFCFFD07FF
%A9A97F7F7E2A0354A9FD0BFFCFFD07FFA9A97F7F7F55032BCFFD0BFFA8FD
%1BFFA8A8FD12FF7D52FFFFA87DFF52A8A8A8FD10FFA9A97F857F85A9FD1F
%FF54F92AFD29FF7DFD11FFA8527D7DFF277D527D52A852FFFFFFA8FFA8FF
%A8FFA8FFA82A03547E7F7EA9A8FFCFFFA8FFCAFFA8FFA8FFA8FFFFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFF7E7FCFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FF
%7D7DFD11FFA87D52A8A85252527D7DA7A8FD0CFF03F97EFD29FF7FFD28FF
%A87DFD12FF7DA8A8FF7D7DA87DA8A87DFD0CFFA97EFD0DFFA8FD1BFFCFA9
%7FFD27FFA87DFD1BFFA8A8FD39FF7FFD28FF7DFD1BFFA87DFD0DFFA8FD0D
%FFA8FD0DFFA8FD0DFFA8FF7FA9FD0AFFA8FD1BFFA87DFD1BFFA8A8FD3AFF
%7FFD27FF7DFD1BFFA87DFD0DFFA8FD1BFFA8FD10FF7FA9FD09FFA8FD1BFF
%A8A8FD1BFFA8A8FD3AFFA985FD26FF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD
%0DFFA8FD0DFFA8FFFFFF55FD09FFA8FD0DFFA8FD0DFFA87DFD1BFFA8A8FD
%3BFFA9A9FD25FF7DFD1BFFA87DFD1BFFA8FD1BFFA8FFFFFFA97FFD24FFA8
%7DFD1BFFA8A8FD3CFF7FFD25FF7DFD12FFA8FFFFFFA8A8FFA8A8A87DFD0D
%FFA8FD0DFFA8FD0DFFA8FD0DFFA8FD04FFA97FFD07FFA8FD1BFFA87DFD11
%FFA87D52FFFF527DCF517DA8A8FD3DFF7FFD24FF7DFD11FFA87DA77DFF7D
%7D7D5252A87DFFCFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFFF
%FFA8FFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFFFFFA8FFFFFFA8FFCFFFA8
%FFA8FFA8FFFFFF7EA9FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8
%FFA8FFFFFFA8FFFFFFA8FFFFFF7D7DFD11FFA85252A8A8A8527D527DA8A8
%FD3EFF7FFD22FFA87DFD12FFA8A8A8FF7DA8FFA8A8A87DFD0DFFA8FD0DFF
%A8FD0DFFA8FD0DFFA8FD06FF7FA9FD05FFA8FD0DFFA8FD0DFFA87DFD1BFF
%A8A8FD3EFFA9A9FD22FF7DFD1BFFA87DFD1BFFA8FD1BFFA8FD07FF55FD21
%FFA87DFD1BFFA8A8FD3FFFA97FFD21FF7DFD1BFFA87DFD0DFFA8FD0DFFA8
%FD0DFFA8FD0DFFA8FD07FFA97FFD04FFA8FD1BFFA87DFD1BFFA8A8FD40FF
%7FA9FD20FF7DFD1BFFA87DFD0DFFA8FD1BFFA8FD16FFA97FFFFFFFA8FD1B
%FFA8A8FD0DFFA8FFA8FD0BFFA8A8FD41FF7FA9FD1FFF7DFD0CFF52A8FF76
%A8FD0AFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD09FF7F7FFFFFA8
%FD0DFFA8FD0DFFA87DFD0CFFA87C7D52FD0BFFA8A8FD42FF7FFD1FFF7DFD
%0CFFA87D27A8FFFF7DA8FFFF7DA8FFA87DA87DFD1BFFCAFD1BFFCAFD0AFF
%7F7FFD1DFFA87DFD0DFF7DA87DFFA87D52CFFF52A8A827A8A8A7FD42FFA9
%7FFD10FFCFFD0CFFA87DFD0CFFA8A87D7DFFA87C7D7DFFA8FD0452A852CF
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FF7EA9A8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFCAFF7D7DFD0DFF7D7D7DFFFF7D7DA8A8A87DCF52A8A8A8FD43FF
%A97FFD1DFF7DFD0CFFA87D277DFD06FFA8FD04FFA87DFD0DFFA8FD1BFFA8
%FD1AFF7FA8FD1BFFA8A8FD0CFFA85127A8FD0BFFA8A8FD44FFA9A9FD1CFF
%7DFD0EFF7D7DA8FD0AFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0C
%FFA92A7EA8FD0BFFA8FD0DFFA87DFD1BFFA8A8FD44FF7EF903FD1BFF7DFD
%1BFFA87DFD1BFFA8FD1BFFA8FD0CFFA92A2A54FD19FFA87DFD1BFFA8A8FD
%47FFA955A9FD18FF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8
%FD0DFFA8FFFFFF7F7FA9FD15FFA87DFD1BFFA8A8FD4AFFA97F7FFD15FF7D
%FD1BFFA87DFD0DFFA8FD1BFFA8FD1BFFA8FD06FFA955A9FD12FFA8A8FD1B
%FFA8A8FD4EFF7F7FFD12FF7DFD12FF527DFFFF527DFF7D7DA87DFD0DFFCF
%FD0DFFA8FD0DFFCFFD0DFFA8FD0DFFCFFD09FF7F7FA9FD0FFFA87DFD11FF
%A87D52A8FF527DFF277DA87DA8FD4FFFA97F7FA97EFD0CFFA87DFD11FFA8
%52527DFFA852522751A87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF
%A8FD0CFF7F03F9A8FD0BFFA87DFD12FFA8A8FFA87D7DFFFD04A8FD52FFA9
%2B03FD0DFF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF
%A8FD0DFFA8FD0DFFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD0DFFA8FD0D
%FFCAFD0DFFA8FD0DFFCAFD0DFFA8FD1BFFA8A8FD1BFFA8A8FD62FF7DFD1B
%FFA87DFD0DFFCAFD0DFFA8FD0DFFCAFD0DFFA8FD0DFFCAFD0DFFA8FD0DFF
%A87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD1BFFA8FD1BFFA8FD29FFA87DFD
%1BFFA8A8FD62FF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD
%0DFFA8FD1BFFA87DFD13FFA8FFFFFFA8FFA8FFA8A8FD62FF7DFD12FF5252
%A8FF277DA87D52A8A1FD0DFFA8FD1BFFA8FD1BFFA8FD1BFFA8A8FD11FFA8
%7D7DA8FFA852FFA87DA87DA8FD19FFCAFD0FFFCFFD36FFA87DFD12FF5252
%7DA8A8527D277DA87DFFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87DFD13FFA8FFA8A8A8FFA8FFA8
%A8FD62FF7DFD1BFFA87DFD0DFFCFFD0DFFA8FD0DFFCFFD0DFFA8FD0DFFCF
%FD1BFFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD0DFF
%A8FD0DFFA8FD0DFFA8FD1BFFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD0D
%FFA8FD0DFFCFFD0DFFA8FD0DFFCFFD0DFFA8FD1BFFA8A8FD1BFFA8A8FD62
%FF7DFD1BFFA87DFD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFFA8FD0DFF
%A8FD0DFFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD1BFFCAFD1BFFCAFD29
%FFA87DFD12FFA87DFFFF7D7DFF7DA8A8A8FD54FFA8FD0DFF7DFD11FFA852
%52A8FF27A77D5252A852FFA8FFA8A8A8FFA8A8A8FFA8A87DFFA8A8A8FFA8
%A8A8FFFD04A87DFFA8FFA8A8A8FFA8A8A8FFA8FF7DFD04A8FFA8A8A8FFA8
%A8A8FF7DA8A8FFA8A8A8FFA8A8A8FFA8FF7DFD04A8FFA8A8A8FFA8A8A8FF
%A87DA8FFA8A8A8FFA8A8A8FFA8FF7D7DFD11FF7D7D7DA8FFFF52767D7DA8
%7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D7D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A87D7DA8A8
%A87DA87DA87DA87DA87DA87DA884A87DA87DA87DA87DA8A8A87DA8A8A87D
%A87DA87DA87DA87D7DA8FD12FF527DA8A87D7DA85227FFFFA87DFD09FF7D
%FFFFFF7DFD09FF7DFFFFFF7DFD09FF7DA8FFFF7DA8FD08FF7DA8FFFF7DA8
%FD08FFA8A8FFFFA87DFD08FFA87DFFFFA8A8FD08FFA87DFFFFFFA8A8FD16
%FFA87DFFFFA852FD08FFA852FFFF7D7D52FD07FF7D7D52FF7D5252FD07FF
%7D7D52FFA85252FD07FFA87D52FFFFFF51FD07FFA87D52A8FF5252FD08FF
%7D52A1FF5252FD08FF7D527DFFFF27A8FD17FF52FFA8FF52FD09FF52FFFF
%7D7D52FD07FF7D7D52CAA85152FD07FF7D7D7DA8A82752A8FD06FFA87D7D
%7DFF7D7DFD07FFA8527D7DFF27527DFD07FF527D52FFA8527DFD07FF52A8
%52FF522752FD16FFA852A8A8A852A8FD07FFA852A8A8A7527DFD07FFA852
%7DCFA87DA8FD07FFA87D7DA87D7D7DFD08FF7D7DCFA8A8A8FD08FF7D52A8
%A8A852FD08FFA852A8A8A852FD08FFA852A8A1FF7DA8FD25FFA8FD1FFFA8
%FD29FFA8FD52FFA87D7DFD0DFFA8FD6FFF7D7D5252FD057D52A8527D7DA8
%7D277DFD6EFF7DFF7D527D7D7D7C527D277D7D527D7C52FD6FFFA8527DA8
%A8A87C7D5252A8527D7D527D7D7DFD76FF7DFDBDFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-12-31T17:29:17+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq+fPKnm78wtC8pSedLhNQv9GWwf6wuq3UNwlxfzX0UFvLarE8s8MMcbOZOfGv8v7WBWY2fn38y&#xA;bxdP0waXaafrF7qUlkLy+gnjtmtksWvPrC2wmMobkhj4GT3rQ7NpSPyx5p8+2+oXML3tlcatrusa&#xA;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&#xA;dirsVdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2015-12-31T17:29:17+08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-12-31T17:29:17+08:00</xmp:ModifyDate>
         <pdf:Producer>matplotlib pdf backend</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>360.000000</stDim:w>
            <stDim:h>288.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:43dd7754-e4ff-6f4c-827a-372427be389d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:43dd7754-e4ff-6f4c-827a-372427be389d</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:43dd7754-e4ff-6f4c-827a-372427be389d</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:43dd7754-e4ff-6f4c-827a-372427be389d</stEvt:instanceID>
                  <stEvt:when>2015-12-31T17:29:17+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -288.512 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288.512 li
360 288.512 li
360 0 li
cp
clp
0 288 mo
360 288 li
360 0 li
0 0 li
0 288 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
84.8571 67.8198 mo
124.714 58.8013 li
164.571 54.4615 li
204.429 61.9845 li
244.286 159.424 li
284.143 185.099 li
.883665 .769161 0 0 cmyk
@
gsave
81.6071 71.0698 mo
88.1071 71.0698 li
88.1071 64.5698 li
81.6071 64.5698 li
81.6071 71.0698 li
cp
clp
81.8571 70.8198 mo
87.8571 70.8198 li
87.8571 64.8198 li
81.8571 64.8198 li
81.8571 70.8198 li
cp
f
.5 lw
0 lc
0 lj
81.8571 70.8198 mo
87.8571 70.8198 li
87.8571 64.8198 li
81.8571 64.8198 li
81.8571 70.8198 li
cp
0 0 0 1 cmyk
@
grestore
gsave
121.464 62.0513 mo
127.964 62.0513 li
127.964 55.5513 li
121.464 55.5513 li
121.464 62.0513 li
cp
clp
121.714 61.8013 mo
127.714 61.8013 li
127.714 55.8013 li
121.714 55.8013 li
121.714 61.8013 li
cp
f
.5 lw
0 lc
0 lj
121.714 61.8013 mo
127.714 61.8013 li
127.714 55.8013 li
121.714 55.8013 li
121.714 61.8013 li
cp
0 0 0 1 cmyk
@
grestore
gsave
161.321 57.7115 mo
167.821 57.7115 li
167.821 51.2115 li
161.321 51.2115 li
161.321 57.7115 li
cp
clp
161.571 57.4615 mo
167.571 57.4615 li
167.571 51.4615 li
161.571 51.4615 li
161.571 57.4615 li
cp
f
.5 lw
0 lc
0 lj
161.571 57.4615 mo
167.571 57.4615 li
167.571 51.4615 li
161.571 51.4615 li
161.571 57.4615 li
cp
0 0 0 1 cmyk
@
grestore
gsave
201.179 65.2345 mo
207.679 65.2345 li
207.679 58.7345 li
201.179 58.7345 li
201.179 65.2345 li
cp
clp
201.429 64.9845 mo
207.429 64.9845 li
207.429 58.9845 li
201.429 58.9845 li
201.429 64.9845 li
cp
f
.5 lw
0 lc
0 lj
201.429 64.9845 mo
207.429 64.9845 li
207.429 58.9845 li
201.429 58.9845 li
201.429 64.9845 li
cp
0 0 0 1 cmyk
@
grestore
gsave
241.036 162.674 mo
247.536 162.674 li
247.536 156.174 li
241.036 156.174 li
241.036 162.674 li
cp
clp
241.286 162.424 mo
247.286 162.424 li
247.286 156.424 li
241.286 156.424 li
241.286 162.424 li
cp
f
.5 lw
0 lc
0 lj
241.286 162.424 mo
247.286 162.424 li
247.286 156.424 li
241.286 156.424 li
241.286 162.424 li
cp
0 0 0 1 cmyk
@
grestore
gsave
280.893 188.349 mo
287.393 188.349 li
287.393 181.849 li
280.893 181.849 li
280.893 188.349 li
cp
clp
281.143 188.099 mo
287.143 188.099 li
287.143 182.099 li
281.143 182.099 li
281.143 188.099 li
cp
f
.5 lw
0 lc
0 lj
281.143 188.099 mo
287.143 188.099 li
287.143 182.099 li
281.143 182.099 li
281.143 188.099 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
.5 lw
0 lc
1 lj
10 ml
[1 3 ] 0 dsh
true sadj
324 259.2 mo
324 28.8 li
0 0 0 1 cmyk
@
grestore
324 259.2 mo
324 255.2 li
0 0 0 1 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
324 259.2 mo
324 255.2 li
@
324 28.8 mo
324 32.8 li
f
324 28.8 mo
324 32.8 li
@
319.004 264.138 mo
318.392 264.138 317.935 264.438 317.624 265.038 cv
317.311 265.638 317.168 266.538 317.168 267.738 cv
317.168 268.938 317.311 269.838 317.624 270.438 cv
317.935 271.038 318.392 271.338 319.004 271.338 cv
319.616 271.338 320.072 271.038 320.384 270.438 cv
320.684 269.838 320.84 268.938 320.84 267.738 cv
320.84 266.538 320.684 265.638 320.384 265.038 cv
320.072 264.438 319.616 264.138 319.004 264.138 cv
319.004 263.202 mo
319.975 263.202 320.72 263.598 321.247 264.366 cv
321.763 265.146 322.027 266.274 322.027 267.738 cv
322.027 269.214 321.763 270.342 321.247 271.11 cv
320.72 271.878 319.975 272.262 319.004 272.262 cv
318.02 272.262 317.263 271.878 316.747 271.11 cv
316.232 270.342 315.979 269.214 315.979 267.738 cv
315.979 266.274 316.232 265.146 316.747 264.366 cv
317.263 263.598 318.02 263.202 319.004 263.202 cv
f
324.104 270.618 mo
325.34 270.618 li
325.34 272.106 li
324.104 272.106 li
324.104 270.618 li
f
331.171 264.39 mo
328.183 269.058 li
331.171 269.058 li
331.171 264.39 li
330.859 263.358 mo
332.347 263.358 li
332.347 269.058 li
333.595 269.058 li
333.595 270.042 li
332.347 270.042 li
332.347 272.106 li
331.171 272.106 li
331.171 270.042 li
327.223 270.042 li
327.223 268.902 li
330.859 263.358 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
284.143 259.2 mo
284.143 28.8 li
@
grestore
284.143 259.2 mo
284.143 255.2 li
f
284.143 259.2 mo
284.143 255.2 li
@
284.143 28.8 mo
284.143 32.8 li
f
284.143 28.8 mo
284.143 32.8 li
@
279.334 264.138 mo
278.722 264.138 278.266 264.438 277.954 265.038 cv
277.642 265.638 277.498 266.538 277.498 267.738 cv
277.498 268.938 277.642 269.838 277.954 270.438 cv
278.266 271.038 278.722 271.338 279.334 271.338 cv
279.946 271.338 280.402 271.038 280.714 270.438 cv
281.014 269.838 281.17 268.938 281.17 267.738 cv
281.17 266.538 281.014 265.638 280.714 265.038 cv
280.402 264.438 279.946 264.138 279.334 264.138 cv
279.334 263.202 mo
280.306 263.202 281.05 263.598 281.578 264.366 cv
282.094 265.146 282.358 266.274 282.358 267.738 cv
282.358 269.214 282.094 270.342 281.578 271.11 cv
281.05 271.878 280.306 272.262 279.334 272.262 cv
278.35 272.262 277.594 271.878 277.078 271.11 cv
276.562 270.342 276.31 269.214 276.31 267.738 cv
276.31 266.274 276.562 265.146 277.078 264.366 cv
277.594 263.598 278.35 263.202 279.334 263.202 cv
f
284.434 270.618 mo
285.67 270.618 li
285.67 272.106 li
284.434 272.106 li
284.434 270.618 li
f
288.262 263.358 mo
292.906 263.358 li
292.906 264.354 li
289.342 264.354 li
289.342 266.502 li
289.51 266.442 289.69 266.394 289.858 266.37 cv
290.026 266.346 290.206 266.322 290.374 266.322 cv
291.346 266.322 292.114 266.598 292.69 267.126 cv
293.266 267.666 293.554 268.386 293.554 269.298 cv
293.554 270.246 293.254 270.978 292.666 271.494 cv
292.078 272.01 291.25 272.262 290.194 272.262 cv
289.822 272.262 289.45 272.226 289.066 272.178 cv
288.682 272.118 288.298 272.034 287.89 271.902 cv
287.89 270.714 li
288.238 270.906 288.598 271.05 288.982 271.146 cv
289.354 271.242 289.75 271.278 290.17 271.278 cv
290.842 271.278 291.382 271.11 291.778 270.75 cv
292.162 270.39 292.366 269.91 292.366 269.298 cv
292.366 268.698 292.162 268.218 291.778 267.858 cv
291.382 267.498 290.842 267.318 290.17 267.318 cv
289.858 267.318 289.534 267.354 289.222 267.426 cv
288.91 267.498 288.586 267.606 288.262 267.75 cv
288.262 263.358 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
244.286 259.2 mo
244.286 28.8 li
@
grestore
244.286 259.2 mo
244.286 255.2 li
f
244.286 259.2 mo
244.286 255.2 li
@
244.286 28.8 mo
244.286 32.8 li
f
244.286 28.8 mo
244.286 32.8 li
@
239.336 264.138 mo
238.724 264.138 238.268 264.438 237.956 265.038 cv
237.644 265.638 237.5 266.538 237.5 267.738 cv
237.5 268.938 237.644 269.838 237.956 270.438 cv
238.268 271.038 238.724 271.338 239.336 271.338 cv
239.948 271.338 240.404 271.038 240.716 270.438 cv
241.016 269.838 241.172 268.938 241.172 267.738 cv
241.172 266.538 241.016 265.638 240.716 265.038 cv
240.404 264.438 239.948 264.138 239.336 264.138 cv
239.336 263.202 mo
240.308 263.202 241.052 263.598 241.58 264.366 cv
242.096 265.146 242.36 266.274 242.36 267.738 cv
242.36 269.214 242.096 270.342 241.58 271.11 cv
241.052 271.878 240.308 272.262 239.336 272.262 cv
238.352 272.262 237.596 271.878 237.08 271.11 cv
236.564 270.342 236.312 269.214 236.312 267.738 cv
236.312 266.274 236.564 265.146 237.08 264.366 cv
237.596 263.598 238.352 263.202 239.336 263.202 cv
f
244.436 270.618 mo
245.672 270.618 li
245.672 272.106 li
244.436 272.106 li
244.436 270.618 li
f
250.928 267.258 mo
250.4 267.258 249.98 267.45 249.668 267.81 cv
249.356 268.17 249.2 268.674 249.2 269.298 cv
249.2 269.934 249.356 270.438 249.668 270.798 cv
249.98 271.158 250.4 271.338 250.928 271.338 cv
251.456 271.338 251.876 271.158 252.188 270.798 cv
252.5 270.438 252.656 269.934 252.656 269.298 cv
252.656 268.674 252.5 268.17 252.188 267.81 cv
251.876 267.45 251.456 267.258 250.928 267.258 cv
253.28 263.55 mo
253.28 264.63 li
252.98 264.486 252.68 264.378 252.38 264.306 cv
252.068 264.234 251.768 264.198 251.48 264.198 cv
250.688 264.198 250.088 264.462 249.68 264.99 cv
249.272 265.518 249.032 266.322 248.984 267.378 cv
249.212 267.042 249.5 266.778 249.848 266.598 cv
250.196 266.418 250.58 266.322 251 266.322 cv
251.876 266.322 252.572 266.598 253.076 267.126 cv
253.58 267.654 253.844 268.386 253.844 269.298 cv
253.844 270.198 253.568 270.918 253.04 271.458 cv
252.512 271.998 251.804 272.262 250.928 272.262 cv
249.92 272.262 249.14 271.878 248.612 271.11 cv
248.072 270.342 247.808 269.214 247.808 267.738 cv
247.808 266.358 248.132 265.254 248.792 264.438 cv
249.44 263.622 250.328 263.202 251.432 263.202 cv
251.72 263.202 252.02 263.238 252.332 263.286 cv
252.632 263.346 252.944 263.43 253.28 263.55 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
204.429 259.2 mo
204.429 28.8 li
@
grestore
204.429 259.2 mo
204.429 255.2 li
f
204.429 259.2 mo
204.429 255.2 li
@
204.429 28.8 mo
204.429 32.8 li
f
204.429 28.8 mo
204.429 32.8 li
@
199.612 264.138 mo
199 264.138 198.544 264.438 198.232 265.038 cv
197.92 265.638 197.776 266.538 197.776 267.738 cv
197.776 268.938 197.92 269.838 198.232 270.438 cv
198.544 271.038 199 271.338 199.612 271.338 cv
200.224 271.338 200.68 271.038 200.992 270.438 cv
201.292 269.838 201.448 268.938 201.448 267.738 cv
201.448 266.538 201.292 265.638 200.992 265.038 cv
200.68 264.438 200.224 264.138 199.612 264.138 cv
199.612 263.202 mo
200.584 263.202 201.328 263.598 201.856 264.366 cv
202.372 265.146 202.636 266.274 202.636 267.738 cv
202.636 269.214 202.372 270.342 201.856 271.11 cv
201.328 271.878 200.584 272.262 199.612 272.262 cv
198.628 272.262 197.872 271.878 197.356 271.11 cv
196.84 270.342 196.588 269.214 196.588 267.738 cv
196.588 266.274 196.84 265.146 197.356 264.366 cv
197.872 263.598 198.628 263.202 199.612 263.202 cv
f
204.712 270.618 mo
205.948 270.618 li
205.948 272.106 li
204.712 272.106 li
204.712 270.618 li
f
208.228 263.358 mo
213.856 263.358 li
213.856 263.862 li
210.676 272.106 li
209.44 272.106 li
212.428 264.354 li
208.228 264.354 li
208.228 263.358 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
164.571 259.2 mo
164.571 28.8 li
@
grestore
164.571 259.2 mo
164.571 255.2 li
f
164.571 259.2 mo
164.571 255.2 li
@
164.571 28.8 mo
164.571 32.8 li
f
164.571 28.8 mo
164.571 32.8 li
@
159.653 264.138 mo
159.041 264.138 158.585 264.438 158.273 265.038 cv
157.961 265.638 157.817 266.538 157.817 267.738 cv
157.817 268.938 157.961 269.838 158.273 270.438 cv
158.585 271.038 159.041 271.338 159.653 271.338 cv
160.265 271.338 160.721 271.038 161.033 270.438 cv
161.333 269.838 161.489 268.938 161.489 267.738 cv
161.489 266.538 161.333 265.638 161.033 265.038 cv
160.721 264.438 160.265 264.138 159.653 264.138 cv
159.653 263.202 mo
160.625 263.202 161.369 263.598 161.897 264.366 cv
162.413 265.146 162.677 266.274 162.677 267.738 cv
162.677 269.214 162.413 270.342 161.897 271.11 cv
161.369 271.878 160.625 272.262 159.653 272.262 cv
158.669 272.262 157.913 271.878 157.397 271.11 cv
156.881 270.342 156.629 269.214 156.629 267.738 cv
156.629 266.274 156.881 265.146 157.397 264.366 cv
157.913 263.598 158.669 263.202 159.653 263.202 cv
f
164.753 270.618 mo
165.989 270.618 li
165.989 272.106 li
164.753 272.106 li
164.753 270.618 li
f
171.101 267.954 mo
170.537 267.954 170.093 268.11 169.769 268.41 cv
169.445 268.71 169.289 269.118 169.289 269.646 cv
169.289 270.174 169.445 270.594 169.769 270.894 cv
170.093 271.194 170.537 271.338 171.101 271.338 cv
171.653 271.338 172.097 271.194 172.421 270.882 cv
172.745 270.582 172.913 270.174 172.913 269.646 cv
172.913 269.118 172.745 268.71 172.433 268.41 cv
172.109 268.11 171.665 267.954 171.101 267.954 cv
169.913 267.45 mo
169.409 267.33 169.013 267.09 168.725 266.742 cv
168.437 266.394 168.305 265.974 168.305 265.47 cv
168.305 264.774 168.545 264.222 169.049 263.814 cv
169.541 263.406 170.225 263.202 171.101 263.202 cv
171.965 263.202 172.649 263.406 173.153 263.814 cv
173.645 264.222 173.897 264.774 173.897 265.47 cv
173.897 265.974 173.753 266.394 173.465 266.742 cv
173.177 267.09 172.793 267.33 172.289 267.45 cv
172.853 267.582 173.297 267.846 173.621 268.23 cv
173.933 268.614 174.101 269.094 174.101 269.646 cv
174.101 270.498 173.837 271.146 173.321 271.59 cv
172.793 272.046 172.061 272.262 171.101 272.262 cv
170.129 272.262 169.385 272.046 168.869 271.59 cv
168.353 271.146 168.101 270.498 168.101 269.646 cv
168.101 269.094 168.257 268.614 168.581 268.23 cv
168.893 267.846 169.337 267.582 169.913 267.45 cv
169.481 265.578 mo
169.481 266.034 169.613 266.394 169.901 266.646 cv
170.189 266.898 170.585 267.018 171.101 267.018 cv
171.605 267.018 172.001 266.898 172.289 266.646 cv
172.577 266.394 172.721 266.034 172.721 265.578 cv
172.721 265.122 172.577 264.774 172.289 264.522 cv
172.001 264.27 171.605 264.138 171.101 264.138 cv
170.585 264.138 170.189 264.27 169.901 264.522 cv
169.613 264.774 169.481 265.122 169.481 265.578 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
124.714 259.2 mo
124.714 28.8 li
@
grestore
124.714 259.2 mo
124.714 255.2 li
f
124.714 259.2 mo
124.714 255.2 li
@
124.714 28.8 mo
124.714 32.8 li
f
124.714 28.8 mo
124.714 32.8 li
@
119.804 264.138 mo
119.192 264.138 118.736 264.438 118.424 265.038 cv
118.112 265.638 117.968 266.538 117.968 267.738 cv
117.968 268.938 118.112 269.838 118.424 270.438 cv
118.736 271.038 119.192 271.338 119.804 271.338 cv
120.416 271.338 120.872 271.038 121.184 270.438 cv
121.484 269.838 121.64 268.938 121.64 267.738 cv
121.64 266.538 121.484 265.638 121.184 265.038 cv
120.872 264.438 120.416 264.138 119.804 264.138 cv
119.804 263.202 mo
120.776 263.202 121.52 263.598 122.048 264.366 cv
122.564 265.146 122.828 266.274 122.828 267.738 cv
122.828 269.214 122.564 270.342 122.048 271.11 cv
121.52 271.878 120.776 272.262 119.804 272.262 cv
118.82 272.262 118.064 271.878 117.548 271.11 cv
117.032 270.342 116.78 269.214 116.78 267.738 cv
116.78 266.274 117.032 265.146 117.548 264.366 cv
118.064 263.598 118.82 263.202 119.804 263.202 cv
f
124.904 270.618 mo
126.14 270.618 li
126.14 272.106 li
124.904 272.106 li
124.904 270.618 li
f
128.756 271.926 mo
128.756 270.846 li
129.044 270.99 129.344 271.098 129.656 271.17 cv
129.956 271.242 130.256 271.278 130.556 271.278 cv
131.324 271.278 131.924 271.026 132.332 270.498 cv
132.74 269.97 132.98 269.178 133.052 268.098 cv
132.812 268.434 132.524 268.698 132.188 268.878 cv
131.84 269.058 131.456 269.142 131.036 269.142 cv
130.148 269.142 129.452 268.878 128.948 268.35 cv
128.444 267.822 128.192 267.102 128.192 266.178 cv
128.192 265.29 128.456 264.57 128.984 264.018 cv
129.512 263.478 130.22 263.202 131.108 263.202 cv
132.116 263.202 132.896 263.598 133.424 264.366 cv
133.952 265.146 134.228 266.274 134.228 267.738 cv
134.228 269.13 133.892 270.222 133.244 271.038 cv
132.584 271.854 131.708 272.262 130.604 272.262 cv
130.304 272.262 130.004 272.226 129.704 272.178 cv
129.392 272.13 129.08 272.046 128.756 271.926 cv
131.108 268.218 mo
131.636 268.218 132.056 268.038 132.368 267.678 cv
132.68 267.318 132.836 266.814 132.836 266.178 cv
132.836 265.554 132.68 265.05 132.368 264.69 cv
132.056 264.33 131.636 264.138 131.108 264.138 cv
130.58 264.138 130.16 264.33 129.848 264.69 cv
129.536 265.05 129.38 265.554 129.38 266.178 cv
129.38 266.814 129.536 267.318 129.848 267.678 cv
130.16 268.038 130.58 268.218 131.108 268.218 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
84.8571 259.2 mo
84.8571 28.8 li
@
grestore
84.8571 259.2 mo
84.8571 255.2 li
f
84.8571 259.2 mo
84.8571 255.2 li
@
84.8571 28.8 mo
84.8571 32.8 li
f
84.8571 28.8 mo
84.8571 32.8 li
@
77.853 271.11 mo
79.785 271.11 li
79.785 264.438 li
77.685 264.858 li
77.685 263.778 li
79.7729 263.358 li
80.961 263.358 li
80.961 271.11 li
82.893 271.11 li
82.893 272.106 li
77.853 272.106 li
77.853 271.11 li
f
85.281 270.618 mo
86.517 270.618 li
86.517 272.106 li
85.281 272.106 li
85.281 270.618 li
f
91.6289 264.138 mo
91.0169 264.138 90.5609 264.438 90.2489 265.038 cv
89.9369 265.638 89.7929 266.538 89.7929 267.738 cv
89.7929 268.938 89.9369 269.838 90.2489 270.438 cv
90.5609 271.038 91.0169 271.338 91.6289 271.338 cv
92.2409 271.338 92.6969 271.038 93.0089 270.438 cv
93.3089 269.838 93.4649 268.938 93.4649 267.738 cv
93.4649 266.538 93.3089 265.638 93.0089 265.038 cv
92.6969 264.438 92.2409 264.138 91.6289 264.138 cv
91.6289 263.202 mo
92.6009 263.202 93.3449 263.598 93.8729 264.366 cv
94.3889 265.146 94.6529 266.274 94.6529 267.738 cv
94.6529 269.214 94.3889 270.342 93.8729 271.11 cv
93.3449 271.878 92.6009 272.262 91.6289 272.262 cv
90.6449 272.262 89.8889 271.878 89.3729 271.11 cv
88.8569 270.342 88.6049 269.214 88.6049 267.738 cv
88.6049 266.274 88.8569 265.146 89.3729 264.366 cv
89.8889 263.598 90.6449 263.202 91.6289 263.202 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 259.2 mo
45 28.8 li
@
grestore
45 259.2 mo
45 255.2 li
f
45 259.2 mo
45 255.2 li
@
45 28.8 mo
45 32.8 li
f
45 28.8 mo
45 32.8 li
@
38.1521 270.954 mo
40.0841 270.954 li
40.0841 264.282 li
37.9841 264.702 li
37.9841 263.622 li
40.0721 263.202 li
41.2601 263.202 li
41.2601 270.954 li
43.1921 270.954 li
43.1921 271.95 li
38.1521 271.95 li
38.1521 270.954 li
f
45.5801 270.462 mo
46.8161 270.462 li
46.8161 271.95 li
45.5801 271.95 li
45.5801 270.462 li
f
49.6 270.954 mo
51.532 270.954 li
51.532 264.282 li
49.432 264.702 li
49.432 263.622 li
51.52 263.202 li
52.708 263.202 li
52.708 270.954 li
54.64 270.954 li
54.64 271.95 li
49.6 271.95 li
49.6 270.954 li
f
163.317 278.252 mo
163.317 285.056 li
164.745 285.056 li
165.945 285.056 166.833 284.792 167.397 284.24 cv
167.949 283.688 168.237 282.824 168.237 281.648 cv
168.237 280.472 167.949 279.62 167.397 279.068 cv
166.833 278.528 165.945 278.252 164.745 278.252 cv
163.317 278.252 li
162.129 277.28 mo
164.565 277.28 li
166.257 277.28 167.505 277.64 168.297 278.336 cv
169.089 279.044 169.485 280.148 169.485 281.648 cv
169.485 283.16 169.077 284.264 168.285 284.972 cv
167.493 285.68 166.245 286.028 164.565 286.028 cv
162.129 286.028 li
162.129 277.28 li
f
175.125 280.472 mo
175.005 280.4 174.873 280.352 174.729 280.316 cv
174.585 280.292 174.429 280.268 174.261 280.268 cv
173.649 280.268 173.181 280.472 172.857 280.868 cv
172.521 281.264 172.365 281.828 172.365 282.572 cv
172.365 286.028 li
171.285 286.028 li
171.285 279.464 li
172.365 279.464 li
172.365 280.484 li
172.581 280.088 172.881 279.788 173.241 279.596 cv
173.601 279.404 174.045 279.308 174.573 279.308 cv
174.645 279.308 174.729 279.32 174.825 279.32 cv
174.909 279.332 175.005 279.344 175.125 279.368 cv
175.125 280.472 li
f
178.797 280.22 mo
178.221 280.22 177.765 280.448 177.429 280.904 cv
177.093 281.36 176.925 281.972 176.925 282.752 cv
176.925 283.544 177.081 284.156 177.417 284.612 cv
177.753 285.068 178.209 285.284 178.797 285.284 cv
179.373 285.284 179.829 285.068 180.165 284.612 cv
180.501 284.156 180.669 283.544 180.669 282.752 cv
180.669 281.984 180.501 281.36 180.165 280.904 cv
179.829 280.448 179.373 280.22 178.797 280.22 cv
178.797 279.308 mo
179.733 279.308 180.465 279.62 181.005 280.22 cv
181.533 280.832 181.809 281.672 181.809 282.752 cv
181.809 283.832 181.533 284.672 181.005 285.272 cv
180.465 285.884 179.733 286.184 178.797 286.184 cv
177.849 286.184 177.105 285.884 176.577 285.272 cv
176.049 284.672 175.785 283.832 175.785 282.752 cv
175.785 281.672 176.049 280.832 176.577 280.22 cv
177.105 279.62 177.849 279.308 178.797 279.308 cv
f
184.641 285.044 mo
184.641 288.512 li
183.561 288.512 li
183.561 279.464 li
184.641 279.464 li
184.641 280.46 li
184.857 280.076 185.145 279.788 185.493 279.596 cv
185.841 279.404 186.261 279.308 186.741 279.308 cv
187.533 279.308 188.181 279.632 188.685 280.256 cv
189.177 280.892 189.429 281.72 189.429 282.752 cv
189.429 283.784 189.177 284.624 188.685 285.248 cv
188.181 285.872 187.533 286.184 186.741 286.184 cv
186.261 286.184 185.841 286.088 185.493 285.908 cv
185.145 285.728 184.857 285.44 184.641 285.044 cv
188.313 282.752 mo
188.313 281.96 188.145 281.348 187.821 280.892 cv
187.485 280.436 187.041 280.208 186.477 280.208 cv
185.901 280.208 185.457 280.436 185.133 280.892 cv
184.797 281.348 184.641 281.96 184.641 282.752 cv
184.641 283.544 184.797 284.168 185.133 284.624 cv
185.457 285.08 185.901 285.296 186.477 285.296 cv
187.041 285.296 187.485 285.08 187.821 284.624 cv
188.145 284.168 188.313 283.544 188.313 282.752 cv
f
193.761 280.22 mo
193.185 280.22 192.729 280.448 192.393 280.904 cv
192.057 281.36 191.889 281.972 191.889 282.752 cv
191.889 283.544 192.045 284.156 192.381 284.612 cv
192.717 285.068 193.173 285.284 193.761 285.284 cv
194.337 285.284 194.793 285.068 195.129 284.612 cv
195.465 284.156 195.633 283.544 195.633 282.752 cv
195.633 281.984 195.465 281.36 195.129 280.904 cv
194.793 280.448 194.337 280.22 193.761 280.22 cv
193.761 279.308 mo
194.697 279.308 195.429 279.62 195.969 280.22 cv
196.497 280.832 196.773 281.672 196.773 282.752 cv
196.773 283.832 196.497 284.672 195.969 285.272 cv
195.429 285.884 194.697 286.184 193.761 286.184 cv
192.813 286.184 192.069 285.884 191.541 285.272 cv
191.013 284.672 190.749 283.832 190.749 282.752 cv
190.749 281.672 191.013 280.832 191.541 280.22 cv
192.069 279.62 192.813 279.308 193.761 279.308 cv
f
198.453 283.436 mo
198.453 279.464 li
199.533 279.464 li
199.533 283.4 li
199.533 284.024 199.653 284.48 199.893 284.792 cv
200.133 285.104 200.493 285.26 200.985 285.26 cv
201.561 285.26 202.029 285.08 202.365 284.708 cv
202.701 284.336 202.869 283.832 202.869 283.184 cv
202.869 279.464 li
203.949 279.464 li
203.949 286.028 li
202.869 286.028 li
202.869 285.02 li
202.605 285.428 202.293 285.716 201.957 285.908 cv
201.609 286.088 201.213 286.184 200.757 286.184 cv
200.001 286.184 199.425 285.956 199.041 285.488 cv
198.645 285.032 198.453 284.348 198.453 283.436 cv
f
207.237 277.604 mo
207.237 279.464 li
209.457 279.464 li
209.457 280.304 li
207.237 280.304 li
207.237 283.868 li
207.237 284.408 207.309 284.756 207.453 284.9 cv
207.597 285.056 207.897 285.128 208.353 285.128 cv
209.457 285.128 li
209.457 286.028 li
208.353 286.028 li
207.513 286.028 206.937 285.872 206.625 285.56 cv
206.313 285.248 206.157 284.684 206.157 283.868 cv
206.157 280.304 li
205.365 280.304 li
205.365 279.464 li
206.157 279.464 li
206.157 277.604 li
207.237 277.604 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 259.2 mo
324 259.2 li
@
grestore
45 259.2 mo
49 259.2 li
f
45 259.2 mo
49 259.2 li
@
324 259.2 mo
320 259.2 li
f
324 259.2 mo
320 259.2 li
@
19.6754 255.599 mo
19.0634 255.599 18.6074 255.899 18.2954 256.499 cv
17.9834 257.099 17.8394 257.999 17.8394 259.199 cv
17.8394 260.399 17.9834 261.299 18.2954 261.899 cv
18.6074 262.499 19.0634 262.799 19.6754 262.799 cv
20.2874 262.799 20.7434 262.499 21.0554 261.899 cv
21.3554 261.299 21.5114 260.399 21.5114 259.199 cv
21.5114 257.999 21.3554 257.099 21.0554 256.499 cv
20.7434 255.899 20.2874 255.599 19.6754 255.599 cv
19.6754 254.663 mo
20.6474 254.663 21.3914 255.059 21.9194 255.827 cv
22.4354 256.607 22.6994 257.735 22.6994 259.199 cv
22.6994 260.675 22.4354 261.803 21.9194 262.571 cv
21.3914 263.339 20.6474 263.723 19.6754 263.723 cv
18.6914 263.723 17.9354 263.339 17.4194 262.571 cv
16.9034 261.803 16.6514 260.675 16.6514 259.199 cv
16.6514 257.735 16.9034 256.607 17.4194 255.827 cv
17.9354 255.059 18.6914 254.663 19.6754 254.663 cv
f
24.7754 262.079 mo
26.0114 262.079 li
26.0114 263.567 li
24.7754 263.567 li
24.7754 262.079 li
f
28.6033 254.819 mo
33.2473 254.819 li
33.2473 255.815 li
29.6833 255.815 li
29.6833 257.963 li
29.8513 257.903 30.0313 257.855 30.1993 257.831 cv
30.3673 257.807 30.5473 257.783 30.7153 257.783 cv
31.6873 257.783 32.4553 258.059 33.0313 258.587 cv
33.6073 259.127 33.8953 259.847 33.8953 260.759 cv
33.8953 261.707 33.5953 262.439 33.0073 262.955 cv
32.4193 263.471 31.5913 263.723 30.5353 263.723 cv
30.1633 263.723 29.7913 263.687 29.4073 263.639 cv
29.0233 263.579 28.6393 263.495 28.2313 263.363 cv
28.2313 262.175 li
28.5793 262.367 28.9393 262.511 29.3233 262.607 cv
29.6953 262.703 30.0913 262.739 30.5113 262.739 cv
31.1833 262.739 31.7233 262.571 32.1193 262.211 cv
32.5033 261.851 32.7073 261.371 32.7073 260.759 cv
32.7073 260.159 32.5033 259.679 32.1193 259.319 cv
31.7233 258.959 31.1833 258.779 30.5113 258.779 cv
30.1993 258.779 29.8753 258.815 29.5633 258.887 cv
29.2513 258.959 28.9273 259.067 28.6033 259.211 cv
28.6033 254.819 li
f
38.7553 255.599 mo
38.1433 255.599 37.6873 255.899 37.3753 256.499 cv
37.0633 257.099 36.9193 257.999 36.9193 259.199 cv
36.9193 260.399 37.0633 261.299 37.3753 261.899 cv
37.6873 262.499 38.1433 262.799 38.7553 262.799 cv
39.3673 262.799 39.8233 262.499 40.1353 261.899 cv
40.4353 261.299 40.5913 260.399 40.5913 259.199 cv
40.5913 257.999 40.4353 257.099 40.1353 256.499 cv
39.8233 255.899 39.3673 255.599 38.7553 255.599 cv
38.7553 254.663 mo
39.7273 254.663 40.4713 255.059 40.9993 255.827 cv
41.5153 256.607 41.7793 257.735 41.7793 259.199 cv
41.7793 260.675 41.5153 261.803 40.9993 262.571 cv
40.4713 263.339 39.7273 263.723 38.7553 263.723 cv
37.7713 263.723 37.0153 263.339 36.4993 262.571 cv
35.9833 261.803 35.7313 260.675 35.7313 259.199 cv
35.7313 257.735 35.9833 256.607 36.4993 255.827 cv
37.0153 255.059 37.7713 254.663 38.7553 254.663 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 220.8 mo
324 220.8 li
@
grestore
45 220.8 mo
49 220.8 li
f
45 220.8 mo
49 220.8 li
@
324 220.8 mo
320 220.8 li
f
324 220.8 mo
320 220.8 li
@
20.0816 217.199 mo
19.4696 217.199 19.0136 217.499 18.7016 218.099 cv
18.3896 218.699 18.2456 219.599 18.2456 220.799 cv
18.2456 221.999 18.3896 222.899 18.7016 223.499 cv
19.0136 224.099 19.4696 224.399 20.0816 224.399 cv
20.6936 224.399 21.1496 224.099 21.4616 223.499 cv
21.7616 222.899 21.9176 221.999 21.9176 220.799 cv
21.9176 219.599 21.7616 218.699 21.4616 218.099 cv
21.1496 217.499 20.6936 217.199 20.0816 217.199 cv
20.0816 216.263 mo
21.0536 216.263 21.7976 216.659 22.3256 217.427 cv
22.8416 218.207 23.1056 219.335 23.1056 220.799 cv
23.1056 222.275 22.8416 223.403 22.3256 224.171 cv
21.7976 224.939 21.0536 225.323 20.0816 225.323 cv
19.0976 225.323 18.3416 224.939 17.8256 224.171 cv
17.3096 223.403 17.0576 222.275 17.0576 220.799 cv
17.0576 219.335 17.3096 218.207 17.8256 217.427 cv
18.3416 216.659 19.0976 216.263 20.0816 216.263 cv
f
25.1816 223.679 mo
26.4176 223.679 li
26.4176 225.167 li
25.1816 225.167 li
25.1816 223.679 li
f
29.0096 216.419 mo
33.6536 216.419 li
33.6536 217.415 li
30.0896 217.415 li
30.0896 219.563 li
30.2576 219.503 30.4376 219.455 30.6056 219.431 cv
30.7736 219.407 30.9536 219.383 31.1216 219.383 cv
32.0936 219.383 32.8616 219.659 33.4376 220.187 cv
34.0136 220.727 34.3016 221.447 34.3016 222.359 cv
34.3016 223.307 34.0016 224.039 33.4136 224.555 cv
32.8256 225.071 31.9976 225.323 30.9416 225.323 cv
30.5696 225.323 30.1976 225.287 29.8136 225.239 cv
29.4296 225.179 29.0456 225.095 28.6376 224.963 cv
28.6376 223.775 li
28.9856 223.967 29.3456 224.111 29.7296 224.207 cv
30.1016 224.303 30.4976 224.339 30.9176 224.339 cv
31.5896 224.339 32.1296 224.171 32.5256 223.811 cv
32.9096 223.451 33.1136 222.971 33.1136 222.359 cv
33.1136 221.759 32.9096 221.279 32.5256 220.919 cv
32.1296 220.559 31.5896 220.379 30.9176 220.379 cv
30.6056 220.379 30.2816 220.415 29.9696 220.487 cv
29.6576 220.559 29.3336 220.667 29.0096 220.811 cv
29.0096 216.419 li
f
37.6496 224.171 mo
41.7776 224.171 li
41.7776 225.167 li
36.2216 225.167 li
36.2216 224.171 li
36.6656 223.715 37.2776 223.091 38.0576 222.299 cv
38.8256 221.519 39.3176 221.015 39.5216 220.787 cv
39.9056 220.367 40.1696 220.007 40.3136 219.707 cv
40.4576 219.419 40.5416 219.119 40.5416 218.831 cv
40.5416 218.375 40.3736 217.991 40.0496 217.703 cv
39.7256 217.415 39.3056 217.259 38.7776 217.259 cv
38.4056 217.259 38.0096 217.331 37.6016 217.451 cv
37.1936 217.583 36.7496 217.775 36.2816 218.039 cv
36.2816 216.839 li
36.7616 216.647 37.2056 216.503 37.6136 216.407 cv
38.0216 216.311 38.4056 216.263 38.7536 216.263 cv
39.6536 216.263 40.3736 216.491 40.9136 216.947 cv
41.4536 217.403 41.7296 218.003 41.7296 218.759 cv
41.7296 219.119 41.6576 219.467 41.5256 219.779 cv
41.3936 220.103 41.1536 220.487 40.7936 220.919 cv
40.6976 221.039 40.3856 221.363 39.8576 221.903 cv
39.3296 222.443 38.5976 223.199 37.6496 224.171 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 182.4 mo
324 182.4 li
@
grestore
45 182.4 mo
49 182.4 li
f
45 182.4 mo
49 182.4 li
@
324 182.4 mo
320 182.4 li
f
324 182.4 mo
320 182.4 li
@
19.5504 178.799 mo
18.9384 178.799 18.4824 179.099 18.1704 179.699 cv
17.8584 180.299 17.7144 181.199 17.7144 182.399 cv
17.7144 183.599 17.8584 184.499 18.1704 185.099 cv
18.4824 185.699 18.9384 185.999 19.5504 185.999 cv
20.1624 185.999 20.6184 185.699 20.9304 185.099 cv
21.2304 184.499 21.3864 183.599 21.3864 182.399 cv
21.3864 181.199 21.2304 180.299 20.9304 179.699 cv
20.6184 179.099 20.1624 178.799 19.5504 178.799 cv
19.5504 177.863 mo
20.5224 177.863 21.2664 178.259 21.7944 179.027 cv
22.3104 179.807 22.5744 180.935 22.5744 182.399 cv
22.5744 183.875 22.3104 185.003 21.7944 185.771 cv
21.2664 186.539 20.5224 186.923 19.5504 186.923 cv
18.5664 186.923 17.8104 186.539 17.2944 185.771 cv
16.7784 185.003 16.5264 183.875 16.5264 182.399 cv
16.5264 180.935 16.7784 179.807 17.2944 179.027 cv
17.8104 178.259 18.5664 177.863 19.5504 177.863 cv
f
24.6504 185.279 mo
25.8864 185.279 li
25.8864 186.767 li
24.6504 186.767 li
24.6504 185.279 li
f
28.4783 178.019 mo
33.1223 178.019 li
33.1223 179.015 li
29.5583 179.015 li
29.5583 181.163 li
29.7263 181.103 29.9063 181.055 30.0743 181.031 cv
30.2423 181.007 30.4223 180.983 30.5903 180.983 cv
31.5623 180.983 32.3303 181.259 32.9063 181.787 cv
33.4823 182.327 33.7703 183.047 33.7703 183.959 cv
33.7703 184.907 33.4703 185.639 32.8823 186.155 cv
32.2943 186.671 31.4663 186.923 30.4103 186.923 cv
30.0383 186.923 29.6663 186.887 29.2823 186.839 cv
28.8983 186.779 28.5143 186.695 28.1063 186.563 cv
28.1063 185.375 li
28.4543 185.567 28.8143 185.711 29.1983 185.807 cv
29.5703 185.903 29.9663 185.939 30.3863 185.939 cv
31.0583 185.939 31.5983 185.771 31.9943 185.411 cv
32.3783 185.051 32.5823 184.571 32.5823 183.959 cv
32.5823 183.359 32.3783 182.879 31.9943 182.519 cv
31.5983 182.159 31.0583 181.979 30.3863 181.979 cv
30.0743 181.979 29.7503 182.015 29.4383 182.087 cv
29.1263 182.159 28.8023 182.267 28.4783 182.411 cv
28.4783 178.019 li
f
39.3503 179.051 mo
36.3623 183.719 li
39.3503 183.719 li
39.3503 179.051 li
39.0383 178.019 mo
40.5263 178.019 li
40.5263 183.719 li
41.7743 183.719 li
41.7743 184.703 li
40.5263 184.703 li
40.5263 186.767 li
39.3503 186.767 li
39.3503 184.703 li
35.4023 184.703 li
35.4023 183.563 li
39.0383 178.019 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 144 mo
324 144 li
@
grestore
45 144 mo
49 144 li
f
45 144 mo
49 144 li
@
324 144 mo
320 144 li
f
324 144 mo
320 144 li
@
19.6441 140.399 mo
19.0321 140.399 18.5761 140.699 18.2641 141.299 cv
17.9521 141.899 17.8081 142.799 17.8081 143.999 cv
17.8081 145.199 17.9521 146.099 18.2641 146.699 cv
18.5761 147.299 19.0321 147.599 19.6441 147.599 cv
20.2561 147.599 20.7121 147.299 21.0241 146.699 cv
21.3241 146.099 21.4801 145.199 21.4801 143.999 cv
21.4801 142.799 21.3241 141.899 21.0241 141.299 cv
20.7121 140.699 20.2561 140.399 19.6441 140.399 cv
19.6441 139.463 mo
20.6161 139.463 21.3601 139.859 21.8881 140.627 cv
22.4041 141.407 22.6681 142.535 22.6681 143.999 cv
22.6681 145.475 22.4041 146.603 21.8881 147.371 cv
21.3601 148.139 20.6161 148.523 19.6441 148.523 cv
18.6601 148.523 17.9041 148.139 17.3881 147.371 cv
16.8721 146.603 16.6201 145.475 16.6201 143.999 cv
16.6201 142.535 16.8721 141.407 17.3881 140.627 cv
17.9041 139.859 18.6601 139.463 19.6441 139.463 cv
f
24.7441 146.879 mo
25.9801 146.879 li
25.9801 148.367 li
24.7441 148.367 li
24.7441 146.879 li
f
28.5721 139.619 mo
33.2161 139.619 li
33.2161 140.615 li
29.6521 140.615 li
29.6521 142.763 li
29.8201 142.703 30.0001 142.655 30.1681 142.631 cv
30.3361 142.607 30.5161 142.583 30.6841 142.583 cv
31.6561 142.583 32.4241 142.859 33.0001 143.387 cv
33.5761 143.927 33.8641 144.647 33.8641 145.559 cv
33.8641 146.507 33.5641 147.239 32.9761 147.755 cv
32.3881 148.271 31.5601 148.523 30.5041 148.523 cv
30.1321 148.523 29.7601 148.487 29.3761 148.439 cv
28.9921 148.379 28.6081 148.295 28.2001 148.163 cv
28.2001 146.975 li
28.5481 147.167 28.9081 147.311 29.2921 147.407 cv
29.6641 147.503 30.0601 147.539 30.4801 147.539 cv
31.1521 147.539 31.6921 147.371 32.0881 147.011 cv
32.4721 146.651 32.6761 146.171 32.6761 145.559 cv
32.6761 144.959 32.4721 144.479 32.0881 144.119 cv
31.6921 143.759 31.1521 143.579 30.4801 143.579 cv
30.1681 143.579 29.8441 143.615 29.5321 143.687 cv
29.2201 143.759 28.8961 143.867 28.5721 144.011 cv
28.5721 139.619 li
f
38.8681 143.519 mo
38.3401 143.519 37.9201 143.711 37.6081 144.071 cv
37.2961 144.431 37.1401 144.935 37.1401 145.559 cv
37.1401 146.195 37.2961 146.699 37.6081 147.059 cv
37.9201 147.419 38.3401 147.599 38.8681 147.599 cv
39.3961 147.599 39.8161 147.419 40.1281 147.059 cv
40.4401 146.699 40.5961 146.195 40.5961 145.559 cv
40.5961 144.935 40.4401 144.431 40.1281 144.071 cv
39.8161 143.711 39.3961 143.519 38.8681 143.519 cv
41.2201 139.811 mo
41.2201 140.891 li
40.9201 140.747 40.6201 140.639 40.3201 140.567 cv
40.0081 140.495 39.7081 140.459 39.4201 140.459 cv
38.6281 140.459 38.0281 140.723 37.6201 141.251 cv
37.2121 141.779 36.9721 142.583 36.9241 143.639 cv
37.1521 143.303 37.4401 143.039 37.7881 142.859 cv
38.1361 142.679 38.5201 142.583 38.9401 142.583 cv
39.8161 142.583 40.5121 142.859 41.0161 143.387 cv
41.5201 143.915 41.7841 144.647 41.7841 145.559 cv
41.7841 146.459 41.5081 147.179 40.9801 147.719 cv
40.4521 148.259 39.7441 148.523 38.8681 148.523 cv
37.8601 148.523 37.0801 148.139 36.5521 147.371 cv
36.0121 146.603 35.7481 145.475 35.7481 143.999 cv
35.7481 142.619 36.0721 141.515 36.7321 140.699 cv
37.3801 139.883 38.2681 139.463 39.3721 139.463 cv
39.6601 139.463 39.9601 139.499 40.2721 139.547 cv
40.5721 139.607 40.8841 139.691 41.2201 139.811 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 105.6 mo
324 105.6 li
@
grestore
45 105.6 mo
49 105.6 li
f
45 105.6 mo
49 105.6 li
@
324 105.6 mo
320 105.6 li
f
324 105.6 mo
320 105.6 li
@
19.7066 101.999 mo
19.0946 101.999 18.6386 102.299 18.3266 102.899 cv
18.0146 103.499 17.8706 104.399 17.8706 105.599 cv
17.8706 106.799 18.0146 107.699 18.3266 108.299 cv
18.6386 108.899 19.0946 109.199 19.7066 109.199 cv
20.3186 109.199 20.7746 108.899 21.0866 108.299 cv
21.3866 107.699 21.5426 106.799 21.5426 105.599 cv
21.5426 104.399 21.3866 103.499 21.0866 102.899 cv
20.7746 102.299 20.3186 101.999 19.7066 101.999 cv
19.7066 101.063 mo
20.6786 101.063 21.4226 101.459 21.9506 102.227 cv
22.4666 103.007 22.7306 104.135 22.7306 105.599 cv
22.7306 107.075 22.4666 108.203 21.9506 108.971 cv
21.4226 109.739 20.6786 110.123 19.7066 110.123 cv
18.7226 110.123 17.9666 109.739 17.4506 108.971 cv
16.9346 108.203 16.6826 107.075 16.6826 105.599 cv
16.6826 104.135 16.9346 103.007 17.4506 102.227 cv
17.9666 101.459 18.7226 101.063 19.7066 101.063 cv
f
24.8066 108.479 mo
26.0426 108.479 li
26.0426 109.967 li
24.8066 109.967 li
24.8066 108.479 li
f
28.6346 101.219 mo
33.2786 101.219 li
33.2786 102.215 li
29.7146 102.215 li
29.7146 104.363 li
29.8826 104.303 30.0626 104.255 30.2306 104.231 cv
30.3986 104.207 30.5786 104.183 30.7466 104.183 cv
31.7186 104.183 32.4866 104.459 33.0626 104.987 cv
33.6386 105.527 33.9266 106.247 33.9266 107.159 cv
33.9266 108.107 33.6266 108.839 33.0386 109.355 cv
32.4506 109.871 31.6226 110.123 30.5666 110.123 cv
30.1946 110.123 29.8226 110.087 29.4386 110.039 cv
29.0546 109.979 28.6706 109.895 28.2626 109.763 cv
28.2626 108.575 li
28.6106 108.767 28.9706 108.911 29.3546 109.007 cv
29.7266 109.103 30.1226 109.139 30.5426 109.139 cv
31.2146 109.139 31.7546 108.971 32.1506 108.611 cv
32.5346 108.251 32.7386 107.771 32.7386 107.159 cv
32.7386 106.559 32.5346 106.079 32.1506 105.719 cv
31.7546 105.359 31.2146 105.179 30.5426 105.179 cv
30.2306 105.179 29.9066 105.215 29.5946 105.287 cv
29.2826 105.359 28.9586 105.467 28.6346 105.611 cv
28.6346 101.219 li
f
38.7866 105.815 mo
38.2226 105.815 37.7786 105.971 37.4546 106.271 cv
37.1306 106.571 36.9746 106.979 36.9746 107.507 cv
36.9746 108.035 37.1306 108.455 37.4546 108.755 cv
37.7786 109.055 38.2226 109.199 38.7866 109.199 cv
39.3386 109.199 39.7826 109.055 40.1066 108.743 cv
40.4306 108.443 40.5986 108.035 40.5986 107.507 cv
40.5986 106.979 40.4306 106.571 40.1186 106.271 cv
39.7946 105.971 39.3506 105.815 38.7866 105.815 cv
37.5986 105.311 mo
37.0946 105.191 36.6986 104.951 36.4106 104.603 cv
36.1226 104.255 35.9906 103.835 35.9906 103.331 cv
35.9906 102.635 36.2306 102.083 36.7346 101.675 cv
37.2266 101.267 37.9106 101.063 38.7866 101.063 cv
39.6506 101.063 40.3346 101.267 40.8386 101.675 cv
41.3306 102.083 41.5826 102.635 41.5826 103.331 cv
41.5826 103.835 41.4386 104.255 41.1506 104.603 cv
40.8626 104.951 40.4786 105.191 39.9746 105.311 cv
40.5386 105.443 40.9826 105.707 41.3066 106.091 cv
41.6186 106.475 41.7866 106.955 41.7866 107.507 cv
41.7866 108.359 41.5226 109.007 41.0066 109.451 cv
40.4786 109.907 39.7466 110.123 38.7866 110.123 cv
37.8146 110.123 37.0706 109.907 36.5546 109.451 cv
36.0386 109.007 35.7866 108.359 35.7866 107.507 cv
35.7866 106.955 35.9426 106.475 36.2666 106.091 cv
36.5786 105.707 37.0226 105.443 37.5986 105.311 cv
37.1666 103.439 mo
37.1666 103.895 37.2986 104.255 37.5866 104.507 cv
37.8746 104.759 38.2706 104.879 38.7866 104.879 cv
39.2906 104.879 39.6866 104.759 39.9746 104.507 cv
40.2626 104.255 40.4066 103.895 40.4066 103.439 cv
40.4066 102.983 40.2626 102.635 39.9746 102.383 cv
39.6866 102.131 39.2906 101.999 38.7866 101.999 cv
38.2706 101.999 37.8746 102.131 37.5866 102.383 cv
37.2986 102.635 37.1666 102.983 37.1666 103.439 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 67.2 mo
324 67.2 li
@
grestore
45 67.2 mo
49 67.2 li
f
45 67.2 mo
49 67.2 li
@
324 67.2 mo
320 67.2 li
f
324 67.2 mo
320 67.2 li
@
19.6754 63.5992 mo
19.0634 63.5992 18.6074 63.8992 18.2954 64.4992 cv
17.9834 65.0992 17.8394 65.9992 17.8394 67.1992 cv
17.8394 68.3992 17.9834 69.2992 18.2954 69.8992 cv
18.6074 70.4992 19.0634 70.7992 19.6754 70.7992 cv
20.2874 70.7992 20.7434 70.4992 21.0554 69.8992 cv
21.3554 69.2992 21.5114 68.3992 21.5114 67.1992 cv
21.5114 65.9992 21.3554 65.0992 21.0554 64.4992 cv
20.7434 63.8992 20.2874 63.5992 19.6754 63.5992 cv
19.6754 62.6632 mo
20.6474 62.6632 21.3914 63.0592 21.9194 63.8272 cv
22.4354 64.6072 22.6994 65.7352 22.6994 67.1992 cv
22.6994 68.6752 22.4354 69.8032 21.9194 70.5712 cv
21.3914 71.3392 20.6474 71.7232 19.6754 71.7232 cv
18.6914 71.7232 17.9354 71.3392 17.4194 70.5712 cv
16.9034 69.8032 16.6514 68.6752 16.6514 67.1992 cv
16.6514 65.7352 16.9034 64.6072 17.4194 63.8272 cv
17.9354 63.0592 18.6914 62.6632 19.6754 62.6632 cv
f
24.7754 70.0792 mo
26.0114 70.0792 li
26.0114 71.5672 li
24.7754 71.5672 li
24.7754 70.0792 li
f
31.2673 66.7192 mo
30.7393 66.7192 30.3193 66.9112 30.0073 67.2712 cv
29.6953 67.6312 29.5393 68.1352 29.5393 68.7592 cv
29.5393 69.3952 29.6953 69.8992 30.0073 70.2592 cv
30.3193 70.6192 30.7393 70.7992 31.2673 70.7992 cv
31.7953 70.7992 32.2153 70.6192 32.5273 70.2592 cv
32.8393 69.8992 32.9953 69.3952 32.9953 68.7592 cv
32.9953 68.1352 32.8393 67.6312 32.5273 67.2712 cv
32.2153 66.9112 31.7953 66.7192 31.2673 66.7192 cv
33.6193 63.0112 mo
33.6193 64.0912 li
33.3193 63.9472 33.0193 63.8392 32.7193 63.7672 cv
32.4073 63.6952 32.1073 63.6592 31.8193 63.6592 cv
31.0273 63.6592 30.4273 63.9232 30.0193 64.4512 cv
29.6113 64.9792 29.3713 65.7832 29.3233 66.8392 cv
29.5513 66.5032 29.8393 66.2392 30.1873 66.0592 cv
30.5353 65.8792 30.9193 65.7832 31.3393 65.7832 cv
32.2153 65.7832 32.9113 66.0592 33.4153 66.5872 cv
33.9193 67.1152 34.1833 67.8472 34.1833 68.7592 cv
34.1833 69.6592 33.9073 70.3792 33.3793 70.9192 cv
32.8513 71.4592 32.1433 71.7232 31.2673 71.7232 cv
30.2593 71.7232 29.4793 71.3392 28.9513 70.5712 cv
28.4113 69.8032 28.1473 68.6752 28.1473 67.1992 cv
28.1473 65.8192 28.4713 64.7152 29.1313 63.8992 cv
29.7793 63.0832 30.6673 62.6632 31.7713 62.6632 cv
32.0593 62.6632 32.3593 62.6992 32.6713 62.7472 cv
32.9713 62.8072 33.2833 62.8912 33.6193 63.0112 cv
f
38.7553 63.5992 mo
38.1433 63.5992 37.6873 63.8992 37.3753 64.4992 cv
37.0633 65.0992 36.9193 65.9992 36.9193 67.1992 cv
36.9193 68.3992 37.0633 69.2992 37.3753 69.8992 cv
37.6873 70.4992 38.1433 70.7992 38.7553 70.7992 cv
39.3673 70.7992 39.8233 70.4992 40.1353 69.8992 cv
40.4353 69.2992 40.5913 68.3992 40.5913 67.1992 cv
40.5913 65.9992 40.4353 65.0992 40.1353 64.4992 cv
39.8233 63.8992 39.3673 63.5992 38.7553 63.5992 cv
38.7553 62.6632 mo
39.7273 62.6632 40.4713 63.0592 40.9993 63.8272 cv
41.5153 64.6072 41.7793 65.7352 41.7793 67.1992 cv
41.7793 68.6752 41.5153 69.8032 40.9993 70.5712 cv
40.4713 71.3392 39.7273 71.7232 38.7553 71.7232 cv
37.7713 71.7232 37.0153 71.3392 36.4993 70.5712 cv
35.9833 69.8032 35.7313 68.6752 35.7313 67.1992 cv
35.7313 65.7352 35.9833 64.6072 36.4993 63.8272 cv
37.0153 63.0592 37.7713 62.6632 38.7553 62.6632 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 28.8 mo
324 28.8 li
@
grestore
45 28.8 mo
49 28.8 li
f
45 28.8 mo
49 28.8 li
@
324 28.8 mo
320 28.8 li
f
324 28.8 mo
320 28.8 li
@
20.0816 25.1992 mo
19.4696 25.1992 19.0136 25.4992 18.7016 26.0992 cv
18.3896 26.6992 18.2456 27.5992 18.2456 28.7992 cv
18.2456 29.9992 18.3896 30.8992 18.7016 31.4992 cv
19.0136 32.0992 19.4696 32.3992 20.0816 32.3992 cv
20.6936 32.3992 21.1496 32.0992 21.4616 31.4992 cv
21.7616 30.8992 21.9176 29.9992 21.9176 28.7992 cv
21.9176 27.5992 21.7616 26.6992 21.4616 26.0992 cv
21.1496 25.4992 20.6936 25.1992 20.0816 25.1992 cv
20.0816 24.2632 mo
21.0536 24.2632 21.7976 24.6592 22.3256 25.4272 cv
22.8416 26.2072 23.1056 27.3352 23.1056 28.7992 cv
23.1056 30.2752 22.8416 31.4032 22.3256 32.1712 cv
21.7976 32.9392 21.0536 33.3232 20.0816 33.3232 cv
19.0976 33.3232 18.3416 32.9392 17.8256 32.1712 cv
17.3096 31.4032 17.0576 30.2752 17.0576 28.7992 cv
17.0576 27.3352 17.3096 26.2072 17.8256 25.4272 cv
18.3416 24.6592 19.0976 24.2632 20.0816 24.2632 cv
f
25.1816 31.6792 mo
26.4176 31.6792 li
26.4176 33.1672 li
25.1816 33.1672 li
25.1816 31.6792 li
f
31.6736 28.3192 mo
31.1456 28.3192 30.7256 28.5112 30.4136 28.8712 cv
30.1016 29.2312 29.9456 29.7352 29.9456 30.3592 cv
29.9456 30.9952 30.1016 31.4992 30.4136 31.8592 cv
30.7256 32.2192 31.1456 32.3992 31.6736 32.3992 cv
32.2016 32.3992 32.6216 32.2192 32.9336 31.8592 cv
33.2456 31.4992 33.4016 30.9952 33.4016 30.3592 cv
33.4016 29.7352 33.2456 29.2312 32.9336 28.8712 cv
32.6216 28.5112 32.2016 28.3192 31.6736 28.3192 cv
34.0256 24.6112 mo
34.0256 25.6912 li
33.7256 25.5472 33.4256 25.4392 33.1256 25.3672 cv
32.8136 25.2952 32.5136 25.2592 32.2256 25.2592 cv
31.4336 25.2592 30.8336 25.5232 30.4256 26.0512 cv
30.0176 26.5792 29.7776 27.3832 29.7296 28.4392 cv
29.9576 28.1032 30.2456 27.8392 30.5936 27.6592 cv
30.9416 27.4792 31.3256 27.3832 31.7456 27.3832 cv
32.6216 27.3832 33.3176 27.6592 33.8216 28.1872 cv
34.3256 28.7152 34.5896 29.4472 34.5896 30.3592 cv
34.5896 31.2592 34.3136 31.9792 33.7856 32.5192 cv
33.2576 33.0592 32.5496 33.3232 31.6736 33.3232 cv
30.6656 33.3232 29.8856 32.9392 29.3576 32.1712 cv
28.8176 31.4032 28.5536 30.2752 28.5536 28.7992 cv
28.5536 27.4192 28.8776 26.3152 29.5376 25.4992 cv
30.1856 24.6832 31.0736 24.2632 32.1776 24.2632 cv
32.4656 24.2632 32.7656 24.2992 33.0776 24.3472 cv
33.3776 24.4072 33.6896 24.4912 34.0256 24.6112 cv
f
37.6496 32.1712 mo
41.7776 32.1712 li
41.7776 33.1672 li
36.2216 33.1672 li
36.2216 32.1712 li
36.6656 31.7152 37.2776 31.0912 38.0576 30.2992 cv
38.8256 29.5192 39.3176 29.0152 39.5216 28.7872 cv
39.9056 28.3672 40.1696 28.0072 40.3136 27.7072 cv
40.4576 27.4192 40.5416 27.1192 40.5416 26.8312 cv
40.5416 26.3752 40.3736 25.9912 40.0496 25.7032 cv
39.7256 25.4152 39.3056 25.2592 38.7776 25.2592 cv
38.4056 25.2592 38.0096 25.3312 37.6016 25.4512 cv
37.1936 25.5832 36.7496 25.7752 36.2816 26.0392 cv
36.2816 24.8392 li
36.7616 24.6472 37.2056 24.5032 37.6136 24.4072 cv
38.0216 24.3112 38.4056 24.2632 38.7536 24.2632 cv
39.6536 24.2632 40.3736 24.4912 40.9136 24.9472 cv
41.4536 25.4032 41.7296 26.0032 41.7296 26.7592 cv
41.7296 27.1192 41.6576 27.4672 41.5256 27.7792 cv
41.3936 28.1032 41.1536 28.4872 40.7936 28.9192 cv
40.6976 29.0392 40.3856 29.3632 39.8576 29.9032 cv
39.3296 30.4432 38.5976 31.1992 37.6496 32.1712 cv
f
2.9785 152.208 mo
7.3345 153.816 li
7.3345 150.6 li
2.9785 152.208 li
1.8145 152.88 mo
1.8145 151.536 li
10.5625 148.201 li
10.5625 149.436 li
8.3185 150.229 li
8.3185 154.176 li
10.5625 154.969 li
10.5625 156.217 li
1.8145 152.88 li
f
1.8145 147.06 mo
1.8145 145.872 li
7.1305 145.872 li
8.0665 145.872 8.7505 145.704 9.1585 145.368 cv
9.5665 145.032 9.7705 144.48 9.7705 143.712 cv
9.7705 142.956 9.5665 142.404 9.1585 142.068 cv
8.7505 141.732 8.0665 141.552 7.1305 141.552 cv
1.8145 141.552 li
1.8145 140.364 li
7.2745 140.364 li
8.4265 140.364 9.2785 140.652 9.8545 141.216 cv
10.4305 141.78 10.7185 142.608 10.7185 143.712 cv
10.7185 144.816 10.4305 145.656 9.8545 146.22 cv
9.2785 146.784 8.4265 147.06 7.2745 147.06 cv
1.8145 147.06 li
f
2.4865 131.592 mo
3.7345 131.592 li
3.3745 132 3.0985 132.421 2.9065 132.876 cv
2.7265 133.332 2.6305 133.8 2.6305 134.304 cv
2.6305 135.313 2.9425 136.08 3.5545 136.608 cv
4.1665 137.136 5.0425 137.4 6.1945 137.4 cv
7.3465 137.4 8.2345 137.136 8.8465 136.608 cv
9.4585 136.08 9.7585 135.313 9.7585 134.304 cv
9.7585 133.8 9.6745 133.332 9.4825 132.876 cv
9.3025 132.421 9.0265 132 8.6545 131.592 cv
9.8905 131.592 li
10.1785 132.012 10.3825 132.456 10.5145 132.912 cv
10.6465 133.368 10.7185 133.86 10.7185 134.376 cv
10.7185 135.697 10.3225 136.74 9.5185 137.508 cv
8.7145 138.276 7.6105 138.648 6.1945 138.648 cv
4.7905 138.648 3.6865 138.276 2.8705 137.508 cv
2.0665 136.74 1.6585 135.697 1.6585 134.376 cv
1.6585 133.848 1.7305 133.356 1.8625 132.9 cv
2.0065 132.444 2.2105 132 2.4865 131.592 cv
f
1 lw
2 lc
45 28.8 mo
324 28.8 li
@
324 259.2 mo
324 28.8 li
@
45 259.2 mo
324 259.2 li
@
45 259.2 mo
45 28.8 li
@
80.6727 14.4688 mo
80.6727 18.4144 li
82.4583 18.4144 li
83.1207 18.4144 83.6247 18.256 83.9847 17.9104 cv
84.3447 17.5648 84.5319 17.0752 84.5319 16.4416 cv
84.5319 15.808 84.3447 15.3328 83.9847 14.9872 cv
83.6247 14.6416 83.1207 14.4688 82.4583 14.4688 cv
80.6727 14.4688 li
79.2471 13.3024 mo
82.4583 13.3024 li
83.6247 13.3024 84.5175 13.576 85.1223 14.1088 cv
85.7271 14.6416 86.0295 15.4192 86.0295 16.4416 cv
86.0295 17.4784 85.7271 18.2704 85.1223 18.7888 cv
84.5175 19.3216 83.6247 19.5808 82.4583 19.5808 cv
80.6727 19.5808 li
80.6727 23.8 li
79.2471 23.8 li
79.2471 13.3024 li
f
94.6119 19.5376 mo
94.6119 20.1712 li
88.6647 20.1712 li
88.7223 21.064 88.9815 21.7552 89.4711 22.216 cv
89.9463 22.6768 90.6087 22.9072 91.4727 22.9072 cv
91.9623 22.9072 92.4519 22.8496 92.9127 22.7344 cv
93.3735 22.6192 93.8487 22.432 94.3095 22.1728 cv
94.3095 23.3968 li
93.8487 23.5984 93.3735 23.7568 92.8839 23.8432 cv
92.3943 23.9296 91.8903 23.9872 91.4007 23.9872 cv
90.1335 23.9872 89.1399 23.6272 88.4055 22.9072 cv
87.6711 22.1872 87.3111 21.1936 87.3111 19.9408 cv
87.3111 18.6592 87.6567 17.6368 88.3479 16.8736 cv
89.0391 16.1248 89.9895 15.736 91.1703 15.736 cv
92.2359 15.736 93.0711 16.0816 93.6903 16.7584 cv
94.2951 17.4496 94.6119 18.3712 94.6119 19.5376 cv
93.3159 19.1632 mo
93.3015 18.4576 93.0999 17.896 92.7255 17.464 cv
92.3367 17.0464 91.8183 16.8304 91.1847 16.8304 cv
90.4647 16.8304 89.8887 17.0464 89.4567 17.4496 cv
89.0247 17.8528 88.7655 18.4288 88.7079 19.1632 cv
93.3159 19.1632 li
f
101.294 17.1328 mo
101.15 17.0464 100.991 16.9888 100.818 16.9456 cv
100.646 16.9168 100.458 16.888 100.257 16.888 cv
99.5224 16.888 98.9608 17.1328 98.572 17.608 cv
98.1688 18.0832 97.9816 18.76 97.9816 19.6528 cv
97.9816 23.8 li
96.6856 23.8 li
96.6856 15.9232 li
97.9816 15.9232 li
97.9816 17.1472 li
98.2408 16.672 98.6008 16.312 99.0328 16.0816 cv
99.4648 15.8512 99.9976 15.736 100.631 15.736 cv
100.718 15.736 100.818 15.7504 100.934 15.7504 cv
101.034 15.7648 101.15 15.7792 101.294 15.808 cv
101.294 17.1328 li
f
106.636 12.856 mo
106.636 13.936 li
105.398 13.936 li
104.937 13.936 104.605 14.0368 104.433 14.224 cv
104.246 14.4112 104.159 14.7424 104.159 15.232 cv
104.159 15.9232 li
106.29 15.9232 li
106.29 16.9312 li
104.159 16.9312 li
104.159 23.8 li
102.863 23.8 li
102.863 16.9312 li
101.625 16.9312 li
101.625 15.9232 li
102.863 15.9232 li
102.863 15.376 li
102.863 14.512 103.065 13.864 103.468 13.4608 cv
103.871 13.0576 104.519 12.856 105.412 12.856 cv
106.636 12.856 li
f
110.769 16.8304 mo
110.078 16.8304 109.53 17.104 109.127 17.6512 cv
108.724 18.1984 108.522 18.9328 108.522 19.8688 cv
108.522 20.8192 108.71 21.5536 109.113 22.1008 cv
109.516 22.648 110.063 22.9072 110.769 22.9072 cv
111.46 22.9072 112.007 22.648 112.41 22.1008 cv
112.814 21.5536 113.015 20.8192 113.015 19.8688 cv
113.015 18.9472 112.814 18.1984 112.41 17.6512 cv
112.007 17.104 111.46 16.8304 110.769 16.8304 cv
110.769 15.736 mo
111.892 15.736 112.77 16.1104 113.418 16.8304 cv
114.052 17.5648 114.383 18.5728 114.383 19.8688 cv
114.383 21.1648 114.052 22.1728 113.418 22.8928 cv
112.77 23.6272 111.892 23.9872 110.769 23.9872 cv
109.631 23.9872 108.738 23.6272 108.105 22.8928 cv
107.471 22.1728 107.154 21.1648 107.154 19.8688 cv
107.154 18.5728 107.471 17.5648 108.105 16.8304 cv
108.738 16.1104 109.631 15.736 110.769 15.736 cv
f
121.094 17.1328 mo
120.95 17.0464 120.791 16.9888 120.618 16.9456 cv
120.446 16.9168 120.258 16.888 120.057 16.888 cv
119.322 16.888 118.761 17.1328 118.372 17.608 cv
117.969 18.0832 117.782 18.76 117.782 19.6528 cv
117.782 23.8 li
116.486 23.8 li
116.486 15.9232 li
117.782 15.9232 li
117.782 17.1472 li
118.041 16.672 118.401 16.312 118.833 16.0816 cv
119.265 15.8512 119.798 15.736 120.431 15.736 cv
120.518 15.736 120.618 15.7504 120.734 15.7504 cv
120.834 15.7648 120.95 15.7792 121.094 15.808 cv
121.094 17.1328 li
f
128.582 17.4352 mo
128.898 16.8592 129.287 16.4416 129.734 16.1536 cv
130.18 15.88 130.713 15.736 131.332 15.736 cv
132.138 15.736 132.772 16.024 133.218 16.6 cv
133.665 17.176 133.895 17.9968 133.895 19.048 cv
133.895 23.8 li
132.599 23.8 li
132.599 19.0912 li
132.599 18.3424 132.455 17.7808 132.196 17.4064 cv
131.922 17.0464 131.519 16.8592 130.972 16.8592 cv
130.295 16.8592 129.762 17.0896 129.374 17.536 cv
128.985 17.9824 128.798 18.5872 128.798 19.3504 cv
128.798 23.8 li
127.502 23.8 li
127.502 19.0912 li
127.502 18.3424 127.358 17.7808 127.098 17.4064 cv
126.825 17.0464 126.407 16.8592 125.86 16.8592 cv
125.198 16.8592 124.665 17.0896 124.276 17.536 cv
123.887 17.9824 123.7 18.5872 123.7 19.3504 cv
123.7 23.8 li
122.404 23.8 li
122.404 15.9232 li
123.7 15.9232 li
123.7 17.1472 li
123.988 16.672 124.348 16.312 124.766 16.0816 cv
125.169 15.8512 125.658 15.736 126.234 15.736 cv
126.81 15.736 127.286 15.88 127.689 16.168 cv
128.092 16.456 128.38 16.888 128.582 17.4352 cv
f
140.058 19.84 mo
139.007 19.84 138.287 19.9696 137.884 20.2 cv
137.481 20.4448 137.279 20.848 137.279 21.424 cv
137.279 21.8848 137.423 22.2592 137.725 22.5184 cv
138.028 22.792 138.445 22.9216 138.964 22.9216 cv
139.684 22.9216 140.26 22.6768 140.692 22.1584 cv
141.124 21.6544 141.34 20.9776 141.34 20.128 cv
141.34 19.84 li
140.058 19.84 li
142.636 19.3072 mo
142.636 23.8 li
141.34 23.8 li
141.34 22.6048 li
141.037 23.0944 140.663 23.44 140.231 23.656 cv
139.799 23.872 139.252 23.9872 138.618 23.9872 cv
137.812 23.9872 137.164 23.7712 136.689 23.3248 cv
136.214 22.8784 135.983 22.2736 135.983 21.5104 cv
135.983 20.632 136.271 19.9696 136.876 19.5088 cv
137.466 19.0624 138.345 18.832 139.525 18.832 cv
141.34 18.832 li
141.34 18.7024 li
141.34 18.112 141.138 17.6512 140.749 17.32 cv
140.361 17.0032 139.813 16.8304 139.108 16.8304 cv
138.647 16.8304 138.215 16.888 137.783 17.0032 cv
137.351 17.1184 136.948 17.2768 136.559 17.4784 cv
136.559 16.2832 li
137.02 16.1104 137.481 15.9664 137.927 15.88 cv
138.373 15.7936 138.805 15.736 139.237 15.736 cv
140.375 15.736 141.225 16.0384 141.786 16.6288 cv
142.348 17.2192 142.636 18.112 142.636 19.3072 cv
f
151.852 19.048 mo
151.852 23.8 li
150.556 23.8 li
150.556 19.0912 li
150.556 18.3424 150.398 17.7952 150.11 17.4208 cv
149.822 17.0464 149.39 16.8592 148.814 16.8592 cv
148.108 16.8592 147.561 17.0896 147.158 17.536 cv
146.754 17.9824 146.553 18.5872 146.553 19.3504 cv
146.553 23.8 li
145.257 23.8 li
145.257 15.9232 li
146.553 15.9232 li
146.553 17.1472 li
146.855 16.6864 147.215 16.3264 147.647 16.096 cv
148.065 15.8656 148.554 15.736 149.102 15.736 cv
149.994 15.736 150.686 16.024 151.146 16.5856 cv
151.607 17.1472 151.852 17.968 151.852 19.048 cv
f
160.103 16.2256 mo
160.103 17.4352 li
159.729 17.2336 159.369 17.0896 158.994 16.9888 cv
158.62 16.888 158.26 16.8304 157.886 16.8304 cv
157.05 16.8304 156.388 17.104 155.927 17.6368 cv
155.466 18.1696 155.236 18.9184 155.236 19.8688 cv
155.236 20.8336 155.466 21.5824 155.927 22.1152 cv
156.388 22.648 157.05 22.9072 157.886 22.9072 cv
158.26 22.9072 158.62 22.864 158.994 22.7632 cv
159.369 22.6624 159.729 22.504 160.103 22.3024 cv
160.103 23.4976 li
159.729 23.6704 159.354 23.8 158.98 23.872 cv
158.591 23.944 158.174 23.9872 157.742 23.9872 cv
156.561 23.9872 155.61 23.6272 154.919 22.8784 cv
154.214 22.144 153.868 21.136 153.868 19.8688 cv
153.868 18.5872 154.214 17.5792 154.919 16.8448 cv
155.625 16.1104 156.59 15.736 157.828 15.736 cv
158.231 15.736 158.62 15.7792 158.994 15.8656 cv
159.369 15.952 159.743 16.0672 160.103 16.2256 cv
f
169.089 19.5376 mo
169.089 20.1712 li
163.142 20.1712 li
163.199 21.064 163.458 21.7552 163.948 22.216 cv
164.423 22.6768 165.086 22.9072 165.95 22.9072 cv
166.439 22.9072 166.929 22.8496 167.39 22.7344 cv
167.85 22.6192 168.326 22.432 168.786 22.1728 cv
168.786 23.3968 li
168.326 23.5984 167.85 23.7568 167.361 23.8432 cv
166.871 23.9296 166.367 23.9872 165.878 23.9872 cv
164.61 23.9872 163.617 23.6272 162.882 22.9072 cv
162.148 22.1872 161.788 21.1936 161.788 19.9408 cv
161.788 18.6592 162.134 17.6368 162.825 16.8736 cv
163.516 16.1248 164.466 15.736 165.647 15.736 cv
166.713 15.736 167.548 16.0816 168.167 16.7584 cv
168.772 17.4496 169.089 18.3712 169.089 19.5376 cv
167.793 19.1632 mo
167.778 18.4576 167.577 17.896 167.202 17.464 cv
166.814 17.0464 166.295 16.8304 165.662 16.8304 cv
164.942 16.8304 164.366 17.0464 163.934 17.4496 cv
163.502 17.8528 163.242 18.4288 163.185 19.1632 cv
167.793 19.1632 li
f
178.838 16.8304 mo
178.146 16.8304 177.599 17.104 177.196 17.6512 cv
176.793 18.1984 176.591 18.9328 176.591 19.8688 cv
176.591 20.8192 176.778 21.5536 177.182 22.1008 cv
177.585 22.648 178.132 22.9072 178.838 22.9072 cv
179.529 22.9072 180.076 22.648 180.479 22.1008 cv
180.882 21.5536 181.084 20.8192 181.084 19.8688 cv
181.084 18.9472 180.882 18.1984 180.479 17.6512 cv
180.076 17.104 179.529 16.8304 178.838 16.8304 cv
178.838 15.736 mo
179.961 15.736 180.839 16.1104 181.487 16.8304 cv
182.121 17.5648 182.452 18.5728 182.452 19.8688 cv
182.452 21.1648 182.121 22.1728 181.487 22.8928 cv
180.839 23.6272 179.961 23.9872 178.838 23.9872 cv
177.7 23.9872 176.807 23.6272 176.174 22.8928 cv
175.54 22.1728 175.223 21.1648 175.223 19.8688 cv
175.223 18.5728 175.54 17.5648 176.174 16.8304 cv
176.807 16.1104 177.7 15.736 178.838 15.736 cv
f
191.15 19.048 mo
191.15 23.8 li
189.854 23.8 li
189.854 19.0912 li
189.854 18.3424 189.695 17.7952 189.407 17.4208 cv
189.119 17.0464 188.687 16.8592 188.111 16.8592 cv
187.406 16.8592 186.858 17.0896 186.455 17.536 cv
186.052 17.9824 185.85 18.5872 185.85 19.3504 cv
185.85 23.8 li
184.554 23.8 li
184.554 15.9232 li
185.85 15.9232 li
185.85 17.1472 li
186.153 16.6864 186.513 16.3264 186.945 16.096 cv
187.362 15.8656 187.852 15.736 188.399 15.736 cv
189.292 15.736 189.983 16.024 190.444 16.5856 cv
190.905 17.1472 191.15 17.968 191.15 19.048 cv
f
199.718 22.6048 mo
204.671 22.6048 li
204.671 23.8 li
198.004 23.8 li
198.004 22.6048 li
198.537 22.0576 199.271 21.3088 200.207 20.3584 cv
201.129 19.4224 201.719 18.8176 201.964 18.544 cv
202.425 18.04 202.742 17.608 202.914 17.248 cv
203.087 16.9024 203.188 16.5424 203.188 16.1968 cv
203.188 15.6496 202.986 15.1888 202.598 14.8432 cv
202.209 14.4976 201.705 14.3104 201.071 14.3104 cv
200.625 14.3104 200.15 14.3968 199.66 14.5408 cv
199.17 14.6992 198.638 14.9296 198.076 15.2464 cv
198.076 13.8064 li
198.652 13.576 199.185 13.4032 199.674 13.288 cv
200.164 13.1728 200.625 13.1152 201.042 13.1152 cv
202.122 13.1152 202.986 13.3888 203.634 13.936 cv
204.282 14.4832 204.614 15.2032 204.614 16.1104 cv
204.614 16.5424 204.527 16.96 204.369 17.3344 cv
204.21 17.7232 203.922 18.184 203.49 18.7024 cv
203.375 18.8464 203.001 19.2352 202.367 19.8832 cv
201.734 20.5312 200.855 21.4384 199.718 22.6048 cv
f
207.695 23.584 mo
207.695 22.288 li
208.041 22.4608 208.401 22.5904 208.775 22.6768 cv
209.135 22.7632 209.495 22.8064 209.855 22.8064 cv
210.777 22.8064 211.497 22.504 211.986 21.8704 cv
212.476 21.2368 212.764 20.2864 212.85 18.9904 cv
212.562 19.3936 212.217 19.7104 211.814 19.9264 cv
211.396 20.1424 210.935 20.2432 210.431 20.2432 cv
209.366 20.2432 208.53 19.9264 207.926 19.2928 cv
207.321 18.6592 207.018 17.7952 207.018 16.6864 cv
207.018 15.6208 207.335 14.7568 207.969 14.0944 cv
208.602 13.4464 209.452 13.1152 210.518 13.1152 cv
211.727 13.1152 212.663 13.5904 213.297 14.512 cv
213.93 15.448 214.262 16.8016 214.262 18.5584 cv
214.262 20.2288 213.858 21.5392 213.081 22.5184 cv
212.289 23.4976 211.238 23.9872 209.913 23.9872 cv
209.553 23.9872 209.193 23.944 208.833 23.8864 cv
208.458 23.8288 208.084 23.728 207.695 23.584 cv
210.518 19.1344 mo
211.151 19.1344 211.655 18.9184 212.03 18.4864 cv
212.404 18.0544 212.591 17.4496 212.591 16.6864 cv
212.591 15.9376 212.404 15.3328 212.03 14.9008 cv
211.655 14.4688 211.151 14.2384 210.518 14.2384 cv
209.884 14.2384 209.38 14.4688 209.006 14.9008 cv
208.631 15.3328 208.444 15.9376 208.444 16.6864 cv
208.444 17.4496 208.631 18.0544 209.006 18.4864 cv
209.38 18.9184 209.884 19.1344 210.518 19.1344 cv
f
216.854 23.584 mo
216.854 22.288 li
217.199 22.4608 217.559 22.5904 217.934 22.6768 cv
218.294 22.7632 218.654 22.8064 219.014 22.8064 cv
219.935 22.8064 220.655 22.504 221.145 21.8704 cv
221.634 21.2368 221.922 20.2864 222.009 18.9904 cv
221.721 19.3936 221.375 19.7104 220.972 19.9264 cv
220.554 20.1424 220.094 20.2432 219.59 20.2432 cv
218.524 20.2432 217.689 19.9264 217.084 19.2928 cv
216.479 18.6592 216.177 17.7952 216.177 16.6864 cv
216.177 15.6208 216.494 14.7568 217.127 14.0944 cv
217.761 13.4464 218.61 13.1152 219.676 13.1152 cv
220.886 13.1152 221.822 13.5904 222.455 14.512 cv
223.089 15.448 223.42 16.8016 223.42 18.5584 cv
223.42 20.2288 223.017 21.5392 222.239 22.5184 cv
221.447 23.4976 220.396 23.9872 219.071 23.9872 cv
218.711 23.9872 218.351 23.944 217.991 23.8864 cv
217.617 23.8288 217.242 23.728 216.854 23.584 cv
219.676 19.1344 mo
220.31 19.1344 220.814 18.9184 221.188 18.4864 cv
221.562 18.0544 221.75 17.4496 221.75 16.6864 cv
221.75 15.9376 221.562 15.3328 221.188 14.9008 cv
220.814 14.4688 220.31 14.2384 219.676 14.2384 cv
219.042 14.2384 218.538 14.4688 218.164 14.9008 cv
217.79 15.3328 217.602 15.9376 217.602 16.6864 cv
217.602 17.4496 217.79 18.0544 218.164 18.4864 cv
218.538 18.9184 219.042 19.1344 219.676 19.1344 cv
f
225.609 13.3024 mo
232.362 13.3024 li
232.362 13.9072 li
228.546 23.8 li
227.063 23.8 li
230.649 14.4976 li
225.609 14.4976 li
225.609 13.3024 li
f
244.703 17.1184 mo
244.703 12.856 li
245.999 12.856 li
245.999 23.8 li
244.703 23.8 li
244.703 22.6192 li
244.43 23.0944 244.084 23.44 243.666 23.656 cv
243.249 23.872 242.759 23.9872 242.183 23.9872 cv
241.233 23.9872 240.455 23.6128 239.85 22.864 cv
239.246 22.1152 238.958 21.1072 238.958 19.8688 cv
238.958 18.6304 239.246 17.6368 239.85 16.8736 cv
240.455 16.1248 241.233 15.736 242.183 15.736 cv
242.759 15.736 243.249 15.8512 243.666 16.0816 cv
244.084 16.312 244.43 16.6576 244.703 17.1184 cv
240.297 19.8688 mo
240.297 20.8192 240.484 21.568 240.873 22.1152 cv
241.262 22.6624 241.809 22.9216 242.5 22.9216 cv
243.177 22.9216 243.71 22.6624 244.113 22.1152 cv
244.502 21.568 244.703 20.8192 244.703 19.8688 cv
244.703 18.9184 244.502 18.184 244.113 17.6368 cv
243.71 17.0896 243.177 16.816 242.5 16.816 cv
241.809 16.816 241.262 17.0896 240.873 17.6368 cv
240.484 18.184 240.297 18.9184 240.297 19.8688 cv
f
252.249 19.84 mo
251.197 19.84 250.477 19.9696 250.074 20.2 cv
249.671 20.4448 249.469 20.848 249.469 21.424 cv
249.469 21.8848 249.613 22.2592 249.916 22.5184 cv
250.218 22.792 250.636 22.9216 251.154 22.9216 cv
251.874 22.9216 252.45 22.6768 252.882 22.1584 cv
253.314 21.6544 253.53 20.9776 253.53 20.128 cv
253.53 19.84 li
252.249 19.84 li
254.826 19.3072 mo
254.826 23.8 li
253.53 23.8 li
253.53 22.6048 li
253.228 23.0944 252.854 23.44 252.421 23.656 cv
251.99 23.872 251.442 23.9872 250.809 23.9872 cv
250.002 23.9872 249.354 23.7712 248.879 23.3248 cv
248.404 22.8784 248.173 22.2736 248.173 21.5104 cv
248.173 20.632 248.461 19.9696 249.066 19.5088 cv
249.657 19.0624 250.535 18.832 251.716 18.832 cv
253.53 18.832 li
253.53 18.7024 li
253.53 18.112 253.329 17.6512 252.94 17.32 cv
252.551 17.0032 252.004 16.8304 251.298 16.8304 cv
250.837 16.8304 250.405 16.888 249.973 17.0032 cv
249.541 17.1184 249.138 17.2768 248.749 17.4784 cv
248.749 16.2832 li
249.21 16.1104 249.671 15.9664 250.117 15.88 cv
250.564 15.7936 250.996 15.736 251.428 15.736 cv
252.565 15.736 253.415 16.0384 253.977 16.6288 cv
254.538 17.2192 254.826 18.112 254.826 19.3072 cv
f
258.772 13.6912 mo
258.772 15.9232 li
261.436 15.9232 li
261.436 16.9312 li
258.772 16.9312 li
258.772 21.208 li
258.772 21.856 258.858 22.2736 259.031 22.4464 cv
259.204 22.6336 259.564 22.72 260.111 22.72 cv
261.436 22.72 li
261.436 23.8 li
260.111 23.8 li
259.103 23.8 258.412 23.6128 258.038 23.2384 cv
257.663 22.864 257.476 22.1872 257.476 21.208 cv
257.476 16.9312 li
256.526 16.9312 li
256.526 15.9232 li
257.476 15.9232 li
257.476 13.6912 li
258.772 13.6912 li
f
266.721 19.84 mo
265.67 19.84 264.95 19.9696 264.546 20.2 cv
264.143 20.4448 263.942 20.848 263.942 21.424 cv
263.942 21.8848 264.086 22.2592 264.388 22.5184 cv
264.69 22.792 265.108 22.9216 265.626 22.9216 cv
266.346 22.9216 266.922 22.6768 267.354 22.1584 cv
267.786 21.6544 268.002 20.9776 268.002 20.128 cv
268.002 19.84 li
266.721 19.84 li
269.298 19.3072 mo
269.298 23.8 li
268.002 23.8 li
268.002 22.6048 li
267.7 23.0944 267.326 23.44 266.894 23.656 cv
266.462 23.872 265.914 23.9872 265.281 23.9872 cv
264.474 23.9872 263.826 23.7712 263.351 23.3248 cv
262.876 22.8784 262.646 22.2736 262.646 21.5104 cv
262.646 20.632 262.934 19.9696 263.538 19.5088 cv
264.129 19.0624 265.007 18.832 266.188 18.832 cv
268.002 18.832 li
268.002 18.7024 li
268.002 18.112 267.801 17.6512 267.412 17.32 cv
267.023 17.0032 266.476 16.8304 265.77 16.8304 cv
265.31 16.8304 264.878 16.888 264.446 17.0032 cv
264.014 17.1184 263.61 17.2768 263.222 17.4784 cv
263.222 16.2832 li
263.682 16.1104 264.143 15.9664 264.59 15.88 cv
265.036 15.7936 265.468 15.736 265.9 15.736 cv
267.038 15.736 267.887 16.0384 268.449 16.6288 cv
269.01 17.2192 269.298 18.112 269.298 19.3072 cv
f
276.988 16.1536 mo
276.988 17.3776 li
276.614 17.2048 276.239 17.0608 275.85 16.96 cv
275.447 16.8736 275.044 16.816 274.626 16.816 cv
273.978 16.816 273.489 16.9168 273.172 17.1184 cv
272.855 17.32 272.697 17.608 272.697 17.9968 cv
272.697 18.2992 272.812 18.5296 273.042 18.7024 cv
273.273 18.8752 273.734 19.048 274.425 19.192 cv
274.871 19.2928 li
275.793 19.4944 276.441 19.7824 276.83 20.128 cv
277.204 20.488 277.406 20.992 277.406 21.6256 cv
277.406 22.36 277.118 22.936 276.542 23.3536 cv
275.966 23.7856 275.159 23.9872 274.151 23.9872 cv
273.719 23.9872 273.287 23.944 272.826 23.872 cv
272.366 23.8 271.89 23.6848 271.386 23.512 cv
271.386 22.1728 li
271.862 22.432 272.337 22.6192 272.798 22.7344 cv
273.258 22.864 273.719 22.9216 274.18 22.9216 cv
274.785 22.9216 275.26 22.8208 275.591 22.6192 cv
275.908 22.4176 276.081 22.1152 276.081 21.7264 cv
276.081 21.3808 275.951 21.1072 275.721 20.92 cv
275.49 20.7328 274.972 20.5456 274.166 20.3728 cv
273.719 20.272 li
272.913 20.0992 272.322 19.84 271.977 19.4944 cv
271.617 19.1488 271.444 18.6736 271.444 18.0544 cv
271.444 17.32 271.703 16.744 272.222 16.3408 cv
272.74 15.9376 273.489 15.736 274.468 15.736 cv
274.943 15.736 275.39 15.7792 275.822 15.8512 cv
276.239 15.9232 276.628 16.024 276.988 16.1536 cv
f
286.204 19.5376 mo
286.204 20.1712 li
280.257 20.1712 li
280.314 21.064 280.574 21.7552 281.063 22.216 cv
281.538 22.6768 282.201 22.9072 283.065 22.9072 cv
283.554 22.9072 284.044 22.8496 284.505 22.7344 cv
284.966 22.6192 285.441 22.432 285.902 22.1728 cv
285.902 23.3968 li
285.441 23.5984 284.966 23.7568 284.476 23.8432 cv
283.986 23.9296 283.482 23.9872 282.993 23.9872 cv
281.726 23.9872 280.732 23.6272 279.998 22.9072 cv
279.263 22.1872 278.903 21.1936 278.903 19.9408 cv
278.903 18.6592 279.249 17.6368 279.94 16.8736 cv
280.631 16.1248 281.582 15.736 282.762 15.736 cv
283.828 15.736 284.663 16.0816 285.282 16.7584 cv
285.887 17.4496 286.204 18.3712 286.204 19.5376 cv
284.908 19.1632 mo
284.894 18.4576 284.692 17.896 284.318 17.464 cv
283.929 17.0464 283.41 16.8304 282.777 16.8304 cv
282.057 16.8304 281.481 17.0464 281.049 17.4496 cv
280.617 17.8528 280.358 18.4288 280.3 19.1632 cv
284.908 19.1632 li
f
289.602 13.6912 mo
289.602 15.9232 li
292.266 15.9232 li
292.266 16.9312 li
289.602 16.9312 li
289.602 21.208 li
289.602 21.856 289.689 22.2736 289.862 22.4464 cv
290.034 22.6336 290.394 22.72 290.942 22.72 cv
292.266 22.72 li
292.266 23.8 li
290.942 23.8 li
289.934 23.8 289.242 23.6128 288.868 23.2384 cv
288.494 22.864 288.306 22.1872 288.306 21.208 cv
288.306 16.9312 li
287.356 16.9312 li
287.356 15.9232 li
288.306 15.9232 li
288.306 13.6912 li
289.602 13.6912 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 17.0.0
%%For: (weinan) ()
%%Title: (nnfm2997.eps)
%%CreationDate: 12/31/2015 5:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B3-<L%kr;omlC:NRg]M5F+>DN#Em1hNr]>(N,9Om4<O!0^J\(PlK[:]n(iD)cPjE">uIXIQ)#mPc-1"3qT[W<o6m\4pI\%K
%/W2&\'2k!%9`-V$ZVs)jF]etnX,<&gWIh'@WhCB/pPEAFV>jP2p5V5:QWgk&BJitamRjMK:UQTOW4p0?C20eHIJF$(r3#lqXuC+W
%<p-O;98R[i+BM"rBrbTZ]H6d]Snjm^Pb`'T])4sb]BDRCcm4&ffCc&t0=Z+)lh,d%^kU+X'Fo$S]i;f/XKDnn?lFV?/#FY\E(/5M
%c&bn)1.4Pc'QQX(,geF_g!CE:YF'p?.=u*1VBO'MR$tcOXhE>u]hYt:D`&UPCuRLXp/eZnM$1VD/lV9%H0qZgW:jtZM5"m"eJ'.E
%:\VI1$7m?.bE;qJ%F[-;8QKA-L!`cZX<t_I9b_,<e5Gc\CM3^BMP;^A7S6OrX<PN"8N%kp\+.)j;Z!e,qeIL#>bKk7h^t1sZ,h-8
%BD)9*COmBiTV'f;dse(C\S0Q@coHqf1[3p)Xk-_YSoC/I2lc<^$_Rt'dt0Q_G2@!t&?Aj,O6g(B)%IE!n4NAG)@DF:+ZX;hRcgeG
%6LqE+kUAqZTKVM?SC/*3-#"%q%$W/T%T_!Q[+iTTYSeC2N\YV`@WU%u^Xnr*b9AdN/?+dY;VRc=X".&YPVVG-BesN1jI[ih+A\/g
%oSQ6>l'eQ&\4K8p=DRu7p3O-Dbnn`g_LY56L$ZXD7JHT_BMGg:a$Gi<>X:pn`S:NWD&01cl:T3PVGfRa^JeA:oP.[AM.Faa&M#&1
%+E6hR:p@.G1B*PM]IV0M=-i)V,!5L.RYG4=L;,PS_))V;1p(#k)`:?C0hm>;IZh`G'>[?U_=/Cm,$:Oh@"eYG=t&="631N;A\;5"
%CDqK2>Xj6aR6F#qVBf)t-r,()+1:R\1-CSH&.JGiT*U2MZ?o75@AiT.@B`]*8c!>2K0G7m_GC)`S\e0=MDC)JNLdp^dWbV@Qa'nR
%Q1C/;J7."er'Zom)6__g7#7b2VS&_+_GC"Vm60h:-(e(*nIspLTs?uJ56Skfi[6WQ#EneNhQmCr^E=Bed2m#E)Yu/]&O5e%G*'iI
%ITj\M-2^.blm$u-_5-'WR7etoS@0s[ib_8mLQ7NgH&l?tGrBSSmqE"4nWYkfRC6rC)[3MH+UiP@Q;QukH(=SuhSqb=-\>2ua$*D8
%d"h-)@BbCR\1QgN-;jJ6*)t@'EOLS@Q9.Dq'cAJ8[Z]9Q9=[j_UV*Ll.J!i8p;#>ZUZ<YeNLr+))kcri5DscdW)U(efM`"%-HbBk
%'kLJDkqhh=XhCm/g!"L0J4dDT"0No4a'EDb2;]EkS(I(A+AFaUal>!HCiXBUD9T@qqPYgrAt2OnoIKkf8bA>GQi=mJ'E>Umks'Dt
%<Tth(0E%g7oXF^ar\LWI`%W1tL@m3lVmkHro\\48rU'T\s5<EVO^<).dXS)+rU'T\rrhMWA`n%AnWStdrGDS/J$G&t;Gbk`Z&Dqq
%4sd%1c5V)7>SQgN)?3<\Fet%Ho*5.=",*$"6;\j9d<>&h!fs;DF@r>8![m647,d)<V2P?"$ViKh]g,fB8*C]b?J`JQn[DiSMe)+n
%5IuTAn@+2RL^bH!^[5gD3<o_8[iR1=AHdQ+3;G+5gZ5\+Z-`Ls*IegHoWJK][\cZ[DNRqlbtomOQ%EI09X!/U+IpK1Glr!F?V2f"
%dr5$;VN;uEm*i3WkAe+>g/I>]rl-;LG@W;%!:ee4%d3(Nb'3bVWPPH:2I\$^/[VR)&]^GIZiS+..isqiQ:r!0R@raNjI7GRLkC_q
%rBK\$rL<H9qS[kA4<`Q.O%>Ga&c8RSK=WWk81R#(Sp5stC_KUT9a-hF,e>i.s&tK\anGapqO]lfPF;>uMLtKVIk//\Q>l&djRaI=
%YL?gi\n*Bcn:(u7U2J$-j#iq*;9n3$Bu1t2rXt&@30+aG'^8C`391%)m"$Yo"kt_g>F$E`C6Bl4>E7,'1f,UL^JnlpQcP7JbsXL(
%O*boAMdB!^p2FKS'_-XI(K'lij:Wu:&s]7E]`a'^kB"LOSI&\a@>&!4V2YFG>Cm9CPRTKg+rm/!-ll(?H2,?@R)OI+Pk'!=oREnZ
%TT.1UL_h^jDANJA@Znr3T'2D]VF>)gb!R/POGC;M&EeK[*!PO1\\:LHL;uHq>181B&F":Eh%T.0%+X?);5F&k.bHrrTqZCmYmEI>
%:i3H"*SUp'VNUpSM:YDQ&\qq=%Zl$k4Q!+4*p<Qa9jj.gNZCa]Ga&LZ1T]><mj(L%T%AgLU44\[;7%a,b#BiBF('-\RR,Q&=<hZU
%V,&<DE"0'^96sFsA.Ot[bn!b*Z;.5X+"ku^T(_!WcGq&2nqCO_2/0XG*.@RjRPt]FoHZ$2?s,h>P"d92e]#D71DCQnb$/FMb9W@l
%k)d==)1PS/r(bEio8m:_ph_r9Gm26ZjcZ')`PtE4f09V:1IY2I6:i\ll(gUY.9a),?<os%Us=iD['%kl"Y2c.BE&a;hgtU:;!.f>
%2rT+R\72;I)2I%u5Nd#-LfYC,pM@<i\dk$sQV/*H,_r:\4[?H>jrH'uCckXln#tkE\/HZ?Nm,Zm8+m"j*@#o!!`5sEGMIV0kDH,R
%XYb-[@nG8m8Q3M!>nJW9-R9)))R!;'g7nao/E4>M9>8"t7%9$BR3Fo>7tVCZZT4Wg1C/QH_uf3>"e<:g[ah#oOcL978r-1J=rYYg
%U7mD/bM2#c]55DFkM<n)D(8,(75+Jf,F0eqb4](5UE&cP#p#%s7ls?*m=LsXl:otQd2`leBA8"WN;1qh<St%\'2FYr+1LG+Uf;R[
%7i-\j\6oJG2!gqM-KRV2j/sf9jVlgBpP_'<2lYdtp6HrG6u:5"dleN=L>@e<8ie38MQPN?_/^'bG><u78:YDh.h@(D0[7GNT?e'%
%\-OF+)<@eDZk6?85b")1i49Xl1Y<s8Xq9Wd;F`CWPMlE4C)f+V[W\\ko(-G9c_gH=pcZL2f\On:'M<Oi5&6pX/43fj=\d=DZmSZ$
%kHb'OJ@XTm+/[dAU$QknFSn17]-mkFh*EG=gV(#m\q9Zb_E'd2Vt6:OX((XMco.0-,sf#h'cugK7t21)OQ8cs\.cg7@&RRN=n3/c
%Qm.`LUGS[5B=OLF-,BQ*D9t(-Z4A;Xm5j;?`3M-H3QgB?UnWKZhHu=>lbOp[.c_L;*s.:r8M!g)-Ir/j$s+G[,AjEdN)\J*I(:GZ
%#(eP09P%S^]]*I1GI'+a%8i^es0n88ido*4C,r-.5+3%pIl.'@2,!(eb?S0#L?E_+';5u81hhTV?mLV3^?1Qu#<*<$ife&If=-o:
%Y=i\Yo6)6Q[bV"hCl4.u)^5hd99gj-gED]KoO[WX[_(ZnZs$U..t&B1T]LMKri=?)G3GRj62K2s+m2('pXIJe>4\:SIl[?hq#C+r
%8>8!<J,6AaLkUI!$L^j\?Z)I$Lo*&=]=@4(%nefTgUj+RM0"OPSThdEU1!c";"qa``,==a.tO"Ukdf\$O6-ddfs8"$+H>PuE*fsg
%[bMT;qjJ25dmrcJDF+?T#e\d["uXdBNO:5=;hO6WNKE[-lHtL#]9kll9`!M%h*YQnO3Y!()BAjiQtH6KQIsh"QVF3D-+&tYFF+bD
%^2%)^>U00(^fI+B\:K+cE#YW.Pl%temhd;%Z^T,_Dan';<2X+SPJ\J4@D)bTA+j1?D8D@9FF[K%o\K3V/8*.Fiu)=rSC&\nWclD3
%UTcRmd7X*FQG)R[(Ygl5EijjdBP!Ze%e98hTA?[+5e3gt8[kgr29n"Sjst?=Z+^uW?b#&&p\3%Z5KB<qU\/N\FaoL"B=2'\4[F9a
%OUFs?/U3rF`#V;\IiQm``m\q&%l^sZXaYW+q:;#0@m9qHHEO(sCG3A%VuFHbC[1-Z(]7B+c'(kIWUimX"knLa%SX<7D_K$c=Dh)"
%[1p:^c]XpipC7-LH+mC-CN[AH#3aT8o?UU8eb1id>cBVg;chLE4%\JQNG>fR8WaregQhW-E2O$oF'Ejl-#0m>l*c.7j<4TBTSNU;
%ge*7"gA=EX2/:CfY1#H1aUh6$->E&;T<IEYUYbri)Y@?U^*f_Z=6h](RZu#k^\a-SDm^K9,:J(bb8oY=O$<0=6/hn9&AZP?DrZOd
%UJZO0<8/Mf(LI!/q[T?^B+mka$fO,WU]6X4/GR/u$'-Z+V:RaF^C[f5KK8q1g3`VqoCC\9G3ZIP?,Y]MX#FC:d'J27=*)E_p!q'A
%go7W@C)\fNAD%(L[];U."Q>mOQBu*Z#*[o]/]>>P)Ruh)\)2$#eKhn-.mVc.R,i"sd<etdjUS=u[F>i)SCPC.NLBqpUlOr^h8LnA
%Y,cg/'L'ODH^cpBS]>?5?iT&f4o"^YY5OUuL"&ERmQjCW:;BRh:+1AkJuO<.SbOFpKDsdFdWo5fVsEk84K^SW0^,mMa3Wf6*P4\0
%E:`pU3"#$'p#?k`J'4\ATkpq6Y<\ks5n5Z)Jda)8U-NYFGm'W5J*cLJ(je+KK13/\);aqMSoXN.PX54MImNd-49&D!Xq*";Xk-at
%mFB_ahd;?i!%`aLGO!NQ?4Ed^,m'V*FK5@2Ri)kT&)>>u^%'gU2(^4*Q.lIC3OeORpCGslEdN8DfmW_'g?GblU7VI@k.;`/cYB6D
%!99&V#[e=IKEZ!ce+Nb=ca0Y)C=\PeWR6%fXM#riP7>+qYNXncSWjV@8NI/5"(B7oktQbiHGRWN'VdHQN+P[;<n+1rNERON82AWn
%^C.p:7UbE)jCSF$ruD0%rI!jRH`aK$Jbf2F,.c4)U@3hX.-P)[8c:lI2aGa)NLp0^<4Vo"f=sSbrr\S"gShmbhda[2VDWR$X#;/J
%r)`j)pQ9.1/]`EqiT=)sa*%$H7%O8=?d_6^0YBQ-n(pR:rr/&$N&mX3MN5\LkhjJjd_DSB@"YmkXf24][sHtN<,->7>0EG7HbkL:
%26I+fR:iXNkG:Z)4n.q0/RZ`u=4$J;lW%<.ko'XYk/bJ7]iphf6o*qV[T/UNa#>C,41/gpXC(HDH<0>?6'P9%TGUY]O'D9hO,uJ"
%hGiDHBcB^MhJG3Oru>!"T/QN@:@G_nmC];M5eUj^?[u\!)kP,KZq\\_rmW_;$6J9+[DmLXPiANm*4NM%Um^#(**U,f-\"g#D8:&@
%-J;"u*V+s>L*7OI">@N*VQ+gK?gnd?N#=s4?DlND[]:N"0E7j)48%3)\,JT2O")TA&_^D\8j0cf,1qPn@(Y-qFeGS7IY4F</Jq2^
%AMq+`&I>>c&d*?Jj@:c"LX+O9\]r-GHH?mZfoR4^43^m+2ZKk%cWlcn/t56`Fkis=CRm\*WUnj$4gHP6IBGNo4aSU?mga*9p&8%8
%I>c*4:jtu7:1BD<n><;=8AHVb*5.S<aAlm8`,6UF\f[p#C:@:1eGi$nbCe)@!l=WP;8:`NpYm5,*-MJLX&PSWI9\WnDRFKSK9[U)
%_DWR:cXuM)ZN^-\ksEK)f21\>=MM<1=\![QWnZ(U<u/t\[JS'PX#B6KG,W">Q>OYV$O93fa0g*dh,M,GCH;=Nk_-E0Fl63+<s,G'
%Odqi!:[g&38A.#.fHJKls%-8A;pWu`[J@\'-grj.>I%F^eiIZlN<d&64Rpju[m@;Sdf18Ni#R'sFo&AE$:;N.HWHm2*@aimii;dK
%gh=)VQdo]]qZ4AT%knV.GS7\^>\gNKf"6()!b]2]cgIVQRSla:'e,^YVkrucgP_LW@4248Ysgc&?RqQtAZ\RM8Q=4SBf8hH>__I>
%.V>gW:DfrSV[Q_XA(s@XNY#<k2&`=+Hbjtc5_2!umP\EfJ"P7t>0YY"+"Gl(?&'#LlnCa?F<_[^/o),!:4t&_1r>i*GVlEg3=QEL
%:ehBaH.$i_)1UI='$:kGa;(Uu;9oSP_;h8<k',#I7`2[KQd??n2Vb\l,]5]&d`QFQ*#GTg>OEKsSWC=cVsYPjbUZr6UNZ=LSIU38
%;8D;Y9.f%KDq&74Ob!OH,ErmiRhTfTgrc5/oHk@S'Kk-tF0)S_s4BuP&LZ`9VCn@'L>Xj^;69>f?GZr0BtiaEe^0R0[Iq[;Pb8Ur
%O8Qr5-BTAOka*A_PJf/,Z$0N#<PpZ3#ZsRO,9W0]9;6JLXYKd#HgB6&=UH0)['Bi@XDLKgZrMeO\>`@cWB7VrYLVFuAqHh?m[sB>
%23-FbH/+EpZWBqRf2_3Y!58@<3.R!7Z^0nM3j$_3;Wo/]erHL04aLgb?>H_a(G_7;D"[`#mGY7!s()F=]1&=kaa&+pkbmV!4A5*D
%lT&b$'+fc/Z[0p6G&#sUF_cf+'*ATUBu?M*`"4?V'35.^,,1P<4pJ+c=`6OB>\?.LmS"=.&A3L2cW?[)#l!0A[@VB1;[U(*OQ0dI
%GcpeTWosujUD$rEg@&C@=`DQ"YH>:CCqj2,H#j@Cg>$]-M83'NI?=4<9t.B2*0.uCcQh`:.r0M'044a,1+L=0!q0kFJ)DMtQ;(Z8
%Sl:=YLr=)oIfA^!kkKTMoqrKUT*/loXknks,67Rlk9Ga#`4MM8l_FoF1kRneD)PVd<6=)BJ[3h>gPo#9$JB@3`50rl\:A5Hl=?Tt
%[unG[=\fZh2a.5hmC.'h]757YHaQm9JgLJ8[9rfN&D\bX5p0K;d1BuBM#m='U3oLf)8HUPW!/3!e,o<1?]oQiJ\D@g;\h\b4,L<]
%d6fT,6(g`E>.kHeU<5T^d*4Jap=a[c=8<.#;)o.7d<[WqFg,Z'bsTN-bpEGZ3AQl8<"/us-%s>3[q7;jg@3_s*YTqu]CXVE,pYI[
%WHQ>G2F(]j!Ym2PFp\4-HXmdj'G*6(aj;q]mo<-j3s=iZNjD_B9LH`N<7s6uj]].nh!KC[K?LUh7hm!HYBL[.0FdM6j.s-Dfh!(e
%96-fRe]n.NVM><3hVkEt$%/6]nHSp5qZ'@H?6f>>Rj9&6U['Y@&3a_ii%aLg*brHa%Q'Wrl"[s[Dk>7MmN^M,BQsA10%\VS+H$4]
%3\f/9^>BR\G,Yj)?S14cmpa#)LfmY89g_`66W_/HnLY^OKbC'D=@U47A/(hT^6!F;?\N?Y*S!dSF'_Lo*ACIVJ1@UoWl`XaqL#\r
%&6/uj?;o2MUl$1s"eFl9_e)#/_<p"cbM[?<Gb3@'>2E)<kES$`rNim7)sL'18?ZM?$!?RmmlP8:DKN2`=bG1ec>+1/fo9`.qe&$(
%HsPmo6nkq='l2)UO\Qf-euL`7cRGrN:)a*L?\olRiZ!+q+0Eig@bS3FZ$+<]9DL@G2VQ,dP*^N#eD6I7j5lo/XaNSS(^fralpf/H
%NbmlA)_LLoOA.j`#=Fle[A%F5C/S.e>FdgH:Z.kkU;bD)0L8t4=)tHa][j[epL^-+eK:*1Jp"?f+qBFQqDM/NinJ5OKUDki-XKF[
%drFpqFKJX52%iZN<5HXDjfp344@%a-pLXK>8KZJg=Zike?#(G33cDDBNi.R!dSJtK;\_t6@EfeCJWb0-^qupdJJ:X(*M91:44RCH
%)Y+_N16#Na[2qtk/L8d:XmTXs;+nM"Pt$EjZ4^R.Sd<PG?6l%#MHUpo&6:#g^7:Z0MC]a-1fqI=`e(V:Gj8LBo[%2-)*sd\C:;oO
%buDAJeh'bpD1:[udoX+;S"l7jWNFN)</Nei:k'N"=+2lTRJ4bJINWHh#N[7pif0[1#TFc0#fhi9Gr"pP!",;_oKC-`<WB-@J6,kY
%k2h6;71'f4l=a3#RfELD+0E;$lE@@]#c7Sb7=%Yh(UBEoKH[toRhL;4n:pZMVAAc9L#$$%/_89hOd7fhl;'RLEVZ+<Eg_RAbf3.K
%`c%%2j((T%DO`]DaGj2Fj1Mj$Ho&5rGG\-eWl6pUB&1!JA_'VaO7Z]Sr&_UanS8BVUba[W*<%onBDO,fH9!W#V.XOP.D7!l\'mtX
%RqGm7@e;JB2bQkb0u):?dtNJhV(5=h7La$UfFddMHKj\e%WS&9kBFL1q""\$Rd&&m>'n7U"'ntdNde,=4$WHtO>04:?!EgKeiI%6
%;WaWm<SZJ+iuo^,5k-Y"l`*%IrV&s]3)s2:/TpJC7XdjCSZQdcQUYu[[9kD$/FKR>\,-Di+#CIr!d&=Vjlp#YH1=ku8em?E259Us
%'^;.uN_$#$l)]'S4863W]0]7QS+h*eWE/4$jkcj+f_V*Q?>%5(U-<T:"Z2bTU&2aercWT'M!5u5SMR\hj*UG8r7l2*j#9Ckf)*b1
%_>OZ^laHekY3\>a$!'=/+RV?e+'(_5CA%Pm)*ZUnl1n(USE]OI!h-93/D_n@d`Nc;]A:#oKB3ZGlGn9pm\[qCWn^heARY+Z?q%b;
%\iX&DeY`#gKgQn^TmV;h%)Jr<boEA;o/s*62LtS#YW[,U_.E2up@@A$mW8)jLUD4'X/]<)O6>XB%a1od`[ek4BL!u<9E(Wukr_L`
%LPU'r34.@#AaQ.P!N\nO`VT*!UWgU_BF&(TEAZ>nLcJS<S]BEOb7Lc:(Tf]qa]tq'r.@\I&t9[#mZ,`,]4pf?rg95EcKVYU*nF*d
%V`;":^N'"`?punoB[+tO#a;Zql*JRY.Nb^3o,s8>G##SrSLetdB0LC'`7T%?.r6m3%n!VIe_W6G6Md.r_;')oNE@!&XMgtJ-D-M=
%2tYAe!FXI4/Co]mF^pp*j`q'2G#nFOUf^:aT4MA:D`<Bm>tH>#c%js:m`p#Xs-u-t\6'7W47uFOS"EK14G/of:4i7Y5r`)JFno/6
%QgaZUCJ-fCf!D96ePN?&pH*_+FS=d<pT>WDc<VB:XHfdag&(BA_8U_'&R,ZEMT.u1Z(9WeKON[Q0&,r/#hFuhbK$ZUGqR[KNTW`0
%c`lh$4lq#l+^"1JiSj!JJWKKnkl'+Un].A^eMg&-&&%=$.+YT^bj9Hhf!=deo)43%ok5"3pH*TpDLpQud][46"KSek^,crX'Phis
%\*[7gNDBN=:-ks!Je`XmYu!qhWsb!eY:%,semYi_>WeRcY^W%!bfhjn*#ts]X#.:L^Z3A'`SP^opSJMlEmRidZK_68XUJ;j])fNg
%h_HY3NVV!8_r5^OHo+?u54hnLaL()<o"mh-F_>P%Z0$X]nNpL3/$ltjCUqc#mF4'1/?C?L=asf+*PC$nRJfD_b8V7_MQaWjG?sn;
%mMN29JN;Z8S=R=\Sa6DY.:B2<q<-m/Ak)bcmKP'':1qb;]=Flqmr9H<=49Beh>9l!jR1g7=R@/*0m=Ye3E[sfV.[66M[7*QER.?R
%02ILN2\Wk$dC/3rhVBNM&ucs9m&2'-]q-CMhs1-O]<gbHUT;g7aPG_<rpJWBQe^\J2Z(?Y-'M4'r5\Q>Vo-dPr`mP#rO:f%rGn=:
%lcqGE\"Z%!8kVIN,tpB&)AN+,2LA<7/$4T^rIKFOA`:\[AdH3'imi.K^(k[4BBcCgS_s&-*otMZee[<MEgOhR_paZRh5=/*s7kRG
%Y:mGUP="\dICGM,CBek3Q*d$9A*pY7*:imBigh=T_7NM#QaUJdgoXnXB<sM,UmLlW[Hk_NDt9jH^\]??I*DQCS`JXu\N5#LS515E
%KJ9OW=aN2l2c&T!&Ki%*.rFYpSSW`5h1.ZRjIa/tl%cenF4Y"B(p'"u`L.h4TA7Ka5M$Yd2m4!tmbRR0_N-VNL=WJ$XOXnm1]<56
%1'doA$Vp2gHV>e+.pMQ-ir5sF?7MOQV3`eVcS,>^:X@oMo^UZjKV>#lo^`!F.cd`sFo'be>3cjC3SPeb$#832a;l,B3?bkTh'__(
%R+f"k%b@UaII2:\>eeAn"@G2a&a`7aF)/h><\QAdnkP52;_lW&HXG9&LNr$.qXi7EhHm;+_L4Dpan"J4-s!%SV&fA[!=(?%R[`m5
%;[CsD`sAd$BpFJ(ERhP-4#]oYAKOr_BBi^ehqM8B)h&8]Gd/`2dp<NVCnCKOJ_/T..CZpWe],R:#ZgU#AZj:uWncD!YgR3E0_sNd
%[!o)%Zj=JT&LW5IcXBqV"KO'"rpEO!$S.oQM3AR0'qLQs"tO]D/LE-)1O6:=43J&7\-*9I_,%dJK5oOnjh]=uaq&eT<D1d$jO%-l
%!F2Q&oJpF91ho(Uj1]o(V8Ul4]Zr.SB=;""6`L4WXalGj0&_f7>Y"OtO%t8N#>=+[cq&3sJg];_jcbq*;m/5(c[r9h].6uO<)9to
%nnGd#s*DuE.)<T_qkt6Bn7.>4mu,aJ%(9%87<_1?EU-[D6"J](CB2u<9/E.M0U&Xec6W'XBYZh/D*qHSG)7".e<q3FJJ-q"6S-*7
%S3@WCld,-^LPHB*!=]TgE=>o\ED#FJ7[&N_Fe`ZneYcH6a9Q9*k'#)YYh;Fepe!cBn`8`[)nL*:\0:9Am+=*:?Z$Cr8+jG14biOI
%jnV4+(_SZ9(mb^`\Y1/[[th#B6]Rj)4%P-HqlDdp^VV:+qi]CqSYX0B5+5iqgYDOG2!_-aO[Qoe@Wd!7-Vf:\=RX8$(ADn1d\-!j
%Y02-@*]aVB(b9^7e7>[Xl+YO<%PID2nHB+:OiNVeHK]6.4I#Y(gtnYLc<?T]QL9f[$q5VcLoFauO#q9[2Sd$>`nC6<p%6sXY'M^R
%G#"W8h62KTc;dZPIj(ApT8MtTiUnbP,n;6NF?Z"D>4q,([U0EKUgJM;^KG=KB+:8s#_GDZd\UF(-gm!YqSZ[<*G9$`Nr5#@dRo&P
%rd,@9:r^/Mbhk17Z!DLB]2'F*=`OX+'@Bu,HPbfKYYA8aF='<TT;<=(JCVb6JmNf2ch;1,oN'-F</:T.Q'UWh2-tBu+t+DVng'r$
%0WOnVR7*5:jp4M#nj!V#$IIit>+)c@D(FKeZq90'eucL'n)i'L]^)-!,Kqj$)4"'nbmXtBIaO"BoXIrCMoIVBgW5k)a@t^g-Mag?
%B7sX$M2AVc/S(_N3lmp_5C/d8Z/PIX]KlbmT@;3c_B.ia2#.5sE4dPca`>Kp7aoCW`9b&!l>QT2Z;#_[#]Jb&58P=PpkCNWf1RfP
%<c?&5G+@6$A;TN#*`PdM;p<l&g0.``@Q3C'2GpUPgl#$t(?b/rcqV:.*L1>flS^`OXA#!-DUR,/c*BRFh*I;T`<@j%gIq_C0[I;=
%*b.T#^+Nb1hKR%37,'QMqt<#]hCeU+p/0?2I7JVIDs\&H:+NGC8aC6;N6IqkCVfd[d1"_mr^rVt#k-#aQa%+>%$_h:16c0bie_Y(
%M6dF1P^'meSUf<P!*`]#(^%Q-N>FfCb7!)cC[:gg)(9aJ,U?Y9Fjf=,h,>h7_>VlQ&YC`M"q+3]rPA5EFtjQb:23@FMIP%6Re.Gd
%jCIdpMDYRU$7'W$IdN/)$CIZGq9nWfN9BnRA*)dem@eG;gn9TZp>W^i>B2IlN:cb=L[KpWEXs`P!$f"%dnZp2;5*lj?/\MJ]O<)&
%',1qt0:oJ)C:_"^MU*qu"FbVQSVk3d0;.[k?9^^m(S?W>,FY2LR1bd,!$?MJRN1>=gOVl%IkOU$?q):lF:M+-H7+;-f"W<,F7[&i
%Og0bfKm5W&bga`I+XE]B&c8apU"91T)R2q^I3tr6F)GKO7.R_\XX&uqQSJF6#'ogi)'iK#QJ2H.?u@?C5^SHA0.#S$ZZ.M&i-2O%
%>rUNE+;p.^`6AL55F$bI-tuPQ[3)fXjn4e3k=(hmD"%8!`fP:\PaC`YDB*u/cch8<`LWEm=&.3C#r*cdbn]u4M]%rIP&H=&EL5<<
%0\-q?lSj9$Dst"gi"2ac(urnhQK\h:9rshB%+:=GZtF-2E,uiX1]C)ld')ak2U2c\5#3FE(?^9@*b]\Kf5%+PeYhL31LPh!&"C]f
%e=64a/[d!b_*SrgX.0&"e+dJ7X?"Y>qdI!hr4uu9.jPWGe'NWFaD6LR2l!Qt&98sA6E<$Ok<dUcGG-bU[-APK-DA/%empp@]JejA
%KY(.GDf%Vc%j;]iN<WW:%-?Vs1cN*Xj7Q-AXP4r>\m7^.2]<8Rgg:(C18K'a:M\m-E_Xt9euei6M'\Qa(5#i#m\_lG#7=,Dc6c%]
%h@"'%L2ldPL8(f>=46(I)VVcJ,&,KPkgo,F@,8IQKt)4Le9Vok9:#APJUc$IL!Vg6\,>I7Eqk"u9-Porjrd?(?Y&khnb,ih];+]g
%P0L';Z,.#=l:lJ`\0_WdKj%_.&"UZ&hR'%:<:DFKZV_T?pMFf`^lg2jV>F^KTs9Gk.)rrA>9T.FdEo,0.f?F0&h`7c2AE;[Np1(P
%8YPtdXUUXFFIKL?%VC/pilmHb8\KW1jN(jl^o!+XrF6,QmXkcLKo+t_BT3HU6RTq,bUp7]\f/tmLt_L"k5QoWE_J[!>p]1Cj/05b
%Z$?:M]ZH;NgFg46_#,$43<ke+]_Ya$4HP`OO3s/d[HN<IUuNb5ILPSBM;@G2f)KM@2W=8&GAEMV[3N'Y5hI;?A@7^IHjk-T1F0G\
%YsaPSaYZHB_(\#ZR89WHnP1cu%CDuZBJ"cI#Gs@k,+(8Z1A:Q*Tf_UDL?/Vn:S"GSpHY5J#Yk'NNp-t8Q,!];VPu+ZR^sZke6mRc
%cnOmu)_k&=D9]]YT"a$#@4\os\*tbEZB3RtZuu<b*BYY(g5A[R:IgAg5l:>][9e)V""$ra''5g>WsW*_IdSQ:l"d[Bicc*B3Hl\`
%06?I81mqjpimJO'9t%tAkF6ERZdM:F(I:!SEtEZ`p?#/KFaT7o):n"Od`]Z$';-4=3F=,=QHu#N7PEq_Y2u,qD]'E[3F<>u\!GA6
%Cdp&?Mlu02TPk\c]q!Ca14CgI,LE3Oo0q:%9fR&/)6o]mO4CDpS)BVc%UREs?->1cQ7e1uc50d08*b*5:sS6D1HDjjA3k5Uja>I`
%I#b6k<&pS#"*Ac6;O\-Jq8'>fi<ugkgC2uoAkd&4am-eZi2o/go/q5?>JaZ#DZ<DYK[fO.T?Z'-ZRW%I@538%AH-t-Q,;RlnGV\#
%XC>8`mu$Jm+5G#IR'7Vc_kSZ,V(eXOV1Eq0?Ek,M`0\,lfiYpZ^j(baIgqO4V?sl30H""JBsVKd)6/.(+LC+r;S?5uN1'bsL"b2d
%VrTei()'So2>@6F]-,32].Hg=hDrW[O5A.q>BZ?TIu,JuTk/G)1X-Nl7Fqgb:j*Ye^P"41`pkBb[3Ab<iYC[#_Eou+C]4cL&D1l5
%>dqSmEg5UIbR"_IFn.RC"#Wno>UFTsK.LReKNmYTR9*6G>b\>o'4'R4j%0l#re7jU0Ve22b2Zrg'U"gCKYMb>_HS(JX<-c3([Y]@
%<)XY)G(i6Lm-D*(5r+C+#;%mT'j`,ohV6ZjTuh>]'CWR=ZGLhB42VjmL<TM=V`>bV%4<2aDq8u]>EPOW;7GS$Ei-LkPk`g=?ITNR
%R!0ug41%UmW,?nt:I\u#9Z>;-9FG3!)2;jSlS`-drd;!-EAp`hGY>9\iT@lCnB.XUr'a8=g5!*K=%(/K^pCKC^(VFrSr<4c``Dgl
%=="L4EuQ23"u=%-iI':I/>TD;ak<J,KGB,N@maLF\3nm]?aAi6-129&pDnEc,s5!30DeCM"l_NT^/E'_#;<,!;QpruhhCk^40H/A
%kF9Q*:P=KP4`m=&rl!>>j'GK"._QZ01VD;;RCGM3_Xjefn63MY"t7,8/$M$JBKlr>$BP/QSLKD<s.MBD<,Xp(S2cZ9ABg*h<Gj#%
%[;!P$6!TBjTufAS;2',pAT*/Wfbl1`9-+bI38#7sHnuV?@`n9ZR[>eOT=rnhpUX&l7\2Nmd<jucfc-NYM>JMF3;/a+c%NPAGL3;J
%CG0Dq`fmh=ZT-tDgrQ$2@l%)8OH5R<IWY;'h$Fs#&!pfkEbLf@]YNA`p*F,r>Y+R#_Z-LI=Ph!`2%?Mp$L[4J#&,;u<:N&uRsj9e
%qh%3dBStQAPJiT$muO;3EoTKF:;a?!"'&-7<3nf6"t6j"J7e;1]"u[o/OW72[2Kc/W9sPG?[HBfJTU+FcNYig$f@<4G<+YTr.a&^
%n!Vb2`%O5K(L,,K<sp?l)Cj+=gB#E&5X7Iia"5<K[<Zr1=(!CdZDGZ//+Z*%[;f:1-/<Z,C1U^l8K4Wacat(g/E(3S+Y*)<faKr1
%AKEeK,n5jA1=+L?@B7lk<T^h"q%6i57^(#\,*8TqA@0KAG3?P=S2\N"QD?8hDJ[<lR2<G4Qu$%6P:fF-q'Ha(Xd,[#-qXEgni@/0
%=""TooeNcA@Rr"g0t;;Nh/IYm)T/UU8LntqCm;nJCkrD&_ciarFC[b6^&e:=Yr7`"D3#NMMtKMP^7;\(51(-]c@R1idY07#HFG1G
%dRP.5+j.);fU$=h`qPd/D!Ec=YY>MUa3so\9S$sl<ulNLC9UDKMf7>0cpqmuUb6&:&=55<:`gq>1-uou>p$<dT/,tX2@1CRg7&%i
%a'im$o/O2k$#T$;L.Q[L[9,BB%_F)tMI`p1;'\eL4N:DIHiH7S,2)k^nJ'*&P=_d'@U+`SjFLt$T>+iHd"W/Pd>=eG=_K5GFTVrl
%&J@QKYmlE%kaIa`3BhQ_.rpH?7(`jbCB'IWfs(=_1;=OMa-HIf_+;5H(JCWS6W"nS=rVfchF-qD?&qmJa&C=A:m<nnfJ?)rShKdG
%0k+W@b4DJPXs:jVOc&_BBPthrZO^]uaK"\0hgUV4I_Ir]iGZL*:2<]QINuQ>cHik;-(_@jh[:;lnnao0r`:M'Y=qXZ?iT(,cs3:c
%]FgVVE.o>,15+i`&l`-m2"AN$h9M4+];q2L3[%#XnYOr`i4Ao2pP)3+'lV9^B:HHg<i+;k>^KX907Je4Xk_c5EN6Hk<ntcdSZfGM
%Ai0:kI11(9L%=nbq,NkfT.JF4M.DH+H0EF:*SLW;.=Sec/IH"1m\VUTNkO*uhm%4f.ttU)YTreCUPf$>`'Q0m.liPN"KOG7-]pWH
%(]3#V(AkN$E3+9sGpl]UM>Z2)Snq9V6:BM_Ypt%'qWlMLl.cd"5d?sXJL?73642Wd,)Z=GbLLDW<h[2+j4Luu/l6_h*#=$YQ/+Sl
%Q/,/M4KK4A3JAhZ\%M,AJXSU!+&p.^Sjm\oE<"A3$ZN^^.UA;;6T\"LW*k+]M?<[5CUjRe-u"+?+=$q%IP.ea'>S0[>.p(\R6n)q
%'IR`6<8oo5<i-G9eN[MmDhrHBXAp)7X%^LBEt4qAE8MoMNNXXQ(Nm#>d!RHdJfS.U`C5KJSZD+;Y-B%O(\3H?E?DC))nnVeG(I-2
%,qI:%-&@Up>=-R2df"Lt,L1J=G&'V7*?='L^!Ig(47<iIHF@8n>)DI:2gJb(YZEn89hEW48]ph<4ke$NVA4;;!,hs]Yc<abXGjQk
%O&sjjFNu5GY`BSH=D>Be(A<G/LrW`Pa6VN6o-2Ga(&%0@Q.S/Aa&pu\kj:L-(\T.GGE8N'O&sjj1"=B?+q+9m<IOe9O<YM6n^_u%
%oc.IM+)bEKloEY652ImqmmJk,_EM9H"'`#cL;H,\<Sp3_41^.tm,O?U&N&N"m,Lf8mS_!U$N#')EVJ.F<nQRS6`[65Vk-8%Y(>2m
%E?1ut(\[Bf$7lsR?J+FV.fKS5@12s%B3M%H^;N\aXg$.'<.Zlt+Ue0l<IK$_Ff>8[r5(Xh:WenPN2*W'D'3du`&J/%_Y-6S\Zd_4
%`#X&1+0S<NIuM(FO#K[Aj4JSaqr2)20bsEPfF_6,+2+n>f;/f1S!1_e<@g$J/k5Kf[#OljLHVI.U&,nkGOPsiG['1j9Bi8-O062(
%[2U8Aa!dk\-$D:<42oO8ca8c&Mfq+DYq#GU@'U]9LfL_:7^O-p4u==!(OKb4_Vkk@KpW>K&P)78SrKi5eL7`_]Rlq9Obk4CUu%oK
%WeIKn^t>03KhS#GbC8jSB*cf&-BBekPr@A9IB+)(rYN2m-E4a$IJD\fa;HKO6SRlcJ,Uuhf_L"!emJ^V>R[kZHC2VM39b>+q0rJm
%[@CDaAIM/O_%-LOP)qE]s2?]@p@(<$<KB?DDj27fo#=+1C1?7JFLCk`=6$QjEg!@D2p<<:XfXnh<oup?*,g<3P8[%mdhf`L0DY&(
%rDARqE4a'T1_/=A'74P&`.ju(j`/A2;$q@Bgj/<7''Oup9ugVWP,@7m1@n4bhJ*chq*iSV=>uS+)9kQRim5WUe`psu>HQ26DRGAT
%8U^N%BU;_N6Hk-\<`7^RLasDr!XTg'T*&eZ34>MH<&#Zs5T1QHd[irBmj3fQe![GoQh1&b\@0DJ\@nq?M$mYJ7No?dL@tEf+p)RT
%9!fPn1RWr9PDmbig1&!)-b7'*<!`_QE=5ImDrkdjEK5.(A0I7HL%t=n'ujLeL+K%VD6gt.`c\fOAW)dLN,/[/T1P&IRRg82\[jb8
%PYe"Sc+JdVW1!m'-%*,R:8oRVB\3F1]^ZGFaC!FOi*f%Q6-BBHM\B/hn4P1l^)$kt'Q`1%KeWo,1%Df('@HKE2c0tN"0@_^=B0TU
%dmsDJItP>t6_=/kE7NX:s+XMus/(dL6eoN'rL8U'5]@.>;0_LNS$P\8=<FHKn99rhN(q1CN?QUGRn3PTG22sM/._\;D3/$GdEW7Z
%p#OfKkag:ZWV3Gh5#3I1<$u-Ma1`JjeQPusjuBAhn%YW]?V,H`@7.q4q_C'h1c0Nd0=DMhDS*`bn#mp:\_'4u-UA`KO38Mk]H/I1
%Ao6f@dDqOJKG?:_KiE.tHg2lYV+O]=(Q@cF@l)K_*GB;Okh`THT`P.8UAT1N+dL<ZUpX1l-(.nBS0&YrL.kL\d`ZSc*U5A6V&tf#
%KOU(^A&R6:'sc!`Vm2>C4XrUWa*9s67_d,$9&8mco`t@\(=srG$U%>BD'9i32t9pr6H>sb9iT3*i2p20PSUkLQ+67Jh%::2)O9Ld
%_1<-7jM#()cOLrH@@0"Ajt%=n:j'7M)@O+HdkVH-]-$mK<p4W``#2`4GeTm/'Q;/RkJc1RB/@;tSaR<%Z7gpK<c0#RMk7?DM.idF
%Vp<FRq9-7E0%u;s$#^9b^IIWD]J@em=ZQ0_PclhqZhe^\ecShC[#_)Rq2oQK'I)C=8(@^Uk!H<[jn#SfIsf/`aEai:=KF`^%f]`k
%4]nsgNGdp!Ni$%&F<.H!NLY%f;-=>gRVm.0Zpq4Is!_RIrFrn_\]g,bYOH&s,*!XBDXJ@Ceg:c[a^=#gO$^C"INFAh[Sm!I%Du?O
%1f5QM-eI<Z98@`GTcA7%FgQ4\I`*UbT`lIEn<7dV\?@02>:"5p@hSpDgfG+GW@T#f3,@NTB`'G,[M"r(%<aK9b:aOP`1-anh3i^`
%g\I6D^*N/l[Pc,9WQ8T*ijRLDacu;kUMh2JFt(N5?3JV3a;,`#<p&4%lDq*,C?$(j-B`KALUb7aSW;lB2RrQ@>Xl%L_8`Uqj`(B>
%gkr$t@s3GZ^;,7seOmCX/8j'90u;_n"?e#DOK="E1k[4T*\cJd<8tL-JbFU_l:o2TYY@_b0FmXYi7XE3\(i\&AuRqR8E6tn>6Z*)
%F$&HPn+]R,NGT:*Yr%JP,3[h\)"MC%V(nd^@+<:Rd>0He:6:T]1:M6LM5.aiQd21)P*i=g/N0WFVLj01#0Nhu>>^ug(0eg`SZHdW
%4h.bBQMP*LUmX(1#W^s$0rGW<Gm8Um(VW9hr'amZDrT5nrX93`It_f2_KPR@+fmPQ`-$58dq,74=a8jhNS\nd`P?hMg*e7DEDG=6
%h)jh2fYYb1Kt`EfJZI(d\&Og8KQW-a1%_YAo%u*^\1TN0+C][+*PI<ffB)SE&n+95fNLu-d/``[afa+ip2pl#>3ni&"#2D$OJ@Ao
%(0d8m]US7B8#%e5#pkP0@Laq)%p"j\1udWJh]sjH$rP>94X*rjPF!PL&.tj2S-V2P3a#$`dX";np)L`80NgQu7)XB!#tbhoeg!Wh
%m'3=MZlUr2pHt+,`2*'^^<Nm7F!PH_,(FkqECjWfH:3?3\g5[t.*sWeWJWg>d'[T&orpd/qT\IkXH3W-^NP+u@>2G&?"3[cn6q#Z
%2JpZn'f(-/Ib/"^J[F8%3NURd8cQNB$7A;'h_Y(:Ke`H.OK==[+6HX3,^HF*Sp!(*GcTAV#9In8#sDHToPQba^r,AfN/?c-=sZE&
%0L7_m3"A%jb?M+.%m3PZ<i_>n4L>Ira7332L]\.mX7mV1^dCS:RF;Y@"F?^C&&#mc:HRV@*^^rm3)l<li!1<X,q%njLZ'1[#!DB/
%qS\)EAES<Z+*a.uf/\Qf&#2o^FF,h'JVV?+_iAisTfYlZ,VZRZDYO;EUXaU@^8#K9!tV/>^<kMRciXfr$GVn[ph&`!Hue.R_DQoJ
%>I,La4<.b`odC%dg4I7-m;QP(ML>DSLXE5CP:=BhGSnk$jGpAd%Qo^,Xu;F'4G"g`*_)J#1OGdL5O^?fQLjJ2*ppa1L9RHY3XpDn
%@IuUAZQL-t`B34t_rr]/DWZ,\!tUT[a,T&n6b=P%J(e>HlQ#W6_dTX^&-j9IMBcC3_f5p:D(+*77OI-@.3-(__JP!C],o"DLXE"?
%:3^)`37<A5d<fQ?],sL'n1a^`,Kr'UlHfbWZ81n+oANIV&$Cu=JVSm1Zk3d19]E(5iP<?)jCsA_K:Z"$nG@^FS&g@Kn1`4H:Dq'J
%[/ge#$pC?3j4o[R^r'\9!?1dL_oP.T\jeB6!tV/tT8>dqkHZ<C4H+H4Ge5&P3q+h2Z@&Pj%\4VN%m5eg-"8`HYQGE2:HM6NZ'+%\
%__LNAiZ*2&@&^k)"#[rHL\t%uqm8]pc0trZ7\=kFg9dOa4H/,b2.<%S(ggPbPAlMAmK6-%p:s$*@0tJ*TE>_F&:5`an;p^r`T5Lf
%ET!OOVEh`:Rsl4=^dA>9pU!:7T/QUuLET.'RU'ALl/W'j7W[&LdmcRkd).]cmUKQ9Ei9'NUPj5(R5UW\h$I8u3r4D_dAJ"jq`9Kr
%n1]0kn>B7=l(Xn_"27u.M't?]dmS-oM<bQ%).@gEr6-l5iQ/FRR/R$FRN8M=*@70Xo;B65I0O*YbF9RuB%f6QL"&fKF]aA_dDZ6i
%=IGJH^K]p"QZI3Q=h/!:gE;c!V^$?Ul,EDB8T&fcAQHN+;"L]Ql$i!]>5daA:<bI/2t!P]-e#]@Klk%VMJ+>T*jq9tZccBuk-K>6
%RB(bCQaO0BpQPUP>']$'r-A(B?TU'g_u$"nb;6E:s*"*U;K#fVk77?T:YQ9K:JZ\g_QOpOf?r2iB(`9s\_ZUpB$TQ%3ZWK,4kZjC
%&C$.frNWqQ>C!d'R$iU&p$_.KMXW[U/9X&n/'$nnL[B`$Zusm>XM-*P6<VrC(WtoBARTqcFXV&J*I`)koo8'.s'pJ[41B>,N*T4`
%Q(RC"V9GBJGXn-%IS,e*4J?kr5BXR+HW*9!W5^\if%?(1fCa$bG[&Hpb%pg\(\`GRHG&7mf(UWP(L\)Pna`_(.VBh>e)-_@VKS?@
%3o&&7pU1#W42!U8F+$/fX>[M!NmG0.k'iohXsrN"JX1:j<FMioEC\Wd?CC`qifP[6-d0-Fkt_1#LD?Y`0\%.cr*!+iWmT.\L+aR*
%5)-IF@*@r-n+^0A1H+m9Q._J!PchI/0/msc`F?hdSo\*^BkJ*^*UIXW?(<#!GI3ut),jhq.%A\`YD%bFW?'DgC$R*EUA@S"A_+>o
%k3:=ge9n.'1t+,(n*KJ"V8niCKmGU(iW(i/0;%.!OLtKsQC`8+Q\8W:HPu#FC#!7(N6f?T]%6_B2_HG`Ug;a#:X,"u8][mRJq[eH
%R't\".k;M.',:?9)h)ZWe"70,g(O3.:]L4[Zi%1L[kGBWDSC%l<mi"]I,@T[P0j-kgfPg\!0)-)0_=Yd>Ojt"+hfurZJHPhCN%K-
%_/j+3HM>=kEO\:1MM\M'b%0&5SFOC55A"8m)p@(Wm1g5:jfB=d4VY,6l:]p[.MD`F8E8_$is]dmMSMf<69VeHI&"d)Z=A6Y6"K-J
%FI\OG"aSK&f[,I??B?hSll;.[<kC#oG9VlPK\T9^P<1c$Pi;$jIEsJF8.4./_jg6K73a?W)hQR!RjfqW$]gdX_WA.+/AZd5lUmnu
%@#/Sm"OLK#8Z%HK8\rlIR%*C?aBYeje$ScUjY3l&]ZsHp>.?^g>@Mu$-fr*HQ#;'NlKY8tAC<gEp!`@*Pt,/Vim&IRLf[QsV;gmF
%8>I>Uki0dJ8l_S;\<*e1rOYRop/5UuqIG#<hGnAZV/8?NDISg==]-Fg4Z+A!-dP!L:MJk;c\:ZqNsON5*f>EL^AbE0]i?habNg28
%c*O<,5HiK=1bl'+,3I@V7eV6bJ,Jk<.IQZ%cePmf@)&8<0]@:gl`;IZD]@jkH)A>\Z`u^TW5d.U(CHj;SmB$.X`)0nh1:bA\BD'<
%+U?A=-oriJ5Eq(cad;qiq>FR_H$Sug-e]YU=E67fan=@k\Ki14$"e;E)Q^!+hnEc`8S+$*Rb+s866E(ig3%E#[9kCGCnG%;4<1ck
%M%SQIBQW`CAo21],\55&D_'**mDe8\4W)cBF2iL5!jub7m0[p1pYoZ=+:I$6[Yc09XH$P8B'@TZ>sELdgui3+=._UH"i'6$-OB=s
%XsK`UFq-cTQ:Yi42P&ng=4_PO0KlL)j#]oZkhj9FQNCJ<qbT4k'2=c<^X+$1MJspZZ95H<n3u9"g=u;WqDW2)M)bSMgU;oEh]u6L
%hD49[]/`0*hVSU+fQI;QT2sbEd1QHE89@i$OU_qFi3q5Qm2gjf`BbgpL`KWq2O.B'0W-qSSEcG&KqG"5)G&.(0R*Cn">k#V0K#^(
%6LK)>d@^2O1U/#5EEmH&^,>Af#`cC'<'8,g06Ht!e!\tdc#fhVPg`9$YC$%c+hbO$hP;q\fu*HF<%as_(:TUXbJs*_HD01t:G4Y&
%md[HAL)=`ZHAnH,Ic)o9J2HGZ^hg^Ii1PqDYjAWB6MIdoH+C\u>CPk.Vb97^UQ=upd`thkkl"!tIpQ*OMf1!!;rU,cdgpLgbIq,l
%SRQ%AHQmD@7q!u-[uQJ-6%`21BE!;Of6hT4:><sap#d\]Ir(@UNk0WP2A='QIEXOqVL^:j.;WOZ'XdT([(*Yms7'(4T)S'jhU\.A
%]FI_>mn@0eN(p&2hXCc-ZZMb7G.a-W".ZL&@$L*&hl+3!@nnrjp$up3o5a9qHaC-/\NuQ,.D$2"SF<83K;5kKk=P2\[QV#B(Q-P8
%lHbfpJJaFO\Rm\MIuC+>XOs`4nEkn99]s(ek)UKB;Ob6Q[PRj1aK0/Uh,:,!qiO+X]]uTLbg%U.2>s4un!mENe`pDJFSe,p6'N#/
%(k&EUMsjr?]H;"#P;(d8eJXs^?T]p+0_!2p)(7ER(qf0bAt[uk.;i0M/TL5(].QCn+mrP*oDIp6Rof9cXg)Iqbbba3V=4*m[AfRX
%a]10q8*RSX`AHF26;'A!`qCssS<qjtitX0<d_YTOHD/ej8h[#jc=&(R7ojt+n8VWi<;TND%^<\>\_6o+r<+rB_Wf;FC>W25g=X@9
%H"8uqnOJa+a*/B=m;a*YEi6TG8*\?1Q(>$;(U]O7):M-g]d=U0=6EE.7Sp^m3enn5Wg-@6XlHcHnB=)k[-eG3a61SR2Q[GUatUJO
%Q6MKu4*cTeEPpYC<drP\%dgZJ>2uP`rbEcNF1aIhSWSq;&edXlm&fSg0/Sq"BRka(qT?_GJI.I/L@<@`Z*j8rE9`P_1eU;Fg/e+1
%)+9$g'aOdup@C@\\l3k+/"VkC)h>RPPrasVO5?O+]b<;Fh=_)1%*?AD-_MSr2Y'2K]eA\OA=0$5Jk111O:?&AV/j/X;QA9V53M*)
%8it(9EUu8ab85B;l<T4.`@WU&X;'u2&4g`8mNKRZPF7E\oi\0Pa\fMTKrr\3k'\tbcZL*1"42_u(c/:L_N7l$pSWrD`U3'#:Dd^>
%HP"L-Yqhn>;Q#BZoOojg!p`VDRq2-d5a+3JWa(9?qeV#IH.$#[CK_[qJRW6Bn_bd"a4YMb:.7!S+p*CO&VD%Wh\<<`XKN?+p?^^S
%mF2W@7co.Vli$F7T7er]$DITF>[f_eBH41Dp_cj`N:-#]Gj32a<`[#@JU->=0Yc*Q2Y/RLLZRMb7bu6@[4[,A^\Vq=Q>&87cJ,Cr
%cGT8$l@sOtOE>#QA$I;CpUgF-q.=SEi4'c8q&NC-46V&J,3nE,Qt=&$!=c%QBOTli5/D&N:UT$n`rCVc-K.oo'?"m=:=N]+2Ts?V
%UVTUY\68L^OLP<)hk&+q47>O8#_V-OP)@rZO"51P+2lFS^!BWdlT!e?%JOP-'i?_S1[pVj\>2pIG=%<5D&.u^g8gfIc\>CSB'9-]
%aqFtqg'EiWd:&WB7HrKe]uCeJ61eta-0%U$KUrXOA7TP\qCQr-4RAC_Gdc)n[.M5oXbiI]:&NY\XPY3"\ZiRiV3gXDB:),h?qtY_
%De.<i+2?+jB0!Zpj)?<XFSR>Hm%?"=30n(ulg9h>)/l7@kOP9lN]EjhE&&`ui_7E3JQE[8]J$&[h3%>31E*p/'+p$m+-%_i!Am0@
%0*f?9OguKYaWTe_&!Kd.7e"f\k$T;*W[&PC`^C`[200^mYP@q#ccP/;Bpu]=S1Qki)+X2fm5RB__[C!%XKs+f21FS-nNMGOn`qpW
%UdMlD]nd'BFOIS*N*(E/#1U/1q<>5j=O&k*^Co0Z5XU"I]n>RWgQo81U&(<#C@\!d0@\Hp$Nl&ZeB6d[ARXU[9m9.]RFAu_%d+dN
%Y1>+NkRY(Sb4\OJ_J`f5kuR3lG?V(%)fHU(5N*UAn@M/^%)$jNo(S),q*oQmr6E\;6]WG\HUj\:4jH"$GP'#(><@Xjj6.#[;E2VY
%PG'@)i4"_1)1"BYq0f#6L-E.h)`@JXj"H+(cD"N4NXK_FJWFN5VRI)3*66aQ:Es$.Z&JE'22)"DqDq7PX;qW6nLA)/?H`:f-Z5V9
%WTIGjjP#Q5=?Nk?W]D"NSYUfY)eTgbV&*uYpO4RWDr\`mbcF(o_KU/3XXKS-phmFId[mB:oUMEn8(QEbBcAG92Yt-GG%PsRU'e3*
%OXQm1T5j*l!o[DiM-/KRi4#e/NGS!i0+7::$l#Nshk@XaL&('e@p#:ST75MW)m)\lCjaGk:S6L]TIJXVi$3Es&D8*ue9U#h;f.%T
%+?A/(K/][/15*ZdTs)IGp<+ADXbH_4]siLS+ZoMc_H'G`#f+-.a":J.0Y_VZn.g\Z02e[hqU)3`Ef\]d?2Ytf?K(nZ8Xg^Gd6EQG
%7+]K=>t9@Pq*9+Z>C9O$gqGu+I)mr;`*N1^R.0<NK(ONO0]A<O_6sDrK=H6nhpHi8oW(1d>pdX:%FJS@H0Se6MdH#YUPFMMaLWjO
%p7OgAd+Q"@$P`k(2+6<g7c_1RG575#\p(Ij+0HiA@Je]BVL,cQ7,nrZa>V+4FTQD*BY]UGnD,##[:)"5dgf@c:]4"`B&K)W,7lS<
%f6`P/OlpVhIZqPlVB`M*LdZX_4f39kd;#Hj1b_3*64:2$Qd)=Pc<'SsS!KQ*(q,G$p;k89paO-h,or-.B325W/Z/'l\;b6uer:]4
%`G)d^@VcD//RKG=,Dt(BB:inR@9W4[>3U9LZ3iAGIhgUUB@:\Xk0%U/fK$Hen[VQlNb,flFBBqUm.a>&\Tqp;P-h0:h)m&C5d$of
%D:CVAWQ`VB7nS/lQ<a0&4pR8alqO.4Aq.aZFBAY+XEZ#Z8:PZ!+rEn`SXPF74/mSq[ZR/nr&F:+nGLKf5\-$Qb)GN;pQ.eQPP"Ie
%LnaS?faSZ(mj&o2,1"Nj5Xp^;?t>FLrap"D63Dm,fab+j_H0g+^>e<E"ZL1'j&YN([I*h3Nj<jkKofD-T!O$-[2[(,G%RgBWe.`q
%eY&5#T'Xn#ita3N_^p>Jo_uR"_l1asX/lo6W^mkn>ud.75OgU/o@CBX2>"V,BH8J7bmAFu3uRAIb5="@QMq"Jm:&<=m:)o)f4aOY
%:3"[6YZ'qW(9-WrJpYDiL\8'6k=0U*Y\)c@/A!h@NO3hTZ!lPEc+3T0l.,O@I=nMh_M#c!g7ir=MgE">jLKi?aVk2n\!t@@4sOoM
%hiiZI"n:f,ogo<%q<:pT3Ggl]Q"e9M;Y.:%TgEUS6j/m]0M&0*.>&rKI=.8H$ql-0HQ%?>OEMH)!9K70A>]hNL1';e'].(7L+Kjr
%2\hZ<5A`5&o5VBIbZ0/:Y.Q^VnC@Bs+!p"b'4Tro,YeDZJ!)9.d+0c;)N&ED_Z-JsBZQNu=kGN*9Ok]I3EJ9qm_5j#/c!,k(2]0s
%pD.a$1nLT2P16MkFL+Te3!/c#6jf]UJ;611K$P5n9@BH9"nB./])^aV7'"8qq,(<SG9n)qkGi?JHW<T=ej+\UP4ii$O1YPrY$B_X
%QCiAQrU&!tY@hQeUU"d"oD'k_DEOfX-`c+ri-WK/c0(GUk3'h"cGtXJ_M;/Ug1hI'"u!GP]B"FffB0U=RGN);_>7W_7dj1c\&HU;
%pf>@C5PrL%>Mf6d<?q3d.@s6OPT7)T=^G?8?e$fr-P+?a%q\L=jZ<:geV1^(%$p3CBNB9;[6V2?#<'BqSt]#T2la1QRu9HXkkdCK
%^U`PA`s1inIrj!b@2`7MW1qW+rsSFP+c'%=OC^#/47+tASYJsY^"uF7:&M7WnOG4H.uG.ff2fF\X.@lAmM/qZrNBD2QWcuBnn3[4
%>sg3p?<XP?e<75M96Vr,ZIKU]^qHpZn^TX^eF?T0c.r<RR6"WS(>je7Fg_WlY'p;/)]!C0&pH"inAff8dpE],S&/$KVC%UJlb[gk
%BjpUlVX`5UQ7u%F`]GOl#.<LPpou(/)4]7GkVe:nSaI-i]V/*<qHDYF3d\I=gGsOC=FKRQmc"pgCPRVqaj")Za51F2qmorhV`p/7
%=.AbjYQ4RkS&pqRR84h6q7_.H<6ZLAh+>f;R@b&d1rt"nQE1l2W&Ga?W:o@.,PBQmZkp*tr[,pS>'\:"X84#CUd3V9:@<^TWijb$
%<e*NnJWH`FZM'LDS8J:M]J#OPReq':Rf*EY%C>61<an;2][W[=ES`7OmsVO\d\H4EkO7U3("_lc1IU]D.(6k;%m!tfC[1W4]^sj9
%6gneH[bhh_eI[MegEq*@2sH5.`1?!FcJaPQ'io3Z87\1`:1_J"%.OJa8h74;G^%idMY@o=jZ0JSWP:-rFq#5Ypf,$kUM(Bc+(*K?
%6&_;_dutQEZO?J"/U#5YA;L!?3]T,hfms$^T8qR5\@L)9c"V(*)(qZ*$c00JFg8AQaC!/or[`H\qsF<,^3N0A_LTt;Fgq-Z]s6SY
%g3M)_\a7JJ]Q)W]ZJC:nlha\aRIg6=8j=A.]0O,2-SMHgJI^o!g)6#jE7o-j*E'6n4nO6jP&HZDpAD'+2o8J.c\j?]Yq8!miA*6]
%T;UR/cL,>1cH`q/6p(a9ZhsR$fSX^MH<t?kEDbSLpX\I.5+h5Jfl%gNr3d\RU$UUsa;\rGo)'^1<k@23cu0uJHg``#B"pXP9+IWB
%DSL?5`OD9'q<!`tCW1H7*l*cf5+/ldN)?48,r933l[dd8_P#l#"7+==d(XpIZac>r_4>J1\@&H+Sh:pGnCo"0XT751UU@@GA&GXj
%D=MtQj/ciRiE+<6g=3e&b8`>j96O9=U`/D%#a'&r(*HRZ_0QL9<N/UJgB0`Ced<45aedSe>f*+kp)A,C'pgq[\9sVdp<ta[bN)*!
%`/*C\!j=13]tM0g*V9=iQ2a$.Ls(#e5jka)oB9XpL"H.r'g%FZ+WZse9969#KP33IbLF+$GNXB+B6u8mX>_%R59!gda_$sR*XJf=
%gc#@]S<qB/f';5fAd/M9!(B_n]XmM$10QWQnt<EANX'\t\VY5/Eo0%@P^D=-JsI(b&V[R4)83mY13hh]jG[F(`*HGS=lbNJiM7@(
%0e@?7YAa\iNsrS?)83nTF=AS\OY_<;PAX89_]iac$7DJacQ[#o$7?GLE@c-"YAee'VFFeNN*bH_4Gb#_a;LQ:S)BhW1<PauIt_sJ
%Q.Ca[c=jWTXL+"ra;M\.R5Ba>]>tklhfP];%#^Y'R:Js`7pk>9?K$!->";iYN,F/KBcVYb1O=b=\,J87,%pNTBB]3DTSo>f/"@2%
%Xb/3G%_hp"e08Pt$E).UOV^$Q=#cu,oESLZN*bH_APM'ka;M+hi@D#4/ojFbE&*S7r$#d\!TL8h%^X4o]u%m\Uk`.7*,)0kpdNKl
%(!aWr=sFeCPAZ-oEKN&'KemV0:;"Xc]u"K%<?$4G1O=arK"e^6oL7'h'i$][2W>onoEqK$c"N$*d4:a\EWJYuU:@OLMWr:t:GPms
%Ia=\MI^3Lt4*Ok8Z,UbITLGXQQfU)`APR9sbBGmgER7HKl\Uf5RHC2=AC&]dc;SAqb$6PL3"G,phIXN_buH,gTB*tnhQrcc.m2+8
%>G[%EnrLVVjL&V<)eef<ZK<beW4h6Ug@iFdnX_u2:Y/7KYK+."FY:6c8a2rK\7qjN+(](R<:R\9G=-lM,k%q&XV^Ds'QCnO.VED[
%YFtFKLB[T&g.A:pOs4]#2qe#(cj!+C?haio>H>H8(Qtf4V0eNmj0sX3:%Z/5=*esDXLGM07e(QR?LI`f3b_6HpNg>4)N'!]Z2;AO
%iV:6qO=&:+*$JZ2i8`s7*l!QW2\H^I5S)]d]W?'#3[t*A]I=ON`^74@3k.$57Fj+lW'.=t,gGSd9)+^JX5(XJ]kuTJ$*N)\MrUU[
%(MuX5[4RL*pThKNU<L5B/5EWlNnRVi=W,CnJM*)OTPLrQ>$:0.iLB':l_WNn/?TR)09P%3Y(#3MdP]8FdRo7a,66l%[)Y7e7GbO:
%gp`=nEgN?eh?BS"3rp!b<\(tsfgP:57UbOJbgI4BHSP*ABAG$=alcNuZ-+d=B[HVg?%]D/Lhja!H$_ueYXGZp-_D`B-):0Llh]`[
%9g.nqQUSLPi`daMc'`Y>%'G!;OpJ4/5*_S?hR-(f49LqqC;#(cJ>c7J[J,!R;Z3Ktasa.NIffP'T=UF',pO_8.f<-5C?9a#O*Let
%&f4F\N9?dQq+e+qJ*GKfc"cF6e-`a0I8IK,/Z)QH'`&-/=&\]UPOJ_5E,1"UX$.]':D83`WB>W7s+R(88BErBUSP]uJ+2&2I/=*!
%r^r#6l6(6D+J`<ki8uKF'N-&GZ:9YG?R3P)YOkJ?_SGWLM*D[hY%;_hs%0LKBS&^FQB^>#MKN2^Z]ZF:U*L&V+H(IbRpds/poRK-
%hadlJRl(UWdo8n8"N:pP4XFW]bnN$4d3RP0%8jAkN\%[Eek"/51%f>!:pPhUMmB<#\fr8&P)pCf6.?$;Oq^X/IYa/MeO;n^1db)-
%df^dL/"21s"KA,o91Y)A.9RCZ1`6i4;G*,6X=>0hA13<\)_qHqJQZYVeUa?ICk='+>#l27<AC^b+;Y<Z-s;4c"@H'U;am+*VH$XJ
%F@23:SH&]P8<Sl/P6;bX:s,5YW5pGn'3)iq1Q+[l"1+rkaN&rWZ7HX]!/h7K%]I5HP2m`^!$)HshuRiE^"Lhrg;a,mWPAGEIHdI5
%'DaT&&$'89RA&NZMU=[(*Y=F1YWr52/5Us(`'FW:d+-&V@,=X*r\.:B$Rn2kE-U%M-';l:DMl#7#V+4HT10I$eRO+Z4<Red!3t`i
%TLKQ_pbMZ;m>E9S#chW&=>akD62JhsTF)2885fRT/34QF_#r\i)n/LU,!,f2A-*<Rd?%@,+ahZ/(n_3P8E0[RcnReF,W(4rjF=Qj
%[S-b(/2=Be[KPeQ,(V4K+>'W!J-+pOTEZ2\Li1El.1%3aDodBWisUG1(n_3PaQ*=)cnReF,W,%&nitkF9-t6Oe:"P6$t#*F/J>#!
%"Tkkf!#.]=!&_8O6$2.Q8O[1G>Eu_-R]&ia+rc1GMB2k!i;q%E#Dbgh!]?.f'I&b@e\9Zk$*]$*^rfQ:IPhb:_?0kfMuXEINWj1e
%J2lc4/X,,2qP#Ff,f(/t;Pl!ZU/(I`5(>CcK``S-WY\:%5[k-u,7.'f1AP;EM_1+sN1]?iePm%WE[4J8"!e63`MtKf%(ZF8K*0%Z
%a-Fai;^3Jk2FPeD'ijt'7XUQ?;^:8T@>g#1qNW8aP.D<*Ef+CV\28VfVeaS^/XenuWM=r=?`=pYS6&[f+E.TC=6=NPOuL$ccFbu9
%>ajS+dUB@PH>I=-VFZRY8':nW!%j+W/j1D'1gk&%;['qcJ>X.GM6<n2U<<Uk9VbYg13HSO_=B(eV?MN9+Wsm?\4SMf10=OM#U2O4
%RK=.`";!75.CoTJW!7RZi$E*C$kOc\8s1g)?BBPj3Ajqo%'\83F9u1a6U`+(]OXAdTG]1/8C.c/CR>)&:Ils?Ye&#/!#HU(;_]Rm
%=*6m+L_q6H#1gS%'NnE]`CL/'&]*F(U!Fp-8[>K%4!\PpkEp3SPr*"]`P_0KJ06NL+@FaTaja5ihMQ&KQ]\b/.P$*cU]NmtJ3ZNL
%!<E`<JdsOY8\AZN]C9qk8.%a9Ys!\sOt<U71^.3[(?>j22K]\c/K4+LOKnf^gsKOq!^k2[&/5ed.pQdu3>*$0QE*<fO4Bj(;.;7[
%UjD),QEpe[]V_(cJ4Z$NJ/J`,+&Hg<-lWPIFIU'?6UcK1+jGOMKK)C47T1WFRKSE\9f=h663`h\6BD@Ne2=l8Z7#d@9e[@r!KmP@
%+SZ+<9LG"`eH/Z!hI_?Ngu2doO:;5:IA?iR6is'O1(6UU6h&jfAIFQ[0:7E'aCTT(&=O[OX(r-Z$QV\*6NKZ<WOKZ$!_a/I&5PkR
%+H4`/F9$t&!PbR`GD`E@m1',1!$k+0WCoc5b7jr,SuRAC!imaoLT`63h\NL_JPg#.#tbQZ+g/VcI,W-u_ci)ea/KX#\&A`Fj,.A:
%b_kn?W+qua-t``n":rfi768%hCuJkK$WQ'cWSe5[5nQgF%Z4tG1L=>V&0+)L3`F3W$jmh(#g*H1g(cj\Yd1?F0`H`GE'(i:.LN\a
%BYf9c'b1e2Of9JD+MQ9(RF6cs<@/Pr6d[_2"YpZ$kSot>!QI`o'oe8,&J1")1+">5U3%YGck6EMcq.X/+`;ttJ9ji0J3_PuP/D2l
%(Nf$sIT.d<CX8/uEtG\aq?sWq+m;o#5cG4..Z0Yt"u:l%CaYDH"jg6hc1n`3,<?YIX=s.Wh]U9q2,"ji])r0Ij$UTk/`K9P5?s%t
%Nq"7u%7_]"">^Ea]HkBoD]%8K"=%oR<PVlEY6(.%!b&5t!65ip;b>E9T)(T3KE)BfJEDG-R6&qcPRN?\9^p6i,phbf,(p@<WFCa`
%]h6XQ%75$2huHThCCZHC]%qoInXT=R?NMrIJ@C(h+tuEtE!-@e%(lnjE[O5_)/skK*=@l0&412oF:EX(0Zp+@^h8`^!$D[5%T9pa
%@4_l'*MEI0@%^XpK#5BJLb!Nt?\5#qnhqoqZ!-2p8qOjKTEK9"&<1B:NX`!.$\T'6;MN^5a19*ZRCH@s.oooqnIZ?=AlJlD$3ips
%K<?Of^`Ylf@7P19],H@\%O_DnE1R0-Yl8j>6Td"c^m@;?&E#,Z:BWO-(mH-O9Re`C0G,d$0X=!`#!##j>9gKZa=o;JJ^IJB?dO0#
%L^MQ8PaFas@#e:jq]aZ)=FdA%"Q(3)5_1(j.1(lg^H5\'@p$U1=GEdpWK0t!-60kd;8EJG75.:%aGEGqp4U9RZB5eK"G&Q#E=cD"
%+F[PsArMZ`QkCW#-BV!WK;O5K9/=`tE*VHH&6M9+DLqk\\jh5Zi%5j>HZ7se6r[i-4Z'*oZ:pJUAerT@5_)W3ie9WInbdOjJ:[h/
%+XbJ``'hd^[W*saMA$9"$/-U8##;9)RWY%*Th.3S8K`DXV10i1[YR59d4T2;#d(iil`u1H8-"aE>sf/K3kYQEY']c)!$UAJM,qFW
%O<9)4&[SENVLl9fL"D9J'g_?*02i:s9%s%f&:j7o)58#iKgIR<[T2S1C<C5!TP;r\e#5%IW5'$C'Fej_oEEI2+G$Ia1/W5Q46d?:
%OK<LG^sWO"NYb)X[Q2A0kuigM&-sIJE!]&k&mR0T:`BZ`&6An_9V_Oe'.\Sd.[i39Wo=Qsi8TQcU(iT?P:q#H(@2%X,i42'JG,YE
%S!_QFVZ`%+![AtBp&LF12i["sTXXuE3'+@jo6^N<h$DKP;\9;PIU\`s#bYH^<<M[4`5TS?TgPKHRO&95NM)hMGpQ<3.;T"TBe@_6
%(bX/loHX\d;a[0G#@f*R4i8k1#*&o/Y&'8kYV5,jckSB%$sf]Q*N4^()EaaP,D9Z`d"#:fK)q*nNJV@P_%\R6U_*lghSAacLPQ25
%0n,>*<)>.0MIb@"2jc5E(IUkpOml'=NLkm2.Q.B$CSKjKUBcgS8YunWNVXeL4Z4:D_J)@_VGX7sb"7^?"EmiX61q?RV*m@\>67G7
%@H+(eM'\:1XhImX+_2E?6\aQ#BZMhD#QYr'76U]A[oab\,I%EFp`f.n#Z:_?1p@keDS`b"_%,GlBV.T"c'"DH!2L5q@&O3ip6;2S
%,bYLQ_6"ot@rQAg&@Q?L/9.=#[.e5>-)s$0_Dc<SKI#O5>2jE2DdV&Bgjh*=Ch2jtM:2[=$`9T=SF3%T)fE_dbbL$>cnO;(52U0*
%0S3+l18WEu2g4.<Y[O&k>6k6-B6,ptFa&pPc.ETsF#C3I_&oi@\XKcH#g_&Bkkf+.a=RpRQ`Et;T)`aA9[;!9#Dha>;;n[Z;YqOE
%GQ@kXGCYbaoPsYGZ[rJrTS<ZjS2ETc!-/5sEuL.9EC0F#">;`CJV"13QBXX0K'a+.Zbc2YQlog_)g!si+lYO6Z2o"s1ne?'#tuq@
%AhYUkm8/<IJ.Q1:KKFLr\tSSI$,Rfl!'j"p.SDg.I1*9FL#@tf!%9PJ/1!Sj@6;Dm3L2<ad:ISB'`V8eo&aZg^q<p3N;3TF^]7$F
%II=qM<Q8/H"@iP]A^Kq)M0rl.D.qjjd03U#r%)?0"?]RL=)^Ym-O<3HiEE:GbR+LD!=8+D1-i[_!_Z-.1Vn6jS)7WL&knIm]FCZ>
%!ZK,$e]=+Y!$B3[9pD5W,75bE!"8Q)i"8R$3Y]eU^p?d:PLgh^+:&+4&LkR'0L`f(,I%/BDCWG'(4pH:=eNPYZ]kS=L$]FQi)m^4
%jHa4+8+ttBLs=R#QlXQsk#F*N_I#Zr'G\K($)g*J4(N%a#fKBU"OJFr$=?@/2]a;kRWY:;[mIr-"l]fnh1Euq!0Uc@8=5,NCa?Sj
%>_Omu+AK06*S=-hIR2S)K2W+#5^rpi:rr2iZ'tZK!['0U!VRL]CVkO[F:YkA!_+rj!!N7N9;Y$r1brr>#8k>Y>e!4.`Q_NcTRsT&
%//.3-CB-\0B_=_(4;^:J1Q#RCk?p(I9EQEF&<#Rj6+TbP7Ml1>;1V@^kd!H?3LOIcW8N:!"WAT>E>V6U6H4qZBJ9bo#[E@D+"$Nj
%JpA@?j(&=\AgK,b[.3\;7O/$Z9p?qS]()tG,6Z^uRVSQ61!(Nt!e^TeK5T[l%m?:FZ</K+L4QiocBLqIA>%S2KQHA;a:JhJ9J1BI
%"@FFgPQ^S`!+b:3c,Gg1]O3Nn(0t$u9bgg\'Mc@MKNl5M'NMuJOIttC+@!O@8[RH:%mq/\$N^T$_#Z55;Dfaq^+03"Moc&dH9g]@
%XL[>OaV6sTTg&kn9dPsu:s!;L.tY/d84>Nmanc1_lhKLAj=<&26O,;a%f1Q,IO:Ebfi2Co0LB#7&/>kQ$7q+d</Hqs!sk!5O;"j)
%=LZNE@LZ]iOD6.4q9H2F6g,EKTM(8L"@]`!rA\+D"2UVP=<N`_a,puH;c!fmUgU`,<[Vp^J;08u9u0X<+EZ*'S_.)figbU1kThXB
%XK3((2)Y"taT0CA!4&?G9ihAI&T&MNioHV4#YT`!EA5a#\hq&"%';*J-oBgI+FK+k7[rK-XOTcO)ON^!d/Z7:Mjrj=MS`o=EU#f_
%(U.J5huJ5#(s%l=U:S<=;dM\U'i*Or986#nehnth<RG"^CkbPJ+<nP68HN]DVJ&A*P`GG5`4B_4%rN"M,\]5t/hYge$.8i!-!SnL
%QiTZ!E2I$'P"7AGHqV&FW<TUI!/cD'2R7<&G_RFK,EQ'U$L(JT3`r:6clGeTo'lFaJdR?^F#SBMS..H^!TV#dJl-iV>#UR!^]n3K
%VOp52"JaqD^U`/d;s9caJm:V+77s*"EIbA8#``>+JHDSd+=/-YClc*s(75a;@a"=#./L1e<#B_d=Q$k.]SotnkWbPf*3-W'A0ApI
%J=hCO*=;^a--ni:%7+Y3;T'2!YYZfC20<aO0*<Yr,7;!`.RO*O^]Z&n<OT<^8[A;G1ld)>k^]kp0+sn:Rgg!<Q3?U&a?#1!gAiMW
%1^VFjMP<[sa[o/0+F$Wg$P`5U=Af4g'&+S4e&Cl(ke"+4%JYF(+l^%p@"ohh!?YJj3tQY=J6V1%%nd3qaDi5PJ-C/.lek12Up?D"
%$N`S3FcGeq0nPo)5k"t+#fMaEJ<GGa"?OI7\H#t<P0:-h+T1ajjRKj6^mt<IU'(XsPrCJC-2<$&6<.EZZn4SZ6Uh>Q`fB;@0(@>N
%fQhEEF]BTC_SM`T!^K7t'l+VeN>ql0<"OXCRLE"89?'lHk1SDDn<.npScj(_!PYiL;c)(*?5I9+"GoCDQ$<RZ>l]DEqn\+4-#9%+
%,=(0"Zps`kcn5".p]bO>##QMKUgPC6Hc4M_fR)/**3uP6#(UUu)43\KOX26>G[u0=9g#^T#pp]r^2elj:3Y@/UO\Jm#eI'h7rK=D
%`$8;d!se#t`Zu$jKa5Q>.0e-F!XdU1-@j$-Uu5RUBg1BS0i>q^841+KL<O$&joL<LEe"/qYLruonPOE0bWRiM>hU@^L6)R3QpM1&
%,Z+Vu6jF/HgH$Y[^9^)n&ciHPZla[r*6/X"!rZ1@lf#E:J7C`+"C/u.IO+^+Q.W>_++eIP>/b\)a<8`r9$@#iN\rX$Y(`GFe2T_S
%F[m>e2j4'e3:!=F!FD4f(a`P0i-IC%kbJL8=B1kX<Q8/C#S!"6Cn-/i_]4F^!5Y/h=eMGba-%))+P@6ErD8e56$JXVD9sS@LPY7u
%Ws7u((/uu'i1"]VZ_E>[Mml%S;H/$r7U2!R]I4+PY&$_1&`a<"BG+-N(a0(W!=8*!"b6XVbu,/g(:HS8R:H%*'O@$661L#d,-Pc&
%!9UiC!!Fp0TK(\o"($^Sp8%dieo'37CCLj%8HI:-!qqrG>@[DIG#`&b?b+'oXoSSNIeZ[h1HB"`5mZn/1-e.gRO'9<?*bR2]%8K?
%K'kM>gOOVkd(#`qNHtuh"i,q_-A]Jn$j=qn?%Gg<a3?%Q3])6Y&c<3=UWDoLs&\%2oQmh'G^B5fju_Y$Q[KF=:ad#N4#$h^OFY%6
%hC)VFg,:^!N1Pb5Is^d\U^2ffeiC4dS*Jk[c"+h$U*to&5GCFdl5<FEPX>@JN[jMb4na92'X:-77.-<,9"^tP%>=jrq;UMeZ8RgC
%c`WA7Y^%M5GM('Gn]_bOfODQl.))\HeshGcam4cbgX?,WQ\^*_g2DkDggn!M7q]%"a+@mS!%Nf/[nTu!h3<LY;>)9<&?!'=hZj2$
%:&8/^$EDjS3,G:s>\*uhpO0Ia1dnrFb&_#Zh]OnZ/8WWNH.EDsOp^)"re^Q5]Su6N/VX06b9Q3'4.q5P,gsm,6WFNTK9[^d([kO*
%_mt^"6[$#]n&Us*TZ"*(-nYkrN`JLfYgu\('C%emM<^68oLh3__-#PX\"ht.lSlcVUTS#&d)q\BI[Kk74BudL2pY]Pe(bO<MCo8%
%8c-h9@<"q[1)K?!M6:>^E(:=X5J9MC]0Y;Wgs$?nGXs^n1ToL[LES`@[%_'J?9l0sU[X9Y^a,-1/NkF07Ha5_Xn+t0[+_U*W3f0U
%ZueIpmOP\1niJ&H>41Q,DZ)OScR5?SZr]hJEt]lB+i1.'WLCb'b%:Lr9'!NV#YQ_hFN[*7<@TW_ZM^&V@^U'@N396TW7@59,>as9
%g!`,[o6b>deFMnpY)=.?bRS9*3OoPRiXd8b@O,9hf(Aa`L`__h8#,PA?,H+TH]\C[h56$PE"NT$]Ec,[_XTo?Wj&VJ!m^0=YHk!\
%N[,`N%ortS<c,5\UO'pnY61$MM&DG3Z0R<S6WkG9hn>h[^$(6pXfTeU]2MGtb&l05iN<G^b@>GLD;do'inL'Yh(=Rpa*[2sWG%C(
%cp2lK8.a6;I;):5V$f<&g:pQ,qmhEn'#MdCU9!gU&\a@QjAh:,gsD@m-i4r]"L!S,\kF3&*hhBGHTT0NB]3"PXpE"_NXj:6QM\`2
%o>g/Oo:K&:rJW(hp\"l0<+(S'hr6d&Y+WHjTgss^Q<0h.OY>g\qb2R/ZFW_XePUppLn9^/Fd)!+(2gLSU6X32/9o1!qAF>p7<D!"
%OZ@0M8>c`aaCaagF5hf6X$#6<6++F>06M+.jtc@O3a)R4._A,B;dW\sirA8\1OG@;*CW4Z?It@>+k0SN8"/&i3hF'dPmE6VdF,J#
%<[>?Ss/bMF4SS_L&8Rt!k?bR!eT9mGkaL`OFhkl5,HGHk:\:A(j;?Hk`eYfu9hPV4pKWC1<cWV!F51q#f>kTRc$g1(Y)%=?.MGu%
%eR#;1Zd';-pFYk^0u`;L`d^C'9nYc)@eOIU=>F.Zqrt:1JhN'7Q[JORoES'`i+Hs[[TVA\Ef3i[B,8ndN-,i.7eB+2R,(Z1W3@MA
%^7DnCbq@T!/LtL#!@P:Z<aNM<>s+5HcS!S:Xc`-PA>7GW,Pm0)jo8W@rA1/FJ%$MU6i!@G7!r6H&*<i'rP7khq$=\_Xs=@M<KonF
%I&as"W__a?L]G^GVS8O?n@bfi+<HF18`[N-R2g3K'f3:3amfK%@U=3V,fs]an!^^J7238;6pBIDQf:?_G!f]rg[`>(cRj(K`FP#X
%1qZYLr(q;_Ld"2Zik-GD'J-%UG=9";+o:dI>sjo2FN'/[V#3<Y.Rt)BO<\cND-,_N`GR)g3Qi3l\sBg3r'.k`Zf1#%UJUrMQJJP,
%Y,u]f#"N&O)#-mTMi3Au72?mj0%PL0l\'gh,/_>&o%Osrij5:$(1Eq"a8:<R0j[?^Su3b&&SJ]i(UUUi$:E^:00Xu*=R0cMGM`J>
%95STrje<2@YhlaDKHF&*OV03tJ7Fk:l'RY(DI>@j74]Rd5<Ve]fak7-FmSB93jr4L=<C]jGK=qR?;U!C6@#nbnR?9:)i4K+(WZgO
%jZ;8j6&]-$0TaWY.Ug.J)8\S!mtd\T^&,>n&UbG9#JbDmeCHa/8^n*dnZ*6:E=^#e&_$F^LitLk`:59&O1HecQ=-m3q3`t+NCG9'
%/cu^\IsAX9pt?p/5Z(ZTWZB<$2j(>#_P,V,+sqToC^DVCk5+5,Oplr$hpDI*+6'"Hi90m/M(Lh(974nQeI/3:ShT<O4=XKMTeWY(
%iFhZVDZFl$>cVEZM=/"4F;\sA!HE.Go,d9[NZUSRo?l5q"Tt>WMWe^T,'1V=.8EL$h1UBgZ6Ko^_pLa-5J&jqkT1681"`t5[<c'8
%?[bF3QUY`._NDNhM::V1&^*A\WQa!5.b2uBW=4HSp'r^H#\,ZSYp@fgG/p]o+oNBuLcQTAa$,)Fa_Y_2/Q+2r8g-G`JrPP)5^NgF
%K?esWrt(fZXQ25[?J6g>5"k8e*dc:d2_>lU&\3?&74HCJcr&Q!J8L-Z6NL_%TdO^/,4&;h`O_/C/AEEVBe\ta@I2>l4#p7T%;i[;
%Q`_AX:A.VHWhkCZ*=7V:b.f<#;Dcb)gQl'7?Z`MU@Wof[_3q"<b5kXt0d?<f756V2hWBaW.)o9G0&=4_c@8;/V5MAS7BjK3CQn^m
%hD%P/.uDD]:;S)IqQkupa_ttA^9lZ^+U47&Zi&jrX*n@*)Qr.NL]oer:r-6XOUQ-S/fWK_@*m4NS0S!1ZB@#o;0UblI5.mtnB#/3
%P_d2UV$1";geUtWkO#4*iPH$:A##P7.a<;?:Am\^-0/Y#,'JLHi%lRB[npn9s4o[[#CCi:=m49>brm)SGDqQ``MZhtXW6"S=,nK1
%)D)OF\%i'LP0+Z>dA2!>>aJ84`2T)*HUG>"mUT_Wd9E3]$<mjP@DA2"ndDk(@eB)l*$NRNV7q2!hMXRJb[E3XhOTnp1YYab"2Ab?
%k<k\+IE4S,*k\$<nQbj0G0[KOC:\n!*]B?4q=LdEn]/BZHLt.=K2@s`qF:uXrdEQ"';<Hr^E3_KO.W%4HsC"g4oY?W5e-gZdS-gr
%#)^bHFS3i?0+9`6'@@2aq>6KA7mQ,T8r,)S4L'T^3dMa6ZeJr9:Qu=\7K9o!rO_eVFB>hV[h%bB6lDU-ACK^0dGAWdN8V6VAKO4e
%>!s&!R\&8@+prcnUnsY>iY0J^_UcLu7P]k6W9#Wbb\?"kHD4eMro_!`oQt6I#+emS7Yt&rAdfm?5fR]2SBLO%=e],JYFN_F.l_$8
%!A"rXP$]]`Y_Y$NmOSa2s-o.Nf=1S\.j9%?>&?L3DmcJKhJ,RA_Qn&.2R;X,'ZGhJ?X/uOn^]k/mYIUHq?FMePKQ+4:"3>bcp64]
%fTgt*qrrhbAot$FWXU/iYm$e+bXq.@X_VsIFVN4(Gp7U\DC&%YgkI#8F+!M@CKTnVs3j%d`Oe9Q&F[=J!DN3YFg,)#8gfNXb=9n/
%I>tPM<RCoB%0Of10[IW:V!S(EKSaqAWcVJc';XPjDG&@6gBb",;afe_M-OTB/]@p<h1hX8Z/^`uTH.rfYhItn+7YY$S#BEDc527K
%rJ4_ERpR&YYZh=Q<sW+NIHf-s#\e8`;FecI4OJa;To^eY!0f'>*CZn:*K`Kq[h:&:DF9Q!=giRS[>adAs60^`Z\8Uu1!0#O0]_]k
%\+D&Lp-8;6d'AXU3*?&hlhf"V,b?8cWC5QaTQTSf\u8AdIlUZa)>H88cqA#d,Phu`;6RP5`SKZ.lJsYg1EfA;?Pb#h^]Z6qjrBMX
%>03*25p](UJ*oqQmMo>>]Ii8=$o"T(rn'=#c'O7'h2*LEX]L:Us!glS:spQuD$HZnpm6egTDQqS[DL0cA4B44Mj<SWL<7T`@]kNl
%:luD<OF!WC&Q,b`s)VNk$@\#Ch]HZJ$u"9\d5uRJ[j&rP1lehuNY.:"&j;o9+;tuAOlSNk5k+P'R.TD2"Yt35K@DI`1qp.)KmV!R
%>ji8qc!M`RcGf>N916&CBtgjJ%q;VeX%j@Kf.k8(n4rBHg-T&i]qKsRG\i5XJs8U8pn#bHqXm7'+UK9`d4n:I%(D;XKVD^\dnjFM
%FABf5M[E"CSA!^N6>l!9+N:6dQBDGu.nL>%k63$(KnI<B';f^C]/]=6gm4cbZBBoN<3"53RIIp%V'N*;\Ws2CV'^6:H:&2M&h7TK
%\MgaU[NiM+p:8!Ee#)Gq5gg``!nG+<Q!T"9E@C"Yk4t0k&`u">CMrM!k'u=%*--Yta.ABhp`?!6-2R-HJbUtM[hQ*;jS.(g.s)M!
%MHS,A85km[DjrONA19N<C7p*MH^`c$n],-I=e_P%[k9li[!,:KT>Xa)Q_qb"76t`@BG7g0P?*D,\?C(+eBu\\EUsV\?b&Yd5]5^E
%>^ah5AgfB%+pR^VL$Nd>jE@*<8_Ur$;b_Ka[qR;GmO;TO1IQ7L<p=QRWFTJ#0\&*#].k7flYu2?V<TLQ#r?r@a];8ROVRF.QFH91
%h%;Z)mpD35+/WH+'%Wna*H=ps$[st-%DJ[qNXsjTG%bm"=ZuEdP&%NYAV6Y+?RctO.bWN4/eDE6qI#P\*_;%@l#a;k-.%JEg99JV
%?)/B@^&6QkD=&iV^/F7HHE;cd\Xds7#Lr7a\0/EWa,ift"A`5u"+A_slou[p80.Ol[cca=)e?*q\BsoRlR-<:AF1%(6T^-*-r)p2
%3Yl=G(bQ[h3)kk8RhIWCWnpERjS/?M$W3j"Y$G$Mo:B/Vb#aBKo`SM974UR*7V$u9916Y/rRAG0:8,0s5<EA.^K9Zp?YJtB8St2%
%Dj%(roYFjS:R0jMY2cdpL8lMZ?([IIKRso4XJJXe5+dJapgS/4B*=BtM*@G#`J$eD.Q<m`.hqQOWFQOP#@nJ;co.dA:isN*R1%H4
%kJPWiia4.2@CatjPk<@@&/T?8md/b.o\U8DF:@U=pHYoPD%O_EgdS>E2*eF;g(X)&h05Pp"o%mqPeptI0JmdX);NeCJVY@6rsc$c
%o7mp.+u]<8IHM=sP6P[kL&@g^*"D_MBb6$&njB8.K0&LN@8R2H)3%r;!ge[.0@nVM@gPmBZpf]BhcYbUoK15gNo5,IrQo_h9YS>+
%])1q5[V/iK9bSkongmnob/3ebM6.nh!lin,EYL!+@\iZ/8fAiD?d\#*I=J!\IO0]a\$%Y)DWjuVq74#,/L#PnCpA92>)Mg"/<N#+
%]+?VEG!D\9=giRc24P+T_e1oAkp8.(DGe.eOVl2\5/"eW&[<b"$Ib#F;Uk87o4Spb/T1uNId'Lpd[d`PM*Z0?md.QP?&@Cl$XX69
%PeNr.^c"+.l)d<'f)E)\nR8RWR9C:g,!U,:e-fQ>beEOUS2/1RLPda>VtQ6f+4Zrd[>)h0eb>;RHF5kjH#X_fR/bcS3BE_M#u3q8
%.WOoC9$o9IO/q(M8d/C\^,[<+nOM&`,):O1(/siC73iX9Aq0unV,RZ,aap"r8MT!teTkl2N/&l!c^:^A_L!g1'OC0qCFN_HBSb`B
%QY53X`/BN/:b6U@07i%"h?Ljsfc>C6]_]QH\^Y*FBf3t7%aTZ4!Kf'$p\0uS#fVgV3-#GE!LB=(&IF:\>5<hAbp,M#D/)IG%@"U^
%qQeE>M2s9l6p4.C_'%SW?_Q,-enj$rXklu>ch"#!ZBgQletT;';<SO]+2(%M:#ugJ,=X+*LW!GX,@$*C'(S!k9CFf$b3O$MI*oTU
%b@2rPA*ll"9B\t]aLPFY%H4nW-]hiI,?IXrcF_c+K5CupBX:+:mYq9S`A06.-&/8!&94V;:/Q@%NhQouEm2@4N2QkP=TpG5O-/.H
%.n9(3c@0qfk/(MI:8rr6hQQnK2#k3CA4->tX*)=2_%ir<!IBOmI$#t%CWnG\Knbu^,,RRD%?BJO=Md/rM\0%-c4egtCbdp?gUfX?
%fGq%$>ot5iXCY&B'<nX##T93hQ,["u*8'<U.!iE8]gXo&IHmYPDL[!8,*egYOB%HrC*KXReY-mkV'qV/GQJgY+6b:EigeQ,+1eG#
%D&@1J)`q=,`F?-o#*%cS'X=Ad7/8(l;[2I';7?1dAL[?0\.-R9<0d0qM9!l0q*O.<2q5"srlsua>NPR76JL@gFRU.m/UMQ[)=hl)
%lGX,Oh<mn_-;H]j\&`HM"41ncbsE)/(&oQ*\)*8HIQLQtY.o7ODamXl<("%$qp>;;,j2lYin3BkHPsMRYHU]T.%PQi`o#!V^;Z;j
%a&<au"*\2G\I`m2hE)H2c'B#4T(>T+5q&Ina?)t:--jiBq['qnb80R==k7oPZ6p?DkY7*<W(':(nUf'eS&/(3Q:D:JZ86uE_IO(!
%7#;+$D^ptt"FOYW7dmDZ/1Y,1TnlLc&G^B*$OK5?lmJ)Y_j3Q,%;Q()s6L6?%]CZ`*RL8UW]Xt8ETH7g=r[D%F?j.aWr2u\Srq\b
%:Zj?rL41@d#MB$4pm("+HETZF84CSP`]$=-W25<rdh$dLLS\PTgdC#VeRD$),&6>H_&2\pcdF&$hXQ6/f7O'("6\(';<WX1Kda-e
%87VrPp7K/D5+YJ;9-I+[s!;<XTN1NB:1@<E_n@q('eneJ(r5WUGmDPN'_*%Y,3OU4Pm#NE2A?OiiCb<*L:;a3Is-ffBC/CuNr3Pm
%\q*Akg%lEpKkBVPUY/ukcn?!mQL^.sjWI"I&qZG5ppce67.#RG:W(nYO['d`WUG8L:LS3>ME5*cQSSK6_>_W-MLjP%`3a_Y=/0)"
%;V;"3+<(?^dG?cU5i#L9=/-V_$uJCfV>-h10`]F(D/jEgoUc0<NIKk\X&eacQ-Ob+Dl0'G3U[l\C[2_nJ.`kSeUHp[kUR"NQ=s6C
%Z)QPH'N!<Q,bAjhPn(737+#_Hm3'ZadCMrUmOL+k)Ths1Q\`#j:mHb`7U_(43+]JBEsueLT:-Y`#&3*n>.%;/W`C%1GF^a61Q.pu
%UfM$46GsGhB:>_SI<BW8&*PbERB17WBY?bDEaW:!)5_lGSYG7@*#t$e0W2AJeeBG');lr0Z,08b:8`t)Mb"gnYud)c)a.C75nc3`
%h%;Z=2?d[>&k<>>]S6?W/"?!U]#7#=I?R=]LPosja*]VrA.1g>9,AV46?I'J-MfTo9+2P0W/eU=+2Q9OM(%-VmE^;RPh.BL:`LZA
%[?"kJ#!3*8Dj#^^?-:7Sm\-`B@p@LI+748IE#_:D)SD?;X+17*qb)m6L;"#%K<!>"!!MhO+Vu8;&bt.'Jtf+:*q7Jf78/a1Yk^:L
%eG1IFT^5>KHig%L'eq/u\'if>^/u0g$Lmd/a7Yb]VN>f=9C=TRQno8>)\SQ_\"VI-PVtGc96I>9dSVu\ptgI5+c9js<;j!Ri;Q`N
%=Ph<KI>Q&$_+<E-U9Dd+q3)!(s3Lqo!K,R&05-A1&f22\VKl$6qp2A)c[P"p9_Dn]%rJHi%J2W1`N6](D2JMNZoaO:0DL&F!mUUS
%;!hE)\.pk$W^)$^FkV<i2UoPW^#kL*]mWa+Q)CU1gjFEe3^*cs$+J9;nnf+2M>D^"X=^q4GFWQ(/2(]Y6iAQiYX?TMT7DCf*CD)5
%507GJKmfnl=U@VV2`koJe_0C=&Or`"6Vg)J/6cdo/@(WjPODUHS)gFGo=dL$qW:Po;.ro=G@!J.RIE,(c@"dN\<dZXPpcq"B,a`F
%%9fFE4=J7:>r+R$/08M$b?@[RS<+t9#ORi:KZ3=,&in,O-b,2E:A@&g6VD77&gt]rb-Fr`,KeQW"%8+LB>">i&[<g&:Z"#OX.S(1
%M-I1FhPp*X@fts_piAcac3Xi.*eImj.<tnO%FP0j``&"H4INd!g9Nqm`_hEPl%gtZ>Fa8[QQi/H.E.u4>M8HNiEO%DDo0@.&`\#g
%Nk%K=efSp6c;LT,,/+=I7,q,6,Wau[TX*n;Qm(B(,2-I85[Agmqh+k2S-5,'#.Nm-U6pbXk;*b,En4/W.a\m>F1*T=U>kk[8Xs:K
%'3rFW0D_<t+;7eLW;t[/kMBnr-ZLNb<MnGu"HmrPced=5Ljh`[)/rh?q=Y$fTDK6un8ih]Lbn:h;pP:&q@Rk(Y.i-_$MkoL?GsDf
%#5:MM+sPrg7&)qq^p7iMG3.mV6d=5=6r[.CNPs4?-)uj!?$\1E,(1o'YjX]Xp93V;YsRmJ;A?[.=l4BWrda%[MJrI^109El2ut`X
%.[Il5,,_et"LIQjoKhl!66$\IC\/p8mtfbBKUmbdHV/nXhQ#Q`pn:tOI16]4#@C%*1loaZ\]mbKOOCFC&;1#s(X(a6>ZcL=;#M\i
%Q>*F<g6>*#S?!D0;\0e?cY7X&g',G)C?];*E+r5rdIV"$\gJu%?2:%d-2mY`$&'@=bG1iJ0H&qJoO?7QM0!oa/8t@]:![`/SY&LM
%#.MJ'UL?9TC/ndb/>4tnGhg@:#L7GM":reU$u7H!J5eK>b"%Fn,*6@1+o)VYF@D@c%LhF`*qs0#LmAcu3,^3ea6Ct%-<4IEHmF0>
%oN<JFn)`\PBDFk%me;PR)n&E)6Y_dEW'+HY`Z!kA%8m/.2rDu4Hnu^>5F(HF@.3VL11aurku-I.g9_JU+8VUtZ-klMJ^%URigD_r
%%\[!!W4(T]HM(ei"CLIsBR6SCZTDk6j9*(/N3h9(@X:W_MKZK&7A9M&d(MYF^cLLT_4Xb1&B._&Mp4H^V[;Coc+/!=g^H]5XRT'^
%;@rmd#Q^Pn7@T!B+]YVfRKJH2D?WF.M4R%B\!"nh#m?p=kdgXgD(r$_`](dM6ANYJo3+-!hB.U3fekpVp>CHP7DE*6-?_4ZqmEHp
%2X^jK@,0)[S.H$F?eW([fOQRn!=XjIju.lh-a%.M5klhjn)LF<>[L2&@3f9ndXB_JM"LMLqGt?Q$4J6?0`lEYMgX;*U)Ae502ugb
%n4Jp(qLR]`B+*F>:EqY8q*&aR[*Uf)=#+sQ>BF2agERDG?_V_^gp2-p*(=BLH6V[r\YV8ud-W7P.32ogC[.;QT*Td5i=eNVNS;)^
%Nm#7O0!^?*NndM\\bKu2a/Q5#d#\"#Q8&X6.V-0VV+#Zi[uMRj+\Uk@fr`06MVClOEfMYFEZJe`oRD=H-6LnS#<joVh\hlG2C=l<
%U>o.8X`p[[LNbV/ih5UX(]-\,a<Qb"m>L*>T<uE?HH/Oc81[=2M&:6sW8;`=']F<u,4!@]V)WD?m3qNS*FkUTlBpnm>CYZ7+'C3K
%f"$U'NmZU6cVWoO=72ljgAOo)BjidDU\ZCm&NW=9A22-$_g<A5KE<r.DRkdr.A")A,1;@7a;qZmMA$f8UJU5,A%_;7k5#JTkrnl)
%TMEY;5\?f(g38&G&!Rugp*:,][&)ZX#6)P2I[_73RCiEcQ2K=]r&-FJ!$:*:HK$KB=9M-ddas$*1u`StIuNU!+TZ]N^.N_2ht$N^
%@L*&<,aNS!@^HPaiW2r=g9$=@5S\iE,=YlU(tAO/^E,4FZ&\5q(>:)i5PGuZ_GFK3'?T>QTM1s>A0PP!/Qo+KSsind(IH(L+Pb]g
%PA@X+`6H:afK6le&%/NE&Y]^bj1%0;Y2cS.8sfQ,:.)Tg`Vs2i`Y/3sK#ml6'=bJ-N/Uq`A!bT?:49F;?.7g:iHlR$0a2BPPPpMD
%^>l8ln>G;\ll#\c=?1@?MPSM&`Q>2kXHiWX0$\"lGgajL3@u0m(7kBH&[6FHXGFhZ6#ZH#71nr6`T!q_,0;c5m(CShSXtGIo?%T'
%&3Mc>efUo"A0AJ>Bk&3a9hZC]i$]U?BohJj>dKU"]mdL&M@2>,c'J5A=SO'AXLlbuc[eObk'1*jAemKnjKG#KBMiX:)A+M0NVSWk
%+"i&.SuB,&84-'\WVpR#qa#9;(!RMGG?iOs,bd;npl;\P,#ErQ`h'J?L_UW=SNu$O=.In]^,j+1r;P>R_"jZ5=&7UWfW9Xj#:$nC
%!j[1r5@K"2oHPPh\-B+bLoC</IdTis_9`)C(4"\Q;/IOk+aW5qBL)`MD*UpNO6Ncoi\$PZ7ms,YUI?787/S,Fo%CfRIj.Bi,&6/#
%X4I1u39!^[@WZ%(,&n1a5S-!+Ne7Ftq)Z^R=/iNcH)X%P/o"rrUK0ha$3F*+%>nu:H]Uj9>Sbde!>&rpi9V\IZ,G>jP7$4S+c$ZC
%3(5o^b7Z5l,84Gk>&\Bn0>3<4JGTP9O#qp`mUJ%WFUe<jG.[;rBdddcchNoel4Tg'9]r#<<:(^cns`Gq5ass3,^924&+Dj-H&D1q
%fQ;,f!MjFS':t"t%mI<3K>X2''K)KD8Hb^!1b:gWi9Z9=5,eOUa;j.0#E<_g_&6#u5jlLK20"H3iR_N<I3U0cS89bm%PVrf,81WU
%4TmSL1-,9.i$1=uo&KfY<Ugn,7rP:JR]5$ZGlT8FE%[t`P0d^(3Uo1`$!cjDKWDr4EtnG.0>`Ic"7-aEEk>PQJ>J2A5:5$G8aEY(
%PmAZ&fmIOkJ@i\ROU)Mm%7Tl#DjZRe`CL5AbRkYVe#uFoecZ:@HI;g\E@iW5*X_=f&:!<fW##'ZbP</:I(&RN5VYF!$UkG=T;u"4
%T2>Tjo0j44L8doe;2*E7kCq=BK^$oHH\4#<lI-?bilNJeOD5je6W=mgGQR\]JZ/C/(FQW4?4hn+@ZICoU]G`c"jld4@33Yd:-&"e
%!Y&SdlYSk@/!o&.,u3V_HSN=JNr2-P%`hO))-F:dn<LpCksqEJ9=I#),Y,DA:WNVF'VNO.?Cma6dYD>&RG/6-%;+=X%03?mi%)?"
%\F.V["^V>jq\L=)pAP[_bP*HoQGW4r;YR5IbpgJV\s4hoO,,2<$]Y;(#K<4H^$f`)p?-lS&]7Z7VHLOEBb6:Lh4rVTa(8Bb+@IW5
%0i.)5\6kuQ7E[C[9:\%P2]bsVI!l'`,/m]k._Y[[@o`lRYg8tMQKP+c3_W-^$Mp6G^#GZ@l*'R4U7GM-N3:1sKWUBPdIU-Xpr4m6
%!/.?$gh<saGh33A\[h#i7F1Ml-m[g=-h`AU3D+"pDNi:"5pS/%q%:SUi]%)!/[Caoibeo.]KJDB*mqVa/hL\:(.b]i[430MVEi88
%OLLYH@(\5pkm>oJL$!*1L4rnpb6UUiW1g-nhO`bD@-[GB1f:9ZBW5abekn7IaNN7)TAdA4KQT3r3H.D6^2VK`l5E8of=EBm(;qP(
%,//PFU:Ze7LmK^F+D^9`IFIaKo#Mnt-d%e;iT0^ZT^bFnnPXUGBOoOirnag16H#\bjZ.'W9H9eufqh.I0ZM*\<4uc1V,-I+cPSH?
%[OoopYG?oSd6`cig:4aHf7UonMa$b1?_\,M']rI$K!"kG-7_%]""7Zg,[M`&?lP6@fo"pB($C:,engha$tIkRBEK`(Pg)UVd$*,A
%:Cs&f=a1]Z,V,%LaBd>%T:/iNESD<$M.@tbmf,b[HWjb>p-T'?fgBEkAZT&idD1t<1],$mqsFdRj9fR5@^iZ@6_En+dDb)]CJ,mU
%F:h_PW3Y.S&ol$nB=5ONooeL(GYrn'M44^J'p4*%q)s4k\>f$.*RlK0?f$2fAY5--i+$&s[^S]I_m)8\T>-iP^YG+t9NZ7X8++1k
%q*.^D+kdSAY[C,=cTV2_O8Lp1&2SP-1Fr:-TD;].#pL<eNMgI.O*qZ!hNf:]aAb7iL_?*:AZEK]`N_Np/OPYu)KF0;+1M$uU<]@a
%5GJ#.e2PC%DRC2s2A]Nf!p>iHIKI&"+(4`^2<YV)T&Q8MKVe^/,ndZjJ<E!.2>fDJOu+]-'(%&p,k\H#=>Jl_Q7[dU7*SsOPSKa7
%@ot5q)d[W5Cc19i:<6>?5juf*4csdb)+#FgL<N8C+FUgESShc3?3&"^TjTdtgJ?a0)c6;C$Acnl#>6eg'(!\tSEGeB>gHS(r1Dl?
%[4T39kInlh'p@hA53c*-mtd>[/sc69IBS!eik@I)jP$ITIOO@2n_!eCVd9AU]QbAh52>bZ:EY8#4?O3EE1WXL0;7fP_,:aP;NIiI
%?peYaEk;UC0596b^tYZYqr`2$$*==^%C+smpMd[>+I^SLnL*2]<Zr1OYtZPBd:Q2sa7_Cm=H:`V5`jts+#p,%'S/177-9=(6B%-3
%g[W,rE5fo"A#kmk:G7dt85L\lM>5!N3SpOWgF5U,R@4R)d>s@pVP%hpkEud.mRotIk?:AB('XGu:9rRMp$tUC_G5pR8MN3!+!FKe
%U&hs\5j[.&K(Y$iJ?]o97M=`[YMPC\M=,gCJsGQ-c;+mA1#V+!bX4ZEM'RjCW06Y3(]#S6<<DPZB`Fkua$_.J/I>&A7Nf'7%s@KP
%,j6baZeQ<<f;dVQRp$FE7?<XuoX6%?Y:q,GRp$G,amt=&gsPP7$FcNgI#7E?lh^:_:/um65qeb`-SiZ#^[_'pE13/GdU)H(jA4OW
%ja`.nqSrcjWkf+_j-HYK_d41_-s6`iqd^b0oh$iGbG*'Ji0P8TD+]?@G^U3!"G)@$(:H<BKeqMnW@9!rJ$d1k:/)%TL_qL(oHYZS
%TIsEnXG+lsM:N,qA;!iCnV:-f,Q97Sjdo_1?L[dYdO;?_W@(!@]Of>9^iJfd;,J0E"uXAsA7!SN=JDV]WlL'5\HmIVVksTQk^XQ_
%$!LKPC7\[`)Kft\[MFY)TdLQU_.#j@popoL4I4nRgsi*;=,S`8#FOZ=(/4o$]Y&seNhTgabpXA))1j\f`oa`'WFiR/>KIDlWJQs"
%HE^''Th>"B3p#0Dj<`M>nMC*41pn$:272jt;Zst!,.M%n&c%;*@*m6PPlR0C7e_Q6S9'p=F=(+mS4a7.[t(fXG!XL[BLE)9./FCZ
%$@/=2l^uq]RD;F\pObjTQh5,+L#VLC]"5!1qKRrQS(j$*Ml*I0!K(ZAA:p6?>UAA+=.\$C1ZA>sZ-B?;h&NmW0`blh3-\Mo(3E((
%$])k8Ci@=$,VA([GiHVJ,Wb'qo^@7s917WM+[AI@%F;$aE;q,Es1(LMR(b34g46kaPpigso#DPAAX`$#/?LQ!rg/A*E<2+jj[=J,
%54g.qp"+Zjq/Tli]1*L;1$Kc,nCCW8Qn7Dr_J>J0pHc1&NpW%6`l*??VaFeY\'R]/V%<,6@UJ@:\Ui3Q-GWhDlA4r/b-o']Vbl`d
%r_HoE@M1oQM1"P)>R&0H"5IlW[_+gNP+om!Wo?eNR-n+]Eo'>f5'98lfQM+46U6d)46pV%Jn)u<HsGuSbsI6%(Qo`6p4>99SZT<l
%JbR(Zeih9C.n%EjX3u(_@(]FUghm3Qg]:Q8%SjeM]g3V3R>V]?Bg[%i3fEmA%5E/(!X/B,6<V$QYCYg.#-odq!t'6;!KB,%?mS9A
%Jdm!VF)8*jlT&`Ls771?:c]$T[0A$?8dBT\Dofp2&Z!#eiHi@)m*133`:DgC1040;%-,GkpYDJ>ckD&SAM3msQ.il)D]C:::7LE&
%!JNa5:Qo$[c)tUW(eBaj`7f-Cp[LDmQYkQ$^tZ!1OIdQb7q=#/8;GdCouN+=!K@/fpc%nV(IBR"ib+ho;Qq5W85f!EJLJ\Vb$e.!
%D_0(P2PBR9d*n@\p'WU,&o>V3>JQNI`<fV[>/C72rWF&YGc#EOM+f@Qr(%d8LmT#Wqce+,Ljh`[UpGDfaH,PO55Y688,dRJ]k@'*
%A#O$tf!dS*glXV8%":id*RTq0#b=La+]H,SJ8VH`DSJXd!]"?T4"poc^`*L$kA'4hQF?1_:PIdNKMl$qUa'kq:B?gq'R;g1<Z%Er
%SFcH?j!rGN'OY]F!nqr1`=iI9p#*_.D,JK*Fi<e`#.#!aR6un#7i9Hu7>q@<??j=pq-78;KsFg)/8jttKk\p`;-M^YOfLE_l5ig\
%%D>/*r$id]'hC`Tk*i^`R_o\6.P_5?R:[TVD\rnj79F$K>7fFsZ#:I1':-kM@6+%=Bs=W'p/^8B=sYGDFImo$(El8$jU%\aK7u\J
%pn(>%/?jJ_QNOdGiaA&X2k;%:j'WRQiIm+rXQ).:p!XpEEA/dpNCEqF$\[bDi\qFgjdn-/G5a`+L-QT&VCK&iI8g=3:gnTX>hEG*
%0Y*s"X@-2KlYA_-FH-cZO6Led;gkC7(U0>e&;E&$eamJL:PWLGOYCW<SIDH'.6.f-T"$fPa_b@F&;mr#7(\^qQ.oO7kpSS^LJ]Ys
%1HTa>o2opHR8Q(Q<GhBL&S4:F(6hYrigWVR<NApnM>%c-ot9&/WC-!^\$qeAMRl2o4[j>54OMQl-=j6\[`'o]@&W`4U2h26k/*j&
%W$fKK]Tagm$Wu.+AK'>iCO`Q9A17:#>EuLf61\`bj9^MH`U\Zn;<=C`Ts3<+Ejd\gU4[RO"7h,^m"R>:buK0Y@2Ylk#F<BDS&Zu^
%hnS`l^/;,9U$ao]LN>0,TjJrTZXnrbju*8&VhU^ZLn:%`Lp3^t>p,0.7#P@@#,QQuBE*q5/#B3!Tg5hY./_\B50Y*N9/qV2-mUB?
%aHo3rD1FHABVe=Xn."tWkr;Ls769ZtY_ud8>.J$d?a6^9T:qp>V6h[6D+C7.CorH$<Fb;)NQPTc)<F>*\%X^%,9e^/&k#@s!d"N=
%-RLk94[lP;'*'hi]A&DoQ+iZs^$LqE\5>7gCV*?K+c%l-#5K<D-,.n7:BZQ%d8Up<0\]e>lO8Bb\m<.Eat3jm\,T^eZF'=Bos*;4
%#d:@'$1&J>9e]>Na/V!b=_Co4+aCJ&*Zt@#.&Dk2(bK0$f..%6U%$2-O0)D\'%DB1adiGG:jCM/&FHOJAM"a)0#6&LB*NGMC#C$A
%@!=J9k()SBd[#SM!%7W10=mGK7]&r['<k5E^kf8t=m:oJ7g@1+'S[^e`NdR4n/3h,j8r"m`=f^AZos<l/\"Y(N8,Bq%'E*;+uc1/
%/Emod\Hs[S.iH^(X+Fn/gt/GrRi@oD/M;a\=,MnDnPn4(2mIAj=@3@-B76`T>bcq-!P^`(UKq8^\2?pQ0a2ZB:XP)d$Nfo"oEV#!
%3Q*j3&&lI',Rc^%E#Ddb1?*f8(00W7qh?bHokP+M&UtDHlddCRV8,nE1J'c[ZG%u*3(?/YfO<D\mVQVs#Fad(c$)RrjW:ndEit35
%f"[O,o1pj\^Wi4p#/,r:([9?=M_8#!k\\:<e/]-;R!@6F?6648:-4]$)A!%kRA41+o9??eemZENIQ-#?=u:]Jnmkt:49E6c&5mI0
%4q<8LZeTEP0,.@S)?1%[Y2NnMDn4a;T/A9^iJY8X9805(D*S]sGY_kq3EV.NQ!d+5`-K@)\b41SZN'/(qYk\L^+.%$^c1Qg\K_Pq
%s83rf-Pl&?i>DKYr^O?_lQ>qN*\Cpjp1IFsB0Z!sEc8h3$"SQpMt`b7mC>0\5c5$Q,pIXcDWI$n&dk_7(YO[K2VS@1_Q_!pCAK!^
%[o-OW&r%hfeRaS_7b\&U_sl,)ru/5U9rdh"%2eBXEp\'%&aiN!A"p)2#=Ie>0V[ILF_g_&NB>/_ODfB\n87UaOkQ%<cW=_\@sO&b
%<;q+n7E[[K_b^(OpR-qsTm8k7-,@WP[N@d!`U0/C?'[":b\ESSC^aO#^\;@S&=Fd:$aF1#[hB%:@u;"(cW;XjTAQ4tn)fI>e$Z+0
%mQ<eD=;l42o"[rPV0\Ts&nn=W!fta.VR,gF6tX=DIremQYEe!9co/_mE!iWPl7%>&oL-=5h>*=P/raO&K\Y6;U>q.C/\C_X]rFX(
%qTEJ!>5ma<l\!pN8B<I+,,b@%>mP-oRP!DR<Nr)r+T?u>33IdGT@8I'j#@uS"Id[NR</'PagNDMCaY<'cP7t=QEO?W5J'$AkGJ7E
%S*@NP287a`nR_;j3mA<9#`5Ru:Mf-;hUg]K^-q%3Y2eN"k;3>JR?B[f#C?+2WY<a=,Phub!?Fm.0[W+SH=H9qo)tTQ7A=;V\fBrn
%`?9NUDtPgS.g#EYJqnp:RSu.EQnng8M=a,2'Z?cc=F9o3XqM_6'&f_]fmY2af_:k`isigZf,a5sFXDAjA`#%-$ZBChN&UXr^*4An
%Q3e'lB<fd$#h_/Gi=4*U[IN!7.4,9ViSiupS\(a/I"sHXfl5]L3I2W@C`c<CWr8#&\sQeak:L6o:qYI?eCRZ^X[)o/K#9n&$[i.j
%$gEX=L]$M'HkR^WoL3b:K94qS#dR6o)f)c.ekMS%E$Eb$nS[n#LuX:J-(H;M*%7*[fN'4Y+lXohluTSQJEX9F&P"ML;N*,BGfSZY
%m:k2f)II[!Bm),.-p23$X>"[5@ruD1]br#'iK";q12fk]S2,"L6=&e5B)@a:@ju?Y%;W+1kto>?B6*C(H+W?V6N&X-9$T3K8hP.*
%V):h^Nj"n-+Ku&a!aBXYm=M07X16Iuk'=glZ%a^C0^&.=a7/g.>J1]6-3lT\W=&;iG4FS;;1;@/Ob#H"<]@.&J$[*+KtC]`BO@MB
%IORU'0DR<6Tpf5&fQ0K;el$_4g"IR=7XWRTO!3`C5-$;B8Qnp;"GHronoBh6j*n^6\#OsXU'UVbe=Ld2BB)Rpg"ddtB:Z8GTK),t
%20^q+.L4kGo!#ir[hbQGW-LC9QQWJWq-Ul[RP2Cpo.&ZCntXfZ"cj]96>0<n)q"HJ]uoIu&uVY0q18HoBMGpmnrS2_-._@TjZUpS
%!?aaZBV6\6MADILpGP>&ps1W?LFj=(B's%Q+rRI>Pq)k>&T3Dd1hQ^PgDIA4*3i3$,aPb[JZYCILe]]tKTOmfEk`/XIO:+3fZpJ;
%GYb!I#O,<eS4)Mr_P)L`Wsp#<:3"AbJ&^Uq?;0]H]X.jSnNq#ZioT%dp%.M@]goTd>s%-QY?MM&3kDaK-Ikg;MNl/F8lM!3V]W^,
%@bks;'8,TSf[3Z7Ar(kr>dOLK0g0D+<Q3;0eZSVgT(63*i:p,IWqqn[f.U`S9E>pUR.K$Q<L1_3\Yp,VgZrT@&&iC+b@6!oD`Sf!
%&5VD>%m!LpT4]VemZ?_JfkMX<@/+2_)52F1'`Ar?gB8k`LaXJj1\@Q=lr(3TLdPuGEqXHB"TOO"!Zc<?+VS)/3<pK3Eruc!7Np0"
%eC:]CF[FpTWbg9gIHHD#3d+6)8^h:QhheLr'B)i$7LUAO+T>\GR9S24)p7#7;5_b)8JWIV_SDJ1:(r/<)Bk;sV26#=F!L@:)=rH[
%%1K&<_j/A(n"_d5108P]X$#d.fqMlL9pH5;2ZJdsU?c.Q#H\JtrOgf\C[P)2^a&BX%pa=tjVe46%/Y#G@#OeX%@ZhdBPp[ch/lDO
%]0VQX"$Qp%=@M5Y^o'I+?JO&._SE:+Horle=I%9WaF^U)@(ATNrGQc.;Zm=>&=IT/%>&@R"oXC]TE][7jNm6g0hh_+A(r!M>:O+C
%(='%6?mPdD=(oibgO8<W6.qTLV7i(E#<Sag7EQ5,KUFm[AjN]s3/"X0"BD;Ts6Q<KZngoCFt2,;DOq#;[*0KE['I5%h6<BW<)4*r
%VB`Z#5+!6ur)*fB/a)MEKF_ikGTC.QcNUVin^`G)K+$jP\g1G1kJhp>mPP>k_ItYs+lA1ZTg>JM#%6AU86.gH@I[r@b`f)]0rs:k
%ib*Q&.3ac8M9JQgPuqa/6WSOqR3M`s-Tk!K\_<</+Z"H's7?g"*U.@EP;ke3&A)F5da.X5s+/VMd@NUc&%;*h7_F6L,JP>j*\qs:
%1Fr:-TDA>>pV`Fh0fG5]Z^2;bG]uQ)Q?gVgq2$2M/egtm9B)#pI_FQFolOm?<(jNo1Do%&J"h#/8u`6!m0P\CJoX9Vh+"KR.0&6R
%]E@4_U#",gCTngWVPZDnF+rE9'FXVn'nW9ret8#"p`g^HmQP+c]UOWMq<l(Br-W_3'gKCf1=fA,k7\E/VsIJo"iYC.&3%WE/$tnQ
%<q&>g5GiGM&EgIJ.iRmEM#7s.p1@K$bqSdsU2^&C9Qu96CU^/[bFT.-QmW.Ldh0D#e":AUU@VUOaud'S,gS`-H+*(kRZ_lbh:m1<
%pNQOP1DG?6g$Y0EcZV85n>"flh71l#Q7%-#]B-)kLif=<1:V:H+]_;7G.b&)Slh,_>]iC5l.lZ77b8gK],#M&-?D0!h%GEoh*q>p
%>oVbHp9,)(T,[PWLH,>*N*hgug^3R&U,c8@m\eJQclCe]cgq4IX;OU'&4bcp>*Bn\1T)cq3QOFNhj'7aWae"<H`O!:VY?<$F,^o+
%Mnfik$](#W.9ra:6]nk:llZ*pFXs$^^?'3fYKCR8HG,@"4ooo^1'*ce)JH9JB9(m?.i[[]8?6asBpmG\`rf3Z,)[F_>^-[hCaJ7f
%D<@8T_>NZ\Tt,,KprYC747-g9*naVce,9\)fBGnK1T.`#oB^`.>UcuuP+L+U[]H5EQ;R!l5E(@T.kq`4#Y=$kcuf7CU-4aKibPA`
%D+V'?SJOZ`quB5gVARB#'(KSI>$1g5Wu]kg[g&fD\JI3(br'GSqhboe5NI[d,&uDJ7I9baD(=WK159's'gaYB;0a?Nms'kM,Wp.H
%;'0R,<r*YC%U+^c[IM=?(@HqT$1<7U.dFYmpbp-t3$P[(/6C=a0RfoY>0/)Ya#"\]14?2CflG<^Jd/$'X"$(,f[P\\7_#4LhChZh
%g9g8[eQ1$J0%jCkMJ\]J#o=`P\+u*EAKH.,jWC>WEU()^AP86IV?>F$!eUh^M.RVBS81hbZHfO>(kTH3H\s-V)^k9Nf_a!j%uT-!
%#nBS46sF>37@IE=_ke&?Y@@C&)kpu&#=JrY*n='I^`F2:V3q-(5CK?i@%WWY+Bmq8s'I7JQYID#(CD!A&[b9oQ.WK&6_7-%+Z(Ro
%5^?'PO2qcmQ]ZP8.\7EHe5QYQ"X9<(-lfA:Ptf@DQ"t1'+U,60niQYK0nn-t!>-+4<6m<O_-2A<&"jM=h;h\3GWBi;Q=Hi#<WfJ_
%9jRshQ$1ri4nst7r,*r?U@D!Ta%6_`PhL2&aQlSk7_fkF]2([=HgJdn2'<13H:5+[Z!W?M'#1&(b(BB7$EI[='DPAlc"m-`+AXg?
%4c8PRTYkon%G*/OjbYg&,KkJgFI\7_VJD`J+#quMO-UsZc<jXd^`/0fEbJbXJA=ART#eVpIO4\nnf%q-2pW<38:&jukLuJ'oNYc"
%@N:T<ANp9un%'[K&og9&h%/bFb$%9<XCDVe-kZ15FUJXk*C4X.Sn:,r^C2V?IQ)hfH(J-;omCnCm&(Z@jKT,u&+%Y!StR$cQlH]D
%M3Xe%=pqq_h@QAhp0q[0'IWCXftAfhj!jM;*]jZV^A!TGZ9Eb'&0.PlZ2k6G&f\dYq[#S4Sh2:^i]6=r-\'g$=&($Pn2pFk7M3=S
%eACdA0e:>JKUe)_>0#.#jnGOLU[uhm&+Z9A/Xh,T4Prtq@BHG`e=e6nce5M?MMg:f+E3>k:2Cq`S`kQLKDqGneu;4;gRbu(3O2KT
%ci9-5=M^S"5QtBg)d08GJ)p?,XH:!IT39:.rQK2d=DlQ.@QN`VD>$U)S_JE`]n2P>VrM#\]-.<@VpBUYANmaDSBHHXSm&/cI!@BW
%QSJ*hjSD]"rcV%oHOi<(U&jWGfK4u1MRC.>'?QH(0OV:X5Z(S6Q(18JW,3!Fk6Ud&Sh!c<$P+2R#gkP3+F:bn=_I#;MSW1C5DRuj
%r6ZJXY,PLL&S^$3foT>CR>+KrKNkb<;t$LA$dkC6ReeBPCBFon6Cu7>ZsS\*(;HV0j;_N-Z1X'`ErXhSR1,X:ej*6D$s#"Te0sO:
%=;-U@;`3p"(JrRBRmOP=C[URmKK%)te9>6fWV$iILS.94r0r'`(+Ia16tbb@W]m6MHHf@5bHt'V*?f\!2u5+.)'^>Q0+\eW\YkjU
%'3r"SIL]9XO/H4/Iq0@ZlCRh]h*MCi,,]A5-eOIaX7s*td;_VHkh"<Jkr9VY"R=>GflM<eZ(g7P'1eX+M\TL?==a6?h]SE/3^7ej
%igV_bMaC-t$G;\Eb4<m9(/%<l,G`F3hVaIaa1at&IVg@8o#EX!VH2MPjh3_O!8Cim9j.R;=qV2F[ChX)P#h&mZ3EX8^.BkNk%QA_
%n=!_uQT'iAnFts[MG.lkq]!XiZ9&@DYhH6<=o<s49jg7q7cku*:)DucfU:&J8M'TRb.$Q]e[f%=XN>Y/S&RcuF-T6f0hXu`E79*g
%:E$;#%eYmV^#_su'a6CkhMh=!_p<boqCR)3U!B-9gi"8"]X?S_"f;?/<$r39lqmeGE-l@6FfNjZp521EP(+V.lr-7r,V.q"#fl,X
%2X.Y;\BV-cTkKT3r0hq9rFZT\<F+JR`k#>M>5?%)_h'$9.o?H,X;9&=-ROLU*Qa=bA>mq)AfUmk;-[mfEVgnPA4JdoSU*H@rb2V?
%a:56+SgTG=[`L-@HJgaf$>r0?hCR5l"#"\KE`;rhMe0"QqH>O)`tRhKN($IK^pthNj_R[QWDP-@(<bC5<*!>HgIPgCjtF&sQ?.4M
%1^CltII^1Z&GHmT"6PDs6$QifH<$Ro<aiR\b5rd!Ruf[jnt`PWgXQ+KPqPoO$]Vg+A2AmrPrrb3@h+ZXA0Gk,b7O;T!"S3e@el'i
%&A1"S#\Kr1Q,(_Y3@pjPjKS?A"E3Q,G<kf_Y_;4F$Mid*<SC':*#97LYSdAA'VE'9CC\N[-V\AT[ddEd_c7`K,[Dr5BpnX^&;j/f
%V+-YQT7>ui^A/k&#Smr4P3Fk1)TAq&q4j*U`1)09'msB@-bIpAW2K-b,:$`\C"Lq2#5A'I_H;?)/rI]toZT;HVUC!g``rtu`S8$f
%cE-Y4[CFOB`UB+U5(G=;Dq6;idEs#I2g==",M!2pH1OglXV$7cm%29<Ej-6&.)CoF8b7nG!pc7iL&TQ5@k:tG*8G8l?TmLlSWdDi
%M11+GhQ3P>7eZWNUOSEIr7k'oid#jHL@\aoG$oFD"dQK9$g:k:_*3Bloj';U#1.L7e\!(#Z`]?EO]SR/?N9'P'/KAs`tgdK8&AV1
%[)_$q-duL!=.HA*^1ir*SVoal\D1!r"+PURND_JmBNX&NWP+AE/^9E<*YrD/0;=GS!f:RQI;4Okib^Qs3MN21MP6(:GC@?fNp$r%
%1e_3F4jIc[:Ea[@4W8i-bMccGb+YVR:dXX=i-:jU%=O@O9O3Y`^-5gJhA)tiF<ci5:459si%s--)%BtOFadrB-m[q=osa3q`R/*n
%^m1P9RV9ibZD);3CbIB,p?A/L`m",f=/bOc41VpT1L0,;G0^TEZ2+jqSr$6m:>"RFN`7-PF&"<i:^HAU&duIOR6Wbrg5blTl^q8f
%LrS:g]crgfF&-"Z!63k=^VS5)TZY>hU@IuFg9iJ++I:$5+aM=MT'AQh[b5)&=n8Y0),5R+d^)f/^-pMd)'+`NAm7f7X"4;rHX@Z:
%ED::YHKSpG$LKr=VnQM<*A\1Dmpnm=T.,$1s4$c$Kt!rt+i08!)iE79\QtUETZf>uR9$rcB[>oe]:;`0]`UA2M?W1"FI?n;VimO2
%f?F5cMbNlphhV'+d4K'/UbmUA=iqFN43[opcem(;03ST$ZWV1Er-?j*B'4qgl>5fK>$T\,'X@5JZ66l?R[<bg#BVBe@3P@se7WPe
%>lKcRo\C]WC?=n6i+;JUZT2M<A8@'/5#>GABM=)O/RK,::bX>a?NFhS"NjqJlMWe*Sj`kl/%$,\`tp]h9kL2AY!Q?23=b&m<&WMn
%3bIHB0(%'D`cP'k[$:1sZ"S=2O-&Q,Hh>.'dWjMZ^\20FS(pcc$3pU#Y5>!#bS11ET%).'Vj1h6=loAkj5hi>:X4W\e1LD%KUZiQ
%6tebJ,>[9lbr_>[nf0njq_p5g8IN]hjM4^3/2%6?m9B$PbfTh-NLXbi9oLkP=^mYQ2m5*E%AB42QZ4)K$G_7)W<73DJ&i4mo$h.l
%pHk3S.ApE>fhcVM%lSOP!Q^"m\_3Q)oOgD)])>jK=Li<PFu&@+K(C]2hkPf^1m-uXO%Zk*Pr5AfA:`2B&r$,'e^:<DjAZ]Q,lAQj
%1hN0q0Kj<\##fVOVF\<MV@6N.eYk\g;WTr767ttM^sRYq/Z/2aF?$^s'6:(jE#I>r9l]>SqV7\t<q?0\f;K;h.(h)67#,+-nk:b0
%91cE6TbsY;YTk_tPGPq^dss0g:Ru,Kf9Nfmi2sQ>_$M!::`9a:#>bPg&(r0O68bR[0&7Q28B5M5"439+XdfHV"@SVj+55.a@hg::
%+n+KSqQ$8+lLOT3>nO,7hYj/OkJ28m0qMc`Z0!*YJ7(n3"'F/N.Oi^_a$:Z,\>)+d_*VWX<eL;N.V6:E6F!;"jh;JdJ:I^j`DaJo
%bXcS190`Wm!V&/R@+`8hbBX3Ep=(/2;c_7<8ek65_`*pWk4q'G5u`;@Hcj+0,6%':qq6_FS=l;j66r`M#_T'#IY^$a3ItB`:3Me"
%l!E6SR!tQa\7=g63f6/ol,g/0Q<;+</=m,d4`eDN.H5egQ-'kQ:#V-#&$>[?GHs,G)TN\lE*(le]o/*p02mM<nRiIGRA6U&/E]Ui
%S9PUi:o7P$fJ/ICS@,/u9&Ir9a=>P_H?$O2j2>5>6'[#p6eU@bn,,km<MpO6Im2nN-(8J]<&`4N#js7Y<#K?JbVBu-Pi]VW+KNa(
%+KZ.SMGr%kks8r12SLo!Y:7;^Jl6p5=Eu9tfd=AYpY2`?pj]M^3@;$<!<k0F.sD(>&qM7c,\g;$1-UOn8e'ce,tZ>QZd5+ms/1=?
%HOuO$CrTH.l3"7i'o@(f>-8^%P&]!6l`9iupk3t:cO+?W&cb-'d'>_,re=P_]ul\5,OX<klf\@:F=?&b_>lEV%NR8S8\dPX;8r1+
%5]m;N9$UD?I)4'2//$!,7h?Z%UQK%u48BS]"i:G9n9R2*)9n/8+E8Sa>4'$S5grP8?/'9e1F5I&lJeXZ;$\dkPR@#=HhWZpI)LT\
%U-gPWbs$Wm^72.0o^0D@gV<\oIn/1"=:t>;s2gn7/c>R^LfPH2b5IZFS*Wm9@^'fh[;n^M/d>ilV.oRV&I3LI8cDl"1H42)@I,-Z
%EZC#KCpOC!&Q!U3*=?foiq[2_@+OI8+:Au$SElDQ$dQH?nIg?>hSmKK!<Ts:-^F>B77GKO\`J_lO.r#(1^1QGNUR-iqj#a2TdSJ]
%R]?:0dEJ$XLnc-"bl#lDE^5'g72+]M%)1l2qooi7W/SmTc[kEJGu?o@Xa+]ZT('\g[EqNiMg]qZ._5P'/;;/gAMSjVl>"*%BmrH,
%fh%>CQnK%S=dXSLpT&>)j=g8)8JT5%Y=oWl0\d*i:4G*.K-=u-8hUH5b-cqi$r+P*2AD*$W?Noo"qYOKNYi.mV8"G;;:M=WN-;.A
%+[aaO"El((`L!$e^^k""GoumWCO+=8N-5L+4qLXgP\Ab)d(^K5%i.L%pI[^6WBV?gVZCNsOg%'egV$oSb?'%HJIXCKOcWb8+%p+m
%9r;*#j=Btl&jfku:D6.e^<6<SDRi68J^1!a:,=*igPsC-bmPj_(rMl^hDu?-S9!XaSFV28B@$+@%1_@dGa5N;'AXe-SjS\54O9d]
%;3j/TQIpmqpGqn3_#iHC-C*[#`@gj?M4:*C[1rNKK2dP<Di'YDM(5>3<J9R-l'mr;/FZ!OD\U6s+*@R+bO*5&>nQk0@Kioj]ac)t
%P>DmI,Qu7IU@#g#ii-!l58;!/H7GDkr5K`'pTL+HNu-:;Al.GmA`6Fb7eBf`@SoGh("->*k*5OU)QZD4<,-?>0=<aW!_;l]M68+I
%q]cEH..ZNo=@&55R7J,gYkeT$/?inDRrUgj:="P.*<mY?IT)6RRE[":3due9ObXM6Oc$cV0qCuRg[ICj;Cq<j,!'a$@Q_*Gf'Xsu
%*RZDDd!2hjO6A*!;?j]D1iLP*"D(M,Y<?YtgiQEL/Z>;,U:4V1dEW@d:@sA)PM9.#!5D?0\Og9'NRYX<JCi?WO71tD:a0d4:3EAJ
%Lf0-JhHA7T<G4LWS@Y*`m;D<+Op&Ng&'5<G6beh6]hG=e]'.7SabGN:1h^Ja+JfXoHJMbocml3/qr6sX=_Oik"(X_T8=TLFp$T`i
%qe-.[NFLJD*$>aJR!7[Ag>/)WNO>s:3':'7F'WmUg*!AsjL@&"f^;8[`)L?'9Lf-p"JoG3MdrPi<&Yod#j,kZTqDEd]qO#j?V!)2
%$U-1K5X>UdJVW\7?8<Y7kH[)`,+;-4e#NgP6F*=_e<npMfO.^a'%F3`FkB.sCtc8QFd_%CH6,*QXsd-f0MgaP\UYE?.d^6_B9KHS
%MpN)+.-GA8ic>f.&CPP^gI]4oW+$Aofui-B1mW0?g/"PH1#2sh`;!%)Gu]_)#,:<J"[`,SjZa@'\=5[r]F#1Vi4TU3rD],tjVMrH
%np?-?GC9JF3M>j7StsdK_PY<!EaC!"C>L!$7`?eiXnIS>`?a/cn"*]\$9]P8;C:\''Vb4JIb0gL`W_/`OSc&H;.r@lcrt1C&H0&:
%[8Fm(ce?3r:cuJpN9LQ7"kk_GB;qeZa](UJ"h9WXLDHUgPC;FeQI1P&q/S9\H@I9M1l?pSfF]=eLFP.fnekT9#-g.g"\[hZ&du,=
%Qj-!KfJe)G2,kMlkge<7ma.%2C=<iAlhtF%R'7BF]%rZ*&W*;:^cF]STDKOhn8M.Vs&9I_lrf:jOm0S.mF>p6/^J`ES[-aODuK_D
%E2WG:g[sl&$d^Dp7MUrsHL8qq]Fqcr,E%FJc"%2N$9n)<Pa%*2R#[J1[s)'\o]SkHI>e8.!RX=bWGmHolLAN2AIs_]Ooh?qoKnDG
%')S_Cr6\C>dB4d(E-[LjYKE\FMD4M?Njt":F<($:[FX5bj(Ec>MN[10hc@f"M2me3WO3<S"01Hk::[?T?Qi9Y@VDC.e)DM0^rTdo
%CU8sidh6A&1h3l6K;U0ogCllh@5jF!oqKAPifttk;1V%Zn(RJA'I![H\?eu.qiCG4Ph'\7A(SA[Gt&2Vq^Juqga(/'?`cN'a1[Oi
%K"BS>W&ck$#=S8d_*9YZ`SSt)g\\$>+tN93eK<brI>')r)>f^j(BB;A*I!AUM^Jj]:(+Gi4jI]@[e^n>_uf[S?R2']b+Bj!5sZcY
%b<Fs8duh*rO:^8J0k=mDo9d!S$*l\U>DKdfMGl^I\"Vr2P;4k-`Q'/NIQ+)g7D7=Y?q]^j\;cm(rA_%\H?!dWJ7lngI:;d_hnO2)
%VpR,MlK&'4H.h2"))ll^#SsO`k`F"=:j@=2fe-%#,($^rA\=i.Y9?)feK?BG8+-V=4_4(_`+BQ6<7?L\LqQ&ne,f8^[.fmMJ'Y?r
%Ln]J-ea'hnhUrR!&U]+R4i#G#;QMP3GD+-sbu/IEA/Sn%HI#j^)>Gup*":MT^0G/KQN,*.)9>5.6%#eV#:nJL8Co^!38tBa(LFB5
%>I8',c[[Z8Z(JT(N]CLL,7"e#dF_rPlYrTX[M)6&j,+LTb?-FpT3\.ilQ@<.Mu(t[BUAe$0&>>+>)6;1H/L).M":7IMtN0(F-2^h
%FL#43=.8dh32.n1o'S\uX)_leYMCPFgh^Wgq)"e\P-2@fijAj[l8=1>HUJGdV^&cRBK'3(%";"t$Ip^sZ'Dm#bDnj8\hs?5Drf/N
%pT4<6iu4Gn`C^HqR@F57nB(\H[1nn:EhIHXeX,fDFE$-MUWp3k-e/=+Fk7U]L?t6DMXmXOc6g:?.W1Y9Yn(n=f[8QE)1g=T*FFg]
%4&OmVJ$!5$>Ybsr6q;>L\nD`.^WiYG9<mL9FqdN=@uM(-a'<fh5.sI`"(;Gi!#%;L7FtlA^^j34-/SDd^#IN;_#T,H#JW!=lNblr
%N)nY9h-]LR$^(3+@W0G(C[JP$K)sB=&&'ip9D6.3VYsVE&@mI21eQg6mgAHH7*XmQ%`s3TAp/0I0.(CmAB)J&.)^e8h"KC-oJc8l
%GF]j^R4D")-@7roMMmYi?M3C7?r,^o?r%H'TqM)$M_M@M^.8qUO7q2>7,qQ\3%-]@V2egh5T(@T$6G0*N*b?EL-c"GW2g-Z&U;*]
%[VYYP-eZc,`<1kS_?H5Ec,1.+Ar,RO.XD6VZnB*3:Y]+UB`&`h%BKfY<PehB=9$d?Eo6s#KnOShZntkB!W+B_4^`d2!tY0*p!>j0
%\i[rcZ51]X&@lqS4k8(>G[f$ZTrEA(k(^'Fk<(poB:C"(YMkK)ea^<@e7W>QfJMl,GM;_'m:f/e*q'Y+DtOpr!7?iT_U<@)&C&iB
%$Fj0&\'Rceg9c]oNV%Dcps3@0mV?EM8fD=oiF^*dgIHC#f_hi[d2tC`<^jZjdOP,S"I+T/]6W(/M8.S3mHJjg.CY,-!-6iOgqC+k
%"@RfuTY^G9%%Od$r'l`lU?Z^0"![S/Y*+gJ6$Jk44A+SD(/>/"F`go>6b(+7]@q&U":oa7X6U=.+9PTlnT9GppZpJ6LM8&uepKL#
%Xj.HXBi]m8$3(!4d.35o^mWUE%&q^@bc09$EOVjO,W4LKWoU"e[,LP9G*>I:bK[PDE*n/-b/:/`CMBqMXP>`)7m2PD@QL0\g.`aF
%/8CArDa.cgK#:>K`9l>G)X<?d&d8p,M6')N"\nBC2H'k%#t/8%@m-CaCnX+io$Je^Fl4c_cY+n1:VG:T;i+'q_CP)bH=!j=.,==B
%1N+N:]m_=*X)6o`GU^K]@]NZ(hoLFT>kB@#f'PV>nj!hB3Ke-4f16r&73iD(-ou*nnn%dRep#qW,`8Z/pN'[d$>^16#*:2J$iM]S
%#.B9GljJMj9r>_U@(&?]cf\Yg[K]6.^s;1P@a<I7K#2W?0o7]j&K'\&\S@Ugq&<7",^;.NKulD/!j/j5.NSt*I0UFiP>kn(05XK/
%*i":i:QS/TD@p'IOL)^4nde,5[#:uBjBrbTLt;egq.J9pe>B(E0kV5JYDK`GiJcIg.jPHI9W*Bg;fq:LpJiC]nB]"NBm5@k#'5b"
%DS@Cep4>NUAP`Yub-mq<q?,9C00Ku%!C7K^j3aZXn1jTEOR3(rT!Edn!L$a:Uh$IDXjYk'G+FHr2jZ&IJC[TJ`1.``K<U^QOJFSi
%!N0n/@5@9p/CmL&A)<1C9Q-Fl:Us[Q=^t(7KQDJ^Dl:?;hoaG6Vm3S8Q_![l]i>LR[l8^&/U`*lanNJ-LcA1]PB)_'FarBkd05p1
%p/KQ,;Q'V00qDnWaT]hdF<gl8.]QOp^5e:L^7R0dcF7%,TKad8VN9Q`&Kn;bN`B?PD,dt!+7I-Xm;4'UHY0P4]*>JRha=q27'Z5:
%5IttnCO+@Sh[iMl#.q>'aKj:NX#k]N!oXma#OndR15(6):-.)D<o21?=uK6,]k(='10RXIM[qo4]t\p]?4aj_$=9u!X!=sk_+>nW
%hTR$D4eg9PO-*u*SqhMe8Mjcu01En`>^isV[&I"HHD\A,@%3ui<";<8-C#b2Qeq!8XH0-o+HVK03NM^u?`iVYRk)/MhQD\Yg-:tu
%Qq4o0g-=>,[`?9IC(QRt3pUBUfUU9I.AR/*ds*KM\l&-6*ehnsWJIK;;3\q6A!AXN%-/5J-u3prNsHribq?E8Ie/;.\+e@/Ob;!,
%,_hkuoh_,A\V1nW'W:>XJeIjEQ0Q]l2%#MYZI=iACFXYjOCib5i&u((jKiK5Nb3p7!3enm'5Ri&43?$J_j(+7\mBQkM;:273";!B
%ECJ1'J_VK0F_NS^/J_<H4C1&dn`fE\3bsk86DLq:lB8_iUL5)dI^QRpZq0HW+?8a#"`ncSc/6cQ+$\hBQsW5=;t1TE.H6,jGtG\'
%E'\KjH\lde8&oNuJ8g>lC?N&:!Tf0.MU0S/$([-lQch6_\9^`6>^*a:mB)*%/u+s6Wh,s"`Wbf(lEfD)=bk8oA9SQQ085F$(l2SV
%"2Tjk[_.[udJc_$:C=ap>Gq=r[ip,4^V)Hp0e>2c_f\TAJ_Ad5nIYqiY5RMDh`NAXjF2JFG\o81\MMq%^(`8/4+1f$=%F#BA+\r@
%*Yc6Kf$NfNBEC-@d9&'mgpG;"%s`%G?CHEVU"Fo0WF\J[2B(P]i8h/;nuX$Z,)KA'o='/om82-rbW0VBF#CL\aH+Q@m/!+*rJpfs
%Hi[Apd4P?n[8oLIF/A!eYB+VBXiQR!(\nbp@]lJ4rQ&4XSo8#$"b*8F#lI4h'\VWHQF+%C%f&'B-q=u^M!jH?7MPW[6<"hH<sSL.
%%o.oJBSNiI>%Br@jZEl''c*h9mI2$JfIqS'SRqYta]YIiCENGA;d=;_,02pg/i%n2pLkGf!:#E0Hr-sClZk""=nAl`miGo;^N(t5
%9T^QFDH[p%%9pb@0i,`m%%OmM`S>%0FYXJ]W0#lI*fnjUfBW^<:Md!n25Ig6,)B_!$3Rt5h*;&CBM2D$cNc!a+>H'Z.[#-!Gb^Q,
%04Lu$Tb$["-S)`S#CMDb!d!%@6)@/4.;p[LeQscMgT([.#"8n/#<)%-/^Wg*pF&,+56PTm<)afaVLT,3f_"g(9g[9a30tVp$>07-
%'0f';B=JWm<+(h.[25JBL$2Esq7Dp$CKe-+5oNsa."^fe-c0ee?WMflG;,M_1n7s]TgnY8\g&81^s#DDKsVpWHuW;)a'+i*FsdtM
%d+q"bcWFVlVdAYkSBM`0dL=+U"IK',J5+k["gkRr-$HW%Npbo1OAIK&ESmO<7V"p\p,&.ipPe%O1[RT,NlGP:<.@i,Vjk[P/M5-+
%@jdhZ-Q`5_7Jjc1BF<8QBD,J4qoB$sFhlD&]8_US""`@Rc5=F7B27j1hJ(Bc>&78b"LRONdHH00qEt'g<;eb?#))a8s3l=:HrTr>
%Qqu.,T*pju]"+e)j=$alk(rBIn!8Q^0nV4X*MIrCdHsHrk`,hIcMP.+QTq,Z7e&>6S#*eo_M#T5Vi%'0Y1bs=1&R!Zb;P:De[p+)
%UUu9R+emGN7=.J+\Of;`fJbp@#Bt$5dA?oDg>nt3RBs]m_RBK;O\gleF@OA8;J6sTTfB"rX'2FP*m*Md/&9Io?$5&!5/J=['<u5.
%V;0p"VSc)6nT1qj5>!=>rfbG"8<^WoNM%i<^o(3[7Sb9gN:r`"+)=qu:k%9edrS;+R6JJn+mJ'_%1p60AaUdr6>Wr47UNOg,D6+$
%]CBk9oD/BN6_*uYGC;Y4.Pgi59c'Lun3)H9XPDQ"RniN;KM"WL1-]*@kok]]7$R7+W2>>H)3+2,AM?sl+ifke\h0ZO)qMIhY'Cs:
%SI<,ea?Q!]#K/4+c4"%@/tm=BUMVFC22"<q)ebTK/St:i3@s<&#Y.>g@.#9#YNnaENjjN&,M]9a8T_4$Tk2\C#fTg.nJoBWTT:cL
%npQ2-Dj`f+@(iFu:cBpYgbk\eW/jdDrjAY9<qJ5dgd_VNk#48Y)KkOEZH8#j>]!L<9pmZ(g]9$P9(:VK%L'@\D%fd_0iKPO?LLI.
%GgK-a^SC$U;EpUrqr[_\G:)*q!4`iEW:t55O"d6rI=qXKdRU5DTflU[>7LE7F[,GUSdgUfLXJm=U$=CBd?jPOp55<LO&.JQNQ%ZA
%fKYNIB*>FLi/->piPNR@nb+e-+_0@IifrWI-e\.WY(7upcYho8I=s*Mf,Ljc.bs8Sdma%g-N1Z#m-b`?\Yk\/4=lrq\eROfT6a@e
%;J7f9(re&G<SA,fDt?qJWTts7be`Vbk%bo^Sd04eYPqST!^plj"1S\Y:D"FrT#as=];<#hGdjHHY21nQh-7p)GP0c072k5bnEC`E
%.JO;fq&0So;B\AXn'G?q4l4Qi7b-"=DqQ=aTB)+JU$k@c*G[f,E'g/;*jf(+',A!G8E(UfSDZHJ3oU,2%aDO!:E4H`>g1A*Zb?o?
%?"XMeWl44%YiB'&BB'sJ8C43"!;3tbC:7^NQtRBqes[.OqL'+O3:eO$n=9WP,!&IhA;f,DMO75B9PBIoin;^@'J1f7LFZi"*d+nh
%Q7*!.V69=(jE7>_^MUeKHBA;r#Np!*$U.L'p*dV=/mM"[7.CC6'CH/)0q]"[<5rsT;I_<pahWu2SFmSY7W_&,9u&F$b)4qN,]\o"
%??.W=^%?etM/8Zsh8Y&'&(!t'U)]4A$KC`/\X]UG"f(og7A2(9Z94`"VKo2eT24W8U[r1@^e@R3"/n4Ro70-3hk1.4OtG]PK"Wq^
%*ZfJWq&,lf_k;%JiT#Z,SpCEK+m,cL,m\5mpIb-FFs;B*D\';8Atd</RBi\oIZrjo$]N.'R6g5G4S;\>*s]3nYoZ[QA9g:7FOjD`
%ok=orFoImZ9&R4Oq\i=njUht7dE-Gm`gZ!$$Gb3`85&h2:Sfm9m-f<BA_]V=jT.#f;0oA24p>YlMBhgYrdj<9_:'IQL=l@*e-3ra
%N](K3q?hHj@si97S6hCAi&#"BE3d\/$OW%Z66poBpCNs,.m]?=.1)@%q,GsfF5XbIDh,"J-\ejimP-Y^:3cUY4493<q@O>D,'YnO
%6?\jDr-55K+:?6tJ^BMY&i1ttd/2PdHio_Jn#a]GCD#<An"]5?[L1a/G0sn`L0Tj>ge103qh%W%maXrT,OGL8\O2DLJTBEl1*Rc$
%S3Lc4BIl,</P]3$]0,REh2%;^+0Y"uZfkt=J0%UqPoa$"bnD4:)m_Td&HhQt.5oX)"bd3j7;,K/cs'+ep48e?d&m0Fn7nAuGOR+%
%,-!OqLdFG5G+X5<J=pfY;@L!:P4V$trmp)@HX#ccC"iGi68:Ah-;mZEd_Q*-m!F5*%Mp"6-rHYg4^o^@nfiBB2!WX>cDZr@`*Ts"
%QQ8=.aDHjX>b493BN*9.NY?_,T@jo1j&+W)0o(]!a?gW0(cY\-$5A$C,koh:T)@!=j"AA-Q0oZ)<%WnQU:b9lHI0+U2&aF+H-mj?
%Yi0m1b3`4!7"?Fr=`'B%I`KUANu:(iS7$p1eFe^uY);\04#k&3-M^\AjX2a\'Go;?@rt"Ln'2Z1>?0D#Sl^\"3.SZ=(\JcQgRCkO
%:XK=M%6t6seZfh4=.EYJ*`?ag=D.\sm6\d.mbl+q396-t$km]p_"ccUe,b025B.RJ,pb(d=QkMs%gE@hN)SAY`t=`o.L2-nri()"
%l&MbG2/XY3ce:HA\(7A_dmn!@ZQYcUCOaIU$@G]lRbkj@Rm>FN<%Z<-C847laFM@>i,7"`9;QK,*?s@Rp9(cep9'UsHPN6S0STZO
%]mKgNHn?T/j:IA$o!Fn&SZ3BKD4@%r<W"N8?PbXN<:2k\U/7j;Q9CF$=q1;*&#[Mr-&'a<lpFK8#b,&cA*`PU4/k>W(>:/>7fu&F
%F+#\$TBLf#G;CpV)ORsU0rg[1oDuofNmN8pO2k*Fpl-F6]7'rk=Vt,eG]&fY?pJ/e]Db0P#T.;G!9G89E_EZ6Ujbh#@WNjtZ&aDr
%``SI%a'6o:aC8F<(%4r>;Q/qYe=(`0HbP*XCt,LK<NeosP)ZKlGmJDsTaaH*pQ;11ilbBQR!]Ir4`<JPE($;=T!V^ZP8:X&8E_%'
%SEr<!HMRU-(4C\]H",a2laerM\;p4VfQY(sMK=3:IPqCIH(,&TSLXc&Z>c4X:79-L,269/ZVk$F@o'_<9uD)XmDh#_fU&*nOBHJ)
%Kl"$Aq:/LU;O6*qdu1.!UT#H!9suqin-D2[8-5tlCX2/Z`,j`A'\$$<FeaZ$WZh-/%(Wqj2)G+o&7$K+HQH$!0Pk>C$<;I*oa_$i
%/@Hd$_f3\lon,DBAs%I'BmH!<X@8sW56Li9hFH9L"_3&V*mN.SebO)r9'JC*Mq_HH+HdOE/>/<ICrtN)#pnCWU%]N.efBm*4EGkY
%PE(85$e^E8(mefrI.nLt:T+J5R@E9hMfam++e7g5B2RaG%Kt0,[gLABPhi.Vq!2cEVqb4n0)?5X6or="-2QFek',G'*67'6+)A#Y
%GI'E[i3CN9A4(,6::6,a)[oW]9_YK>k76GcNN!TJ#5%@L?qKc[XV5RL2P%G*TW]Ho2FDIa$N%(<K66<bqEpKG@,K/J)Z"lV`3uSs
%os0HlL2HLG3"YWn&P-OfI.7o\TN':qP^qoq6]O]MWsQ\HN[?5K+`b$+l$5b19k3R`=GGd'SHjHUBad#/n"YRr=0G>cS&E\B@omiG
%8)b6O3L1GWUEDUSRqure;Z)r2DEr3<C^ANGh,Q9']PIZ`G!)J]'=_pAg0n9JDsCsH[qAI,#!Q]P38.iUII^L.N+oUHENM\:B#jUe
%(1l487"3j<JgV9Q$oICcO5ZH!=\_5D:L1WllRkT(i&5bQUH,GGJl#]O9%:31rLKY@.0<f7M6,CjQJtRc\"h"GF,Y*nS7A_2.IA!A
%2Pgt%F3.PR)0ERIke6USl/&utY>=u9!+ue$A/b1&mWR6CaO\'hT#fF<5s(%=mO09ch[qm;_(N]R+Eg8K,@_VOr?9?hDc;+.O(Ol%
%0:FRd&*f:`.6U+-;sp"'J*fTpY4gpOEu@iMVpF&MP@,RT7(igbBk1!HEtYD\g-QXDP<8<*fsUNsTJ2EWcr>!m.<b7#iXnpJU"K#g
%!;8+=qC2T?gffos7hfcHIV_^c;%_D4[1M7;=Hc<29(L%o#M*E@':M:(&e-W5W-W57d33f/!E2.o^06_.#@5P7ImET-CD*_D;g)-4
%QdAp"+E>ZA)hBklCE5(T9kDO+E7Q;djL'kcoGPV&W9J#5En7$_OISJrSg7rDJpi>YGFb_JbH!e:;\)`/7<(tp=F8Ip7/Fk7=aQ<c
%^pk.W:4YRM'hj;/#>RNp:SO_J_IlcPZR<:O4-^[`"9+E+kh^j*T&d.Z4&>3U7-<Q^PYo.+fTSmhIRMgY:cbm0e"N%0rRMs>4Xh)5
%K'bUm<NPniUPS8.:LriaQ6JNGYmp%.B29is\O8VcOu:5PUbIPDWM@!EJN_+:4_ON&+c)l)q>g46JqW?skRre0?0u'Y5#Z0=(KEH7
%]f:?O`D%,J9HY.sT&_ZP5tc,l$3b_cFGUfnIBb1"p-\N,P6iq.D4+/WLOI:fU,gfr9"f@/R,&Gh/HmR7JR]lBVY,IXEIgIYJ>`H3
%fGGJ>*?b@)*P%eC2j=49&ao'[7,_[VfCYqQq(>#:"nd;Y66]>B"%DW66<f7NMl=ZUEg3_'<+4rIo%d/I<MIB<Cl;/Ss3:3[5uAL0
%W,]5DR9P@/A"$Aa4GEd]J_If?Y$n'N*#<;>/L:WuX):F10s!c?S8Z0qb*`*X+C#qo.UoQUn.eFoOgQ;0;J][Wm3lZ1o8KqS-_@l8
%:4=*9P8p*TV<Ge#*ju$,'c4V!.s9g2SFASZ\-q5^qq4-$9lG5V(.mRg8E9fo;q<sjUOR:`,#P.g]_m/6aRh(^CddjZS\<E$^ditX
%CTL>-C("57OV"3QpI%$F*iSi.8._Tu.T1Vqd*gs0S6]5*Xk"d(Y!>:1Y2-L!Em[]V^l#"XT%04SC^Nm=DS6]Xbo^H((kN%GNVp^P
%:=usgniPd*J9^se,-==++B=r`=Zaj'WfnnCdo3Ub:^"qX'+q%RJV<HGL0KPK3.=@`7tKi]m3qJ:[Db]9Lk;'BJ("<P<a%$kRhrX9
%d`ot<7>CF)O56F4[7dQXrq-2n5r*Fq`F(=3,\ji/"pHS$$81g>["[A)neu@P+S'):&1(.S[V`NWp6M?34$`[@W0$5/T@=58in]On
%=EM`ST$9f_a/X?mr5<DHl#+bP_&Z8ZntnFH7kWe*IY*_D4Q/)pq+j&t=O+@m/:;LmBF+YL:]p/rQmWpZ%3bs;luS<(\P?HZG%R:(
%s1^M2bqNf3Knhr%L^X]\0'2>fmFl"M'k5K.(hX9mU-3<C$lUD?(pa_73Q%N+=sW(/J[5&^SDcmuGA0lUT&P)FQlZG`,dK+;+jgA]
%"N>r4LRr;o7T4_po\NQbSY[\o!uNkN-HOmNkrBuH5p9;t/s;fCcr^<e'#ej25hAkcre2u<[(G-aYB:.8Zd#iH!\AF'njZs22NQKD
%[\*8];4Jq>!u5EF?;NTa\HN0HZ#^1k('Z?5nh=bTQAB"]b7dZ0`C28IB_\Jp`knCb(h#\t6Ia-g/.@u)E+)Z(BKrmYBM\sb733A_
%<U^-bW'k:4F[OPLL;]%Nn$"hhdEK3.eMd/WcT#T7TF#s:AKN:3JC&Np:6+RQhQT7Y_3<kra_*9Ue?$R5B\f[i0>NTud,5Lt0(Q\>
%P/@p3*/!auokZorX0^16(N8eVg^\k]]NeP]1akbIkPOr.%1l].iIT?BU'1fsQN@e/mQi3*KVg]7UKp"\0.qWoJpo6UgA;W!)'Cd8
%hOrG&V\eL)OO\$pZ&UW-40Z.OfXBu_`9s4)=nVlE2%2mqjGDMq1Y9F8WW(`F0h-eDF"h9Y%Q?(T+bbV9$]$p^g#o)F@*m>)($tl;
%B)0D6f@n7faV"Q1BRGGaBO:Q)mQSBH#.+_nr4"H\CL<_`g<_0?mD*s2A"(BsKE+:/nn;ED]UXp1HiRfKLb,fE'`cYJ,2/KaGe25^
%rhO1KThpP;^?=(QKJCi4I'+'=>o%QH11VfI8'J;-+bq;Sg&IQcqUr<bA,F$O+%$22(gj/OT_)jn`Kr^7GDoSh-O52q`L`E*&.^0G
%mr1UUWLQ_s?eTY+#8BWK^:,1fM*f$.T\Q,5qF`r-0-CU4h>c8sLs5N"08-7fU!dO>18s5!2[CBW:DCnV/Ko-UO7D`tU;-f)a(*b>
%,PnZ+?s*<Cc^(["Yg09OVU:%iVXuN$pId:[%0^/^IEnnj7Dk!rl=i/cop`Hg_UgQFe9PC(om9>;gm0O=a4=qn+2bQk]e?&jIdPs@
%ca!3J&q\1oINb,]pE^O>!+)S=4@S1VGp;R&Q)+"GbE7+oMR-hYA.Xr3']+(PSbL[[K>*-R1Ul3W:\8gijRO@:?g)J!>L,#_+nWL]
%<!M2\7-)"aLhO1HS&'9="+/mO?W=UpQ97eZ:DeFcC(Z8nI1ThWpVjs3brJ;@*NOrKN''U;DWlLg5pmdZs,d_+a]V*RWqX2gJ!$&Z
%+cRobf([TS0lFejp0E&!"ZCW6(7aOk(t%RDJ*L1<kN.O%c\l/1EenETaIVLJAEH8G28#ZP"4%@/KEHX`mY&[Q6@;?4Nu!$0H!q,>
%+J/$->jF/QB(0-5p:D.cd^$Ndr\Km9ekh.o)<%oH?JJ=2j%%'qm!4^VO@.0'4s*aeear?MM7Xq'4\<!C`Od_e@.XTASsR</h*V=+
%_"1GtXnuhGNV$3t-[NH$a2mjmEoB,6"b[KhXA_LHl?RZ4_"3G><mQ[37=&Zp?4?.F2<.?*C4b8_Sepk>1DHT'ZqE!V,(K4bc2]h+
%]I'"!lW&%e+k+a4;AZ9jL>^.(;e2obY+>]R/:E/doUSi,SaT!qK8=H86^b-np[T6XqHabfo=[7`i-Tl%][lhgKF,l!Q8c%WfU9Q`
%^Hs+_oAfr@eT.\MKLe($ndDbLBZ"oD^Z_DdFWKYDoql?8O5joEl)-hmZ<_88>DR<k*O@&Q_I&5'dUf=PK3f4bAGMDiE3SS+MLrY<
%CH<h5?dU'e>2HeuB&KDlY!,:?,oD3+5ErNriuI[3grle<Re!hNqSXk##B3)9N%jQ^ZkA3j]S;F`1Y@5GbATf0ra<H<pF9DC.7KNt
%ISt&L.j#L-ZkQi-+2lse"dJSN&[)Fb;ZK8A4&-`6;<^t0#M]QjljD@AV,HkdjRu@ANki1\m:VUuK/-@ic;BeYNZV5a5+HFgMPaZ)
%I=(hd)0mN3UCY?5[o9aFSDuF$W[SH=e85Kh2^lJ?\D!=cXp1Kk+dEm7+faTA&-q#:pI'OfNVnUh]8I6f!#b,l*HSD64$#etFL]Bb
%'QGAGEP+`K_Rc49`APIm$$5oddkGbq>$g[;\fp\^O5WM0$dX)SaFcTDjXi<5T/dbO0WM%F!\8qj;UdIQ```XP/JhYW/6t49j`cdR
%VPBpNm]Xme9U&_$IX=KS>&C13l%faIe^$]aZ$MHYKk=-hFhR>f/`G;gb,']_oabC3eu_)U;b'$!46>q&FqkhFn@Z66,Y(s,AFXl)
%/a_@OpZWE><$DID<afa`KSeKdhi8:k>*pYCfccRCXDJ;BS[;Y:O&")/PcNQ#hgARWVdR0b;0o]qZ\BZu1<oUDp"jBLDMEQ1eHP0.
%KZ,bT1V*!tbj^"(P``J,#67V19PB%ZBa6mtEI3Rh:KTg<2m+1K\BN27]fno9CXi:d-dB;c(P;$e]-);>.pN;,km\1io,F17aW&hs
%jBGm*g:[soUeVL3UN-<IZ;7I[\N^gm`'NQ!8m9s%j4ik:i8G!@,G\Ff$2P177/hT</)hBj%6HBj.+%j]GQR1*m`6E[H4'=lDt;7,
%f/m%jC<Q8cKCtUVp1/1=aVR@*(ZLO1'A?V1+X/+.4gFfJ_C]otQs$C)[^?@X'R00WYh3\;E2_@E)u_t>\PHM'T3@Q<9mL<p+8=N/
%gP*Ke01/]WET:BS^`Y9t;<D<"(3pdLK-pT<@Lo,u;`ti'G"X&*Clk\?aNJ4%*2>:,[Z"o91%$;T]]SrCc2T\o!UN\Yni2eM-!8:^
%l@rE5&SRi(jetjmZ%ZM=i`Nc'/G-5Gbl2;Z^&7[T:=.1`(:BTWHF=];#(/G(naO^Q/M3M&!W97++5!E6!hb*OL>lIl+"[>q17S9g
%]mhsEnB2@TM7h^gU3/%<@@>gF[O?UGf/=/iLqj!63p0B0_.U(M6dNuuADrlKTGAi]q'+MG&=b+b;6?>Y#`Ok&8%/'j7:5:oaAebu
%#p\-V6Rk'UaMTY9^Lc>iKCp/XALL6%\qaYDq_';O4r5Y#Lc_U:0KjO1pkXt^AucpBJC/Yj!RCPDZlO]QP5C+3cS3sU`4Ei.IWO_P
%#p<=&>^NaP<%fUL(UMo[^+#Dc\pt-P?_Yhj9[d/FQid[+^`3ofh*<NEkN8qB(t+^CZCbis[s.G!7QZE@D_Lh_=t[oS>RHPJ;i-C/
%SSfs[i@K@rl_+t(VWkMV1YF[7RpnqL2LuD4,5HQcAr,`B]6*G(?54@]k"c`We,]Whis**Cn1LHB]-dq@Lc>5[q9;*QN@;k_qOdWl
%;3Z?eLt:';'Om,/"7srRY(4WA>',L.Z`3[<&3b@`o$b!a;suXG)mKGdnTMHeYl@*.j@X5aK[]&>*<W(l]-dq`VZ,b1gcM`pPP5qS
%b<R;p2W%CdRsV>=kFPr=jUZG$[;*lkeH2SMQ<#(BQq![aDP.2kb>SPSG=N@i(*R%qQ1mJ$a"J#.o'V"q912)6rR6\Y/?0flj+$t;
%s7APR:ZqcOTDn0Vro5[3hd?EVTDr'ni1L"8^\l8^s4;c!bQ%D0YQ+G@s22VLpV6VjJ,T)-s8$+&gV<^Khu<J%b?o\pQ[eu"J,d"X
%p9/uEp>>n2s7ZK`-iBb&+8jSPrMTZu^A\'61gh3;~>
%AI9_PrivateDataEnd
