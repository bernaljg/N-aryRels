%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: snn2997.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: weinan
%%CreationDate: 12/31/2015
%%BoundingBox: 0 0 360 289
%%HiResBoundingBox: 0 0 360 288.5122
%%CropBox: 0 0 360 288.5122
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 9872 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD24FFA87DFD07FF7DFD20FFA87DFFFFA8A8FFA8A8
%FFA87DA8FD04FFA8FFFFFFA8FD40FF515252FF7DFFA87D2752A87DA8A87C
%A87DA87CFFA87DA8FF7CA8FFA87DFF7DA8FFFFA87DA8A852A8FFFF7D7D52
%7D52767D52527DA85252FFFFA8527DA87DA85252A87DFFA87DA8FF7DFF52
%7DFD34FF52527D52527C7D7D7C7D7C7D7D527D527D277D7DCF277D7D7D52
%7D52FF7D5227FFFF7D7C7D525252FFFFFFFD047D277D7D5252FF52A8FFFF
%527D52A8277D52A8A852527D27A85252527D7DFD34FF27FFFF2752A752FF
%527D527D5252FF7DA852A87D5252277DA87D527CFF7D277DA8FF527D5252
%A87DA8FF7D27A8FF7C27A8A8277DA852FFFFA8527DFD04527D7D7D52277D
%FD0452A8527DFD34FFA8FFFFA87DA8CFFFA8FFA852FFA8FFA8FFA8FFA8A8
%52A8A8FFA8FF7D7DFF7D7DFFFFFF52FFA8FFA8FFFFA852A8A87DA8FF7DA8
%FFFFA8FFFFFFA77DA8A852FD04A87D7DA87DFFA87DA8FF7DFD28FFA8FFA8
%AEA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8
%FFA8FFA8A8A8FFFFFFA8FFAFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8AEA8FFA8FD1CFFA87D7DA87DA87DA87D7D7DA87DA87DA87DA87DA87D
%A87DA87D7D7DA87DA87DA87DA87DA87DA87DA87D7D52A87DA87DA87DA87D
%A87DA87DA87DA8527D7DA87DA87DA87DA87DA87DA87DA87D7D7DA87DA87D
%A87DA87DA87DA87DA87D7D7DA87DA87DA87D7D7DFD1BFFA8A1FD07FFA8FD
%0FFFA8FD10FFA8FD0FFFA8A8FD0FFFA8FD0FFFA8FD07FFA87DFD1BFFA8A8
%FD62FF7DFD12FFA8FD08FFA87DFD07FFCFFD0FFFCFFD31FFA8FD0FFFA8FD
%07FFA8A8FD12FF7C52FFFF7D52FF527DA8A8FD62FF7DFD11FFA87D7DA8FF
%277D7D2752CF52FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFF
%A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFCAFFA8FFA8FFA8FFA8FFA8FF7D7DFD11FFA87D52A8A87D527D5252A8
%A8FD61FFA87DFD12FF7DA8A8FFA8A8FFFFA8A87DFD07FFA8FD0FFFA8FD49
%FFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD07FFA8FD0FFFA8FD21FFA8FD
%0FFFA8FD0FFFA8FD07FFA87DFD1BFFA8A8FD62FF7DFD1BFFA87DFD07FFCF
%FD0FFFCFFD31FFA8FD0FFFA8FD07FFA8A8FD1BFFA8A8FD62FF7DFD1BFFA8
%7DFD07FFA8FD0FFFA8FD0FFFA8FD21FFA8FD0FFFA8FD07FFA87DFD17FFA8
%FFA8FFA8A8FD62FF7DFD12FF5252A8FF7D52A87D52A87DFD07FFA8FD0FFF
%A8FD49FFA87DFD11FFA87D7DA8FF5252FFA87DA87DA8FD17FFCFFD0FFFA8
%FD0FFFCAFD0FFFCFFD17FFA8A87DFD12FF52527DA852527D277DA87DFFA8
%FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA87DFD13FFA8FFA8FFA8FF7DA8A8A8FD0EFFCAB5CAFD51FF7D
%FD1BFFA87DFD0EFFB5FCFCA8FD37FFA8FD0FFFA8FD07FFA8A8FD1BFFA8A8
%FD0EFFB5B5BCC3CAFD4FFF7DFD1BFFA87DFD07FFA8FD04FFCABCFFA8FFCA
%C3BCCAFFFFAFFD0FFFA8FD21FFA8FD0FFFA8FD07FFA87DFD1BFFA8A8FD0B
%FFCABCFD07FFC3C3CAC3CAFD06FFCAC3FD41FF7DFD1BFFA87DFD07FFA8FF
%FFC3BCFD09FFCAB5FCFCA1CAC3CAC9C38CFCA1FD3FFFA87DFD1BFFA8A8FD
%09FFC3C3FD0BFFC3FCFCFD04CACFC3B5FCBCFD40FF7DFD12FFA8FFFFFFA8
%A8FFA8A8A87DFD06FFC393BCC3FD0DFFA1CAFD06FFA8CAC3C3CAFD15FFA8
%FD0FFFA8FD0FFFA8FD07FFA87DFD11FFA87D52FFFF7D7DA8527DA8A8FD06
%FFFCFCB5FD19FFCAC2CAFD3DFF7DFD11FFA87D7DA7FF277D52A87DA87DFF
%CFFFFFFFA8BC8CCAAFFFFFFFA8FFFFFFA8FFCFFFA8FFA8FFA8FFFFFFA8FF
%CFFFA8FFCABCC3FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FF
%FFFFA8FFFFFF7D7DFD11FFA85252A8A87D527D527DA8A8FD25FFC3BCFFCA
%FD38FFA87DFD12FFA8A8A8FFA8A8FFA8A8A87DFD07FFAFFD0FFFA8FD0EFF
%CA8CFCA1FD1FFFA8FD0FFFA8FD07FFA87DFD1BFFA8A8FD26FFCAB5FCBCFD
%38FF7DFD1BFFA87DFD07FFA8FD0FFFA8FD0FFFA1B5C3FD37FFA87DFD1BFF
%A8A8FD29FFC3FD38FF7DFD1BFFA87DFD07FFA8FD0FFFA8FD11FFC3C3FD0E
%FFA8FD0FFFA8FD0FFFA8FD07FFA87DFD1BFFA8A8FD2AFFBCFD37FF7DFD1B
%FFA87DFD2AFFCAC3FD1DFFA8FD0FFFA8FD07FFA8A8FD0DFFA8FFA8FFFFFF
%A8FFFFCFA8FFA8FFA8A8FD2BFFC3CFFD35FF7DFD0CFF52A8FF76A8FF5252
%A8FF277DA85252A87DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA1C3FFFFA8FFFFFF
%A8FD05FFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFA87DFD0CFFA87C7D52FFA7A87DA8FFA8
%52A8527DA87DA8FD2BFFC3FD34FFA87DFD0CFFA87D27A8FFFF52527DA87D
%527D5252A87DFD2CFFCAC3FD33FFA87DFD0DFF7DA87DFFFFFFA8FFA8A8A8
%FFA8FFA8A8FD2DFFC3CAFD33FF7DFD0CFFA8A87D7DCFFD0AFFA87DFD07FF
%A8FD0FFFA8FD15FFCAC3FD09FFCAA8FD0FFFA8FD0FFFA8FD07FFA87DFD0D
%FF7D7D7DFD0BFFA8A8FD2EFFC2CAFD07FFCAFCB5CAFD27FF7DFD0CFFA87D
%277DFD0BFFA87DFD2EFFCAC2FD05FFCACAB5FC8CCAFD0EFFA8FD0FFFA8FD
%07FFA8A8FD0CFFA85127A8FD0BFFA8A8FD2FFFCABCFFCACAC3C3C3FFC2BC
%FD28FF7DFD0EFF7D7DA8FD0AFFA87DFD07FFA8FD0FFFA8FD0FFFA8FD07FF
%9AFC8CC3C3FD05FFC3CAFD0EFFA8FD0FFFA8FD07FFA87DFD1BFFA8A8FD2F
%FFBCFCB5FD08FFC3FD27FF7DFD12FFA8A8FFFFA1A8FFA8A8A87DFD07FFA8
%FD0FFFA8FD18FFC3CAFD08FFC3CAFD25FFA87DFD11FFA87D52FFFF527DFF
%27A8A8A8FD28FFCFFD0FFFCAFFCAC3FD25FFA87DFD11FFA77D7D7DFF7D7D
%52527CA87CCFA8FFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FFFFA8FFBCCFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFCAFF7D7DFD11FFA87D52A8A8A852A8527DA8A8FD
%3BFFCAC3FD25FF7DFD12FFA8FFFFFFA8FD04FFA87DFD3BFFCAC3FD0CFFA8
%FD0FFFA8FD07FFA8A8FD1BFFA8A8FD3CFFC3CAFD24FF7DFD1BFFA87DFD07
%FFA8FD0FFFA8FD0FFFA8FD15FFBCFD0BFFA8FD17FFA87DFD1BFFA8A8FD3D
%FFC3CAFD1AFFCACAFD07FF7DFD1BFFA87DFD07FFA8FD0FFFA8FD25FFCAC3
%FD0AFFCFFD0EFFCA8CFCA8FD05FFA87DFD1BFFA8A8FD3EFFC2FD19FFC3FC
%FCC9FD06FF7DFD1BFFA87DFD07FFA8FD0FFFA8FD21FFA8FD04FFCAC3FD09
%FFAFFD0FFF8CC3FD06FFA87DFD12FFA8A8FFFFA8A8FFA8FFA8A8FD3FFFC3
%FD08FFCABCCAFD0DFFC3CAFD08FF7DFD11FFA85252A8FF27A8FF5252FF7D
%FD07FFA8FD0FFFA8FD21FFA8FD05FFC3CAFD06FFCAFCFCB5FD0DFFC3A8FD
%07FFA8A8FD11FFA7A87DA8FFA8527D277DA87DA8FD05FFCFFD39FFC2FFFF
%FFCAC3BCC3BCFC9AFD0CFFCAC3FFA8FD06FFA87DFD12FF5276A8A87D7DA8
%7D52A87DFD07FFA8FD0FFFA8FD27FFAFB593C3BCC3C3FFFFFFA1C3FD0CFF
%C3CAFD08FFA87DFD1BFFA8A8FD3FFFCAFCFCB5FD07FFC3FD0CFFC3FD0AFF
%7DFD1BFFA87DFD07FFA8FD0FFFA8FD28FFBC93FD08FFCABCFD0AFFCAC3FD
%09FFA87DFD1BFFA8A8FD4BFFC3CAFD09FFC3FD0BFF7DFD1BFFA87DFD07FF
%A8FD0FFFA8FD21FFA8FD0FFFA8FFC3C3FD08FFCAC3FFFFA8FD07FFA87DFD
%1BFFA8A8FD4CFFBCFD08FFCACAFD0BFF7DFD1BFFA87DFD07FFCAFD0FFFCA
%FD31FFA8FFFFC9C3FD07FFBCFFFFFFA8FD07FFA8A8FD1BFFA8A8FD4DFFC3
%FD06FFCAC3FD0CFF7DFD12FFA87DFFFF7D7DA87DA8A87DFD07FFA8FD0FFF
%A8FD0FFFA8FD21FFCAFFFFFFC3C3FD05FFC3CAFFFFFFCAFD07FFA87DFD12
%FF7652A8FF5252FFA852A8A8FD4EFFC2FD05FFC3FD0CFFA87DFD11FFA852
%7D7DFFA852A8A87DA852FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCF
%FFA8FFCFFFCAFFA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFA8FFA8FFFFC3C3
%FFFFFFA1CAFFFFA8FFA8FFA8FFFFFFA8FF7D7DFD12FF7D52A87DA852A827
%A8A8A8FD4FFFC3FFFFFFC3FD0EFF7DFD16FFA8FFFFFFA8A87DFD07FFA8FD
%0FFFA8FD21FFA8FD0FFFA8FD05FFC3CAFFCAC3FD05FFA8FD07FFA87DFD1B
%FFA8A8FD50FFBCFFC3FD0FFF7DFD1BFFA87DFD07FFCFFD0FFFCFFD31FFA8
%FD06FFC39AC3FD06FFA8FD07FFA8A8FD1BFFA8A8FD50FFC3FCBBFD0FFF7D
%FD1BFFA87DFD07FFA8FD0FFFA8FD0FFFA8FD21FFA8FD05FFAFB5FCFCA8FD
%05FFA8FD07FFA87DFD1BFFA8A8FD50FFCABCCAFD0FFF7DFD1BFFA87DFD07
%FFCAFD0FFFCAFD49FFA87DFD12FFA87DFFFF7D7DFF7DA8A8A8FD28FFA8FD
%0FFFA8FD29FF7DFD11FFA85252A8FF27A77D5252A87DFFA8FFFD04A87DFF
%A8FFA8A8A8FFA8A8A8FFA8A8A8FF7DA8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A87DA8FFA8A8A8FFA8A8A8FFA8A8A8FFA87DA8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A87DFFA8A8A8FFA8A8A8FFA8A8A8FFA8FF7DFD04A8FFA8FF7D7DFD
%11FF7D7D7DA8FFFF527C7D7DA87D7DA87DA87DA87DFD05A87DA87DA87DA8
%7DA8A8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA883A87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA8A8A87DA8
%7DA87DA87DA87DA8A8A87DA8A8A87DA87DA87D7DA8FD12FF527DA8A87D7D
%A8527DFD05FFA7A8FFFFA87DFFA8A1FD08FF7DA8FFFF7DA8FF7DFD08FFA8
%7DFFFFA87DFFA8A8FD08FF7DFFFFFF7DFFFFA8A8FD07FFA8A7FFFFA8A8FF
%7D7DFD08FFA8A8FFFFA8A8FF7DFD25FFA852FFFF7D5252527DA8FD06FF7D
%527DFFA8527D52277DFD07FF527D7DFFFD04527DFD07FF7D7D52FF7D5252
%FF27A8FD07FF7D527DFF7D527DFF52A8FD06FFA8527DFFA8527D527D52FD
%24FFA852FFFF52A8277D7DA8FD06FF527D52FFA852277D277DFD06FFA87D
%7D7DFFA827524B7DA8FD06FF7D7D52A8FF5252522752FD07FF527D52FF7D
%2752A852FD07FF7D7D52A8A87C27527D52A8FD23FFA852CFA8A852A87D7D
%FD08FF52A8A8FF76A87D7D7DFD07FF7D7CA8FFA87DA87D7CFD07FFA87D7D
%A8A87D7DFF7DA8FD07FFA852A8A8A852FF52A7FD08FF52A7A8FF7DA8A852
%7DFD24FFA8FD17FFA8FD31FFA8FD5AFFA87D7DFD0DFFA8FD6FFF7D7D5252
%FD057D52A8527D7DA87D277DFD6EFF7DFF7D527D7D7D7C527D277D7D527D
%7C52FD6FFFA8527DA8A8A87C7D5252A8527D7D527D7D7DFD76FF7DFDBDFF
%FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-12-31T17:29:09+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq+fPKnm78wtC8pSedLhNQv9GWwf6wuq3UNwlxfzX0UFvLarE8s8MMcbOZOfGv8v7WBWY2fn38y&#xA;bxdP0waXaafrF7qUlkLy+gnjtmtksWvPrC2wmMobkhj4GT3rQ7NpSPyx5p8+2+oXML3tlcatrusa&#xA;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&#xA;q7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2015-12-31T17:29:09+08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-12-31T17:29:09+08:00</xmp:ModifyDate>
         <pdf:Producer>matplotlib pdf backend</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>360.000000</stDim:w>
            <stDim:h>288.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:ef4c8c9a-2aca-8a45-8080-ca8871636da6</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ef4c8c9a-2aca-8a45-8080-ca8871636da6</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ef4c8c9a-2aca-8a45-8080-ca8871636da6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ef4c8c9a-2aca-8a45-8080-ca8871636da6</stEvt:instanceID>
                  <stEvt:when>2015-12-31T17:29:09+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -288.512 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288.512 li
360 288.512 li
360 0 li
cp
clp
0 288 mo
360 288 li
360 0 li
0 0 li
0 288 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
68.25 103.137 mo
91.5 83.3273 li
114.75 95.3177 li
138 95.3474 li
161.25 113.194 li
184.5 157.619 li
207.75 149.429 li
231 203.803 li
254.25 196.026 li
277.5 245.552 li
300.75 186.151 li
0 .993988 1 0 cmyk
@
gsave
63.7574 107.63 mo
72.7426 107.63 li
72.7426 98.6445 li
63.7574 98.6445 li
63.7574 107.63 li
cp
clp
68.25 107.38 mo
72.4926 103.137 li
68.25 98.8945 li
64.0074 103.137 li
68.25 107.38 li
cp
f
.5 lw
0 lc
0 lj
68.25 107.38 mo
72.4926 103.137 li
68.25 98.8945 li
64.0074 103.137 li
68.25 107.38 li
cp
0 0 0 1 cmyk
@
grestore
gsave
87.0074 87.8199 mo
95.9926 87.8199 li
95.9926 78.8346 li
87.0074 78.8346 li
87.0074 87.8199 li
cp
clp
91.5 87.5699 mo
95.7426 83.3273 li
91.5 79.0846 li
87.2574 83.3273 li
91.5 87.5699 li
cp
f
.5 lw
0 lc
0 lj
91.5 87.5699 mo
95.7426 83.3273 li
91.5 79.0846 li
87.2574 83.3273 li
91.5 87.5699 li
cp
0 0 0 1 cmyk
@
grestore
gsave
110.257 99.8103 mo
119.243 99.8103 li
119.243 90.825 li
110.257 90.825 li
110.257 99.8103 li
cp
clp
114.75 99.5603 mo
118.993 95.3176 li
114.75 91.075 li
110.507 95.3176 li
114.75 99.5603 li
cp
f
.5 lw
0 lc
0 lj
114.75 99.5603 mo
118.993 95.3176 li
114.75 91.075 li
110.507 95.3176 li
114.75 99.5603 li
cp
0 0 0 1 cmyk
@
grestore
gsave
133.507 99.84 mo
142.493 99.84 li
142.493 90.8547 li
133.507 90.8547 li
133.507 99.84 li
cp
clp
138 99.59 mo
142.243 95.3474 li
138 91.1047 li
133.757 95.3474 li
138 99.59 li
cp
f
.5 lw
0 lc
0 lj
138 99.59 mo
142.243 95.3474 li
138 91.1047 li
133.757 95.3474 li
138 99.59 li
cp
0 0 0 1 cmyk
@
grestore
gsave
156.757 117.686 mo
165.743 117.686 li
165.743 108.701 li
156.757 108.701 li
156.757 117.686 li
cp
clp
161.25 117.436 mo
165.493 113.194 li
161.25 108.951 li
157.007 113.194 li
161.25 117.436 li
cp
f
.5 lw
0 lc
0 lj
161.25 117.436 mo
165.493 113.194 li
161.25 108.951 li
157.007 113.194 li
161.25 117.436 li
cp
0 0 0 1 cmyk
@
grestore
gsave
180.007 162.111 mo
188.993 162.111 li
188.993 153.126 li
180.007 153.126 li
180.007 162.111 li
cp
clp
184.5 161.861 mo
188.743 157.619 li
184.5 153.376 li
180.257 157.619 li
184.5 161.861 li
cp
f
.5 lw
0 lc
0 lj
184.5 161.861 mo
188.743 157.619 li
184.5 153.376 li
180.257 157.619 li
184.5 161.861 li
cp
0 0 0 1 cmyk
@
grestore
gsave
203.257 153.922 mo
212.243 153.922 li
212.243 144.936 li
203.257 144.936 li
203.257 153.922 li
cp
clp
207.75 153.672 mo
211.993 149.429 li
207.75 145.186 li
203.507 149.429 li
207.75 153.672 li
cp
f
.5 lw
0 lc
0 lj
207.75 153.672 mo
211.993 149.429 li
207.75 145.186 li
203.507 149.429 li
207.75 153.672 li
cp
0 0 0 1 cmyk
@
grestore
gsave
226.507 208.295 mo
235.493 208.295 li
235.493 199.31 li
226.507 199.31 li
226.507 208.295 li
cp
clp
231 208.045 mo
235.243 203.803 li
231 199.56 li
226.757 203.803 li
231 208.045 li
cp
f
.5 lw
0 lc
0 lj
231 208.045 mo
235.243 203.803 li
231 199.56 li
226.757 203.803 li
231 208.045 li
cp
0 0 0 1 cmyk
@
grestore
gsave
249.757 200.519 mo
258.743 200.519 li
258.743 191.534 li
249.757 191.534 li
249.757 200.519 li
cp
clp
254.25 200.269 mo
258.493 196.026 li
254.25 191.784 li
250.007 196.026 li
254.25 200.269 li
cp
f
.5 lw
0 lc
0 lj
254.25 200.269 mo
258.493 196.026 li
254.25 191.784 li
250.007 196.026 li
254.25 200.269 li
cp
0 0 0 1 cmyk
@
grestore
gsave
273.007 250.044 mo
281.993 250.044 li
281.993 241.059 li
273.007 241.059 li
273.007 250.044 li
cp
clp
277.5 249.794 mo
281.743 245.552 li
277.5 241.309 li
273.257 245.552 li
277.5 249.794 li
cp
f
.5 lw
0 lc
0 lj
277.5 249.794 mo
281.743 245.552 li
277.5 241.309 li
273.257 245.552 li
277.5 249.794 li
cp
0 0 0 1 cmyk
@
grestore
gsave
296.257 190.644 mo
305.243 190.644 li
305.243 181.658 li
296.257 181.658 li
296.257 190.644 li
cp
clp
300.75 190.394 mo
304.993 186.151 li
300.75 181.908 li
296.507 186.151 li
300.75 190.394 li
cp
f
.5 lw
0 lc
0 lj
300.75 190.394 mo
304.993 186.151 li
300.75 181.908 li
296.507 186.151 li
300.75 190.394 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
.5 lw
0 lc
1 lj
10 ml
[1 3 ] 0 dsh
true sadj
300.75 259.2 mo
300.75 28.8 li
0 0 0 1 cmyk
@
grestore
300.75 259.2 mo
300.75 255.2 li
0 0 0 1 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
300.75 259.2 mo
300.75 255.2 li
@
300.75 28.8 mo
300.75 32.8 li
f
300.75 28.8 mo
300.75 32.8 li
@
291.996 264.138 mo
291.384 264.138 290.928 264.438 290.616 265.038 cv
290.304 265.638 290.16 266.538 290.16 267.738 cv
290.16 268.938 290.304 269.838 290.616 270.438 cv
290.928 271.038 291.384 271.338 291.996 271.338 cv
292.608 271.338 293.064 271.038 293.376 270.438 cv
293.676 269.838 293.832 268.938 293.832 267.738 cv
293.832 266.538 293.676 265.638 293.376 265.038 cv
293.064 264.438 292.608 264.138 291.996 264.138 cv
291.996 263.202 mo
292.968 263.202 293.712 263.598 294.24 264.366 cv
294.756 265.146 295.02 266.274 295.02 267.738 cv
295.02 269.214 294.756 270.342 294.24 271.11 cv
293.712 271.878 292.968 272.262 291.996 272.262 cv
291.012 272.262 290.256 271.878 289.74 271.11 cv
289.224 270.342 288.972 269.214 288.972 267.738 cv
288.972 266.274 289.224 265.146 289.74 264.366 cv
290.256 263.598 291.012 263.202 291.996 263.202 cv
f
297.096 270.618 mo
298.332 270.618 li
298.332 272.106 li
297.096 272.106 li
297.096 270.618 li
f
300.948 271.926 mo
300.948 270.846 li
301.236 270.99 301.536 271.098 301.848 271.17 cv
302.148 271.242 302.448 271.278 302.748 271.278 cv
303.516 271.278 304.116 271.026 304.524 270.498 cv
304.932 269.97 305.172 269.178 305.244 268.098 cv
305.004 268.434 304.716 268.698 304.38 268.878 cv
304.032 269.058 303.648 269.142 303.228 269.142 cv
302.34 269.142 301.644 268.878 301.14 268.35 cv
300.636 267.822 300.384 267.102 300.384 266.178 cv
300.384 265.29 300.648 264.57 301.176 264.018 cv
301.704 263.478 302.412 263.202 303.3 263.202 cv
304.308 263.202 305.088 263.598 305.616 264.366 cv
306.144 265.146 306.42 266.274 306.42 267.738 cv
306.42 269.13 306.084 270.222 305.436 271.038 cv
304.776 271.854 303.9 272.262 302.796 272.262 cv
302.496 272.262 302.196 272.226 301.896 272.178 cv
301.584 272.13 301.272 272.046 300.948 271.926 cv
303.3 268.218 mo
303.828 268.218 304.248 268.038 304.56 267.678 cv
304.872 267.318 305.028 266.814 305.028 266.178 cv
305.028 265.554 304.872 265.05 304.56 264.69 cv
304.248 264.33 303.828 264.138 303.3 264.138 cv
302.772 264.138 302.352 264.33 302.04 264.69 cv
301.728 265.05 301.572 265.554 301.572 266.178 cv
301.572 266.814 301.728 267.318 302.04 267.678 cv
302.352 268.038 302.772 268.218 303.3 268.218 cv
f
311.076 264.138 mo
310.464 264.138 310.008 264.438 309.696 265.038 cv
309.384 265.638 309.24 266.538 309.24 267.738 cv
309.24 268.938 309.384 269.838 309.696 270.438 cv
310.008 271.038 310.464 271.338 311.076 271.338 cv
311.688 271.338 312.144 271.038 312.456 270.438 cv
312.756 269.838 312.912 268.938 312.912 267.738 cv
312.912 266.538 312.756 265.638 312.456 265.038 cv
312.144 264.438 311.688 264.138 311.076 264.138 cv
311.076 263.202 mo
312.048 263.202 312.792 263.598 313.32 264.366 cv
313.836 265.146 314.1 266.274 314.1 267.738 cv
314.1 269.214 313.836 270.342 313.32 271.11 cv
312.792 271.878 312.048 272.262 311.076 272.262 cv
310.092 272.262 309.336 271.878 308.82 271.11 cv
308.304 270.342 308.052 269.214 308.052 267.738 cv
308.052 266.274 308.304 265.146 308.82 264.366 cv
309.336 263.598 310.092 263.202 311.076 263.202 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
254.25 259.2 mo
254.25 28.8 li
@
grestore
254.25 259.2 mo
254.25 255.2 li
f
254.25 259.2 mo
254.25 255.2 li
@
254.25 28.8 mo
254.25 32.8 li
f
254.25 28.8 mo
254.25 32.8 li
@
245.699 264.138 mo
245.087 264.138 244.631 264.438 244.319 265.038 cv
244.007 265.638 243.863 266.538 243.863 267.738 cv
243.863 268.938 244.007 269.838 244.319 270.438 cv
244.631 271.038 245.087 271.338 245.699 271.338 cv
246.311 271.338 246.767 271.038 247.079 270.438 cv
247.379 269.838 247.535 268.938 247.535 267.738 cv
247.535 266.538 247.379 265.638 247.079 265.038 cv
246.767 264.438 246.311 264.138 245.699 264.138 cv
245.699 263.202 mo
246.671 263.202 247.415 263.598 247.943 264.366 cv
248.459 265.146 248.723 266.274 248.723 267.738 cv
248.723 269.214 248.459 270.342 247.943 271.11 cv
247.415 271.878 246.671 272.262 245.699 272.262 cv
244.715 272.262 243.959 271.878 243.443 271.11 cv
242.927 270.342 242.675 269.214 242.675 267.738 cv
242.675 266.274 242.927 265.146 243.443 264.366 cv
243.959 263.598 244.715 263.202 245.699 263.202 cv
f
250.799 270.618 mo
252.035 270.618 li
252.035 272.106 li
250.799 272.106 li
250.799 270.618 li
f
254.651 271.926 mo
254.651 270.846 li
254.939 270.99 255.239 271.098 255.551 271.17 cv
255.851 271.242 256.151 271.278 256.451 271.278 cv
257.219 271.278 257.819 271.026 258.227 270.498 cv
258.635 269.97 258.875 269.178 258.947 268.098 cv
258.707 268.434 258.419 268.698 258.083 268.878 cv
257.735 269.058 257.351 269.142 256.931 269.142 cv
256.043 269.142 255.347 268.878 254.843 268.35 cv
254.339 267.822 254.087 267.102 254.087 266.178 cv
254.087 265.29 254.351 264.57 254.879 264.018 cv
255.407 263.478 256.115 263.202 257.003 263.202 cv
258.011 263.202 258.791 263.598 259.319 264.366 cv
259.847 265.146 260.123 266.274 260.123 267.738 cv
260.123 269.13 259.787 270.222 259.139 271.038 cv
258.479 271.854 257.603 272.262 256.499 272.262 cv
256.199 272.262 255.899 272.226 255.599 272.178 cv
255.287 272.13 254.975 272.046 254.651 271.926 cv
257.003 268.218 mo
257.531 268.218 257.951 268.038 258.263 267.678 cv
258.575 267.318 258.731 266.814 258.731 266.178 cv
258.731 265.554 258.575 265.05 258.263 264.69 cv
257.951 264.33 257.531 264.138 257.003 264.138 cv
256.475 264.138 256.055 264.33 255.743 264.69 cv
255.431 265.05 255.275 265.554 255.275 266.178 cv
255.275 266.814 255.431 267.318 255.743 267.678 cv
256.055 268.038 256.475 268.218 257.003 268.218 cv
f
263.267 271.11 mo
267.395 271.11 li
267.395 272.106 li
261.839 272.106 li
261.839 271.11 li
262.283 270.654 262.895 270.03 263.675 269.238 cv
264.443 268.458 264.935 267.954 265.139 267.726 cv
265.523 267.306 265.787 266.946 265.931 266.646 cv
266.075 266.358 266.159 266.058 266.159 265.77 cv
266.159 265.314 265.991 264.93 265.667 264.642 cv
265.343 264.354 264.923 264.198 264.395 264.198 cv
264.023 264.198 263.627 264.27 263.219 264.39 cv
262.811 264.522 262.367 264.714 261.899 264.978 cv
261.899 263.778 li
262.379 263.586 262.823 263.442 263.231 263.346 cv
263.639 263.25 264.023 263.202 264.371 263.202 cv
265.271 263.202 265.991 263.43 266.531 263.886 cv
267.071 264.342 267.347 264.942 267.347 265.698 cv
267.347 266.058 267.275 266.406 267.143 266.718 cv
267.011 267.042 266.771 267.426 266.411 267.858 cv
266.315 267.978 266.003 268.302 265.475 268.842 cv
264.947 269.382 264.215 270.138 263.267 271.11 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
207.75 259.2 mo
207.75 28.8 li
@
grestore
207.75 259.2 mo
207.75 255.2 li
f
207.75 259.2 mo
207.75 255.2 li
@
207.75 28.8 mo
207.75 32.8 li
f
207.75 28.8 mo
207.75 32.8 li
@
198.933 264.138 mo
198.321 264.138 197.865 264.438 197.553 265.038 cv
197.241 265.638 197.097 266.538 197.097 267.738 cv
197.097 268.938 197.241 269.838 197.553 270.438 cv
197.865 271.038 198.321 271.338 198.933 271.338 cv
199.545 271.338 200.001 271.038 200.313 270.438 cv
200.613 269.838 200.769 268.938 200.769 267.738 cv
200.769 266.538 200.613 265.638 200.313 265.038 cv
200.001 264.438 199.545 264.138 198.933 264.138 cv
198.933 263.202 mo
199.905 263.202 200.649 263.598 201.177 264.366 cv
201.693 265.146 201.957 266.274 201.957 267.738 cv
201.957 269.214 201.693 270.342 201.177 271.11 cv
200.649 271.878 199.905 272.262 198.933 272.262 cv
197.949 272.262 197.193 271.878 196.677 271.11 cv
196.161 270.342 195.909 269.214 195.909 267.738 cv
195.909 266.274 196.161 265.146 196.677 264.366 cv
197.193 263.598 197.949 263.202 198.933 263.202 cv
f
204.033 270.618 mo
205.269 270.618 li
205.269 272.106 li
204.033 272.106 li
204.033 270.618 li
f
207.885 271.926 mo
207.885 270.846 li
208.173 270.99 208.473 271.098 208.785 271.17 cv
209.085 271.242 209.385 271.278 209.685 271.278 cv
210.453 271.278 211.053 271.026 211.461 270.498 cv
211.869 269.97 212.109 269.178 212.181 268.098 cv
211.941 268.434 211.653 268.698 211.317 268.878 cv
210.969 269.058 210.585 269.142 210.165 269.142 cv
209.277 269.142 208.581 268.878 208.077 268.35 cv
207.573 267.822 207.321 267.102 207.321 266.178 cv
207.321 265.29 207.585 264.57 208.113 264.018 cv
208.641 263.478 209.349 263.202 210.237 263.202 cv
211.245 263.202 212.025 263.598 212.553 264.366 cv
213.081 265.146 213.357 266.274 213.357 267.738 cv
213.357 269.13 213.021 270.222 212.373 271.038 cv
211.713 271.854 210.837 272.262 209.733 272.262 cv
209.433 272.262 209.133 272.226 208.833 272.178 cv
208.521 272.13 208.209 272.046 207.885 271.926 cv
210.237 268.218 mo
210.765 268.218 211.185 268.038 211.497 267.678 cv
211.809 267.318 211.965 266.814 211.965 266.178 cv
211.965 265.554 211.809 265.05 211.497 264.69 cv
211.185 264.33 210.765 264.138 210.237 264.138 cv
209.709 264.138 209.289 264.33 208.977 264.69 cv
208.665 265.05 208.509 265.554 208.509 266.178 cv
208.509 266.814 208.665 267.318 208.977 267.678 cv
209.289 268.038 209.709 268.218 210.237 268.218 cv
f
218.733 264.39 mo
215.745 269.058 li
218.733 269.058 li
218.733 264.39 li
218.421 263.358 mo
219.909 263.358 li
219.909 269.058 li
221.157 269.058 li
221.157 270.042 li
219.909 270.042 li
219.909 272.106 li
218.733 272.106 li
218.733 270.042 li
214.785 270.042 li
214.785 268.902 li
218.421 263.358 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
161.25 259.2 mo
161.25 28.8 li
@
grestore
161.25 259.2 mo
161.25 255.2 li
f
161.25 259.2 mo
161.25 255.2 li
@
161.25 28.8 mo
161.25 32.8 li
f
161.25 28.8 mo
161.25 32.8 li
@
152.48 264.138 mo
151.868 264.138 151.412 264.438 151.1 265.038 cv
150.788 265.638 150.644 266.538 150.644 267.738 cv
150.644 268.938 150.788 269.838 151.1 270.438 cv
151.412 271.038 151.868 271.338 152.48 271.338 cv
153.092 271.338 153.548 271.038 153.86 270.438 cv
154.16 269.838 154.316 268.938 154.316 267.738 cv
154.316 266.538 154.16 265.638 153.86 265.038 cv
153.548 264.438 153.092 264.138 152.48 264.138 cv
152.48 263.202 mo
153.452 263.202 154.196 263.598 154.724 264.366 cv
155.24 265.146 155.504 266.274 155.504 267.738 cv
155.504 269.214 155.24 270.342 154.724 271.11 cv
154.196 271.878 153.452 272.262 152.48 272.262 cv
151.496 272.262 150.74 271.878 150.224 271.11 cv
149.708 270.342 149.456 269.214 149.456 267.738 cv
149.456 266.274 149.708 265.146 150.224 264.366 cv
150.74 263.598 151.496 263.202 152.48 263.202 cv
f
157.58 270.618 mo
158.816 270.618 li
158.816 272.106 li
157.58 272.106 li
157.58 270.618 li
f
161.432 271.926 mo
161.432 270.846 li
161.72 270.99 162.02 271.098 162.332 271.17 cv
162.632 271.242 162.932 271.278 163.232 271.278 cv
164 271.278 164.6 271.026 165.008 270.498 cv
165.416 269.97 165.656 269.178 165.728 268.098 cv
165.488 268.434 165.2 268.698 164.864 268.878 cv
164.516 269.058 164.132 269.142 163.712 269.142 cv
162.824 269.142 162.128 268.878 161.624 268.35 cv
161.12 267.822 160.868 267.102 160.868 266.178 cv
160.868 265.29 161.132 264.57 161.66 264.018 cv
162.188 263.478 162.896 263.202 163.784 263.202 cv
164.792 263.202 165.572 263.598 166.1 264.366 cv
166.628 265.146 166.904 266.274 166.904 267.738 cv
166.904 269.13 166.568 270.222 165.92 271.038 cv
165.26 271.854 164.384 272.262 163.28 272.262 cv
162.98 272.262 162.68 272.226 162.38 272.178 cv
162.068 272.13 161.756 272.046 161.432 271.926 cv
163.784 268.218 mo
164.312 268.218 164.732 268.038 165.044 267.678 cv
165.356 267.318 165.512 266.814 165.512 266.178 cv
165.512 265.554 165.356 265.05 165.044 264.69 cv
164.732 264.33 164.312 264.138 163.784 264.138 cv
163.256 264.138 162.836 264.33 162.524 264.69 cv
162.212 265.05 162.056 265.554 162.056 266.178 cv
162.056 266.814 162.212 267.318 162.524 267.678 cv
162.836 268.038 163.256 268.218 163.784 268.218 cv
f
171.704 267.258 mo
171.176 267.258 170.756 267.45 170.444 267.81 cv
170.132 268.17 169.976 268.674 169.976 269.298 cv
169.976 269.934 170.132 270.438 170.444 270.798 cv
170.756 271.158 171.176 271.338 171.704 271.338 cv
172.232 271.338 172.652 271.158 172.964 270.798 cv
173.276 270.438 173.432 269.934 173.432 269.298 cv
173.432 268.674 173.276 268.17 172.964 267.81 cv
172.652 267.45 172.232 267.258 171.704 267.258 cv
174.056 263.55 mo
174.056 264.63 li
173.756 264.486 173.456 264.378 173.156 264.306 cv
172.844 264.234 172.544 264.198 172.256 264.198 cv
171.464 264.198 170.864 264.462 170.456 264.99 cv
170.048 265.518 169.808 266.322 169.76 267.378 cv
169.988 267.042 170.276 266.778 170.624 266.598 cv
170.972 266.418 171.356 266.322 171.776 266.322 cv
172.652 266.322 173.348 266.598 173.852 267.126 cv
174.356 267.654 174.62 268.386 174.62 269.298 cv
174.62 270.198 174.344 270.918 173.816 271.458 cv
173.288 271.998 172.58 272.262 171.704 272.262 cv
170.696 272.262 169.916 271.878 169.388 271.11 cv
168.848 270.342 168.584 269.214 168.584 267.738 cv
168.584 266.358 168.908 265.254 169.568 264.438 cv
170.216 263.622 171.104 263.202 172.208 263.202 cv
172.496 263.202 172.796 263.238 173.108 263.286 cv
173.408 263.346 173.72 263.43 174.056 263.55 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
114.75 259.2 mo
114.75 28.8 li
@
grestore
114.75 259.2 mo
114.75 255.2 li
f
114.75 259.2 mo
114.75 255.2 li
@
114.75 28.8 mo
114.75 32.8 li
f
114.75 28.8 mo
114.75 32.8 li
@
106.011 264.138 mo
105.399 264.138 104.943 264.438 104.631 265.038 cv
104.319 265.638 104.175 266.538 104.175 267.738 cv
104.175 268.938 104.319 269.838 104.631 270.438 cv
104.943 271.038 105.399 271.338 106.011 271.338 cv
106.623 271.338 107.079 271.038 107.391 270.438 cv
107.691 269.838 107.847 268.938 107.847 267.738 cv
107.847 266.538 107.691 265.638 107.391 265.038 cv
107.079 264.438 106.623 264.138 106.011 264.138 cv
106.011 263.202 mo
106.983 263.202 107.727 263.598 108.255 264.366 cv
108.771 265.146 109.035 266.274 109.035 267.738 cv
109.035 269.214 108.771 270.342 108.255 271.11 cv
107.727 271.878 106.983 272.262 106.011 272.262 cv
105.027 272.262 104.271 271.878 103.755 271.11 cv
103.239 270.342 102.987 269.214 102.987 267.738 cv
102.987 266.274 103.239 265.146 103.755 264.366 cv
104.271 263.598 105.027 263.202 106.011 263.202 cv
f
111.111 270.618 mo
112.347 270.618 li
112.347 272.106 li
111.111 272.106 li
111.111 270.618 li
f
114.963 271.926 mo
114.963 270.846 li
115.251 270.99 115.551 271.098 115.863 271.17 cv
116.163 271.242 116.463 271.278 116.763 271.278 cv
117.531 271.278 118.131 271.026 118.539 270.498 cv
118.947 269.97 119.187 269.178 119.259 268.098 cv
119.019 268.434 118.731 268.698 118.395 268.878 cv
118.047 269.058 117.663 269.142 117.243 269.142 cv
116.355 269.142 115.659 268.878 115.155 268.35 cv
114.651 267.822 114.399 267.102 114.399 266.178 cv
114.399 265.29 114.663 264.57 115.191 264.018 cv
115.719 263.478 116.427 263.202 117.315 263.202 cv
118.323 263.202 119.103 263.598 119.631 264.366 cv
120.159 265.146 120.435 266.274 120.435 267.738 cv
120.435 269.13 120.099 270.222 119.451 271.038 cv
118.791 271.854 117.915 272.262 116.811 272.262 cv
116.511 272.262 116.211 272.226 115.911 272.178 cv
115.599 272.13 115.287 272.046 114.963 271.926 cv
117.315 268.218 mo
117.843 268.218 118.263 268.038 118.575 267.678 cv
118.887 267.318 119.043 266.814 119.043 266.178 cv
119.043 265.554 118.887 265.05 118.575 264.69 cv
118.263 264.33 117.843 264.138 117.315 264.138 cv
116.787 264.138 116.367 264.33 116.055 264.69 cv
115.743 265.05 115.587 265.554 115.587 266.178 cv
115.587 266.814 115.743 267.318 116.055 267.678 cv
116.367 268.038 116.787 268.218 117.315 268.218 cv
f
125.091 267.954 mo
124.527 267.954 124.083 268.11 123.759 268.41 cv
123.435 268.71 123.279 269.118 123.279 269.646 cv
123.279 270.174 123.435 270.594 123.759 270.894 cv
124.083 271.194 124.527 271.338 125.091 271.338 cv
125.643 271.338 126.087 271.194 126.411 270.882 cv
126.735 270.582 126.903 270.174 126.903 269.646 cv
126.903 269.118 126.735 268.71 126.423 268.41 cv
126.099 268.11 125.655 267.954 125.091 267.954 cv
123.903 267.45 mo
123.399 267.33 123.003 267.09 122.715 266.742 cv
122.427 266.394 122.295 265.974 122.295 265.47 cv
122.295 264.774 122.535 264.222 123.039 263.814 cv
123.531 263.406 124.215 263.202 125.091 263.202 cv
125.955 263.202 126.639 263.406 127.143 263.814 cv
127.635 264.222 127.887 264.774 127.887 265.47 cv
127.887 265.974 127.743 266.394 127.455 266.742 cv
127.167 267.09 126.783 267.33 126.279 267.45 cv
126.843 267.582 127.287 267.846 127.611 268.23 cv
127.923 268.614 128.091 269.094 128.091 269.646 cv
128.091 270.498 127.827 271.146 127.311 271.59 cv
126.783 272.046 126.051 272.262 125.091 272.262 cv
124.119 272.262 123.375 272.046 122.859 271.59 cv
122.343 271.146 122.091 270.498 122.091 269.646 cv
122.091 269.094 122.247 268.614 122.571 268.23 cv
122.883 267.846 123.327 267.582 123.903 267.45 cv
123.471 265.578 mo
123.471 266.034 123.603 266.394 123.891 266.646 cv
124.179 266.898 124.575 267.018 125.091 267.018 cv
125.595 267.018 125.991 266.898 126.279 266.646 cv
126.567 266.394 126.711 266.034 126.711 265.578 cv
126.711 265.122 126.567 264.774 126.279 264.522 cv
125.991 264.27 125.595 264.138 125.091 264.138 cv
124.575 264.138 124.179 264.27 123.891 264.522 cv
123.603 264.774 123.471 265.122 123.471 265.578 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
68.25 259.2 mo
68.25 28.8 li
@
grestore
68.25 259.2 mo
68.25 255.2 li
f
68.25 259.2 mo
68.25 255.2 li
@
68.25 28.8 mo
68.25 32.8 li
f
68.25 28.8 mo
68.25 32.8 li
@
57.4255 271.11 mo
59.3575 271.11 li
59.3575 264.438 li
57.2575 264.858 li
57.2575 263.778 li
59.3455 263.358 li
60.5335 263.358 li
60.5335 271.11 li
62.4655 271.11 li
62.4655 272.106 li
57.4255 272.106 li
57.4255 271.11 li
f
64.8535 270.618 mo
66.0895 270.618 li
66.0895 272.106 li
64.8535 272.106 li
64.8535 270.618 li
f
71.2014 264.138 mo
70.5894 264.138 70.1334 264.438 69.8214 265.038 cv
69.5094 265.638 69.3654 266.538 69.3654 267.738 cv
69.3654 268.938 69.5094 269.838 69.8214 270.438 cv
70.1334 271.038 70.5894 271.338 71.2014 271.338 cv
71.8134 271.338 72.2694 271.038 72.5814 270.438 cv
72.8814 269.838 73.0374 268.938 73.0374 267.738 cv
73.0374 266.538 72.8814 265.638 72.5814 265.038 cv
72.2694 264.438 71.8134 264.138 71.2014 264.138 cv
71.2014 263.202 mo
72.1734 263.202 72.9174 263.598 73.4454 264.366 cv
73.9614 265.146 74.2254 266.274 74.2254 267.738 cv
74.2254 269.214 73.9614 270.342 73.4454 271.11 cv
72.9174 271.878 72.1734 272.262 71.2014 272.262 cv
70.2174 272.262 69.4614 271.878 68.9454 271.11 cv
68.4294 270.342 68.1774 269.214 68.1774 267.738 cv
68.1774 266.274 68.4294 265.146 68.9454 264.366 cv
69.4614 263.598 70.2174 263.202 71.2014 263.202 cv
f
78.8335 264.138 mo
78.2215 264.138 77.7655 264.438 77.4535 265.038 cv
77.1415 265.638 76.9975 266.538 76.9975 267.738 cv
76.9975 268.938 77.1415 269.838 77.4535 270.438 cv
77.7655 271.038 78.2215 271.338 78.8335 271.338 cv
79.4455 271.338 79.9015 271.038 80.2135 270.438 cv
80.5135 269.838 80.6695 268.938 80.6695 267.738 cv
80.6695 266.538 80.5135 265.638 80.2135 265.038 cv
79.9015 264.438 79.4455 264.138 78.8335 264.138 cv
78.8335 263.202 mo
79.8055 263.202 80.5495 263.598 81.0775 264.366 cv
81.5935 265.146 81.8575 266.274 81.8575 267.738 cv
81.8575 269.214 81.5935 270.342 81.0775 271.11 cv
80.5495 271.878 79.8055 272.262 78.8335 272.262 cv
77.8495 272.262 77.0935 271.878 76.5775 271.11 cv
76.0615 270.342 75.8095 269.214 75.8095 267.738 cv
75.8095 266.274 76.0615 265.146 76.5775 264.366 cv
77.0935 263.598 77.8495 263.202 78.8335 263.202 cv
f
163.317 278.252 mo
163.317 285.056 li
164.745 285.056 li
165.945 285.056 166.833 284.792 167.397 284.24 cv
167.949 283.688 168.237 282.824 168.237 281.648 cv
168.237 280.472 167.949 279.62 167.397 279.068 cv
166.833 278.528 165.945 278.252 164.745 278.252 cv
163.317 278.252 li
162.129 277.28 mo
164.565 277.28 li
166.257 277.28 167.505 277.64 168.297 278.336 cv
169.089 279.044 169.485 280.148 169.485 281.648 cv
169.485 283.16 169.077 284.264 168.285 284.972 cv
167.493 285.68 166.245 286.028 164.565 286.028 cv
162.129 286.028 li
162.129 277.28 li
f
175.125 280.472 mo
175.005 280.4 174.873 280.352 174.729 280.316 cv
174.585 280.292 174.429 280.268 174.261 280.268 cv
173.649 280.268 173.181 280.472 172.857 280.868 cv
172.521 281.264 172.365 281.828 172.365 282.572 cv
172.365 286.028 li
171.285 286.028 li
171.285 279.464 li
172.365 279.464 li
172.365 280.484 li
172.581 280.088 172.881 279.788 173.241 279.596 cv
173.601 279.404 174.045 279.308 174.573 279.308 cv
174.645 279.308 174.729 279.32 174.825 279.32 cv
174.909 279.332 175.005 279.344 175.125 279.368 cv
175.125 280.472 li
f
178.797 280.22 mo
178.221 280.22 177.765 280.448 177.429 280.904 cv
177.093 281.36 176.925 281.972 176.925 282.752 cv
176.925 283.544 177.081 284.156 177.417 284.612 cv
177.753 285.068 178.209 285.284 178.797 285.284 cv
179.373 285.284 179.829 285.068 180.165 284.612 cv
180.501 284.156 180.669 283.544 180.669 282.752 cv
180.669 281.984 180.501 281.36 180.165 280.904 cv
179.829 280.448 179.373 280.22 178.797 280.22 cv
178.797 279.308 mo
179.733 279.308 180.465 279.62 181.005 280.22 cv
181.533 280.832 181.809 281.672 181.809 282.752 cv
181.809 283.832 181.533 284.672 181.005 285.272 cv
180.465 285.884 179.733 286.184 178.797 286.184 cv
177.849 286.184 177.105 285.884 176.577 285.272 cv
176.049 284.672 175.785 283.832 175.785 282.752 cv
175.785 281.672 176.049 280.832 176.577 280.22 cv
177.105 279.62 177.849 279.308 178.797 279.308 cv
f
184.641 285.044 mo
184.641 288.512 li
183.561 288.512 li
183.561 279.464 li
184.641 279.464 li
184.641 280.46 li
184.857 280.076 185.145 279.788 185.493 279.596 cv
185.841 279.404 186.261 279.308 186.741 279.308 cv
187.533 279.308 188.181 279.632 188.685 280.256 cv
189.177 280.892 189.429 281.72 189.429 282.752 cv
189.429 283.784 189.177 284.624 188.685 285.248 cv
188.181 285.872 187.533 286.184 186.741 286.184 cv
186.261 286.184 185.841 286.088 185.493 285.908 cv
185.145 285.728 184.857 285.44 184.641 285.044 cv
188.313 282.752 mo
188.313 281.96 188.145 281.348 187.821 280.892 cv
187.485 280.436 187.041 280.208 186.477 280.208 cv
185.901 280.208 185.457 280.436 185.133 280.892 cv
184.797 281.348 184.641 281.96 184.641 282.752 cv
184.641 283.544 184.797 284.168 185.133 284.624 cv
185.457 285.08 185.901 285.296 186.477 285.296 cv
187.041 285.296 187.485 285.08 187.821 284.624 cv
188.145 284.168 188.313 283.544 188.313 282.752 cv
f
193.761 280.22 mo
193.185 280.22 192.729 280.448 192.393 280.904 cv
192.057 281.36 191.889 281.972 191.889 282.752 cv
191.889 283.544 192.045 284.156 192.381 284.612 cv
192.717 285.068 193.173 285.284 193.761 285.284 cv
194.337 285.284 194.793 285.068 195.129 284.612 cv
195.465 284.156 195.633 283.544 195.633 282.752 cv
195.633 281.984 195.465 281.36 195.129 280.904 cv
194.793 280.448 194.337 280.22 193.761 280.22 cv
193.761 279.308 mo
194.697 279.308 195.429 279.62 195.969 280.22 cv
196.497 280.832 196.773 281.672 196.773 282.752 cv
196.773 283.832 196.497 284.672 195.969 285.272 cv
195.429 285.884 194.697 286.184 193.761 286.184 cv
192.813 286.184 192.069 285.884 191.541 285.272 cv
191.013 284.672 190.749 283.832 190.749 282.752 cv
190.749 281.672 191.013 280.832 191.541 280.22 cv
192.069 279.62 192.813 279.308 193.761 279.308 cv
f
198.453 283.436 mo
198.453 279.464 li
199.533 279.464 li
199.533 283.4 li
199.533 284.024 199.653 284.48 199.893 284.792 cv
200.133 285.104 200.493 285.26 200.985 285.26 cv
201.561 285.26 202.029 285.08 202.365 284.708 cv
202.701 284.336 202.869 283.832 202.869 283.184 cv
202.869 279.464 li
203.949 279.464 li
203.949 286.028 li
202.869 286.028 li
202.869 285.02 li
202.605 285.428 202.293 285.716 201.957 285.908 cv
201.609 286.088 201.213 286.184 200.757 286.184 cv
200.001 286.184 199.425 285.956 199.041 285.488 cv
198.645 285.032 198.453 284.348 198.453 283.436 cv
f
207.237 277.604 mo
207.237 279.464 li
209.457 279.464 li
209.457 280.304 li
207.237 280.304 li
207.237 283.868 li
207.237 284.408 207.309 284.756 207.453 284.9 cv
207.597 285.056 207.897 285.128 208.353 285.128 cv
209.457 285.128 li
209.457 286.028 li
208.353 286.028 li
207.513 286.028 206.937 285.872 206.625 285.56 cv
206.313 285.248 206.157 284.684 206.157 283.868 cv
206.157 280.304 li
205.365 280.304 li
205.365 279.464 li
206.157 279.464 li
206.157 277.604 li
207.237 277.604 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 259.2 mo
324 259.2 li
@
grestore
45 259.2 mo
49 259.2 li
f
45 259.2 mo
49 259.2 li
@
324 259.2 mo
320 259.2 li
f
324 259.2 mo
320 259.2 li
@
19.6754 255.599 mo
19.0634 255.599 18.6074 255.899 18.2954 256.499 cv
17.9834 257.099 17.8394 257.999 17.8394 259.199 cv
17.8394 260.399 17.9834 261.299 18.2954 261.899 cv
18.6074 262.499 19.0634 262.799 19.6754 262.799 cv
20.2874 262.799 20.7434 262.499 21.0554 261.899 cv
21.3554 261.299 21.5114 260.399 21.5114 259.199 cv
21.5114 257.999 21.3554 257.099 21.0554 256.499 cv
20.7434 255.899 20.2874 255.599 19.6754 255.599 cv
19.6754 254.663 mo
20.6474 254.663 21.3914 255.059 21.9194 255.827 cv
22.4354 256.607 22.6994 257.735 22.6994 259.199 cv
22.6994 260.675 22.4354 261.803 21.9194 262.571 cv
21.3914 263.339 20.6474 263.723 19.6754 263.723 cv
18.6914 263.723 17.9354 263.339 17.4194 262.571 cv
16.9034 261.803 16.6514 260.675 16.6514 259.199 cv
16.6514 257.735 16.9034 256.607 17.4194 255.827 cv
17.9354 255.059 18.6914 254.663 19.6754 254.663 cv
f
24.7754 262.079 mo
26.0114 262.079 li
26.0114 263.567 li
24.7754 263.567 li
24.7754 262.079 li
f
28.6033 254.819 mo
33.2473 254.819 li
33.2473 255.815 li
29.6833 255.815 li
29.6833 257.963 li
29.8513 257.903 30.0313 257.855 30.1993 257.831 cv
30.3673 257.807 30.5473 257.783 30.7153 257.783 cv
31.6873 257.783 32.4553 258.059 33.0313 258.587 cv
33.6073 259.127 33.8953 259.847 33.8953 260.759 cv
33.8953 261.707 33.5953 262.439 33.0073 262.955 cv
32.4193 263.471 31.5913 263.723 30.5353 263.723 cv
30.1633 263.723 29.7913 263.687 29.4073 263.639 cv
29.0233 263.579 28.6393 263.495 28.2313 263.363 cv
28.2313 262.175 li
28.5793 262.367 28.9393 262.511 29.3233 262.607 cv
29.6953 262.703 30.0913 262.739 30.5113 262.739 cv
31.1833 262.739 31.7233 262.571 32.1193 262.211 cv
32.5033 261.851 32.7073 261.371 32.7073 260.759 cv
32.7073 260.159 32.5033 259.679 32.1193 259.319 cv
31.7233 258.959 31.1833 258.779 30.5113 258.779 cv
30.1993 258.779 29.8753 258.815 29.5633 258.887 cv
29.2513 258.959 28.9273 259.067 28.6033 259.211 cv
28.6033 254.819 li
f
38.7553 255.599 mo
38.1433 255.599 37.6873 255.899 37.3753 256.499 cv
37.0633 257.099 36.9193 257.999 36.9193 259.199 cv
36.9193 260.399 37.0633 261.299 37.3753 261.899 cv
37.6873 262.499 38.1433 262.799 38.7553 262.799 cv
39.3673 262.799 39.8233 262.499 40.1353 261.899 cv
40.4353 261.299 40.5913 260.399 40.5913 259.199 cv
40.5913 257.999 40.4353 257.099 40.1353 256.499 cv
39.8233 255.899 39.3673 255.599 38.7553 255.599 cv
38.7553 254.663 mo
39.7273 254.663 40.4713 255.059 40.9993 255.827 cv
41.5153 256.607 41.7793 257.735 41.7793 259.199 cv
41.7793 260.675 41.5153 261.803 40.9993 262.571 cv
40.4713 263.339 39.7273 263.723 38.7553 263.723 cv
37.7713 263.723 37.0153 263.339 36.4993 262.571 cv
35.9833 261.803 35.7313 260.675 35.7313 259.199 cv
35.7313 257.735 35.9833 256.607 36.4993 255.827 cv
37.0153 255.059 37.7713 254.663 38.7553 254.663 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 228.48 mo
324 228.48 li
@
grestore
45 228.48 mo
49 228.48 li
f
45 228.48 mo
49 228.48 li
@
324 228.48 mo
320 228.48 li
f
324 228.48 mo
320 228.48 li
@
20.0816 224.879 mo
19.4696 224.879 19.0136 225.179 18.7016 225.779 cv
18.3896 226.379 18.2456 227.279 18.2456 228.479 cv
18.2456 229.679 18.3896 230.579 18.7016 231.179 cv
19.0136 231.779 19.4696 232.079 20.0816 232.079 cv
20.6936 232.079 21.1496 231.779 21.4616 231.179 cv
21.7616 230.579 21.9176 229.679 21.9176 228.479 cv
21.9176 227.279 21.7616 226.379 21.4616 225.779 cv
21.1496 225.179 20.6936 224.879 20.0816 224.879 cv
20.0816 223.943 mo
21.0536 223.943 21.7976 224.339 22.3256 225.107 cv
22.8416 225.887 23.1056 227.015 23.1056 228.479 cv
23.1056 229.955 22.8416 231.083 22.3256 231.851 cv
21.7976 232.619 21.0536 233.003 20.0816 233.003 cv
19.0976 233.003 18.3416 232.619 17.8256 231.851 cv
17.3096 231.083 17.0576 229.955 17.0576 228.479 cv
17.0576 227.015 17.3096 225.887 17.8256 225.107 cv
18.3416 224.339 19.0976 223.943 20.0816 223.943 cv
f
25.1816 231.359 mo
26.4176 231.359 li
26.4176 232.847 li
25.1816 232.847 li
25.1816 231.359 li
f
29.0096 224.099 mo
33.6536 224.099 li
33.6536 225.095 li
30.0896 225.095 li
30.0896 227.243 li
30.2576 227.183 30.4376 227.135 30.6056 227.111 cv
30.7736 227.087 30.9536 227.063 31.1216 227.063 cv
32.0936 227.063 32.8616 227.339 33.4376 227.867 cv
34.0136 228.407 34.3016 229.127 34.3016 230.039 cv
34.3016 230.987 34.0016 231.719 33.4136 232.235 cv
32.8256 232.751 31.9976 233.003 30.9416 233.003 cv
30.5696 233.003 30.1976 232.967 29.8136 232.919 cv
29.4296 232.859 29.0456 232.775 28.6376 232.643 cv
28.6376 231.455 li
28.9856 231.647 29.3456 231.791 29.7296 231.887 cv
30.1016 231.983 30.4976 232.019 30.9176 232.019 cv
31.5896 232.019 32.1296 231.851 32.5256 231.491 cv
32.9096 231.131 33.1136 230.651 33.1136 230.039 cv
33.1136 229.439 32.9096 228.959 32.5256 228.599 cv
32.1296 228.239 31.5896 228.059 30.9176 228.059 cv
30.6056 228.059 30.2816 228.095 29.9696 228.167 cv
29.6576 228.239 29.3336 228.347 29.0096 228.491 cv
29.0096 224.099 li
f
37.6496 231.851 mo
41.7776 231.851 li
41.7776 232.847 li
36.2216 232.847 li
36.2216 231.851 li
36.6656 231.395 37.2776 230.771 38.0576 229.979 cv
38.8256 229.199 39.3176 228.695 39.5216 228.467 cv
39.9056 228.047 40.1696 227.687 40.3136 227.387 cv
40.4576 227.099 40.5416 226.799 40.5416 226.511 cv
40.5416 226.055 40.3736 225.671 40.0496 225.383 cv
39.7256 225.095 39.3056 224.939 38.7776 224.939 cv
38.4056 224.939 38.0096 225.011 37.6016 225.131 cv
37.1936 225.263 36.7496 225.455 36.2816 225.719 cv
36.2816 224.519 li
36.7616 224.327 37.2056 224.183 37.6136 224.087 cv
38.0216 223.991 38.4056 223.943 38.7536 223.943 cv
39.6536 223.943 40.3736 224.171 40.9136 224.627 cv
41.4536 225.083 41.7296 225.683 41.7296 226.439 cv
41.7296 226.799 41.6576 227.147 41.5256 227.459 cv
41.3936 227.783 41.1536 228.167 40.7936 228.599 cv
40.6976 228.719 40.3856 229.043 39.8576 229.583 cv
39.3296 230.123 38.5976 230.879 37.6496 231.851 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 197.76 mo
324 197.76 li
@
grestore
45 197.76 mo
49 197.76 li
f
45 197.76 mo
49 197.76 li
@
324 197.76 mo
320 197.76 li
f
324 197.76 mo
320 197.76 li
@
19.5504 194.159 mo
18.9384 194.159 18.4824 194.459 18.1704 195.059 cv
17.8584 195.659 17.7144 196.559 17.7144 197.759 cv
17.7144 198.959 17.8584 199.859 18.1704 200.459 cv
18.4824 201.059 18.9384 201.359 19.5504 201.359 cv
20.1624 201.359 20.6184 201.059 20.9304 200.459 cv
21.2304 199.859 21.3864 198.959 21.3864 197.759 cv
21.3864 196.559 21.2304 195.659 20.9304 195.059 cv
20.6184 194.459 20.1624 194.159 19.5504 194.159 cv
19.5504 193.223 mo
20.5224 193.223 21.2664 193.619 21.7944 194.387 cv
22.3104 195.167 22.5744 196.295 22.5744 197.759 cv
22.5744 199.235 22.3104 200.363 21.7944 201.131 cv
21.2664 201.899 20.5224 202.283 19.5504 202.283 cv
18.5664 202.283 17.8104 201.899 17.2944 201.131 cv
16.7784 200.363 16.5264 199.235 16.5264 197.759 cv
16.5264 196.295 16.7784 195.167 17.2944 194.387 cv
17.8104 193.619 18.5664 193.223 19.5504 193.223 cv
f
24.6504 200.639 mo
25.8864 200.639 li
25.8864 202.127 li
24.6504 202.127 li
24.6504 200.639 li
f
28.4783 193.379 mo
33.1223 193.379 li
33.1223 194.375 li
29.5583 194.375 li
29.5583 196.523 li
29.7263 196.463 29.9063 196.415 30.0743 196.391 cv
30.2423 196.367 30.4223 196.343 30.5903 196.343 cv
31.5623 196.343 32.3303 196.619 32.9063 197.147 cv
33.4823 197.687 33.7703 198.407 33.7703 199.319 cv
33.7703 200.267 33.4703 200.999 32.8823 201.515 cv
32.2943 202.031 31.4663 202.283 30.4103 202.283 cv
30.0383 202.283 29.6663 202.247 29.2823 202.199 cv
28.8983 202.139 28.5143 202.055 28.1063 201.923 cv
28.1063 200.735 li
28.4543 200.927 28.8143 201.071 29.1983 201.167 cv
29.5703 201.263 29.9663 201.299 30.3863 201.299 cv
31.0583 201.299 31.5983 201.131 31.9943 200.771 cv
32.3783 200.411 32.5823 199.931 32.5823 199.319 cv
32.5823 198.719 32.3783 198.239 31.9943 197.879 cv
31.5983 197.519 31.0583 197.339 30.3863 197.339 cv
30.0743 197.339 29.7503 197.375 29.4383 197.447 cv
29.1263 197.519 28.8023 197.627 28.4783 197.771 cv
28.4783 193.379 li
f
39.3503 194.411 mo
36.3623 199.079 li
39.3503 199.079 li
39.3503 194.411 li
39.0383 193.379 mo
40.5263 193.379 li
40.5263 199.079 li
41.7743 199.079 li
41.7743 200.063 li
40.5263 200.063 li
40.5263 202.127 li
39.3503 202.127 li
39.3503 200.063 li
35.4023 200.063 li
35.4023 198.923 li
39.0383 193.379 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 167.04 mo
324 167.04 li
@
grestore
45 167.04 mo
49 167.04 li
f
45 167.04 mo
49 167.04 li
@
324 167.04 mo
320 167.04 li
f
324 167.04 mo
320 167.04 li
@
19.6441 163.439 mo
19.0321 163.439 18.5761 163.739 18.2641 164.339 cv
17.9521 164.939 17.8081 165.839 17.8081 167.039 cv
17.8081 168.239 17.9521 169.139 18.2641 169.739 cv
18.5761 170.339 19.0321 170.639 19.6441 170.639 cv
20.2561 170.639 20.7121 170.339 21.0241 169.739 cv
21.3241 169.139 21.4801 168.239 21.4801 167.039 cv
21.4801 165.839 21.3241 164.939 21.0241 164.339 cv
20.7121 163.739 20.2561 163.439 19.6441 163.439 cv
19.6441 162.503 mo
20.6161 162.503 21.3601 162.899 21.8881 163.667 cv
22.4041 164.447 22.6681 165.575 22.6681 167.039 cv
22.6681 168.515 22.4041 169.643 21.8881 170.411 cv
21.3601 171.179 20.6161 171.563 19.6441 171.563 cv
18.6601 171.563 17.9041 171.179 17.3881 170.411 cv
16.8721 169.643 16.6201 168.515 16.6201 167.039 cv
16.6201 165.575 16.8721 164.447 17.3881 163.667 cv
17.9041 162.899 18.6601 162.503 19.6441 162.503 cv
f
24.7441 169.919 mo
25.9801 169.919 li
25.9801 171.407 li
24.7441 171.407 li
24.7441 169.919 li
f
28.5721 162.659 mo
33.2161 162.659 li
33.2161 163.655 li
29.6521 163.655 li
29.6521 165.803 li
29.8201 165.743 30.0001 165.695 30.1681 165.671 cv
30.3361 165.647 30.5161 165.623 30.6841 165.623 cv
31.6561 165.623 32.4241 165.899 33.0001 166.427 cv
33.5761 166.967 33.8641 167.687 33.8641 168.599 cv
33.8641 169.547 33.5641 170.279 32.9761 170.795 cv
32.3881 171.311 31.5601 171.563 30.5041 171.563 cv
30.1321 171.563 29.7601 171.527 29.3761 171.479 cv
28.9921 171.419 28.6081 171.335 28.2001 171.203 cv
28.2001 170.015 li
28.5481 170.207 28.9081 170.351 29.2921 170.447 cv
29.6641 170.543 30.0601 170.579 30.4801 170.579 cv
31.1521 170.579 31.6921 170.411 32.0881 170.051 cv
32.4721 169.691 32.6761 169.211 32.6761 168.599 cv
32.6761 167.999 32.4721 167.519 32.0881 167.159 cv
31.6921 166.799 31.1521 166.619 30.4801 166.619 cv
30.1681 166.619 29.8441 166.655 29.5321 166.727 cv
29.2201 166.799 28.8961 166.907 28.5721 167.051 cv
28.5721 162.659 li
f
38.8681 166.559 mo
38.3401 166.559 37.9201 166.751 37.6081 167.111 cv
37.2961 167.471 37.1401 167.975 37.1401 168.599 cv
37.1401 169.235 37.2961 169.739 37.6081 170.099 cv
37.9201 170.459 38.3401 170.639 38.8681 170.639 cv
39.3961 170.639 39.8161 170.459 40.1281 170.099 cv
40.4401 169.739 40.5961 169.235 40.5961 168.599 cv
40.5961 167.975 40.4401 167.471 40.1281 167.111 cv
39.8161 166.751 39.3961 166.559 38.8681 166.559 cv
41.2201 162.851 mo
41.2201 163.931 li
40.9201 163.787 40.6201 163.679 40.3201 163.607 cv
40.0081 163.535 39.7081 163.499 39.4201 163.499 cv
38.6281 163.499 38.0281 163.763 37.6201 164.291 cv
37.2121 164.819 36.9721 165.623 36.9241 166.679 cv
37.1521 166.343 37.4401 166.079 37.7881 165.899 cv
38.1361 165.719 38.5201 165.623 38.9401 165.623 cv
39.8161 165.623 40.5121 165.899 41.0161 166.427 cv
41.5201 166.955 41.7841 167.687 41.7841 168.599 cv
41.7841 169.499 41.5081 170.219 40.9801 170.759 cv
40.4521 171.299 39.7441 171.563 38.8681 171.563 cv
37.8601 171.563 37.0801 171.179 36.5521 170.411 cv
36.0121 169.643 35.7481 168.515 35.7481 167.039 cv
35.7481 165.659 36.0721 164.555 36.7321 163.739 cv
37.3801 162.923 38.2681 162.503 39.3721 162.503 cv
39.6601 162.503 39.9601 162.539 40.2721 162.587 cv
40.5721 162.647 40.8841 162.731 41.2201 162.851 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 136.32 mo
324 136.32 li
@
grestore
45 136.32 mo
49 136.32 li
f
45 136.32 mo
49 136.32 li
@
324 136.32 mo
320 136.32 li
f
324 136.32 mo
320 136.32 li
@
19.7066 132.719 mo
19.0946 132.719 18.6386 133.019 18.3266 133.619 cv
18.0146 134.219 17.8706 135.119 17.8706 136.319 cv
17.8706 137.519 18.0146 138.419 18.3266 139.019 cv
18.6386 139.619 19.0946 139.919 19.7066 139.919 cv
20.3186 139.919 20.7746 139.619 21.0866 139.019 cv
21.3866 138.419 21.5426 137.519 21.5426 136.319 cv
21.5426 135.119 21.3866 134.219 21.0866 133.619 cv
20.7746 133.019 20.3186 132.719 19.7066 132.719 cv
19.7066 131.783 mo
20.6786 131.783 21.4226 132.179 21.9506 132.947 cv
22.4666 133.727 22.7306 134.855 22.7306 136.319 cv
22.7306 137.795 22.4666 138.923 21.9506 139.691 cv
21.4226 140.459 20.6786 140.843 19.7066 140.843 cv
18.7226 140.843 17.9666 140.459 17.4506 139.691 cv
16.9346 138.923 16.6826 137.795 16.6826 136.319 cv
16.6826 134.855 16.9346 133.727 17.4506 132.947 cv
17.9666 132.179 18.7226 131.783 19.7066 131.783 cv
f
24.8066 139.199 mo
26.0426 139.199 li
26.0426 140.687 li
24.8066 140.687 li
24.8066 139.199 li
f
28.6346 131.939 mo
33.2786 131.939 li
33.2786 132.935 li
29.7146 132.935 li
29.7146 135.083 li
29.8826 135.023 30.0626 134.975 30.2306 134.951 cv
30.3986 134.927 30.5786 134.903 30.7466 134.903 cv
31.7186 134.903 32.4866 135.179 33.0626 135.707 cv
33.6386 136.247 33.9266 136.967 33.9266 137.879 cv
33.9266 138.827 33.6266 139.559 33.0386 140.075 cv
32.4506 140.591 31.6226 140.843 30.5666 140.843 cv
30.1946 140.843 29.8226 140.807 29.4386 140.759 cv
29.0546 140.699 28.6706 140.615 28.2626 140.483 cv
28.2626 139.295 li
28.6106 139.487 28.9706 139.631 29.3546 139.727 cv
29.7266 139.823 30.1226 139.859 30.5426 139.859 cv
31.2146 139.859 31.7546 139.691 32.1506 139.331 cv
32.5346 138.971 32.7386 138.491 32.7386 137.879 cv
32.7386 137.279 32.5346 136.799 32.1506 136.439 cv
31.7546 136.079 31.2146 135.899 30.5426 135.899 cv
30.2306 135.899 29.9066 135.935 29.5946 136.007 cv
29.2826 136.079 28.9586 136.187 28.6346 136.331 cv
28.6346 131.939 li
f
38.7866 136.535 mo
38.2226 136.535 37.7786 136.691 37.4546 136.991 cv
37.1306 137.291 36.9746 137.699 36.9746 138.227 cv
36.9746 138.755 37.1306 139.175 37.4546 139.475 cv
37.7786 139.775 38.2226 139.919 38.7866 139.919 cv
39.3386 139.919 39.7826 139.775 40.1066 139.463 cv
40.4306 139.163 40.5986 138.755 40.5986 138.227 cv
40.5986 137.699 40.4306 137.291 40.1186 136.991 cv
39.7946 136.691 39.3506 136.535 38.7866 136.535 cv
37.5986 136.031 mo
37.0946 135.911 36.6986 135.671 36.4106 135.323 cv
36.1226 134.975 35.9906 134.555 35.9906 134.051 cv
35.9906 133.355 36.2306 132.803 36.7346 132.395 cv
37.2266 131.987 37.9106 131.783 38.7866 131.783 cv
39.6506 131.783 40.3346 131.987 40.8386 132.395 cv
41.3306 132.803 41.5826 133.355 41.5826 134.051 cv
41.5826 134.555 41.4386 134.975 41.1506 135.323 cv
40.8626 135.671 40.4786 135.911 39.9746 136.031 cv
40.5386 136.163 40.9826 136.427 41.3066 136.811 cv
41.6186 137.195 41.7866 137.675 41.7866 138.227 cv
41.7866 139.079 41.5226 139.727 41.0066 140.171 cv
40.4786 140.627 39.7466 140.843 38.7866 140.843 cv
37.8146 140.843 37.0706 140.627 36.5546 140.171 cv
36.0386 139.727 35.7866 139.079 35.7866 138.227 cv
35.7866 137.675 35.9426 137.195 36.2666 136.811 cv
36.5786 136.427 37.0226 136.163 37.5986 136.031 cv
37.1666 134.159 mo
37.1666 134.615 37.2986 134.975 37.5866 135.227 cv
37.8746 135.479 38.2706 135.599 38.7866 135.599 cv
39.2906 135.599 39.6866 135.479 39.9746 135.227 cv
40.2626 134.975 40.4066 134.615 40.4066 134.159 cv
40.4066 133.703 40.2626 133.355 39.9746 133.103 cv
39.6866 132.851 39.2906 132.719 38.7866 132.719 cv
38.2706 132.719 37.8746 132.851 37.5866 133.103 cv
37.2986 133.355 37.1666 133.703 37.1666 134.159 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 105.6 mo
324 105.6 li
@
grestore
45 105.6 mo
49 105.6 li
f
45 105.6 mo
49 105.6 li
@
324 105.6 mo
320 105.6 li
f
324 105.6 mo
320 105.6 li
@
19.6754 101.999 mo
19.0634 101.999 18.6074 102.299 18.2954 102.899 cv
17.9834 103.499 17.8394 104.399 17.8394 105.599 cv
17.8394 106.799 17.9834 107.699 18.2954 108.299 cv
18.6074 108.899 19.0634 109.199 19.6754 109.199 cv
20.2874 109.199 20.7434 108.899 21.0554 108.299 cv
21.3554 107.699 21.5114 106.799 21.5114 105.599 cv
21.5114 104.399 21.3554 103.499 21.0554 102.899 cv
20.7434 102.299 20.2874 101.999 19.6754 101.999 cv
19.6754 101.063 mo
20.6474 101.063 21.3914 101.459 21.9194 102.227 cv
22.4354 103.007 22.6994 104.135 22.6994 105.599 cv
22.6994 107.075 22.4354 108.203 21.9194 108.971 cv
21.3914 109.739 20.6474 110.123 19.6754 110.123 cv
18.6914 110.123 17.9354 109.739 17.4194 108.971 cv
16.9034 108.203 16.6514 107.075 16.6514 105.599 cv
16.6514 104.135 16.9034 103.007 17.4194 102.227 cv
17.9354 101.459 18.6914 101.063 19.6754 101.063 cv
f
24.7754 108.479 mo
26.0114 108.479 li
26.0114 109.967 li
24.7754 109.967 li
24.7754 108.479 li
f
31.2673 105.119 mo
30.7393 105.119 30.3193 105.311 30.0073 105.671 cv
29.6953 106.031 29.5393 106.535 29.5393 107.159 cv
29.5393 107.795 29.6953 108.299 30.0073 108.659 cv
30.3193 109.019 30.7393 109.199 31.2673 109.199 cv
31.7953 109.199 32.2153 109.019 32.5273 108.659 cv
32.8393 108.299 32.9953 107.795 32.9953 107.159 cv
32.9953 106.535 32.8393 106.031 32.5273 105.671 cv
32.2153 105.311 31.7953 105.119 31.2673 105.119 cv
33.6193 101.411 mo
33.6193 102.491 li
33.3193 102.347 33.0193 102.239 32.7193 102.167 cv
32.4073 102.095 32.1073 102.059 31.8193 102.059 cv
31.0273 102.059 30.4273 102.323 30.0193 102.851 cv
29.6113 103.379 29.3713 104.183 29.3233 105.239 cv
29.5513 104.903 29.8393 104.639 30.1873 104.459 cv
30.5353 104.279 30.9193 104.183 31.3393 104.183 cv
32.2153 104.183 32.9113 104.459 33.4153 104.987 cv
33.9193 105.515 34.1833 106.247 34.1833 107.159 cv
34.1833 108.059 33.9073 108.779 33.3793 109.319 cv
32.8513 109.859 32.1433 110.123 31.2673 110.123 cv
30.2593 110.123 29.4793 109.739 28.9513 108.971 cv
28.4113 108.203 28.1473 107.075 28.1473 105.599 cv
28.1473 104.219 28.4713 103.115 29.1313 102.299 cv
29.7793 101.483 30.6673 101.063 31.7713 101.063 cv
32.0593 101.063 32.3593 101.099 32.6713 101.147 cv
32.9713 101.207 33.2833 101.291 33.6193 101.411 cv
f
38.7553 101.999 mo
38.1433 101.999 37.6873 102.299 37.3753 102.899 cv
37.0633 103.499 36.9193 104.399 36.9193 105.599 cv
36.9193 106.799 37.0633 107.699 37.3753 108.299 cv
37.6873 108.899 38.1433 109.199 38.7553 109.199 cv
39.3673 109.199 39.8233 108.899 40.1353 108.299 cv
40.4353 107.699 40.5913 106.799 40.5913 105.599 cv
40.5913 104.399 40.4353 103.499 40.1353 102.899 cv
39.8233 102.299 39.3673 101.999 38.7553 101.999 cv
38.7553 101.063 mo
39.7273 101.063 40.4713 101.459 40.9993 102.227 cv
41.5153 103.007 41.7793 104.135 41.7793 105.599 cv
41.7793 107.075 41.5153 108.203 40.9993 108.971 cv
40.4713 109.739 39.7273 110.123 38.7553 110.123 cv
37.7713 110.123 37.0153 109.739 36.4993 108.971 cv
35.9833 108.203 35.7313 107.075 35.7313 105.599 cv
35.7313 104.135 35.9833 103.007 36.4993 102.227 cv
37.0153 101.459 37.7713 101.063 38.7553 101.063 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 74.88 mo
324 74.88 li
@
grestore
45 74.88 mo
49 74.88 li
f
45 74.88 mo
49 74.88 li
@
324 74.88 mo
320 74.88 li
f
324 74.88 mo
320 74.88 li
@
20.0816 71.2792 mo
19.4696 71.2792 19.0136 71.5792 18.7016 72.1792 cv
18.3896 72.7792 18.2456 73.6792 18.2456 74.8792 cv
18.2456 76.0792 18.3896 76.9792 18.7016 77.5792 cv
19.0136 78.1792 19.4696 78.4792 20.0816 78.4792 cv
20.6936 78.4792 21.1496 78.1792 21.4616 77.5792 cv
21.7616 76.9792 21.9176 76.0792 21.9176 74.8792 cv
21.9176 73.6792 21.7616 72.7792 21.4616 72.1792 cv
21.1496 71.5792 20.6936 71.2792 20.0816 71.2792 cv
20.0816 70.3432 mo
21.0536 70.3432 21.7976 70.7392 22.3256 71.5072 cv
22.8416 72.2872 23.1056 73.4152 23.1056 74.8792 cv
23.1056 76.3552 22.8416 77.4832 22.3256 78.2512 cv
21.7976 79.0192 21.0536 79.4032 20.0816 79.4032 cv
19.0976 79.4032 18.3416 79.0192 17.8256 78.2512 cv
17.3096 77.4832 17.0576 76.3552 17.0576 74.8792 cv
17.0576 73.4152 17.3096 72.2872 17.8256 71.5072 cv
18.3416 70.7392 19.0976 70.3432 20.0816 70.3432 cv
f
25.1816 77.7592 mo
26.4176 77.7592 li
26.4176 79.2472 li
25.1816 79.2472 li
25.1816 77.7592 li
f
31.6736 74.3992 mo
31.1456 74.3992 30.7256 74.5912 30.4136 74.9512 cv
30.1016 75.3112 29.9456 75.8152 29.9456 76.4392 cv
29.9456 77.0752 30.1016 77.5792 30.4136 77.9392 cv
30.7256 78.2992 31.1456 78.4792 31.6736 78.4792 cv
32.2016 78.4792 32.6216 78.2992 32.9336 77.9392 cv
33.2456 77.5792 33.4016 77.0752 33.4016 76.4392 cv
33.4016 75.8152 33.2456 75.3112 32.9336 74.9512 cv
32.6216 74.5912 32.2016 74.3992 31.6736 74.3992 cv
34.0256 70.6912 mo
34.0256 71.7712 li
33.7256 71.6272 33.4256 71.5192 33.1256 71.4472 cv
32.8136 71.3752 32.5136 71.3392 32.2256 71.3392 cv
31.4336 71.3392 30.8336 71.6032 30.4256 72.1312 cv
30.0176 72.6592 29.7776 73.4632 29.7296 74.5192 cv
29.9576 74.1832 30.2456 73.9192 30.5936 73.7392 cv
30.9416 73.5592 31.3256 73.4632 31.7456 73.4632 cv
32.6216 73.4632 33.3176 73.7392 33.8216 74.2672 cv
34.3256 74.7952 34.5896 75.5272 34.5896 76.4392 cv
34.5896 77.3392 34.3136 78.0592 33.7856 78.5992 cv
33.2576 79.1392 32.5496 79.4032 31.6736 79.4032 cv
30.6656 79.4032 29.8856 79.0192 29.3576 78.2512 cv
28.8176 77.4832 28.5536 76.3552 28.5536 74.8792 cv
28.5536 73.4992 28.8776 72.3952 29.5376 71.5792 cv
30.1856 70.7632 31.0736 70.3432 32.1776 70.3432 cv
32.4656 70.3432 32.7656 70.3792 33.0776 70.4272 cv
33.3776 70.4872 33.6896 70.5712 34.0256 70.6912 cv
f
37.6496 78.2512 mo
41.7776 78.2512 li
41.7776 79.2472 li
36.2216 79.2472 li
36.2216 78.2512 li
36.6656 77.7952 37.2776 77.1712 38.0576 76.3792 cv
38.8256 75.5992 39.3176 75.0952 39.5216 74.8672 cv
39.9056 74.4472 40.1696 74.0872 40.3136 73.7872 cv
40.4576 73.4992 40.5416 73.1992 40.5416 72.9112 cv
40.5416 72.4552 40.3736 72.0712 40.0496 71.7832 cv
39.7256 71.4952 39.3056 71.3392 38.7776 71.3392 cv
38.4056 71.3392 38.0096 71.4112 37.6016 71.5312 cv
37.1936 71.6632 36.7496 71.8552 36.2816 72.1192 cv
36.2816 70.9192 li
36.7616 70.7272 37.2056 70.5832 37.6136 70.4872 cv
38.0216 70.3912 38.4056 70.3432 38.7536 70.3432 cv
39.6536 70.3432 40.3736 70.5712 40.9136 71.0272 cv
41.4536 71.4832 41.7296 72.0832 41.7296 72.8392 cv
41.7296 73.1992 41.6576 73.5472 41.5256 73.8592 cv
41.3936 74.1832 41.1536 74.5672 40.7936 74.9992 cv
40.6976 75.1192 40.3856 75.4432 39.8576 75.9832 cv
39.3296 76.5232 38.5976 77.2792 37.6496 78.2512 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 44.16 mo
324 44.16 li
@
grestore
45 44.16 mo
49 44.16 li
f
45 44.16 mo
49 44.16 li
@
324 44.16 mo
320 44.16 li
f
324 44.16 mo
320 44.16 li
@
19.5504 40.5592 mo
18.9384 40.5592 18.4824 40.8592 18.1704 41.4592 cv
17.8584 42.0592 17.7144 42.9592 17.7144 44.1592 cv
17.7144 45.3592 17.8584 46.2592 18.1704 46.8592 cv
18.4824 47.4592 18.9384 47.7592 19.5504 47.7592 cv
20.1624 47.7592 20.6184 47.4592 20.9304 46.8592 cv
21.2304 46.2592 21.3864 45.3592 21.3864 44.1592 cv
21.3864 42.9592 21.2304 42.0592 20.9304 41.4592 cv
20.6184 40.8592 20.1624 40.5592 19.5504 40.5592 cv
19.5504 39.6232 mo
20.5224 39.6232 21.2664 40.0192 21.7944 40.7872 cv
22.3104 41.5672 22.5744 42.6952 22.5744 44.1592 cv
22.5744 45.6352 22.3104 46.7632 21.7944 47.5312 cv
21.2664 48.2992 20.5224 48.6832 19.5504 48.6832 cv
18.5664 48.6832 17.8104 48.2992 17.2944 47.5312 cv
16.7784 46.7632 16.5264 45.6352 16.5264 44.1592 cv
16.5264 42.6952 16.7784 41.5672 17.2944 40.7872 cv
17.8104 40.0192 18.5664 39.6232 19.5504 39.6232 cv
f
24.6504 47.0392 mo
25.8864 47.0392 li
25.8864 48.5272 li
24.6504 48.5272 li
24.6504 47.0392 li
f
31.1423 43.6792 mo
30.6143 43.6792 30.1943 43.8712 29.8823 44.2312 cv
29.5703 44.5912 29.4143 45.0952 29.4143 45.7192 cv
29.4143 46.3552 29.5703 46.8592 29.8823 47.2192 cv
30.1943 47.5792 30.6143 47.7592 31.1423 47.7592 cv
31.6703 47.7592 32.0903 47.5792 32.4023 47.2192 cv
32.7143 46.8592 32.8703 46.3552 32.8703 45.7192 cv
32.8703 45.0952 32.7143 44.5912 32.4023 44.2312 cv
32.0903 43.8712 31.6703 43.6792 31.1423 43.6792 cv
33.4943 39.9712 mo
33.4943 41.0512 li
33.1943 40.9072 32.8943 40.7992 32.5943 40.7272 cv
32.2823 40.6552 31.9823 40.6192 31.6943 40.6192 cv
30.9023 40.6192 30.3023 40.8832 29.8943 41.4112 cv
29.4863 41.9392 29.2463 42.7432 29.1983 43.7992 cv
29.4263 43.4632 29.7143 43.1992 30.0623 43.0192 cv
30.4103 42.8392 30.7943 42.7432 31.2143 42.7432 cv
32.0903 42.7432 32.7863 43.0192 33.2903 43.5472 cv
33.7943 44.0752 34.0583 44.8072 34.0583 45.7192 cv
34.0583 46.6192 33.7823 47.3392 33.2543 47.8792 cv
32.7263 48.4192 32.0183 48.6832 31.1423 48.6832 cv
30.1343 48.6832 29.3543 48.2992 28.8263 47.5312 cv
28.2863 46.7632 28.0223 45.6352 28.0223 44.1592 cv
28.0223 42.7792 28.3463 41.6752 29.0063 40.8592 cv
29.6543 40.0432 30.5423 39.6232 31.6463 39.6232 cv
31.9343 39.6232 32.2343 39.6592 32.5463 39.7072 cv
32.8463 39.7672 33.1583 39.8512 33.4943 39.9712 cv
f
39.3503 40.8112 mo
36.3623 45.4792 li
39.3503 45.4792 li
39.3503 40.8112 li
39.0383 39.7792 mo
40.5263 39.7792 li
40.5263 45.4792 li
41.7743 45.4792 li
41.7743 46.4632 li
40.5263 46.4632 li
40.5263 48.5272 li
39.3503 48.5272 li
39.3503 46.4632 li
35.4023 46.4632 li
35.4023 45.3232 li
39.0383 39.7792 li
f
2.9785 152.208 mo
7.3345 153.816 li
7.3345 150.6 li
2.9785 152.208 li
1.8145 152.88 mo
1.8145 151.536 li
10.5625 148.201 li
10.5625 149.436 li
8.3185 150.229 li
8.3185 154.176 li
10.5625 154.969 li
10.5625 156.217 li
1.8145 152.88 li
f
1.8145 147.06 mo
1.8145 145.872 li
7.1305 145.872 li
8.0665 145.872 8.7505 145.704 9.1585 145.368 cv
9.5665 145.032 9.7705 144.48 9.7705 143.712 cv
9.7705 142.956 9.5665 142.404 9.1585 142.068 cv
8.7505 141.732 8.0665 141.552 7.1305 141.552 cv
1.8145 141.552 li
1.8145 140.364 li
7.2745 140.364 li
8.4265 140.364 9.2785 140.652 9.8545 141.216 cv
10.4305 141.78 10.7185 142.608 10.7185 143.712 cv
10.7185 144.816 10.4305 145.656 9.8545 146.22 cv
9.2785 146.784 8.4265 147.06 7.2745 147.06 cv
1.8145 147.06 li
f
2.4865 131.592 mo
3.7345 131.592 li
3.3745 132 3.0985 132.421 2.9065 132.876 cv
2.7265 133.332 2.6305 133.8 2.6305 134.304 cv
2.6305 135.313 2.9425 136.08 3.5545 136.608 cv
4.1665 137.136 5.0425 137.4 6.1945 137.4 cv
7.3465 137.4 8.2345 137.136 8.8465 136.608 cv
9.4585 136.08 9.7585 135.313 9.7585 134.304 cv
9.7585 133.8 9.6745 133.332 9.4825 132.876 cv
9.3025 132.421 9.0265 132 8.6545 131.592 cv
9.8905 131.592 li
10.1785 132.012 10.3825 132.456 10.5145 132.912 cv
10.6465 133.368 10.7185 133.86 10.7185 134.376 cv
10.7185 135.697 10.3225 136.74 9.5185 137.508 cv
8.7145 138.276 7.6105 138.648 6.1945 138.648 cv
4.7905 138.648 3.6865 138.276 2.8705 137.508 cv
2.0665 136.74 1.6585 135.697 1.6585 134.376 cv
1.6585 133.848 1.7305 133.356 1.8625 132.9 cv
2.0065 132.444 2.2105 132 2.4865 131.592 cv
f
1 lw
2 lc
45 28.8 mo
324 28.8 li
@
324 259.2 mo
324 28.8 li
@
45 259.2 mo
324 259.2 li
@
45 259.2 mo
45 28.8 li
@
80.6727 14.4688 mo
80.6727 18.4144 li
82.4583 18.4144 li
83.1207 18.4144 83.6247 18.256 83.9847 17.9104 cv
84.3447 17.5648 84.5319 17.0752 84.5319 16.4416 cv
84.5319 15.808 84.3447 15.3328 83.9847 14.9872 cv
83.6247 14.6416 83.1207 14.4688 82.4583 14.4688 cv
80.6727 14.4688 li
79.2471 13.3024 mo
82.4583 13.3024 li
83.6247 13.3024 84.5175 13.576 85.1223 14.1088 cv
85.7271 14.6416 86.0295 15.4192 86.0295 16.4416 cv
86.0295 17.4784 85.7271 18.2704 85.1223 18.7888 cv
84.5175 19.3216 83.6247 19.5808 82.4583 19.5808 cv
80.6727 19.5808 li
80.6727 23.8 li
79.2471 23.8 li
79.2471 13.3024 li
f
94.6119 19.5376 mo
94.6119 20.1712 li
88.6647 20.1712 li
88.7223 21.064 88.9815 21.7552 89.4711 22.216 cv
89.9463 22.6768 90.6087 22.9072 91.4727 22.9072 cv
91.9623 22.9072 92.4519 22.8496 92.9127 22.7344 cv
93.3735 22.6192 93.8487 22.432 94.3095 22.1728 cv
94.3095 23.3968 li
93.8487 23.5984 93.3735 23.7568 92.8839 23.8432 cv
92.3943 23.9296 91.8903 23.9872 91.4007 23.9872 cv
90.1335 23.9872 89.1399 23.6272 88.4055 22.9072 cv
87.6711 22.1872 87.3111 21.1936 87.3111 19.9408 cv
87.3111 18.6592 87.6567 17.6368 88.3479 16.8736 cv
89.0391 16.1248 89.9895 15.736 91.1703 15.736 cv
92.2359 15.736 93.0711 16.0816 93.6903 16.7584 cv
94.2951 17.4496 94.6119 18.3712 94.6119 19.5376 cv
93.3159 19.1632 mo
93.3015 18.4576 93.0999 17.896 92.7255 17.464 cv
92.3367 17.0464 91.8183 16.8304 91.1847 16.8304 cv
90.4647 16.8304 89.8887 17.0464 89.4567 17.4496 cv
89.0247 17.8528 88.7655 18.4288 88.7079 19.1632 cv
93.3159 19.1632 li
f
101.294 17.1328 mo
101.15 17.0464 100.991 16.9888 100.818 16.9456 cv
100.646 16.9168 100.458 16.888 100.257 16.888 cv
99.5224 16.888 98.9608 17.1328 98.572 17.608 cv
98.1688 18.0832 97.9816 18.76 97.9816 19.6528 cv
97.9816 23.8 li
96.6856 23.8 li
96.6856 15.9232 li
97.9816 15.9232 li
97.9816 17.1472 li
98.2408 16.672 98.6008 16.312 99.0328 16.0816 cv
99.4648 15.8512 99.9976 15.736 100.631 15.736 cv
100.718 15.736 100.818 15.7504 100.934 15.7504 cv
101.034 15.7648 101.15 15.7792 101.294 15.808 cv
101.294 17.1328 li
f
106.636 12.856 mo
106.636 13.936 li
105.398 13.936 li
104.937 13.936 104.605 14.0368 104.433 14.224 cv
104.246 14.4112 104.159 14.7424 104.159 15.232 cv
104.159 15.9232 li
106.29 15.9232 li
106.29 16.9312 li
104.159 16.9312 li
104.159 23.8 li
102.863 23.8 li
102.863 16.9312 li
101.625 16.9312 li
101.625 15.9232 li
102.863 15.9232 li
102.863 15.376 li
102.863 14.512 103.065 13.864 103.468 13.4608 cv
103.871 13.0576 104.519 12.856 105.412 12.856 cv
106.636 12.856 li
f
110.769 16.8304 mo
110.078 16.8304 109.53 17.104 109.127 17.6512 cv
108.724 18.1984 108.522 18.9328 108.522 19.8688 cv
108.522 20.8192 108.71 21.5536 109.113 22.1008 cv
109.516 22.648 110.063 22.9072 110.769 22.9072 cv
111.46 22.9072 112.007 22.648 112.41 22.1008 cv
112.814 21.5536 113.015 20.8192 113.015 19.8688 cv
113.015 18.9472 112.814 18.1984 112.41 17.6512 cv
112.007 17.104 111.46 16.8304 110.769 16.8304 cv
110.769 15.736 mo
111.892 15.736 112.77 16.1104 113.418 16.8304 cv
114.052 17.5648 114.383 18.5728 114.383 19.8688 cv
114.383 21.1648 114.052 22.1728 113.418 22.8928 cv
112.77 23.6272 111.892 23.9872 110.769 23.9872 cv
109.631 23.9872 108.738 23.6272 108.105 22.8928 cv
107.471 22.1728 107.154 21.1648 107.154 19.8688 cv
107.154 18.5728 107.471 17.5648 108.105 16.8304 cv
108.738 16.1104 109.631 15.736 110.769 15.736 cv
f
121.094 17.1328 mo
120.95 17.0464 120.791 16.9888 120.618 16.9456 cv
120.446 16.9168 120.258 16.888 120.057 16.888 cv
119.322 16.888 118.761 17.1328 118.372 17.608 cv
117.969 18.0832 117.782 18.76 117.782 19.6528 cv
117.782 23.8 li
116.486 23.8 li
116.486 15.9232 li
117.782 15.9232 li
117.782 17.1472 li
118.041 16.672 118.401 16.312 118.833 16.0816 cv
119.265 15.8512 119.798 15.736 120.431 15.736 cv
120.518 15.736 120.618 15.7504 120.734 15.7504 cv
120.834 15.7648 120.95 15.7792 121.094 15.808 cv
121.094 17.1328 li
f
128.582 17.4352 mo
128.898 16.8592 129.287 16.4416 129.734 16.1536 cv
130.18 15.88 130.713 15.736 131.332 15.736 cv
132.138 15.736 132.772 16.024 133.218 16.6 cv
133.665 17.176 133.895 17.9968 133.895 19.048 cv
133.895 23.8 li
132.599 23.8 li
132.599 19.0912 li
132.599 18.3424 132.455 17.7808 132.196 17.4064 cv
131.922 17.0464 131.519 16.8592 130.972 16.8592 cv
130.295 16.8592 129.762 17.0896 129.374 17.536 cv
128.985 17.9824 128.798 18.5872 128.798 19.3504 cv
128.798 23.8 li
127.502 23.8 li
127.502 19.0912 li
127.502 18.3424 127.358 17.7808 127.098 17.4064 cv
126.825 17.0464 126.407 16.8592 125.86 16.8592 cv
125.198 16.8592 124.665 17.0896 124.276 17.536 cv
123.887 17.9824 123.7 18.5872 123.7 19.3504 cv
123.7 23.8 li
122.404 23.8 li
122.404 15.9232 li
123.7 15.9232 li
123.7 17.1472 li
123.988 16.672 124.348 16.312 124.766 16.0816 cv
125.169 15.8512 125.658 15.736 126.234 15.736 cv
126.81 15.736 127.286 15.88 127.689 16.168 cv
128.092 16.456 128.38 16.888 128.582 17.4352 cv
f
140.058 19.84 mo
139.007 19.84 138.287 19.9696 137.884 20.2 cv
137.481 20.4448 137.279 20.848 137.279 21.424 cv
137.279 21.8848 137.423 22.2592 137.725 22.5184 cv
138.028 22.792 138.445 22.9216 138.964 22.9216 cv
139.684 22.9216 140.26 22.6768 140.692 22.1584 cv
141.124 21.6544 141.34 20.9776 141.34 20.128 cv
141.34 19.84 li
140.058 19.84 li
142.636 19.3072 mo
142.636 23.8 li
141.34 23.8 li
141.34 22.6048 li
141.037 23.0944 140.663 23.44 140.231 23.656 cv
139.799 23.872 139.252 23.9872 138.618 23.9872 cv
137.812 23.9872 137.164 23.7712 136.689 23.3248 cv
136.214 22.8784 135.983 22.2736 135.983 21.5104 cv
135.983 20.632 136.271 19.9696 136.876 19.5088 cv
137.466 19.0624 138.345 18.832 139.525 18.832 cv
141.34 18.832 li
141.34 18.7024 li
141.34 18.112 141.138 17.6512 140.749 17.32 cv
140.361 17.0032 139.813 16.8304 139.108 16.8304 cv
138.647 16.8304 138.215 16.888 137.783 17.0032 cv
137.351 17.1184 136.948 17.2768 136.559 17.4784 cv
136.559 16.2832 li
137.02 16.1104 137.481 15.9664 137.927 15.88 cv
138.373 15.7936 138.805 15.736 139.237 15.736 cv
140.375 15.736 141.225 16.0384 141.786 16.6288 cv
142.348 17.2192 142.636 18.112 142.636 19.3072 cv
f
151.852 19.048 mo
151.852 23.8 li
150.556 23.8 li
150.556 19.0912 li
150.556 18.3424 150.398 17.7952 150.11 17.4208 cv
149.822 17.0464 149.39 16.8592 148.814 16.8592 cv
148.108 16.8592 147.561 17.0896 147.158 17.536 cv
146.754 17.9824 146.553 18.5872 146.553 19.3504 cv
146.553 23.8 li
145.257 23.8 li
145.257 15.9232 li
146.553 15.9232 li
146.553 17.1472 li
146.855 16.6864 147.215 16.3264 147.647 16.096 cv
148.065 15.8656 148.554 15.736 149.102 15.736 cv
149.994 15.736 150.686 16.024 151.146 16.5856 cv
151.607 17.1472 151.852 17.968 151.852 19.048 cv
f
160.103 16.2256 mo
160.103 17.4352 li
159.729 17.2336 159.369 17.0896 158.994 16.9888 cv
158.62 16.888 158.26 16.8304 157.886 16.8304 cv
157.05 16.8304 156.388 17.104 155.927 17.6368 cv
155.466 18.1696 155.236 18.9184 155.236 19.8688 cv
155.236 20.8336 155.466 21.5824 155.927 22.1152 cv
156.388 22.648 157.05 22.9072 157.886 22.9072 cv
158.26 22.9072 158.62 22.864 158.994 22.7632 cv
159.369 22.6624 159.729 22.504 160.103 22.3024 cv
160.103 23.4976 li
159.729 23.6704 159.354 23.8 158.98 23.872 cv
158.591 23.944 158.174 23.9872 157.742 23.9872 cv
156.561 23.9872 155.61 23.6272 154.919 22.8784 cv
154.214 22.144 153.868 21.136 153.868 19.8688 cv
153.868 18.5872 154.214 17.5792 154.919 16.8448 cv
155.625 16.1104 156.59 15.736 157.828 15.736 cv
158.231 15.736 158.62 15.7792 158.994 15.8656 cv
159.369 15.952 159.743 16.0672 160.103 16.2256 cv
f
169.089 19.5376 mo
169.089 20.1712 li
163.142 20.1712 li
163.199 21.064 163.458 21.7552 163.948 22.216 cv
164.423 22.6768 165.086 22.9072 165.95 22.9072 cv
166.439 22.9072 166.929 22.8496 167.39 22.7344 cv
167.85 22.6192 168.326 22.432 168.786 22.1728 cv
168.786 23.3968 li
168.326 23.5984 167.85 23.7568 167.361 23.8432 cv
166.871 23.9296 166.367 23.9872 165.878 23.9872 cv
164.61 23.9872 163.617 23.6272 162.882 22.9072 cv
162.148 22.1872 161.788 21.1936 161.788 19.9408 cv
161.788 18.6592 162.134 17.6368 162.825 16.8736 cv
163.516 16.1248 164.466 15.736 165.647 15.736 cv
166.713 15.736 167.548 16.0816 168.167 16.7584 cv
168.772 17.4496 169.089 18.3712 169.089 19.5376 cv
167.793 19.1632 mo
167.778 18.4576 167.577 17.896 167.202 17.464 cv
166.814 17.0464 166.295 16.8304 165.662 16.8304 cv
164.942 16.8304 164.366 17.0464 163.934 17.4496 cv
163.502 17.8528 163.242 18.4288 163.185 19.1632 cv
167.793 19.1632 li
f
178.838 16.8304 mo
178.146 16.8304 177.599 17.104 177.196 17.6512 cv
176.793 18.1984 176.591 18.9328 176.591 19.8688 cv
176.591 20.8192 176.778 21.5536 177.182 22.1008 cv
177.585 22.648 178.132 22.9072 178.838 22.9072 cv
179.529 22.9072 180.076 22.648 180.479 22.1008 cv
180.882 21.5536 181.084 20.8192 181.084 19.8688 cv
181.084 18.9472 180.882 18.1984 180.479 17.6512 cv
180.076 17.104 179.529 16.8304 178.838 16.8304 cv
178.838 15.736 mo
179.961 15.736 180.839 16.1104 181.487 16.8304 cv
182.121 17.5648 182.452 18.5728 182.452 19.8688 cv
182.452 21.1648 182.121 22.1728 181.487 22.8928 cv
180.839 23.6272 179.961 23.9872 178.838 23.9872 cv
177.7 23.9872 176.807 23.6272 176.174 22.8928 cv
175.54 22.1728 175.223 21.1648 175.223 19.8688 cv
175.223 18.5728 175.54 17.5648 176.174 16.8304 cv
176.807 16.1104 177.7 15.736 178.838 15.736 cv
f
191.15 19.048 mo
191.15 23.8 li
189.854 23.8 li
189.854 19.0912 li
189.854 18.3424 189.695 17.7952 189.407 17.4208 cv
189.119 17.0464 188.687 16.8592 188.111 16.8592 cv
187.406 16.8592 186.858 17.0896 186.455 17.536 cv
186.052 17.9824 185.85 18.5872 185.85 19.3504 cv
185.85 23.8 li
184.554 23.8 li
184.554 15.9232 li
185.85 15.9232 li
185.85 17.1472 li
186.153 16.6864 186.513 16.3264 186.945 16.096 cv
187.362 15.8656 187.852 15.736 188.399 15.736 cv
189.292 15.736 189.983 16.024 190.444 16.5856 cv
190.905 17.1472 191.15 17.968 191.15 19.048 cv
f
199.718 22.6048 mo
204.671 22.6048 li
204.671 23.8 li
198.004 23.8 li
198.004 22.6048 li
198.537 22.0576 199.271 21.3088 200.207 20.3584 cv
201.129 19.4224 201.719 18.8176 201.964 18.544 cv
202.425 18.04 202.742 17.608 202.914 17.248 cv
203.087 16.9024 203.188 16.5424 203.188 16.1968 cv
203.188 15.6496 202.986 15.1888 202.598 14.8432 cv
202.209 14.4976 201.705 14.3104 201.071 14.3104 cv
200.625 14.3104 200.15 14.3968 199.66 14.5408 cv
199.17 14.6992 198.638 14.9296 198.076 15.2464 cv
198.076 13.8064 li
198.652 13.576 199.185 13.4032 199.674 13.288 cv
200.164 13.1728 200.625 13.1152 201.042 13.1152 cv
202.122 13.1152 202.986 13.3888 203.634 13.936 cv
204.282 14.4832 204.614 15.2032 204.614 16.1104 cv
204.614 16.5424 204.527 16.96 204.369 17.3344 cv
204.21 17.7232 203.922 18.184 203.49 18.7024 cv
203.375 18.8464 203.001 19.2352 202.367 19.8832 cv
201.734 20.5312 200.855 21.4384 199.718 22.6048 cv
f
207.695 23.584 mo
207.695 22.288 li
208.041 22.4608 208.401 22.5904 208.775 22.6768 cv
209.135 22.7632 209.495 22.8064 209.855 22.8064 cv
210.777 22.8064 211.497 22.504 211.986 21.8704 cv
212.476 21.2368 212.764 20.2864 212.85 18.9904 cv
212.562 19.3936 212.217 19.7104 211.814 19.9264 cv
211.396 20.1424 210.935 20.2432 210.431 20.2432 cv
209.366 20.2432 208.53 19.9264 207.926 19.2928 cv
207.321 18.6592 207.018 17.7952 207.018 16.6864 cv
207.018 15.6208 207.335 14.7568 207.969 14.0944 cv
208.602 13.4464 209.452 13.1152 210.518 13.1152 cv
211.727 13.1152 212.663 13.5904 213.297 14.512 cv
213.93 15.448 214.262 16.8016 214.262 18.5584 cv
214.262 20.2288 213.858 21.5392 213.081 22.5184 cv
212.289 23.4976 211.238 23.9872 209.913 23.9872 cv
209.553 23.9872 209.193 23.944 208.833 23.8864 cv
208.458 23.8288 208.084 23.728 207.695 23.584 cv
210.518 19.1344 mo
211.151 19.1344 211.655 18.9184 212.03 18.4864 cv
212.404 18.0544 212.591 17.4496 212.591 16.6864 cv
212.591 15.9376 212.404 15.3328 212.03 14.9008 cv
211.655 14.4688 211.151 14.2384 210.518 14.2384 cv
209.884 14.2384 209.38 14.4688 209.006 14.9008 cv
208.631 15.3328 208.444 15.9376 208.444 16.6864 cv
208.444 17.4496 208.631 18.0544 209.006 18.4864 cv
209.38 18.9184 209.884 19.1344 210.518 19.1344 cv
f
216.854 23.584 mo
216.854 22.288 li
217.199 22.4608 217.559 22.5904 217.934 22.6768 cv
218.294 22.7632 218.654 22.8064 219.014 22.8064 cv
219.935 22.8064 220.655 22.504 221.145 21.8704 cv
221.634 21.2368 221.922 20.2864 222.009 18.9904 cv
221.721 19.3936 221.375 19.7104 220.972 19.9264 cv
220.554 20.1424 220.094 20.2432 219.59 20.2432 cv
218.524 20.2432 217.689 19.9264 217.084 19.2928 cv
216.479 18.6592 216.177 17.7952 216.177 16.6864 cv
216.177 15.6208 216.494 14.7568 217.127 14.0944 cv
217.761 13.4464 218.61 13.1152 219.676 13.1152 cv
220.886 13.1152 221.822 13.5904 222.455 14.512 cv
223.089 15.448 223.42 16.8016 223.42 18.5584 cv
223.42 20.2288 223.017 21.5392 222.239 22.5184 cv
221.447 23.4976 220.396 23.9872 219.071 23.9872 cv
218.711 23.9872 218.351 23.944 217.991 23.8864 cv
217.617 23.8288 217.242 23.728 216.854 23.584 cv
219.676 19.1344 mo
220.31 19.1344 220.814 18.9184 221.188 18.4864 cv
221.562 18.0544 221.75 17.4496 221.75 16.6864 cv
221.75 15.9376 221.562 15.3328 221.188 14.9008 cv
220.814 14.4688 220.31 14.2384 219.676 14.2384 cv
219.042 14.2384 218.538 14.4688 218.164 14.9008 cv
217.79 15.3328 217.602 15.9376 217.602 16.6864 cv
217.602 17.4496 217.79 18.0544 218.164 18.4864 cv
218.538 18.9184 219.042 19.1344 219.676 19.1344 cv
f
225.609 13.3024 mo
232.362 13.3024 li
232.362 13.9072 li
228.546 23.8 li
227.063 23.8 li
230.649 14.4976 li
225.609 14.4976 li
225.609 13.3024 li
f
244.703 17.1184 mo
244.703 12.856 li
245.999 12.856 li
245.999 23.8 li
244.703 23.8 li
244.703 22.6192 li
244.43 23.0944 244.084 23.44 243.666 23.656 cv
243.249 23.872 242.759 23.9872 242.183 23.9872 cv
241.233 23.9872 240.455 23.6128 239.85 22.864 cv
239.246 22.1152 238.958 21.1072 238.958 19.8688 cv
238.958 18.6304 239.246 17.6368 239.85 16.8736 cv
240.455 16.1248 241.233 15.736 242.183 15.736 cv
242.759 15.736 243.249 15.8512 243.666 16.0816 cv
244.084 16.312 244.43 16.6576 244.703 17.1184 cv
240.297 19.8688 mo
240.297 20.8192 240.484 21.568 240.873 22.1152 cv
241.262 22.6624 241.809 22.9216 242.5 22.9216 cv
243.177 22.9216 243.71 22.6624 244.113 22.1152 cv
244.502 21.568 244.703 20.8192 244.703 19.8688 cv
244.703 18.9184 244.502 18.184 244.113 17.6368 cv
243.71 17.0896 243.177 16.816 242.5 16.816 cv
241.809 16.816 241.262 17.0896 240.873 17.6368 cv
240.484 18.184 240.297 18.9184 240.297 19.8688 cv
f
252.249 19.84 mo
251.197 19.84 250.477 19.9696 250.074 20.2 cv
249.671 20.4448 249.469 20.848 249.469 21.424 cv
249.469 21.8848 249.613 22.2592 249.916 22.5184 cv
250.218 22.792 250.636 22.9216 251.154 22.9216 cv
251.874 22.9216 252.45 22.6768 252.882 22.1584 cv
253.314 21.6544 253.53 20.9776 253.53 20.128 cv
253.53 19.84 li
252.249 19.84 li
254.826 19.3072 mo
254.826 23.8 li
253.53 23.8 li
253.53 22.6048 li
253.228 23.0944 252.854 23.44 252.421 23.656 cv
251.99 23.872 251.442 23.9872 250.809 23.9872 cv
250.002 23.9872 249.354 23.7712 248.879 23.3248 cv
248.404 22.8784 248.173 22.2736 248.173 21.5104 cv
248.173 20.632 248.461 19.9696 249.066 19.5088 cv
249.657 19.0624 250.535 18.832 251.716 18.832 cv
253.53 18.832 li
253.53 18.7024 li
253.53 18.112 253.329 17.6512 252.94 17.32 cv
252.551 17.0032 252.004 16.8304 251.298 16.8304 cv
250.837 16.8304 250.405 16.888 249.973 17.0032 cv
249.541 17.1184 249.138 17.2768 248.749 17.4784 cv
248.749 16.2832 li
249.21 16.1104 249.671 15.9664 250.117 15.88 cv
250.564 15.7936 250.996 15.736 251.428 15.736 cv
252.565 15.736 253.415 16.0384 253.977 16.6288 cv
254.538 17.2192 254.826 18.112 254.826 19.3072 cv
f
258.772 13.6912 mo
258.772 15.9232 li
261.436 15.9232 li
261.436 16.9312 li
258.772 16.9312 li
258.772 21.208 li
258.772 21.856 258.858 22.2736 259.031 22.4464 cv
259.204 22.6336 259.564 22.72 260.111 22.72 cv
261.436 22.72 li
261.436 23.8 li
260.111 23.8 li
259.103 23.8 258.412 23.6128 258.038 23.2384 cv
257.663 22.864 257.476 22.1872 257.476 21.208 cv
257.476 16.9312 li
256.526 16.9312 li
256.526 15.9232 li
257.476 15.9232 li
257.476 13.6912 li
258.772 13.6912 li
f
266.721 19.84 mo
265.67 19.84 264.95 19.9696 264.546 20.2 cv
264.143 20.4448 263.942 20.848 263.942 21.424 cv
263.942 21.8848 264.086 22.2592 264.388 22.5184 cv
264.69 22.792 265.108 22.9216 265.626 22.9216 cv
266.346 22.9216 266.922 22.6768 267.354 22.1584 cv
267.786 21.6544 268.002 20.9776 268.002 20.128 cv
268.002 19.84 li
266.721 19.84 li
269.298 19.3072 mo
269.298 23.8 li
268.002 23.8 li
268.002 22.6048 li
267.7 23.0944 267.326 23.44 266.894 23.656 cv
266.462 23.872 265.914 23.9872 265.281 23.9872 cv
264.474 23.9872 263.826 23.7712 263.351 23.3248 cv
262.876 22.8784 262.646 22.2736 262.646 21.5104 cv
262.646 20.632 262.934 19.9696 263.538 19.5088 cv
264.129 19.0624 265.007 18.832 266.188 18.832 cv
268.002 18.832 li
268.002 18.7024 li
268.002 18.112 267.801 17.6512 267.412 17.32 cv
267.023 17.0032 266.476 16.8304 265.77 16.8304 cv
265.31 16.8304 264.878 16.888 264.446 17.0032 cv
264.014 17.1184 263.61 17.2768 263.222 17.4784 cv
263.222 16.2832 li
263.682 16.1104 264.143 15.9664 264.59 15.88 cv
265.036 15.7936 265.468 15.736 265.9 15.736 cv
267.038 15.736 267.887 16.0384 268.449 16.6288 cv
269.01 17.2192 269.298 18.112 269.298 19.3072 cv
f
276.988 16.1536 mo
276.988 17.3776 li
276.614 17.2048 276.239 17.0608 275.85 16.96 cv
275.447 16.8736 275.044 16.816 274.626 16.816 cv
273.978 16.816 273.489 16.9168 273.172 17.1184 cv
272.855 17.32 272.697 17.608 272.697 17.9968 cv
272.697 18.2992 272.812 18.5296 273.042 18.7024 cv
273.273 18.8752 273.734 19.048 274.425 19.192 cv
274.871 19.2928 li
275.793 19.4944 276.441 19.7824 276.83 20.128 cv
277.204 20.488 277.406 20.992 277.406 21.6256 cv
277.406 22.36 277.118 22.936 276.542 23.3536 cv
275.966 23.7856 275.159 23.9872 274.151 23.9872 cv
273.719 23.9872 273.287 23.944 272.826 23.872 cv
272.366 23.8 271.89 23.6848 271.386 23.512 cv
271.386 22.1728 li
271.862 22.432 272.337 22.6192 272.798 22.7344 cv
273.258 22.864 273.719 22.9216 274.18 22.9216 cv
274.785 22.9216 275.26 22.8208 275.591 22.6192 cv
275.908 22.4176 276.081 22.1152 276.081 21.7264 cv
276.081 21.3808 275.951 21.1072 275.721 20.92 cv
275.49 20.7328 274.972 20.5456 274.166 20.3728 cv
273.719 20.272 li
272.913 20.0992 272.322 19.84 271.977 19.4944 cv
271.617 19.1488 271.444 18.6736 271.444 18.0544 cv
271.444 17.32 271.703 16.744 272.222 16.3408 cv
272.74 15.9376 273.489 15.736 274.468 15.736 cv
274.943 15.736 275.39 15.7792 275.822 15.8512 cv
276.239 15.9232 276.628 16.024 276.988 16.1536 cv
f
286.204 19.5376 mo
286.204 20.1712 li
280.257 20.1712 li
280.314 21.064 280.574 21.7552 281.063 22.216 cv
281.538 22.6768 282.201 22.9072 283.065 22.9072 cv
283.554 22.9072 284.044 22.8496 284.505 22.7344 cv
284.966 22.6192 285.441 22.432 285.902 22.1728 cv
285.902 23.3968 li
285.441 23.5984 284.966 23.7568 284.476 23.8432 cv
283.986 23.9296 283.482 23.9872 282.993 23.9872 cv
281.726 23.9872 280.732 23.6272 279.998 22.9072 cv
279.263 22.1872 278.903 21.1936 278.903 19.9408 cv
278.903 18.6592 279.249 17.6368 279.94 16.8736 cv
280.631 16.1248 281.582 15.736 282.762 15.736 cv
283.828 15.736 284.663 16.0816 285.282 16.7584 cv
285.887 17.4496 286.204 18.3712 286.204 19.5376 cv
284.908 19.1632 mo
284.894 18.4576 284.692 17.896 284.318 17.464 cv
283.929 17.0464 283.41 16.8304 282.777 16.8304 cv
282.057 16.8304 281.481 17.0464 281.049 17.4496 cv
280.617 17.8528 280.358 18.4288 280.3 19.1632 cv
284.908 19.1632 li
f
289.602 13.6912 mo
289.602 15.9232 li
292.266 15.9232 li
292.266 16.9312 li
289.602 16.9312 li
289.602 21.208 li
289.602 21.856 289.689 22.2736 289.862 22.4464 cv
290.034 22.6336 290.394 22.72 290.942 22.72 cv
292.266 22.72 li
292.266 23.8 li
290.942 23.8 li
289.934 23.8 289.242 23.6128 288.868 23.2384 cv
288.494 22.864 288.306 22.1872 288.306 21.208 cv
288.306 16.9312 li
287.356 16.9312 li
287.356 15.9232 li
288.306 15.9232 li
288.306 13.6912 li
289.602 13.6912 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 17.0.0
%%For: (weinan) ()
%%Title: (snn2997.eps)
%%CreationDate: 12/31/2015 5:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B6PT2XseT\cW^;YP-Z`EWZ:AK:isuC[qs6rg9MtSbj=")hJ[lD=cpZ1$@QfagTsA8W_`g(![%a[`L3,\X5A<,2r>"Fs/`#L
%e?YI)2'F7``l)4?1Y_TO>*jpSZDo=0Ot)9fU`-gQHClUn?M\$:B(*7YHDu&!`E&bal)pflWpao3R_#IU)QeKeKgtas'>X3$l;OP9
%W)[#lYA,^:b#s:#'r@fp^YX2um!h1M3\)XNe];n/M)9J)L#uE6j?'oT5OEj7V6a@/#D<.BChBPhE3n`(""n5/<KI@4&.D\r28Oqr
%RVlkpUoKS$.Z0p].tT%'VP2(cVC6].'LYY-,Z?Q08_1i0r7u)S^#&.!WkE_Zq646?f4hY-Wgup2!<.&mJiD"k?gU=j=!MMqFYg(q
%!$Qg&hec1t#m"7r'L6Q'VC>'A,3p_;O"+d"!WHf-+KM6&Jfe,_!t\HHFjVm@MBZXI&UmBY.B0n<h]8-=ht>\f/#hPQjlZA6V.,EQ
%^=,0ErtecFe-H-SZu2H.)n!s[Zeg>[8`Z=3+$XGPef+%2gI.l8ICE;YD7H2R`-Jc^?L*/M[2OI(hb)%1YeYeX=9#CraG:UpUNWbb
%hRXsX0.VXG;KN#pK?hUg9p&A;7PV\DM5'-?'qJ.4D/9KIYn?1J,KCob8"KL']t(F"6;u'j.Tmt'eZ$<p&uA5MK78n?Z\CaEM4t=I
%,ah6-R,jmBM(4=NPiR_@#%22L=)6N;!=^J!GiW/O*h6ATT7;CB1oka='FDhqPS@!>!f1[!<:*[e;PjIXfrk9$<VX%)lbZ@A;jN8B
%&`EeBK7Ck7I8uU'Y:S^>=iS(Z9^`VIYohFO"Of4*V.g44BaCSMQ&=CrBd/LM+q41/4DpSnAss![hs_;qMF@Xu(@fd]&apEl#ZI_\
%h+C,baQ&Nm!`UZA+\FR;R8QFmd_#:QI:&<!EVtGsfJ!.j0^P.^>C$fAKqAX'S\e1NGFKWF@I+eZi\0X4IUZ6?=gVo0'Rl4Zito@e
%rBdTMVj%5c_lhrG_Gi"0boS/t4QSE]-"Rg?dRS$?Ba6'^PWF\o&8r)E%7:(<)"nP+Yph_q[-.(Q2/r<o_6B!o85n*dLTup8M8-9I
%<"AEH+s&Dr-\>bKnWOG0'c5"t8cdqYAUtD299MG[PXNZ@"Ja2IGscpS4$\V"Uf#@CD0sn`M#@imY_0BC@L($8[-.'>p(9M$N643T
%On+2iN1UB.*JDIM.CV0kZB+"<P&?2a/Msok&`Te2:nb+Y`#`.*I7bUC4iL*_7u4VZ`pOop+2Mdk[!C@*]heZ2`)B+$P"iug15Ihc
%+oeJh]@p&QJ]DWpFnNsjQE(6idVU"D-':=X8s?CQmV(@fG"2XKZIqejG?JC=CQiREV@D!E7F=$RA=B6"ks%b6\(naj+3pANci$N:
%_;hOf0=cSs5@(2%h7rTS@8.r#iF"UGJ,)4?jo2+V$3g:\rCd1,j/!C%jSl"Ub%:G(rCd.sc9KLtiu$c'*FJZtr^Hir+!mb^W0L6a
%\S?Ob8u7\0oMVM2k`lMSPm$DF"om]oqFLks0>iL,5TZZeibnuA;:4cq8.u,$dT).@_^A%mrLk$uAh&+h[Z6Eq/,$ZhJIgdZ]qh"9
%e;o*$%6rfi#ltSV5!XVPf4]48$M\L%?7Eu'r]kGn=i@bjB9?Yss%>EP.TYb?%sDb`PpG00X%8_R<$3[p`I=1\[C\[`Nu.BlhT!<p
%<!9,Vn@MC<76oM'@l)EjG.Y,ZfL,Rr:"&LO>"ShT[G`.Oe!lTjpm4m29t>)Y:/G,-=7m2d41T#,aNiGeArBUm.^UAqc2O>k%IGg^
%7!`Qqi]llVZj@p/(:BIXH"9XYK`c$U5h^G>GaBZ\5PDeW-Y\\B/X[^Is%8":39>[3X29HX@!=Y.&hVY=V4IV3rjMiN2(fT]]l0r$
%pMjEHigYdLS50HVHEf^r.T.4=>t(5pfbRGXIg+RHQ0^TX?emVK<^VO_-&ih<OsjI@[]L\`'J$Nkr%!^)"qeIbA&H@[,#o7j"fT,N
%HO^D1*>tTUe-qu[(FuqF80U184C.PIb*<@WK*urel2T>p@BE`9B(abV=52;&NC1^AcB)-4bLQcB<jB]]bBLpIAf5eD4^9Ua#LN@@
%,R216>WBS=/68^O$P<`,7"dC-bq^hi/<LppoROLAM_F0DPs:c,/1QSLMWqM5'1t<.\@P28g0.m`%-`,qjajABK4WM?ca3==6`mP'
%W;.X\rXI_.qB#?$oNr^6_>c:C8T/0@mO]Yi'$A:jJr4qR7D(uikE.%j.&apGoPR8V.h)M6U7<SA_11AOA'7Ij<9=pI^M$gPFSfWo
%/5M)*,a()VJ;"&I]WjW"">\u71^N<(_fqbC%&&E]%e7F_P;7mb>bm>nc(]$9hnY(@&3hYG8[0Hop^J=c?GaV40JnQEUPJ(gk3fb6
%$=f3P,g.P*!ujYU'^`&RX-0C:K4\)Tb_NFEZ#\@fgU!Ql3fQ`P:^KOU7+1t,KWWFo^pKb9.^neY.h)tn`U6<kBYY2A.pfKf7Q<eM
%XN.:OOT'u,G`d('@U2kX@@LXE1[h\9NKlRWfF3sC92__8!h5\dR?":kP4/mZmMBZg'^U2'Q7F\;!$+(`1g;k8QnZ0_`6BalY6]G,
%gIc;"'@r:HM<NBJ6oTjjZ%Tc+>FPbE%%r-R,K[6/U[Us>G`sVU=:2Ai6HLlAcF=ZR;FN8Om3=EZ8oY/+HOZ`cp(Ut!DQb&Hj]586
%@f?,4^EOD.5Og$cji_c<*#"EZ(;q+Pl=Cd2hWK$.A`9_%guYEX1j`*\H/)S;\PjiC-<rcl$t%C'5$<%M\!Fm;VG^]-g]ONDL+?%A
%FtlpB6g"'S<uPr,f`J/,\>e/AQ:HMME>@58(L6LKacP.;13qs.(?-u=pX2J+NZqst8pXjA#1FL94B51aJlKe(PkZ5=g86>4%XVoh
%fFoJf7P$\,iM6M]D37hl4[!"E&]:=s*ahf!:Iq6!XP01WalFp*Q2-"h:#I2u)mL8k><XP(*6[N;UdW,:m<k*sre*_+lZ=jjq_"&j
%=njtrK5&+.HVc=,TuG@[W^MuM@J9`f7$T^NYo'aN'oGH;XX$l!@)nl1ehK#Zi(dB69bb66$9B;Q.#\9u**=\aId_lpH9btU%A=E)
%5XM@T<*eL%'s-:4WKTu@@n)t/3mr:4`##\AZKqW=5&Z8c;,tO)BEaZRO4XKV$N_+S+"nC(l?FUZ]2?>/=sVgG92H)_b@qGeYK@^M
%^_/\)YV"jOa!a`cWiJ%ZX+Jfg4hj#VHmkDcp1r1;=c,pM"H4)G.!H0kY+%OP=\1LX""UfMSL6TaH:p[_:F1lPLXP,@"boH_]5K8f
%H0[iG$0"Sm<)][=4&2PaM_/(+fSg/rElHX?SXM<#RnTZt=oq3Q2Gn$aG/qW91G\OPEe)-0'HE]K*Z)tJ&.p_=0af,Y!AeOmZ:5cS
%pY[T+>%Tb:_o:jkQS"h1[*8\*I4.X[kV3kn4.qgCTllZ+6IBReW&rp,cU*uuhS'f.jTIAVd;+$bF=#?1?)-[m`sSohD+V">Rl96N
%lE2%fEMnp!2h^K+Hq"&UC&M@[fC-\95B>j:OI3fN,_E[KZ&@0_RPW8l'8GQP@;&^gh-(:"7ZeI'Y1pYp4JmBCo+.E?AeeFQ4%!W%
%KZ]1RZQ-d(W^(-TJ6)FgXpPj"EhuMho<+YG$S!>clWu!l#h[Ko>j+hWp;[Z'@,Etmo&6oL32]-0WHA%UDt&Z^)fGl"aq+8,Dh^pn
%]#S6W6YIbe4Pkd9`TmHq#!I6]4aEGLOJr$tm$+l]-7l?%EIZZM::*1\]X:Y2GqaRlEW=(1o1/A.^>#5oo)B0PpNY-dD)CrncJpI3
%gC7eY/D644@@`\N;X*gI("6WfBY+TC\sle7lt)hrni^A?IRSrS@-b@u7_3Z;@[fuj26S)hQ:39g5h_<j)mj7+B,,.X&i<0MnQ8@N
%,,/-4F?>%g2b$cd=ukj>,#o-LQcQjO"8lh',@hgm\-1M79p\*QO?h_EM`T$inOsU`)c6t!Sl**lB-2Mg,l)Pk8S]&4I<9DbaLE#U
%Nn$NhOspRRMXAquj%d.&B-blCEn7V)\Y?-Kprg'<QIsQfQ;C[Bh:2UA>'H(lXrVJ%d$/sefC#LRe@^d=@`N:W>/fnR*B4U3g-[e8
%8,945H,^alRauX\g%Z#]@hO^,kq7#C5_n*mh*@g4>HW=HA3$LU0iMu(i`7r&CU*Pd>8M:W)VrDVghAWLn((e=#J#%Zlh0!GFO)&>
%n9!<7#O5%=.l["M+h_MN*B3h6F0!dT[s+9ZXbjgTo<5:Z>3`EedVF!js/iu3Nh1a:O+l(Gfj:+.mo3Ye%J]>+A?5Cs6;3#s7^Z/f
%dC\m!q$DQ.n8FKQ9=;60kK@^m?7e,9Xu0C":W(JCC@a<*<UI/W1k+5Y2QNA_\`'p/?iM)5<.SUulgD/Kc.4r32DBtM6spiG&HJD,
%M,73!+/qT%epQjGXj`mNnap:R-I;\iH>YV*h(PZlmhP#46L&m):@kDUamAZ3+0"j4X5Pgc!a)qe614C/1OffG#FL8HDZ72+(TWNb
%rOl-HJ(.hMm;q\WLdI\-,XjA>lTC.*>7Rss'7UW9>DUG*FYJ7fC)mV%p.r*jnc@n7\PqnFCGEDV_u!JQ^&k!@rHb[0N`YPINC=/Q
%Z]Ai?0-b#H"6m7p5/@B\SH+tBA#BNphS[V-]mh!25<?:*D#Mg.^JZRIfc?I@C;8/C=@hN`X'`9a'#:$f^Y4[9"!j\&nAF(C/uGeP
%Gi]W'``.^Y)o'[.Zd,b(n^fC@qZYUN8Voe!+EdE$Ug>G,-6O\#]E5q!^opN2Q-)CBn-eJC0[/#=GTIo-)`8ISg=bNLEVGKq[348;
%r\'95>D."o!rj'ARN9NT)t88he2PH7`__a?j\$<O9fe>C;uanP%ZR_p__>1\gLVCk\+Gok0;&a5ch\$TVqUsu\o<)%J(T(LL"p!/
%c2Zt-d0+u2d,[t#\_jI([(8YUo:8YLJ$bUu@I_.HI+0+=SQaKoP#Ah2@$PdP5C3@(9d."/B:I_T^T3pn.Ob-2?td:O@K3Jgq@549
%k_9'q_+IgK(,]Ctci<[>C:9S=,[>)k?9W/.M:c?k0)ZA&I'/Yg3&*uP6"XLBE_(M?TVGi_E=0\K9G+%fP)L.Kl>r_d82HEfo`'&"
%(u-O@r12Uo+RG^DnCZ'RI^dr*q?+t!D\^ZbDA@RYS3oRQP=t3@K\c\pIi:KMDlIdOm@QU.^Af!Onnt6%o)F^fa6N$HBs$*Fkj^n1
%fA9#l+h&To#fFodd#[MV^PP#ImiTtDaY:@jN:5UnXoA<^aG`0QImcfe-1jFD%+66G+0\%b<\(17c`J8`)uI%P*j*R\e@jd-IuJ//
%D!"m$hg)2`pLsIB^'.2UIfpd![9iM@S?=RX@ua7,e>j<E8L/?uBNnICIXDAk^/M)p8cF<#dBd"h#bmP="N@%VIb^q^H\CI*o$.]:
%8D@6=okqB=rV)u=q6\8iGC%T;C?II.$e1)Hr<5a#]AZmqMRH):cC]Dp6G\<P[+73TSPm+bOQ0BNN\lsSP!]W0iT-&VX:<hHg*BmR
%[R8njgG";5N8WfAbZ*-\p'\TnKJ>h"d-FZ#h0'MYjlPCLH`-k3lIPuNj&%*k1.#2<8Z??(5QmQq"Dh/o[19S9eSgQ=UBRElWiUra
%-NX=V>%6EM'E!Xip!=T2-b%c2:bTAR-6'5mCkimde`Pc>m[;6rd:JLiVN*aGDQWMS/TkCs:QK#iWmC?-]k7l;r7s[+[GLpU\aP/r
%#g+f7apDmI"E2G/+UX/0_9ko$Kj8b4:@-OtXo"5AX`f'!:Aqq<\3/tk,nPHb*;+[GIP:+4_-oiq^AVg<]oQ=Vj&R+_+05me'=J3=
%I5Y:_T.RkQ:(npH>XP4>@f>#`B-#g9WGYdE?Wepeea=f3XkK^tfqI]>>IGPN/0#c5*S9$,G>e6cYN>8+UD)M`e:CEG?4E^97Ufsf
%5/G,j+nauV@#$SNr&;`tVk0rKC@d-,:Yoa<[UcfFY'&G8)\7%KH/bYtDhDT\9)h,K"Rj.\Y1&GC<=f39fTV03[fJXCM6#Ws8u'r%
%>ZR?emK`BE4MXKUi(<Pj1"TaDXEWu0"jVGET&!%,1o6FS.T/A<:.scP[MLf8_GCGOU-Lgg?RqQtAZ^/?8><,]8@+.Vj>'+^<AA:&
%8]<A03G$:+*nqb4EeM5;XjJQsV\bk9!u/7dj\GETp7J\F9<7kLi'WcUVs?$'OW?oIJo2hYggt>3b)%f@Ldp$<%Za)E.&Wc4"j1O&
%-r7E,3odC_8j[g?#.`_M0Bu[`.sP=+chpP7he:ZnpC^X2`J2"5KuCHG6ttbKB9%mLhh!r1HKScjm&<(e3qE[pn>KW@EMl1^:D@cE
%qGPKqh]&t*E+E>Vg'Au.hhq]o"Lk]"0tk[4!!U\loGfA4`]s/pD8_8k^2qS3V'5V-;\Z9[WgE3@A=DsI75]058o;8I'.%;pfHWVc
%YY!o2!;beIdNgQ+@-jGN?I^_=0`mXQpB\hc`0/Z]O4K\I]tJQ(N\#ko)-Y];/?E\Z3ODe>oXLku32tZBZ`hp7p-sY0ORAb<Ji/SC
%Tm>FRC9pu;J_*ohEWEfP#rmHpHF&q&p,]>%>#OQ*37a+b#!I9HF^Aje*#CAq4)FTfp[-qs#QMtRB^M%/r[6mfq4O@OF5ng^?`iLm
%]q0a#fK6.s/8V3gIU'@:#Wa]5i0uX[M,"J1,!KEM+>"eK$/oC0\tAZh1X(!MA*qQ0JHisfp\'!b=VKc.S))XOmW1uDQP4C%N$$C=
%hH(Hj@K5VGf7Weof4PlSo%ImFm4I)]emR>ci(oh(c?^]('R@#65"3A+X;6S$n\OgQHMP_;hYbRK^RpJ-0p'2_R`?M[aIZsA=1.3j
%Ylu?AR_#+U]/i!e?V(,I7E[&Eg3TeYU>uT1^>Sh.Ta(&TAndiY+d$Au#HH$\bFL+C4=!b3\p(au.R>6Tc'LDW=q_Qo[]N<5o_(36
%T6Ad!"QPIP5]lm?*6dh8+8&sBeW-:/J6VEmIN1a7b&S&LQW>pG>$tfi4\JX9,chm!$MC>$Nc*>JopB)!Fl7hb#?4V;69mVhZl%3.
%@Q&g'O%Qg++-&dTGp]5SD1M#]m@LKO&c,Sj4Ieh*dHK,sXsH";*R?R3!5.L9<!#uU&?qK4*nT;<^$KOP@h3fXTKqni>K[hEi8CKd
%*M_?hKb4\lW*n7,!8-Y#9it7Xi)D!igT8(i4X'/'W964e<m`T1&\CkNf>0#i])Cf0c`8-mSom8ti#m9XUH!g=JEIdt[2mRgdPt>A
%)h"l4#+.,.,l%'C7nle;j4&lDi"+ZLB^5:0fiQlQnR*>BO-t^k3U6^,;,?aZq\=7Hd7d;:q_`ZjF=),PiJp:;j.C>%XptG7"PBag
%;pF<k>4K;.\fgUp&t\Y@o*n.4R_!2OJta-o)YSt?D9NegJ?!)s&L3B7OKSCGdKP#t]0UU>/()[g/K&`I:n[ukXGX#)7mH80e`K.s
%@>XNCHN#j'l@:JM6k:@tj,j[dk?_6pLI9&PPW%+`/erY<M<!DV>:J2qDjiq;*Q(F`C6s8(;0-`PPP*6?S=Xh/ZP^c$<86*@j#Q/c
%1)D<iOjmI63U9'oBh2@0hJbWUYT>i6ph)_E+f<4;n6S:^Sc?^:BtImBQ91H(B*N1ZMpWe'pUI060C?d&^I_Z,LbLLslD<0nQ;JXT
%c?hHQhCTk>Gb,G#0Pr>8CAVaD=>*mL3ZbfiT?j7Nc6b6]]&'XO>ig44FmJM@6kcSM=V;(m`PRNm+>W9;5Zrq^Y7V=X"q7,K/Q#3^
%a^`]*?G4r]3*fDc,86?_T(q=GGoPNX$1J.I<&_..>lRU%EEqhBeQt5,&tTGmb3u/"0e@u8F'&Z>nudP^V(Y+AUm-qd;Ho^W.gc`2
%N2B8nPGHc>$*],b1k"%_Capp2ld%C3oT9jg485hlh"2fL`)0KKO@!'/SG?W3@OSO$37;%D;iF-q`H^Z@0m[N>RZ&B79Jp$l@P_#&
%P.W(j^Wd9pAbo"tZT23WS193S:atr@6N(mtbktoM1[e[8qgkt?*gE!^MDpDb+`)*[,9/@/jN5?0""8BqdJ"2r<rKXR!+'4WR$S<f
%(F`H/e^:H&2?<qg5$Iu&f3_fF&I\\dMY*:Y04Zdh#t&mh2^eUIi=56%$n^VfME<nS>,n:X+t[HYeXq/"j752Xj>$t`R>m9!N8GoB
%a2s5*gc0;fOW1@l`d+aaH8E#o\#3!QWhhZ5B&1!JA_'VaO7Z]Sr&_UanS9)jUba[W*<%onBDO,fH9!W#V.XOP3P?\<[aIeVRqGlL
%hrn_(DjHjO@XbG]VMbg08lqTZN#L(4YTrG$o[;4S*TB+QcYn#onE16'1t.lc[J#Q5#.gsR*;s+Y[X[^_+CgAS]!aRuWc\[IEopd0
%WjK7!`oD5YJC8'gf2]:]qsTkDBr\VK;srFbN;U-83a:DO09+E0CVO-.=PQhVDta_[5A"rn7HiN!bL=#]o&?XsQ1d(if8.Gm:o&:r
%3$S7U:1pt]hRUC,g(AAJft=d=:UOZ`W:V^=a4BFTn2`'X&bV:@.%ofe#i-R<pUASW5YUpfm[UPY(uMC/i9+,C*ks0"Z/0[G%dm-f
%=L[omF_0_j9<\I9#'&gGqJ\Y5X&e-4Rc.cTOe2#``L.2H/"l,Fa5Xcf.BP/l]%`c[3`lm.Wd`/nkAJFiXNJeq:_=HR#ZfFoVRr%W
%=)D,*>r^nR'e8BJV%B`^eBIGc50q-(@fqO:$<pH<(L/:_DCoePm6#$bH!!0&^T*`VoltA7iNTuKCV1:]J-L\t\a1ElS'HYnH\bc?
%JjZ$@;q;G9)8N8Z=KE$o5:SdsJ;,1I)b6)TJs_1ug3K3Z\I?;XH-r(%R`rb)bs08P/$Wf>mVXPW]:0QXl]90`m[QJqiF2-GIu6#i
%o,Dla$s#b`LXn#[LG2l#RQe@MXR`VG2\/7:@Jc;Df?$X/FlkK(8W4+V]>E,ss"G/Q>jZt2.&='2*6^Rddti.o`Caqb@Id!$EC8VW
%*ro?Tc!oM\$TGM^?Ckf6C1mF9QP=62rj1VMlg:RRIof[-:%KO:]"@pseN]s,1bR@3`D/Q1lfRA/1!a7(VNW.:>7f(\C0a$S^#f.)
%f@j,`MtQFN@l4tdiViIfJ^0k"mbS\4bIMD@O*,rPJ+im>C2gFamY`Y$.n*qk^=^SF28ZTc$(#LS1Bd$`_WBh.cTE$0e].2)Wb5FX
%T:YVeWt;B,MXYS,^;.d8GkD"$](BL[`TiqgKnj".,S]RrEG"o*$u8:V3r/cka*P+LV>HgqI(.2aDY_ni(4t)h:1#"Kq\3ggZFAps
%SrHMFl:sXH)1iTMj0;EN;l^:erN@Ta]%1;pr`hRV[]k4LMp0C$.i]P/"KOAg5/6L*R`4-*hfkt0nT)uWlt=fA;d'@/DKZ,*n\/R4
%X;gcm-&0>%I-#%%@X[IBm#l)-_rQN0bj+oU/n3'/mG`i0XRFL7!j%YNMmZL@=Ko$4S7MSH7<e6q0JiTY+I4r=p@j!kS\"-ecZdEc
%<=$eLLZ[saFmiiGYY"q#h8ql?0/>?S%rsTg8U!3!A+&Jgs*g=3Ge]^H+mdusH6ILqf#;CuG`'&tR*NfGALTc@QnBN^a2C,"28(as
%in[;tmRQ$'gN[q3Gi#EKoWYHP!;(Sl\:1LMn*\Ds2ik,a-R!\\X*Zq?;dFF1kLo2.&,VcRg?1]7V`c&<Y4q*Gmd@b/YNV=rb[#G,
%3P6*okuCmo=tO1:):5&7mq]6Ge[tBuaP@s%Vd1'f>]#2q'GdmL47tq]h<h&:U3;"3^O)'Gr*!<d(W]l'dgf/<IW_:*)?/ZOf>#&\
%DGCPLqt8cKri@!]?!#Hl*fdYWl>ju+%uYXlO9b5<I:(]oO`S!XNLnDKjH<j."4XIa/%s'")ZT5pnF/1,CM/fWGNS2Ool<6E\.QTb
%:1rtY7,C%oT1=EJn?,aC3BAU:iSB#IlK"SO]'5!\&p)Z:)AoQ@q8JaDl(?bOq`i[J(,rE4X7"g:p;2kKq1dJ&9rumV\NTnL=>Et[
%*Z(BdS*i#%lrr(GO"Tk&MWptckuE&oo'm,)T]bS8]7iFt4,.>1B/.*4pS8/,lVF'8[_C>h"EMdG#ss6tp'#IA7WV>GX^1\CH3d43
%gCFPT<3Et/]E#+lA/Q.M3PQ0n9M0AAa33%CBY*;r*7q*!S.0YVW2gEoU$([h:Y0o>Ypp.UiE.HXO3=5!Kh=Wmo(rIu@d5d/jjg7?
%X>c1P=LZ^.&$+`jDf'W7SF4N`XN't`\(8='Z#2Gs*.IBd<R.JT*'W%<p%nfoZa3SJG;H:ZMo-+-l3GI:Ru^R[\`$tnX#7cTGONoT
%Z'(qP#Zb&I_U@F($u;,9FTpLVh8q6W,nqkL;F7X_PB+KI-*FhujJ?fB:KDXNR@t@^^]>VRaZ!uh%f<Fl34b(>K-!b;Ou,1E[$FGe
%fBGMJcIb%7RL\\o0:l]'0sr+,ZV0nX6E>H(<<0`Jd4sE"]Wmmjkl0/\.BrVUM0o:ABl6<-7!l"[P-T2p<TiCFYa'9R7>lueBn6DZ
%f%]f"kH'XEr.WorXYbYP;l"]rC<aV'.j\#6<tZ;W^FBL5dl(G5\@u:@nU,kTF?OUjW-:QEm'GS-PgsE5BOOu5R3<Y#&\`CD7G*aO
%LJha_=l/lAcs])1!MV6-iQ<]H$2qhVZB1r$1ekOWeB/F"TIe(7%U&lkRRe=2hiDD4q)J%"h)RXR&GPnc[:_b=g`DW>l?+P%%-<Jl
%o7PCE,\Y7Q/fe&76^LL%*j.+*3JROs+<AJ(ZfYZn$C?RN91lg?Oq&<*BRU8+F5PTsXJ[[@')?:!e`jX33"64']t=!F\=X_,#&QMI
%?.So5cq4#O=J;4\->S=XpVjRbE2!;l0/2=?4I3tW6[-`4U!2]Yf%qrtf##qCI"0XU..WQh9`5TQgj)8p!VVduS\=2f:Tkf%Wol]^
%kN(mX^&?='\a!o'0;N[`;j!Uq]Ukt2`1_jQcH!4eX$0h-p1n*&oSYBo2bS#fX<BA56#an3\l?iK`8/g2T=>9:j6Wl)O[&D/=rG]B
%IuhGcb*]Z'q-/S.[]>F0pPC+W99)8M,$HL/n&!i[[OH!Tc9s)=Zd`G!YWB=eT[t7PZTXd#^"%uB'r$4OjX'b3N>G;g"D-UrSjYCA
%7MS-=P=VG**!*$6*f-La!Lhe6/$g"eD<3j42X+EqgmYkQDCu[d?15uX@>8L?Y^@@+Am"!]Mb`?/a0e6?1p/"U6Jb[.Ah'uCa`f$o
%,Q,,A9WTOS+Z!-H62i_;dF/ei%EG[3%5O%FS;u_Jp+XO^ahM3ga*TS+/=2l;1jr%dbat<,rl._\>K#-On2?m7F3uK>h_7OsH3qU<
%l4"WNN\c$A/.ioLK50(VMA_mL>Dl^OfM-XM9iPmlpL7+!`Ar;JFOP/O7qJ.H\dcqA.hZHNRoHo3=n]%:[o$_ZEJkUeD5I^70[I;=
%*b.T#^+Nb1hRCTt7,'QMqt<#]hCeU?m%^NBqmQ.D0C0.PS5rgeP1JBT)4<daeq3G@U)C=\r09+q&DioL/n6&Z)(KtJaA@K%M'p<>
%,gIHa:u_./[f]t"!,QX(@13.R1uA*!=^L%3=bZ/hAY@!e"sI](e-V1_G>G?&K_q`-,!KB!%CSC<n-@jWftiC3<`2T-;\Y^unta=Y
%,U\LG;lhDj<Zm7:okS1S;o#1Qk0()`1S3@=NKo\0[th\7E.]p[e;No>CrsZ(B;DFY4`ip,OaCbE!>rYTRs%]SN*<gmg(E2[aW!\n
%4H%&Wq8H;+:ec0.5k4ZHNkd</VGe(/lNNMYh!HIk`l5umG)<(D$)U)o*PdH%N[BPVp%H6Ig:ruP="p?[[r`)jjE`2*?.Qb4WcRdE
%cB5AgNJ2U;c-4\Z![/h\jq7Ko?(ojJ]Ge%J]6u$)a)c-.K1,:;q5kp(6^KP*q$)-9e/9N:&f04&mU0iYJO"R@JhJD.GI)9>[,?/7
%pKTZ3PE:aC&E7;S]q7p45*WE&dFsLNCO*VSk]r9p+kqACWA,[R)s&A-SK!@@lnPhU;K6=rl'7I>ImT)#@roV;j'kJi]&_$H,jl:,
%#KE26.t?Rqp@]Oh!tJ`HJ2-K9B:7$VhSd"9a<3X65^TB*#WHs953(N7!r]\oA(S8"g?2U1LTPX6,S--qi:WP;BD#t!_$l]=qST1N
%$2#W/8rKeXA$F<Ki9Fp(`%X@m3GT,smX?"U+oc"-U_OMtNbN/l<TLPSk*sci*/'i<M9tN^_RYc8k"RZZSQ9$+_Z\JucC1g^MV!SV
%:UlfZIr")4IL*3G2&\/I(s:+pBPr.:`p9*`=gph[Fh<I<DKJ=/E.8&TaH4ut5HTLSaYcZ-=L[^rB._5AZ5DB.F[)]W3)E^4FuD@\
%nm5-C0T;4A1_af_]TO&fd*U@gZ]ZXENGdQ)!nPV#;i%ClU"6is=gH!?&,_'g.YOt2IHa7?Pf)[r=;#$S1C)+aogNK=(iM(HYWKG!
%0A4G#&/fp6;K''l`1/Ng(2@iW3-5e.Hde#3:r0ItbXQ/Ch7'oq(RA;,.GpII$&qYq6S\#"gBs(MLk^Z?<T.jBQS=ODgJGBa3MquH
%-&(V/Zo2<^ctUXC3LKV^M).A&-2%7_P9Ub&!1PmPpQ%s$Frs+k;4)TWK\"d%B'A:m)nEr=7TUh'MPs71CAtE2-cb;sg/V&>5AjZ:
%)N4?>`L@kC]C"Ss$I"RYP@G_0jOM<9jFNP;IZ0j<XeZb&OcGcqq(]+O-?cFg=T>SHfS%S3hQ9rKerJ,V"(@8G-**;gn1iGCb`LH]
%XsIP)9r9B)%Yj6Db'YDXN-BknCnNXC6#-dc3&%Hp'>_%AK!EqZ$/K#c)O@u`I-O,=]Ed0g7qfL6G"cP1X9;9H1JMF@e'nhpV?VrG
%LG%VY]+NNA;ISG,Hhqp+KsBQjh85d\a[/<];W7I.HL[5ACG.U=4WQ78"7>-hep?:L%2_dL8JHpiAehfWrS1,Se(8=d`:#*dF7)LK
%?KB\LBem_j`MG"-RV[fac8X^.Aqc.J07n(0k90EJmEM7ulhDNh1T]!Y:G3[1:Om%>ja<K;>!?_*)nhap\s@8d]ObU^ja9@qhHE+t
%ZPg<D0=mHfK"bf,oQ!-"aS</jN^/Y/c50d02rVD\AAiLP5$#:]Dh;?-3-[GjF=lC'>Ildt3F?k[+0E9q6TLdZc/dCFObDdTb5%cI
%q&EIaW,b*%#3bPKUc,hmk:_k/%UXH$fOjp82JZJh8ld=B!,q7MT'*YjgCipHEVjC3#,I8lqeXJ'SlK2f$B+`?,l?1,A."C\_Y:6(
%Z\m#3hj)j95Ictq0k!4QL.>0aVD+aPV1Eq0?Ek,M`0\,lfiYpZ^j(baIgqO4V?sl30H""J@C'X\)6/.(+LC+r;S?5uN#D^HLYCDf
%VrTei()'So20a`!9h;S/DTe6=GL#aEUUTj5QJEkC?Xa=`B\?\N89;^od2]t>b3ia5QdCCr*,d%,(!0K*?@cuA//7-Rk25)#$eqeB
%lW.+bN_3Q<3ME.F:0pFZTE\R>=%M05+K=^]E!osRn1#oC$a`oITIW,`Sg;\F:W-gr&X?Eq*Z%bNOLuP\r5AaOhX\0eok8Q_BHL`W
%R_k/q.h$0*?amZSaY8/a[+lL"G`CL)Ddt_Z-HjY/]^m2c$K$-t$t%X(1ARD8F#n1W:-=9fW94;m,!W'$DT15g9R27>nZBdCW$-mL
%D^o3HZq=u0DL.KoUGFL!@V7s'KkF;<@@H)b%G7+6?EAA+9iMe_'!-)_\aS:cnu2qFd?:9uTl%^_;=Y[qjOW1sA(Q@r,5m>&e\)Dm
%ai!i-`ifUL&`JQ-I+Xo>Ur(C;Csk5YMSZU'93c\N6eE#YZKE/QmLJ7ND)SX3^/,1jqb(<#i].XCWT:=:(KCtpfF+8=_Yfg==5CR]
%9k<$,_S_TZ]$FN/i+e$e0./`E?AsXW?>J%a>bF=?H.?nZX^4<r'OI(?fUOe*T*@-+YPmjZ.>`3ITf8TCD`q<p30FJVc&IKYDBR$.
%BuA(Z>`BeuaZDCXKlmJdDh9h!&L\nt*YYS6d2UDZ1Dm0%b4?I=Qt;LHHF"d_G+%QR4DhO%pW@QP2`sYFpI5X3lnZtX$#_E`TW<sR
%h5&F;:Y7;DieVr&,Bo0,btnR15"^"qdErnW-Y-IF>a#',Tj=t`!k[LFQ\;2S+jlbcs-rjoGn[[=1o*/\\??P`UlDTU`U??9p5($]
%?PHs8;qs:%,`ZtnD_)Wd)])t*(lhl^;"`nPCA%jm!/5S+cj[Wc2qY[KKkMpCZ;Ha9g>3eE[:bd?8;FqTClf:En9nGgQQrZODs.Z%
%SnSX,r5.K9Z,Nen[:$kKT`Q7H*K]Uk"Op@k9L9Mtc*R;\!]qQhV'ZGLbR7RUNOpr!iO8&L/+\osg.7KShT`9;#rh/Z;40AeB%S7V
%o=.Fuda2)Ho3AsH[Rr\[AY,C4O4\2)H=\-0JL#@^UK-H]47B<2]KmmN,aEXp@l(")][0>\ZFg_Q?'8ao-5+h1<MIG\8c7-03fAPj
%-kF)c19g:X81SX6\9$!PE-^+T_lHd/.sAF=P[lL,`%812>+mJ2aG*04"TYu?D'BMF*\l:_l\j,73H+)/U+OrdKHSjoKd:BGgCb.`
%,7MR'AQ]]59=9]<Hcn-%FdX<'VM4;Fq>M_<^bptL%QkhUYt^G$2skVK,IS4_(GNoCQSaq'+!]Yu65phK+0cQQ1@em4#p"NLRf@fV
%@;cnP34BJ#D<t\c$$kL;=?"u@G#-$ja^0t%8=%bMN3,YErd1/(ZM38:.?YDnP>qM!\.I34"4+\GJ&TR'%4*p,'2_3(cqqsP"qm(D
%,[@Ij2AH.bCJmXbpsAQ7a<?ERnLE1irC`/`_s6:)r),d%=6<us,Os>k/=H>D7="fFD<s]:'?T-T4\AQm:Ha1p;;N/@Sk4h1Hu%%>
%,;t:N4E(#R3c^WP;Gj#%c-:KVp>LrK=nOr9g[DDccaW']r9a78Be?@'Do>_oq3a.D^b[n1HQhE?T$;?.rsIlWbesYaocO/6bpD)[
%)mL7^1[MW<+ZuooT^%u>M'j),G+PMa?*/(n#rtV=0@dc=fCcVb2`u,aFBc:<gW]<tqrQ,`g=+c$ku0,KEk>DLWS6cCBd7\B^=N.K
%dGWd10u2$K/(aN\=(uQ#Z:$&f&gd7iTe?LjBG5Wdpu-t:.#]UeS%?6mp-uZAa3(Nf'^oqVNmPCu.e^an$cPrDj=p-9XP+A[7/da(
%lus+Gm+7Q@Z/S@9Tigh1nop.@Z:/10&S61,WoV"]Y<sP4F$!J+`I@(WSfl_m.=bWY./'.3<3r9#L!&85A++<I5hV]K=S`n9G4u\N
%FuQPnYYI1@'V8"So"%HsC?DID:^t<g)StCM]h:F>_!Q$MHr9DEm506bK)NqD$LBFKjV#A&V"NiDO8r8T\[[eu!1-i&ouc]5$GF/N
%S?Q9qM<?iqR:=ZHs+pWe+jM[D<aG3-R7_J^*(3N[^.B4]?VBl@l==P#q-;t`41`:eMi'5N=4nU"@m+-Oj:r?g5$j:/I"R1@!cMpK
%<h.8>&0K6,KUDM1qtCRiSF'qUerJBE35ipbTfoc+hBs`ECrII&'%''bn@k,pYBEg4P+8e?Pjra?[$0fM/+.W^h?N1O<?J>F)/EY&
%YGuO)Qq_g6+)dEPL$cl_fG>GK*cGI/YB(B&M_rITfZ2`H@desi@pr`=\+>PbfU!`94c[BC?<,n$:bOV]/F;Csp$m5mN`=ZObOaBO
%3QAp"hRM"eF0((D]Nkm$M-s#2ICqTF[UNeVKmgV6^57YiF:DC*a"'Y(BZ=9/a.&US<5dDrqfjr;pXtL+f]O2@X/aLDSjRh,J_-<0
%*N3rop@4RY,`>/Gm.3(LIff5GKmf^P/Q#q`@]#,cf]R$"6(-&\KmgV65!,Q$e:(qW@3<fCA]bb-;:t%i&3)1LS:uB"H_AA`fGCj3
%*Htp6Y=fOYNP2QW2bIW@fQ[f$ims]2.dZ3#,ETtg]s*RLV$Z"JPJ[5t/2eJcNTdic)tTm9HV!ZopH?Obi"`9^[`$LYdn.(l?%!H&
%2aUc0;,6XSluJ&.MOui!Bcl:Mm;aI^<U:U=,TE#)<O(CMZlD%h1`gQOHY.35i<pQXQjs$,8+%[pNNDbe'NoE^5uO/m6kFE;Dc0Wd
%_UUVRCehm69UrT8IdQuE#gUF:O"V%Z2VT7#Wtc]T(VA!?WP9L&ptnK\)(Qjt0^RbJr[::hq0rLt?j?@1%'^n#R)Aq`iGQs:Iffk^
%S6A*f$phtN%f`keO>5qu`A&e7n3>Z-O$<S^PT;%?`^OKS@cV`T[J.[Bj0>k0P,KK^bT6H>et@LCo-8I>\%dP%%4/%=$fAadI!>>A
%.)uh-?".sqLMhX!4gm"Q_bf@`398=4"hB*M4EhGFFMa3<j0)i^e+"6Bq'J4B[0iQ(,%j*@S'/g1AtgmIB4Kb4FZ-t9<bG"5>/fj(
%55n0]b:5e$k/&O7'Xnh:b!q:S_M7(55T1c*D.jJ\$jf.[L5)e:kL%4p8KuK&-EQq&]RCa$X`5_+D`0(b_$f$H7b>qiIUC$N!*bX"
%m7-hDAg,qTA+Qb0)"H0KmU@uPKEAfr"_QG+`G@;LNc^Fl+dQMiq"97S`a#s,/>;!=ZG>&2Fh$ICMj.%sC^%DB8WI#D85P,Q\iAt)
%Th#?UGn'@A2%.c'Gdc98W?uFpfE9=0lPn96^SkYX_he5CQ3egp'3A'#9.8r:(BYrtF5QMA0a[M-n[X,_dIj(i;$lst18PXb(#IU8
%OalfVTW\-QkPbWiFnY%6@F`H6Bk-?QmU55W9uJ"o3/6-84SOnrfd&e`O4.;-]>o<=-=Q;]&Ej$e,_(5(mX5t=LOP^Na=`Qfk6IH%
%nn_n0:2@aHqc5):V\1O[-Xoik^)Ht#>#lg/33%Dq^S?Eg8U#8b6c2q$1,b+K1jZP_[M&CR]>:N9Y9L;XCa#&W+HFmjAWAr\%ho5S
%2YDdfj2ubdMOCt@.QX[pFct<R-*!7=Y3nG_1XO\nBPij]]k%@6(\lU=inL_l<&W3gel'JRA7g,Qr6Viaa<Up?]aQjKTcR]Gp]8K/
%-l,B:7dSB(0tSEE)N3;$UXBg$N&S[boXc*<eD1nC5M-dX\42$Ok^i#:MqOJ?'//AZ3]=rnU-ePVDq0H:[+K1oijr?;7n@;O.a\9K
%"!<9>IDl>\*B:4>0Q5ak=Y?/:l>Blb(35\<AKF0^5P.mVf]d4.1ULQZHpbXth,\F=9=O$.Aq!rGh^oVL0?%BD[tjiLceA(\1t1qm
%B>pVCj]bY"mDdt8[t`^G,Bjr1R:i%k*.%k3=.,CXI5td&!NCD!8(5`\8@Lnm&T=hIl2b75Tid#kH/Z]V^0td;][^aJet5fps"0]]
%XB;Jl\+;RLe#d/l%T^#-::^AV?O]#aDK7qJ7]t5?.;%uGBtP@pb`C;Xn725;NZ;#9mMN%V-4>UN?fC+-6D\gR*f>)`^\719L:%5!
%U.PJ_Y/@N1&+?qn3UE@'BZE14Lee(>$T`%]-f6Ip?V(O49&RA%-3R;YhbVatZ>`LrXGM"*j)5g?Q+57\Y`id'I$n(`hXnkTcLac`
%p<QG%-$dP;X[.,$73:b1\&F(2VM*PCIIh-X91]?W,(QOV[b-[HR<SP,YJ+bMNE\N68C5Jn`#Uc(F?CAG_9KIJ17D2L2JsfnNuMcm
%<^[rHZP/Sn"U:3k<mj-=EP$rt$20*#kTN6EA.:)b+Z/``JGHKJM<bcZg&i+i2\Ff[2CUZ&Fc_(RSo)#]b?[Tn/@EO'dWd>7d\)4^
%DMNW2*M7'-YpI4.bMu,,60I[V&5RX(O!+o9UJB6*,JNA&5t'F`gr>U)NqRX%3dY=-@^<SQfMrA=(#/mL:cs`jMXi=+fK.mSj?C')
%K,^:mWB[hV1_W>"+bj5FjtpO/cX8Ek_O%3T^Sm(S9mi>S++^-SYOLpMfSY,6KU!cQ>\=j->pal]Ka7V+k`+b*%(u>4ND]fmkL;*3
%]n9(5/Y&nGkc5O5\E_:`CQ/'b=I7)J6[r."s*fO;Fc!@.&_ggZkY22p/sf(o#^]!jXi1tq%3T#ECnBLmYB/XQ@S]T;LhX,L*"Bin
%f\3.^h.2R,)NAH'-t,daF!+UJ=@luM'ed&q-@&0lLjB9j&\71p]Hf4bLd4,_7+ce5a\!20efurVkMYHTam'Hc,0lBI:m.3Q*\huW
%*]ltclOb@b59q[L9NmM@gC-/'8!;FJo$aXr9+mH>,8)i\-&EC+JUT=K<TISBY"eeqLD>.+2o"sg6Fu[][I]ju/+eP_'&/Iu%kA'p
%Bk'?.OP'a/]+->"K^F67@>2EeqY)"23&/SOT#hKnN7fk7AF1oA@=Il<P.+WRBnm@Q[os5di$#"]d%f,Yn$Z^:4H(o6R#$3l<Up5&
%'9m!fj1rR;][\M2^r']$[2SkV6b<>;*,i6B3:LmkHI&8q4Cj\C3UJLmTEdOIcqA3EZpW]eA#KJ?LFVm5r4p4Shul410RNuHJ-R,b
%T=?S;m!R.S!tUU63lc3t@J"8hDJr!,n1aZMfT?Y+F@V0("D2i3%=d;EZl2`eGBAgni*l9%(V9;[oYAAK_QRNoI5>t"4ur*d@?)JH
%euZpp%gUa14j&>2[NP*94.I/#,+jAC@<=$T@*1/.*eq$7\YEqr!tV09X%aj"O!)PqLXDs7bT<_A%m5eWbB\8TO*9G)6Whb=SH_7H
%0KRP?,U?m/GfLeK(qmoCNSKP=i*hf>\1ntJBNM#":HJu0S\lLn3/eRhikRofEMVo.3:>_/%4-AYa@,qdKu96^\?1j0fAej[0`&/o
%$.%oH7lp,nH4R-%pVTN,*_*niK\6Q2*W!Q=<p'@-55YH@_=c29n8Jr.2St$#8R1pC*-dj-4RI)scuTO!IfBq&'D]u[*X5g<.:`.[
%2W0.ATgofCSD,b<GaRhD5U.@q(g6&gEs1M_n1`SlRJ8:X/3EF<_eA4g\,0U4!tPJ\bBM\!d*Y/Q^r,A:,-k'u*I&ELg0q:EPlq=5
%NaYEokJ4t99D/5qW"BM%jHo/dV]@O+L-P/]qQrW@V@@t3@ItnH$1"+uq!,GXJ8=fB5/=O6%m8naQ;B^L3q.(sCX472*qBZAR!@=E
%%QsC2'F:%N_[dt4Gj(gZSp&2ndtU*V0Z5AAZV/LfSc$:@BPq"&g?8b_HC2_*IEW'c%X$]<FHLGle&G=^4$foK7mHJsqQrV5?g#c@
%*_+HjrfATk?0j)pJFBqM6kl0?Bd1'H`:X<#Lp0!YIcd#RE+CRXB"pR@B!9diNfjj'q*SJp4p*M=jc,<51[U]d6>@k63\8/jk[G=/
%=IGJH^K]p"QZI3Q=aAnp[R'W!SW;4EV\e5P-b8?,Q!*qJ5g??5VYdW^C\=`LgGQlRgpiifSP8ME(=N$$.AE6CH.5llcRrGtREt$K
%r`nic]r[dlIm<1iYP[dXT0EiNp1e6;H$I+&I<d0JpYO1Z:?mgsXkZ5BnnDlJropDL=nm-7r]9m:cE+af1UijecHOu>>c/fBV^G]V
%(8@3/VE\)tDYIKj1M5cWIf4WiCL;=WBpLfNNKrPriks>5=t1LL193(NVGIj_eqM9B<CPQ/C)mXc7u&1W:46W_e,NOBlcq(&5%E3n
%<orN@G<*!A*8V:)<M%X7!)G"Ml;*u=qsK]140!:[P;P7ohK?Nd/)=7sqj"Seg5C;C-9Y[TY4-j3pdLPRBY=7XLs"Dk`Un@eZ`+tB
%Y7C:^iI1+nbYBh:c<MGe)lnt8bjjB;mbH-pSMeBV4jYrZXXXb04mqN;f(Wg,JTt]Th9!gbEk52!aC.O%.82Th*PYVi]k[1\VVqp'
%U5r`"'e$S_o,YU3A]BHg[kc^$Pk%i5qf4LE>:a>ZjZ-Bj9A>qTm9k/0mGe$t^TIGsba@\L7`Cl]I4[YL:2Q3/8qia.RHc_&b,fMe
%c-t2:e9n.#1t/YPDt!%Kji<W.`HjBhiW(jZ0;%.!OLtKsQCbNlQ\8W:HPu#FC#!7(N6f?T]%6_B2_HG`Ug;a#:X,#uP)rV-"UiQp
%0Q"-"=&q*;-Re]Q2uMH9VEZ06[3bB<T)S9?BB<jdDGPM(gjJ!ah+r6Fni\Xs91&6JF(:?f!&W9?iln`MDoqn'L%srgaEhd;YIuqT
%"OE(hl(&@^`o.!`.gESnp*ZodjbsFnlS8:rgfX:,BWm5:/SE<>lCi_s;d\Om[P-T8M)6hK5L.WAW<f#).+E<B`&ERD/3C:Q)FS0Y
%:WGK;;NM]sL^fm\j9>A=bOuPDBsmhYHRFt6N0(ZNA9%ofT/,1bVsh/"!,4`'EHlPrV.bO9Bg[t#B/AWqF5_+[<OeRmMC$nNC0eq2
%1q:K3-3@j6k6+`'eth5<:WuOUIq104O_NPGKlWR4+("-0@P-B,V(FF9\WcSkXo3-dn*929.qI'ps7Ok/qNXQWUserT\qjEeaJI>P
%N_#rfIH],&O\/WIe@:UADuI:<U@qK1U&&;JPMT;U6`"W^h/6\c[olTQ,<[nlKhn:glCZMEV4S.I+!)$(ProcZ>^cQ^PBs9?b*U`7
%fUHMLDgl#hMeHR#nO:["Kgtca0n9,l[U7bC8Y<P%*Pm1dAT>TYb19]knD6(K"aQu[;mW_mjJ^)E8f%i.=.W^2;lsu7C>FH)/\'!-
%4<XsVGUPU&Sj-1HNQIObl1t9_q0@8W$7FOLBNT:siKNT8[7XR_0G;Une2:?00>Dq92("PVc=pV:Ar;#(<bg6_WRlU0ponme^%--l
%RO:S3YgDUlWQa(>Te'a#=)[i&lW]@ll[(=el0"#sC'AA$kh?j78FOO:]Km1e$atp7\#bTpIqIok(9Sak6LJnMS#]=+c[t'GeJ!W3
%CtB:r2*2$c2p3I'A=H>7S?$Ed7@5.IU%.LrBCtZOTh>EiOaX0t\;;P*JmW2P0LWFA$VAZ\$[`OGV=o)G\,OX@>%17B`3q7lf/JQ:
%T!ur>qG'd^TD(5F-FR3upSX:"J$]?/3YEH5I&$j4*Or5Z7D"=_=E0FZ#\$;iWD+\i%ErP318k!1G4Fa.^'9bl$I%<e'`j<K3)!'2
%^5tG5>kA98gW\@^Lc@"J%c<_!>6N"$>:Q1QdL.)0_fY$aIP[O/.$aGQe*AXc>Y$O:RQ'KT9D1'Q,ZT`dKuLo,HJ)DL9J=m7lfmNn
%aZ\Jqd]`r1TH9l+XrfV3+s>,j-SScn3B1]H0J%Q%T?t9QD-lY4m8T['kNVP5mHC>9['Vu]5C3@7T0FtXe"sO;mO<-!]'5!\P3(Q&
%h+f\?'71pB&P$7]2%)ppS"RTtqD3W8qJ3gPF/SEfchd6sRm/e\=\%;^$(He2jZ[:FB[]54cP1P6PSCOto!Gp;HN3M7b+AV!']7K1
%cb'``=RSplqi"7Dl/(n_'PD-OV09M;_#p40[pYHh/)R;<\mnJoMtP5/BCg03qKoQVh75h<,:U5:[@H]]97s"J9]o"3D72U8+r<nu
%jm(0YVh#\G"hA5%f7/^SD62Bnh=0fbZqTYqrT9.\3Du?X1:B":e&\V+;r)JkIf#6l^V&j5f$)DeoJQT@IrCtIQ`JZID#*dInq/>:
%TJ?:B4W!"f1jD7=E$o)(mA_s)?b^hh/E=Spk=2-"Fhlp@#;cPUIRnIbib=6r+5(cCef<\02*]F%hRIQ*Df1OlX'mnd82#D#YGb1?
%S4p)[3B^!\[4eEI`XuD&Bf*82l/fRjNZYH<TpH7l\'k_Uc;Js;rGrH1Gr`1a1P1\:>,9l5@W?qkjj236GO?iO!>8.G##P3Jda5u\
%VU$LA\V\(aoJsY'+E!Op(m$iHFZNE=/ure)k$6D:b[sNnmIlu:86h]Q8K0t_P3O$E^o19t_6f6Og;#NAi7#8e;)ga@B!>udBNKrI
%[?HJ=cL0a6G/Xo;j')7U7ln$/hJ%tE@em3i,gGl=cu_`<E_/q5=_APRX1ckV,+nrH^?[9[`s3rmj>;6shN("^kMao6q.Z.S^9ja1
%`A:U"T'aDsE+:Q9Xen2!LY^ArM6R*&b>PnB\FSih'WQAoB!0nf+=fgB=Rdpj8=5CLODjm:H5.;%W1?AQ>VK\URp+K0h-;D\l@mR[
%q31CCEF%AtcKFbpSZd>Uf#V=:$7%-u3Z/(K)l\1?l\<O*`p3COe+)LtgVmX\F09dqb3F%R`k_X3iBG7Tl_-9`f%%IudX>hFC[Ddi
%=oKJ\ZU([OB9C]CU&mKH9:<T,PPHQYHp5nf:7Nf#iQaWViHUs$fAi=N#'$<'R<:Xe$.j1j*/d`-NLG[=TZ`/-NU:XfY]$_K'^p54
%`S9+G]o3ktqpDM>cSp:c`Y^4^>-MLojk->JQo4CiSjjRQf;\;WMoA"`^p/H9jQ8/2e.st60.2O?dRH^^bqHIWKMoS]ECJ;4Rr@KW
%eT0j3q.On<]JN/=ZF$l=QHB#0J(K'(\1)B%%bpoABh^\QHnuu3l"QMr^[D14WZl+bnaSfZChlhSh@R^,^jM>bWhTUS\3;;*0Gp;@
%k-ECm"`E+oqJQYpJ;J2?B<7ZuTco(TnR"kaD"bma37e]#k3DBtWS;QcDrQLu1s_%-)58!narOa8-g3W8`t1.e6uD<k:TS1r.N,Sa
%rcc<f"#b!!8W2dd:XZ!0Crfpm`a]QC)cFefOqsa(""G21m8^n)DiKPN&d?U)R\#gO34q+''"Ec?"cW9ud[po*"Y%-4?Tu@Ui]b?b
%p[CX1^%Cj\%"D=+$U5,&dS#pf!f7E`ie:kK(:)d<)4U.#l?OumWoo`o)?U4C&gh6XEWf]WR..hKrcbQA`u<@`Fe+=R<;:DpM]=u<
%AGC0fr"5(GTi2.]?[J/bg+\,>4u<NA\?h@b&iXF!nQR6IJb9aBT(Y0)Hot,e(RDDHLL&pGI_HgM=Ng1L1)&5A&`FYCEOpCe5JR!d
%QtXnkhrnCbKkEI2>$FIt]`A4M>e]e$fiY?:)qA:%ll;ZA5Npt?o\+0*g@J/>c42`-ccm9ll+;WMQ;Q/SijWK-j#TnY8D0-S_.4&=
%)f`%3.t6[m[=l]r9cCle?e=OCmMpFSX=tT3).Pni*9-J"7\:+&2^/!D7\>('],uLbk`_]1&bs&7:PKqRS)6=(AE^-9`4p<aLWL5?
%1&>GEM&#ffUJHX$?Jk[pd3h;RgprC_IEV/I68rQ)/L/;)[uS8EZqSs'#?$TBm,Ouo=mN>OpE_\Ms1\=j9*D=:$1.13AE$q=rGj9'
%Tf/n4>[6@DN,i#]Z#`p9N0d;f^lOJ]$*2L4[]sngPkDNU@BIbTL!k\Dlkio'0]hi\AoFMO:]KZ>3BrP*[u\rq:4d?TI;NfHDS&=P
%A5a^M5\iUEd\-f\]+,IY[%5$O=m$^Vg1t%2i7f+t8oMF2G6\KHfiuJ#3X7nJ[*L[7P8r9NR"(\k]n\mP[`H9Tm&hM;4d`2>_Lnc?
%!09Bc[/1&G9Nbp4NJg/2NQ:CP2)^/B]o9Y6J,:BNq<Pmu:Flde]nXQZ>%fV)ES'[pL9*%+VTJ\^Vfd$@e/)Eh,0+$KrqT-T*7*"s
%Mr$_Na5UApI^]&;G)0@M==E%?52(D*0)NRmq0&.pk[fA<Ic<'?Q8$.`!eH!6HL'J9I-C4'57UsGaEJ*@@,H7p@&6FJH@jO369\pc
%'gR+BVG-1fDXKiFJIN'NGInI_m\a>SUm:B(XM]hZ#[u@HG,=H[D#huY"=g\dnku#D)[RF%f/NJBNT&Tq)n9U;WeIAM-;lYh9[s`2
%R'>m>8*e6;2d3u<_BYp&[GH^-I.TS!F%F\nU_>R=5n63h[8iR<UjC<fo&H4*)s%pFNViFj`od%F`*al3OlL(UXr]0ln_1L4C89@>
%*Ke<T[fKrSMVg!m)]p;^f(!CFBu".\nhs\9G]'eo1?!]tfPtQPDWBm&D*ur>\9[VT;YQ2_]('lEW'"nn:4'NsC+#1OW.*Pb-T45m
%Up4dd3hr[uc%ee]I$0e#pMW5#P7m4VTT*Q5`/\qA"6<uTP'<]d3B.V0Utnd?`MoEX]m&4%cWu!iGoM!Wjr,?t8LJ)hF7"<F,2>cd
%q-uh?HN*8cMM68;NZ+&CAoAe:``OoM8O%^22CP7"_F<-9XU2jG=.$_]k=#P5C1$"%m!W[(ooZr1hY%XM@Ng$B>%F_j./mdj`[[c6
%MQ9beC?=^%/j275d:+eg!f0M<n*>'5Fnom>2.BQ#WC!qlWcI/J^.)koqY$tEhY/q1j2ADe@8()kA,TZ#?`(ciT0T;[lmKGOXRtit
%XW>5,/p\);X$+oUF^8?nDg;/`^6\<EW(n/\ll3oTpBI:Q$F^fjp:[#eHV^5>IF$Y,R*$id(i6<+]%=Tn[u*hM)i0sD#jAsm/2$6E
%;W7JD']^ls=9#<s.]CEa[rTW*j2n;p40F[6Y=2PCe-]_TJ,p%1Pff1FBHkgD7leMl";nkNiTCAYGEEA3meBP#b"uLPVLD4th$d]4
%Jm3]1n+,V=NJ9hbDO4#,lAsV`pZ<I0>/0X'XScOnR.q;NPJGqFUjWniCDM1)7CP&2Io@FGjGUu.ll%7KYuTJIX.>T#?J!VkI,A1e
%[`G%eM`;Lk:K)F.C/o8b=f#dOJU0L(L!`Q/6QJ;*kDPiVl-It5pq4AJ!8m34X2ON';-Go&,T*$6Wbd03<Cd5C5^o;fp+V1jh>mXY
%Y3f-1cTAuBp?9ZNZS].r^M]2*q'p`/4Jq3fX5<L,HcG?qkEk>NkK(B_a+_"^LK6Db1lNl9(L*S=E^/c'F56OamlKcBIBd=XpF(i%
%ioW@NX(&?+rSuE[msVI@&UV8,c__+CNnV+H/2"$-lBf\X#F1nd1FB5ESUKeg_X:G/bB4m`X1Ik*T\GG.)dn+jd3m<\<E]+A7@t7c
%I@\@7>kEk_K6<g$\`f52%BNT0d:`4RKDE@q6n)]gZBiY(p)CEb;5aD"Dl/gIr`Ylf/!o-*`J`koX4!utc>3IEQ!,j>Y?J9!>"RiH
%B>pD^6S6hp>-G?`P-qhnG:^b>eItTk]rti6eN&c=EM<#:DLHCuSZYscDo0a[>6Qn956&V3$^dF%h$Z7@ELtJJ=%(i@E0QrnM.PJR
%Ya&NufK>p;]_.a?%+DBLcA@?Cm5R+Tm"frlBD"?t9k&R`]7`CeW7.ubf(Qc%hCcTe:7_ts?TXah3!Isg@I\J\1Y;N/]:&!!Y#`cG
%cf=THVYh8^^qT_Y@c_(];o_8>D]V&Ao*8!6dW0Hl-`h\6j?45NedD]3RuV&ZHh/):HKnYe$X.7o'B_rh]OcgtI?>d(:q!Eg45cX/
%C\5"LTTFBU,HA_arF@3eg])-Z9-ond4rgb<Do$e<loD87fZPs%[FiebDjK&I^0+q0;0RohpN$7jC\QX&UA%q-Kl?U9%N#)4\ofar
%]Jefsqq@"2GK"hb`1ck4M='P%qVhQrHb"`Lpn;@Q/%7,V1<k0DZK#DKGQK_NMJPE3=gk*brC'A)Nq]m0?^P'0#)dbS.U\cDZjOF+
%YA(Tk`_Ga_8IO##"oG,34(JmX`;=PFS=?9i_#DAM8*jI8h!+%b1cO1u(X_;ti(7ZhXK<3.(UL/,M]_e%4+Ei??I?G?i,]V#(*BY;
%<kM[!03U?%?29dF0&$QaIFral^T'/45+ba;a.mGekdTj<-$;#j!M*FV,LR#RgTA+_MDh;drf8)jc19V\hc8Z*=:4hKObG^%6t[iO
%L;riVoUEnSrN+H#))Fb#KCCk4TC7Z>.(?5>V%t!dQ0ig7D(ac<fe/cm[P>g@qr&:4hHc/S_$2=60@Fe#qqV\Zk+TH^/sC)E)g&aR
%!#k7uCV*GiS*?M_rn+_]CmX)]gk`(rH0`EdopJr<F2ks9W9ki7%Hea6LQ7)^m=UnI]ke&DFM#JnD5HlHanUGEG0+M'nA[)_NJ/;j
%SfM^,hbtOCS*;K=EYd-$k&"JfTP7Q7UY6pB3(H5iI$;#>Tum_n>C`m!<VkPn=EJ,VjW^R,C>I2^r4-LU5mLb:R?L7dG8XjS*Ab6"
%?M$[F.)$hng+q,]HOJCj%q&?3murBH),CCV]ldm-?*(-s3^:AgYG5,h8*7e]j6I^/)GTQR[BA$8H!ebJSkCBq?&b8ENC%-\=WssR
%_Q"7C%7)&uAUcINol+\&K7eQ%,,e^Ph,\))Xd`^D:g<gW#B`SJM/NT=h`^%bHf,ipQ4q"FKp1SVc>\pPhDg[gd2>^7FZ#I1B68ll
%7e"EZjG_B'#'Z+:RH0=PE$e<@`$RL>1RrQNar$;3d2>\E1S,k)FG>tboJi#(d2>\T@VW7qB68lLn/uU>Ou#/S2o.R9A<`;s5JoK`
%VDTR>)6F[G9^?@`cKG[LdNEFDOu$:VBr6"]8^?NjZ6dkm-TRqXS8P3H`$Au;"&,S7p`sKoL6Iu()CiiHS`("%Igqk-N6ZB3A6K42
%EXn]@)CiiHS`-rD2KFs:3l;i+diT^S)4f_+-)^3)E^oA3Gc#W!,\M4RPEE62PFU#)Lmr*!-HR-riT*_]6R=_tb-VYNjG_B'%[Lgg
%89-'5%Q.^Y1HNDk2b>AlE^j\$mB(+J-TRqXS.kP.NM@j]UGJEX4Di"^B68mWK4_J9B68mW:)DjR>njb,:,.-AiX(?scgMbDgeX6;
%GNV`e/(POi*OP%qrag?af.n^6lfG_t4#gn$U@lIHKhUOR-aG,-\c($GYp,OX$BE%"Z8XAFZ+9-&lBAljeU+`g2oF[g\5c_bY5B-L
%8R?b0Z%45tp=J)AK%`;XY&->W)XmL.rcGi$qg+2]WH6IH8P0Nla%\W8q^=ND;8rF,h$s>%'>2(`[U-Ij;T+77<R-WU?U<_u%h&/,
%["D=Z,Xg5#DmJt/Tad5f^[M]h[oRiO0-jMF9D:!da);.ES*5:JY4UpG=Dqd>NRI!sSaQEP3ak[@pNg<^)N'!]Z2;AOiV:6Q8<[[&
%Nf^FTn8WM,O5E@g)d*bt5S)]d]W?'#3iW%i]IB.%`^6M"5.EH9,jUdHe=K_u''=:B-%&A&<Gl3^hR7=@"P7Oi`Grc.M`)g+g(m6P
%HeD0!.._>6`JO<5;*,.4.q=tucm9;FFKO+g.r2gMHo(_/]bJ,H`>l_a&rB?GlIW^#c!f1i<\i_U!AGn_?/B!@o#BeMSpa:pRs)eu
%(P#!D"ABfW<e,>!M;GRt_U=.*V&:(2)>WR(DYjKlk>A+]knadckl$>"@-eqDcM'M@B1.YNoNHD.Bp)RRC;1,-2ns%iEI55?d^4oc
%:#qa!kL^ZrHt#\No:&P;k,UGM$(#;_dTN^(D\E]TWDIrF2tsBQej(+l'`CgXs6rrG;kdfu,ZTO?.ULq\T(m)m5c;PSe3:%uSoXX%
%Y>g#9eQ^:5kMObr\TWD*J$DpEXe[B;'0rauk(+l<$,GNN!_KFV+f.sJIgN):IU)o*T1;Go4+<s#_"E3If.MIJ"kW`FM*gJMFn[#S
%?74[n.Gbb:+A/q/LnnB'_n`JJ97t*sn$e.g'G[c^FVFdHZ7]gB7\5p1i:VNa\nYh'5nHFU&p-DTnN&SG?>f7:Vg,t=#YJsb1hG._
%9i3k.EC1sVV;8fh<_1S?1%f<K1U<14&e-.&BTcem3[hHi,I+,5"[%C"eT=A!'hO^b4iAS&8lg^[9I["[P,q3SA4i^oDTN*rY"G-6
%CRPG1P3\Q-d--!LJ30d*R$)-G>C[X[a?ioc6q'![_(Z<%mm)X7*neW7\gU+HVTII&]EO7Ek<r5b:!M/jClVb%'uU3MS%>\j1-D?O
%._V\EJ4Ga-MIOZJ8mPJ/Q#L(A#Tc:U)N#u2JuWU\:*)I&=F(\)d]+NV%SMMW-4)r".VbCp+\QsnD?=Hm%Ci;$8s&Lldsg)rMLl12
%$c!I1&?70^6-s1;Ou67+,X(pI_gS&k:?BA+N\1#+B)M8@P1i>."nH1@(`4Vf<CI$5YTWEdV7PZaPQBM$!h!1o<E14cU.V5=K8otI
%E.NW)@$,LfnJ<%G'@<N(r'CaO(ecPRQKecZ"_?(Y,RL[g"(J9(2f/GW9N3ETO0#7=X=:0TY37@^8lX'^J`#<M#s@#L_p'!i5E\c7
%G+]G35ZNAiAB>Ah/;t<:VeQ"lA:XBa5ToP7=:ZNE(NbRG(7QDC_1`1>)c:WlgM@_B(U/p-Rh\@kYcjd7q"iqdE)kL!__S<RD:c(j
%U^D])W1pFuAfh65eS.&=Hm9Uq?[hu^C+UmOAl'915pNUA()U4`N`Ng"Z9\:L+B-V'KF!40_t9pr2V!7u/5Us(`'H>^*6GQj7>/9,
%O\;EVP-2Y)MS2i*Jd7Q_Ap_LI&^V!7o`DM%@=mT?J20QYl#k0m]"MSpDM2C-&YD:J86]i%%96e+8./<eVHC@0(ks"5g?/L15X<A3
%"2#RI;f%WqkZFJ^%u>jU<2m.Y4;].OF91/Z"a<IGD`*f%`#TN7(Bg00["1D"dEFpq9iD4`f'".)D`iZ52o<st8C&ANX=Zl@`^h;h
%b$pH31=\De_?0+GJ\W+ji+NL+1^oQt6kC@@eDLB3d>]VEF@@<d=\pmVGUgmo8NR;(X8<Uc=uHA$:"Q@CC+h!NAWRT,r(U<nW)JSF
%Rbr(iO#KD1LWIga8uaI/d#)0A,rKJR567'Q@(R\R;U]8f=J1'`&.i^B$MZ62/nrgb%\dHa)E],P\e-70=ZIs7^`],DVAbU_<je)=
%P)ae,Ke>%#MU^!Qn&c<&Y9D&W.>ZpL.ltA_RSieS7Q>k2&H0Gp>&o;@0[^6m4.W45cFQ1OnH&%KJ.t!o@,K>f>/"2P*=LBT!HHJG
%.S$e3![DBqdSA7b=:!nkMHuKI^Ong^&Knh<"tsN)M,=i)')d/K&RdB8FbqiHJVP0fQp\gTO!E)=)JI#9HiU37"0*eCR]).A9r61P
%#ls@6J:M1Ti/m:m(BA2hJ9^9IPo:QoK&n'+EtO4o'GLHn]i>NV@mM>>i"KcR2Q(nS=B\`<2.3h&b)0ri@;KT7nO>M7&F'"#M7'0N
%0c<R4Z\fo`W[`YBJ\p0;ibU+p\tTM.&d6qO!!1K)`XpC(@pp8q(`ot[AV``)_,s?^Wp-f7ig`e7`=W!.Kb`#MJP7bZFE(do41-W`
%#,\C$D'Y-.mP&6/n9?/lH\_h'TqpE5"0M@::tEHlE@AeOee*lAcoq[?Lc3(d;^GS>Tg4NL+1_GKK*0%Z2kgFX;/KDAC4ZZ^Wg4<Z
%Ba@"5]F$am%J(oMEF2[Mb6ibe<XkQDBHKsgL^'GhK]D5'd2u&a/OsL6I$R(Easp;#71UfKFO##'$k'Gg!CEet,tPH$]jZI1*$?:`
%XrIn=TG$3=/i;p&M3Xb)?#G<BW59k7('ZMd.n'RbFXO'I'Zn*m6c15%]#@73SRIF5QUfMLInl%V"b([[&+>r<"WOR_3L51k]Z/70
%oN3*&#ihtPjXT5?WL8VE_OQ.Z_&<Ee(Ag5J,]k8=U+g^U&etL<8V(44\gi4C#a.UJ:bnlKWTfiPlW-FZ'b:;\FIq#O;&<ok8k'(T
%&-2k*7oq!e!7sUs2$5HK.]B<lB/Nfr#SX(]9OYUW,)dXsjjk^HJ>$$W/Ab?hOsF/YM?Yo4Ad&d8OUYG`P9Ri=#YM/Mh;po;g0YMq
%`=>?W#pKREKQ/oS)$SMs;N+S*'G6:l$@NZn"3=Mp*>153Gam%_=B8rB`P_0KJA?GR6I:$.^fsY>k7)\eW3QJ!VZK4"J09Y9kRa\S
%+b?df'!E13JTs6j+N4=V/@J%K,Y>3mQB>EP$h=I2)nN!4ck+;'Y`/84kDg#S&f>)DL7jp<?/\Eq_\%pU10ioHI[pBOM(4F_&fi5^
%YadRAk;AVl'qHu9!!oA5J:LarCb-.GD+Zka2_pr9!!6Cg`$pQtRPKH@6pN#SZ@S4PKL1D)1o[8'h3S:J1Z0uA@K]43+;.]4\tKsO
%6A1ItI*Dd;\B;ekM.Tcod-DoF`*bVmk]E@,kR^:U^WRB6+(%9^9nlo-[fE,tnZ]UE!5)-DW!U%IC8rgpA0fe5NNY=8,7Y`7(5,Ni
%'-o!)HMm2]bj$\%MEm2T`!2S1Os,a,X?bk:Q%@j(%gs'kAVLhXUbEhK$QR&#NncCkjiDn@$;l4U]YHOfkaW,HXGV'EaU_e3(GLI@
%LMKS`E(3n%Z&o4Dk5hPb_aK+Y4bb6e%BT>E`C"SU<Tm+Nm"LBa3O!gm84%9+J76ftZX=<[HSt#g%ibSK#A9W]+9O=]nOm7;@CcQI
%#_!+Gpr<R^<)?CoPV%4hl6mg/VSH*N,[u?j"rLno>QK1B<*_lVi<&O9;WrrF5`'0i;e5O=X@R0B5h>KM(W$G%@Y&Kl$MG<iKLeif
%8.%nW6BkXb,gG9?#inq"WD!t98JbC=7m=rN,XH5K=;ahr;_2\dZ5+:M!!GRiNZq:-K!1;:&>pDm-WL;6W_>=j"::3r!_d7$#[Xe\
%KQRO_8Y?i8!3D4r*`k`<=)3u44+tLS(4nV55p1?@=]0jW_Y/d9EXZ;7P0<?\,Q2UC<4%&?'(qnlO9euGAC\W"1b=0nN<0V]6&.h9
%h/#<;Sg@TY9LT%b6W3+T=9S(h"j_c]kQiF>3#HgfQuEW[6uY0M66'SDTD'LmPr3e6YU621*Va+W[K11ZA:Un/,bbjfDr<g!lbF&V
%aZ(JT0Q<9TS^IhF@1aZP(nO#GqCDaWnNuUO%Kb@d?is":lkc<[\jXsHDAcD*_^867":e&.;Gn7S,VpM+/T;0j-al@1?t;\[Lq5q/
%!.f5/r%F.TN>N3=a'/PSPGronQVSM0!(<P)OaW!51Hr8$-3cq+(9Q4<!3+nqWqLard&UZ;FDH:.&2Ir(\;8o2#_WU-.f(BuiV!)s
%<f[CM&K,YqblM>[JQ0u,(b[)*RW&+s7qDMt*%Zah_-U[[5hN(<q?/VfB9q/.#`)mB`e^9WQ,ufT6AVS(\nQFu-9Qi[L?c;q#,'*e
%f\dS3\9SJs(SbeSMIa;_63q\=A;s&h&AfPBYsC:J8fS,>Q!o5/85Y"-&Y&jj)+ZPIeq$h#Lq"jj"<UU`TNR@k9BcGn,Vq'@2al?(
%Rii+`mNP#b*[MP<Pp4:[CD0Pfd2G>W%D)>NBn1oA6pVT-0.`YeJrP:S)K6dq/Ic8HYSoe5c)YEg71DcofE9GR#M)?M!H'g:,jm#q
%c/AFJ#f1L""$e8S[V&=Y"@Bnu:pWhXZ%4#HBYQfo<PoqBJor7#&FSM?3?GfO3-[uh1H@<W,'!f%eKEh>6K`(D5:iS/_p'f_M1l&@
%;3EM6kH1H"3!0^o8Sam6CIZ7H\o.$=+jeLpHf^(.7RX+"@-@c7-Vtmp</Ym@OJqE1I.Neq29@7]f%A#=<N[R*%ODAig]o&oAWX6_
%`MlRb=W&04'o!aK@AHjj7Z&l20\qQmB?^i;=&oO9!0%TT^.b,_MR_dK<g.[6BQBnJ"Nq*]$7e-B;2c`r!=59]Z9Wtc7">t0TFpB!
%0.[ao9-CeYi,)<%fHK5]W@2.J?3:iG/hiYLNf_+Wjm,`n'EM/j[RU=NCN<gm!4.[uj9ks<e:Y?J>`CO*OL6VBhi=p+6$'t@_D,au
%L\R0ti<r.t);]DP5>I,!iLV/G-es>6(!q#D"VmbPJ^o<B1;@3pLtmg&AMa#g-@M9C72'u\E`_.oqojF;1Wp>n6o7n4<PSdeJq8Fp
%"F!*KTKlU'5RJI`#]tk=*sqE_0R3eGb=65u)A`hV+H-Nr1<ruY<#fR>+u?BR]?V\Y,_ckfM@QLTp3VI77j7tHZ6$>730D0iJf=d&
%6DU-h<u-C+&QtdB.'o-@-&(^t=5[2p"Qbq\/P#Np<61Wl^9'h/FT0J;,/MIgfXLjhk.fof2F.7W\Al&SY;!\:=e7VQ2-aYMq(Do!
%C@KaV.gs/=J)Ph`ghX!Fk._TNS7+*QYWO18`.P#lJ1tD<&V[0BKOTI<iT='=11Z6*f)Pg?lX<p/Rf3XZn3Xi?:bYP[:_Lk?Yhe:#
%MHI"a;belVK4uiZJ@O8c"]t#?8.Nmn.BrC7p*WB;/0<h5"EmPGF*5.V(BBQA1o@7Fj3D-c"2Q'$(+;/d$mclj@62=C3'UV,@`r_V
%,PlBujNW2YJ9`"d"]rR0+[DB&0r]6"!'h:=J4-tJP<#$6J:OI.XS&>D?jbIb![9KY"/a/8c;H>A)QjD/7KO.VnRR0%R2VBU5dH14
%&3"1=ng0ZK@X/n`?3Tt\P5tcf"lBYp,b7n*"WPjpTZr4iL1\6:1^H-a#J=nR'o\7BkZJdSPctQ5!.]Y'f<!,*%UU(Zrp[-W_,4em
%iCF=)+hk`HI,W-u_ci)ea/KW>!E0.u8.ppgbCHQ/N)sC%%$W1r568d@n?Q8I9^rZKq(IS(rW"1MM#8%jWLgn/!!WHt&/dnCbCAJO
%<XBU\a-aBY#Qt2:N7"5Yr"n#u$^<&[=T43`&Vpo#J_2MJO;'V%'C6;Y@2*)XRs&7D)jEd7J9^lC8_(,(RpP"Q+TrWGR.*H5?g,r&
%$?QO*N(]=qmU._G^m.P`rX0m"==9cdj"(SS*M=Md43fB+6!7WC`"b:e0-&)FGfuBOBH?[)^X.Va<*XB2jM-:3SGX0)_*)'=_t%/f
%M[0>g!37IOo3VcS42>jJBk[JRJIDY_o8L?hUq`![,1@ohp51QOB-91u0B=@[n_lU6B+;MMKk8#T3l6QFW"I]9"@@6b-:5"F#[uA^
%rS6`U69p_7*0L1D#"HB;*F[VS;QBd\d\O,6(IADO[Y$j=$Q0&4?cRI)IeF-mY`;X?_QmN.32TcBGhFaE.&]jT=S<-A6jCZ0i#%TV
%^];%rZ'^8BUkn@R!m)RlMAhfZ63nD9(]fd/$7<Lh!*foL^p'dk6AJ(r".:gj)]],PNlZS[1PLD\CD/BNAh`mHPfMK\btWTiB)k]l
%M[0\&C4>H+#UDA9M@c*M_WAMu<AEoN#(R*rIN^98-##&<i.<Ig=R%CB_=JIGTKqcM8^VMXjfm5N$2]5udFT1fUqVX+i[C7(WA!>I
%-K%!!QMMfV%A[5`,#VcYS,inM3@+8dlmt%>Kr)M>\Mao?-OE@m&ZbA1%%I);1C)4.RSF5m"0&L!=j$Df,u'-a"-ODG)f'eRIp%gg
%RKcg6<-0rgK#M=dcoqtrkML$IbqQ/`j/"%)@aX-;W_'uS&.K6j'hG8h-:8<$#p'Ta1PiN$+E6L#C^)4B?k"e^_gQk35m<Ot.!e^W
%Q2dJfZUpH%kLK23H4SjtT+ItD;I`5P6&0[C=\!baqk#\dOHN-7Gqr[3\p*_1rE;dE+GbO*-P5Ebh"A8dkt]MG+N3+dW!e<^)0.+_
%57r4^7RmSIln^G=CF82j*tnPqOl<g%1nk[5D:W<#l"@L`ANbj.Wcr5Uc(``N2oP>,#\'@-\Gd';+I#m(e"Ugjq&2K)mdc:kEc_@+
%Cqfi!aZ`B.+if^Fj!9YtDq>M&OBb06^ld2ZmHZp7UD<dsM-Gn0;&*qda)`C0$F%J:]]25WHf#<>0.$#>o^H@V!h9gt?'ZjNG^ch"
%0laBaFB2M@'CqcXT,-Q<,0.tMM^fBCoYQH\Y'TS+T;Fsj^NLeq0n=E.5nMl8X@omP2\hB?#E_AVR9Q786"F7UL^\"Hc!oHP?LROo
%H3n;`a6RBQC(k9E@iUcCIb!$6Xcsce@(XU7XQs`+RmoNG$['"Kn@H&6$X]4-G;[Ku-rdu^FOr/AT\X]]j;h4sj8sW']9e[j/AhER
%hNk2]4gt[iM(i5l8lOpNB.R90L(%9-Zfsu3(\^T`DXF?Xb<n2$oMRH)>$3fK\T()-[B>[a&C=klB+`g1Rf/"ROM@qe9epR?7Qn.%
%RYo>HUlBIo3?M4=q3sM"5M&Y`+6@9rQCNhG3d%!/Q;sZ*$U)X#dmZt"n]_*>_:-H0OJJYOi?WQW`)oI#g?Z=$V9-N@BiTE"0'(&@
%.9Y/#W/ngD<?44bC\+BZm/8E+Xgc:#/Hn.,aEePB,itgQ/#dV8X=_)'XR`hrB7"7JQCRW.#[o-\s4)TWjS!b4IhQl"=!*>fDD137
%P5Op5gV<U;bE/47GBq(pRnqppguN6[\F/UNOu(A^4&asBL>4W_:ZU-:76mY;T(5">=!9L'Lb)*S<1Gs:A2@>LNsqGA\Ccu#:)K\1
%<,mIA7p2bT]*!pA#+B"lr6WW=1MrU=m`2Mai8:"5!?tJ$A\D6@TqIq>\\/?\3CIsQ*b:>bXi.K%gJGh-Q7S&5*G$8W^V<'%aN]?i
%O;f<fq3*3e01'QXWZK#8oi9'B`%F+0[maq[ZM]X47;#1bA@O%k6>dhVSu2V"d#_IhN@qaN7568^(MCcMg=g5.^Mc<s`iZ'`C/(lu
%D@>,oQQnR#\LlN>/CidmO;m`md*&.>MMsu>XNSeKRmk9Td"5NDc*#!?h!Bd4OIN(>^pf'*!Ume868mo%C&_/:]aVGKVEd0%nkI3M
%@No0rr(HJjmm:o6_d#XXriY;jO@VV;D7bVE.-cmN,a)KcS:M6!qR5Mp:_hrW7BslI$0!A?oTH&`XuVCOhC[hS/i)LRihB(`7o>Aj
%'#oX:/8]gBbT9UuFBdtIFRn?J0:MnLBptcP]IZ+m?Gb?"jh%1TJ.>`Ml_60H4FjVnc9*:3T`AU5g+C8uMq_+IF-\GMFY.G4p4%:E
%`h8gbd.2LYDi;n'-jmQ-r_el*rj(_r`!54K)0B(^I7iB4SO%f1:jj(#dgY,Z:F9aEMXMf6U7`G3]R(;smK6%OKB[O'R9iE]fY4IJ
%dsEZ:T:>R&"]75L=QR&"f:49VIe2<_1DMY8k.IiW"*(R"e?(,@FVD]^KWg&a[!@-<FVCLkS!hinXAXYK)r7%)j)`U'!Mo68Kg@XM
%MVP)\-"hO:Ke=Q,?3T.Ur\&B7pb(bW]YD@k02'SUTOR$T.d1IFTnG-;(Na.-"5/(KNVb)Fs0g]V`K]jXXtPEF>b:=V0C-m\$P7Ra
%Ki`;U;oTp$_WY6%q6.IQJc.-UICs!^rL?n#"iD4)"$3DO><[,rg90$HcjgY%N#(K,DFm",l#jZW4'LU=[<[5\TUQLQT98#F@2'f*
%'Dbeos0CKTT88aSqC^tYTFK8rmq)9^,`((FAoL]1)rK28krkOBj+;.V/`4Pqbluq[^/B$cRE._**@Yjj%rXZ'3=)C;jJbVX0RF1(
%3RFr0jQ)`;X%YK=jdp30FT2nON12d(\W9"<k)C`Tc=T6:`Vp8[rnOB310omIpZ?+]'+5X[RcM2af<9UP._g^K?+Vp0b0_FZO\(#0
%FOte/Gdkdj5jmfarFN*$D[IOG<3O(5Y<&94Ds]1tci<ECU#Yq`>t:'-m!/MR++*C"hSo&IVdob0ejG[:;)r??q9&4Y[^c74&E.3&
%#7+21"nA-*OA#r-!01-g*WY8&jV+g;cQ3ZY_CWe*8'OYrLXg8io[@!DG^$?fXS3Rd!t$'p4(br!d*#UR7$@)M+28G^e(Y>ZQhIRU
%M&ahC+JJ7K=mP#XiV>Hp4(c*fJ5sgJ@YUAo'!SL3Cr#o9DU@TlG2UI3]OQE@AUdkKTrZ%bHWfY8K#o1VGI8L'qcXl=oucg;'0:\s
%?94Yu,.qguj;lQi.F.I"2\\<E/R?$Lg!\G3T&"f&*7&Y@R3f)PWq?@rb?'^j[2pIUJcFXIa0Wo!5d+oc!/T@Cln<-;*$RQf$hC33
%<YBA/fhfn3L+WMa)U\i&s6^43a"t&"Y`?lL>)u&]Z#$Um;sWBrJ_k-jkrn$cj#Jh#mMRqp4.[,M01%hTrX6b&#a0V]Qc1">D\7n5
%:@B.B1E]PN`BJV0GQr`nl?lb$&L!ZYk!@Q[lBbsCXF<ZjUXg$s\pGH74ZD(>MB'rm6n8qt/&u]TR7`.`q5W-N^lCbP?*sn[1$?(d
%0-&:\(0:"3g;>/P'Cm8mcupk0=mV/8ShkHp=P(nX@/kG[BQ-)/6Z6F!0&KZUGYm=C##kdAh)h3nMBH5+H[m54[<u'C!U'OUWnIQj
%C%aC\NKo<`KErRDW@>(F?]),$/BdUic9lNE4BUcjFWNRRlPUEQGaq&>HWT>rO0ak>b47pWeTp?heR:dto/MAibU;RnB$[2W#ZH34
%E<`d7:M/O)#*HoHZ`[bKh!kkC*bW/0>bdWs*["AC`I-ceL/g[`Lu.fa`u,G_n9eC$+hJK#PcO&8pGb6"-s@&!HCT*u"503b=a)Ys
%SVoVU8eh'YAXS;dp=qOa0_@>Od3!V'oncPG`ZAc@lOX`M/!"`qTmF@[TcGAN@m"7>%NPfk*lM,$B9.jJ714,WB+R-0pp/+r4eIAM
%-hKA#b.KF_/!%##c?3?WQXq3ff'q(7=6?4)&^^O"j/`:t`60nHQ.*.#%XRAZ<cL>9`d40JadCp?lZ%CR4O"p[`W?Jp$0@M\C&!P%
%#.`Ep?ZpkC*(Y10ktHBJ$:?>),n1Ti]4O;%G!eJZ@'o*tZ3!Ldjbt;pM!fFf`)Q+(R>S5OBPtAI:MDl'9'BGMpuSmublL4AP/\9u
%m=WJlYqE@iUmP7EEnO3i!!kh`*iqlt7=#^Gm`HG/"B>h+(:WK&Ok1\L2FKaRPa8,2d5K)kq7#q<!g$D%]uec47'#N&ke$ek<Lr\V
%N]_P1drJ*i4+,%+/"n/][uXMq4K&12ke2i(en0AP:T-OGdj5o.?+TU9l[G(fEPs6TcI5m212fYo`N3Q=F@J7`/5'-riX3CDHn'6_
%=\J:b?S.)V-gkeu3DdE"7n\qY^U'?i/uGWS`0$bm<Le/oL/jhhIug7m<6o4)2K%+Wc(O&5:6m[+5!%^tg/Y9%gsc,1s)VVsmrh\e
%I'?m^l:@Nh2(lR.Ps8JflO*)k*[`4R54;QT-k`()MnG,Aiq/Q(???NI-;FL.Q$Ppi+=0?f5io`6"G+nhO;DLkA`n+sLoAM5Dm.k4
%3^inO=cfbI!c\QGjL`co(;V]IUVNX!$K<\hZMohY2+1LY2+L.GB'NIiRYp%LF][S#"j&$n?rp*^g44]`.;PEC)XAFjX7%gO)XBrk
%?td4rZA,>VX,<;NUEUZ),j26r5s\<P<)5QYF<)(;57tn7qWQtUh]?7nb/\pIc2392oV,OOb]n-X0;a_j>;QI,hR-6A!-&SAPIAPD
%igs!UZh?u"RkV<">%3Juns,)Smp=*$3716#QiBF$S$S*OQN1aOil%<i'H+VfGK+epLe)mrTOg#eget4Pd;DJTfo%:H(2bFO96VP\
%-*?cg3p@59;.3m9Cu4j#""1+2s1pI00b+_=]UO%mncG8]W`'39c`LDdQED8@89YG^VsK`/35t;6AiTB7HEK,i%64CD"oA&(@HBE1
%4q*eO^\Z92Q/?KHDo0Zsl=4g9q#t%oP(+NRr`:1g*EK&^2/-FPHKM/?/Dh2d8Y-E[&h+/;;b/3,cKb[dM%guYZ+c4fOhF?Wd`\:=
%R@A4A?T/PgLe**$+KpQfPrMLXDC<qh/60>`AI.V0135LMDV$4qXKU@`-:W]Nl6o:>Q0F)?K$F(65PQ9gRqSdq&QM4IeiQ5N(n]n$
%naT_C5@q0aJ5a[H@X^+T$/!hU2IQJBpLi!1/2dhab:g#C*q4T\,mn0:B7e@>f-0707X?=;b'%i_k8=;pY$>?RNfG5YaBT.!h8HP_
%N<`^md36Be1a!n:ZqGDd;nJ_W#&EJ_6b/Mk:6Dg5/Pq0;r-*@ZQcF(2q;8Bf#D-("E;hbi/>+@"3f5>LdPtdT7q=K5piJ(.+0o$@
%^aNe^0u"U;"DhjE)mK=2$Y0@^e>oB\1e&<Y-DsnQ08OqqRh/)S*@M73cbK,onLgUG+RT!Zp47aokd&t/OE.(^SuB+BMs@mL+>0#E
%a!X)N9,FI&GRs7_Q&iWh.DpY@'R:-uhe*BBN<-on?6.,+4l'"@m*tDN$Gfo_\3R3nX_1.N6t&WS86k7k]aQ=t!h\)f#(chGq=qCL
%@+&"T=`-7c?DE=^!-T.K3hksPi;n4c4_M)6cRO*&+ibJ#"H7+E)_h<(4#@/+7=.4P+[eGM;;'/q+&I-R.%m)dLg8[D"3M0Prd)2&
%&G^j^`Z0Xp^C;TdaK_1$m)r<$+JPBn=[-iI`.e#N8O,ZUAY,j1P)4NR)2=N^g+"b3.ru_"@"6oq0PT%%>d'K6AYPk<GKoqGCCjM^
%J?15MgHJHq9+k&aeU&?jPr4bpZ[!Eh(5/nQ>Q,tNbQ]tk>;n$6K<R--o5o:2+H2q'\4L+2R<p-EWH[tsUTY5jB?Me3X=4E*$Nd_<
%.+K':.'/s.'abKDIX+4]3RO^\"*bP][X_2g(lShQZ]:/a5-E+Q.(6e,@i/9:9#1f1.@dsQPI'oLW)E7;Y3b5!jP,AkYTB6c,Q*Lj
%LTFH#SHu_]Qq@M@)"1R?c"%hoq])q$M?G)gQn1[JO<^lY@HA&_b%O()Z:naN3Q&[#BHt]W]O?!U?"B@m89*[\>%IfZ<0Haif7@MO
%B&\$K$S2s\!VAFW/-q.!p*\,5#*t)Go8WY7M#tkVrJ<-ZYftQN]kK+'r:ZO6JRs8aZpe-/H_9QWY9H4qa'^*>gDic-b)laoS1VLX
%74i:j]%!L8,1B1dehG=pDWJn"7aRYUKe;^*rO<1c<U6Zb(JtlIZfNM')KHXJn]Mq3?H`S=U\N8`G.I6u4$5iZ#BI^%RE%#%T:t+4
%"@6`r2r.(9&ei4Md0WVE`I9Y+6@NQ!QX$k-3LHTp5Hu:=(Q(b!&b^nS%p;`""&a"cN*i*Y\D<;7?IpVbe&?LQo<`XTXZN7J4*E"=
%5@^,#0?*Ke\0K2.ShU/(=Q7',7ADocUE_uORf%2j[<h:k^N)G[Z>NQ_R]\cPrgK],?b&Q!$`/2$]=eB"aNXM)^#PQ-C%A&%lL(uB
%AKkn-9!q)-R_LW@\SF`'m>"-pF,?:bYYPU0s.(%gWLOhG/'C*$Q=I2RVh$G'N!GIMk0POu`k^fYM*cM_?ddQ<AK0&CEMA58D]N=W
%cSd^iLVI&/SEMba4Mk@!-fB;&JZaEABW\A?^=Y_['IcQ06cYc071J(N'<!:U7>,=560;^9g1t9!Km]&>3=6G+#%E6J-G)b>aMI8W
%ae33F$o[OHS60QQ@Cb4:-@9C:&B$3AQWR15*&bA1p1!MiQcgV"S>$L5EE+e5UYO3;3I5=<OL2nlG4dQ?CHlHD[B7/Mm/T;g>A)&X
%)<nZkH))IRTNiseKF".[$aTJg*aueZ4/Nd%26%[s-j'9RoF?CgUAab2N9'`E7E.$"l)EKsAb7*lF[C4CgMNM`>'!=PnXgDu8(Zq0
%OT'8i.m\HoB*=J9)o=6eE'cgUCt@oDCD#M3H&t2QbVXJ_/M0sJ@$]$lnVjf!lS_eZF0]YCBLmb2S1BgC3?_f0GONfoOU0I8\N05Q
%r^QL(gt=+l"CdL)bDPE>PMW2tI)N#lkBY2P]^D6B]PG/B=&Cfs-.B+L9$Z\b);c<j(u:Sa_toWi5,]uNFJ;6\i&E<ElSTsg\>=u]
%1^@nW,gpTDRf+SWF:e^_PUeR>VnH+ED-]-;h7+RS+dcbeDu<+mAW.tfF*<.Xd/TB'+V;148^c+/ob&B0=lge+;2LH\"ZEWsQdQ$7
%`-VMn/L!;!&$j5l<oQ+CgO0joT&1$c;@apumL^/V[<PGCB12QYDb$>tmK3?(I`>5l<O;G7q6+CC]\D(GjC\=Z:PG2S01\,8qr>>J
%J+KXY9tT2\]Q5s\5oIW#jdSr.(g`QZK73tH(NKUW^.+Yk%Cp#=C3Yj-7,EERptu%Y7dW2GTpGW>>orn].,*K#-B75m6d<D:THGrO
%.K0o-pc7:B8rd)ni^LqN(>5F3#sa-"3K+)e:p?bkVqqJ]#96A\*H,0Jh7P#S!\0W3CtgF_mVR!h+EHI<DRMnbSkf!bN_D4s2R,9l
%5Y/#>^N3omkWI;%WCa2%Fk2[Xi'-t\\o,"%4$,2\,&h'RONU^F9<fp!DF7:\N2)<S^N$W'.^M428FtD[Abi#tY,V^73_lFHZK3Yq
%Iu@M<WRGd0FO5gK.MY9)bO4S7d*#3cE`@/nYF`*2&Y5!gfn4GuEQmE#'_.]gMe?<g>L3:eDpb5'HZ5&T<9SEORla2c&A?&81ln#l
%!CN3[=i=7DOqZmNo$YD-6#m1_n8\Q\5,'Ih01#U;5qS.f`NeSK)9=%s"198<[GmK]'49OLU@]<n(DgFt['`N4^N!TO(5s)=K%ZBR
%HtkJE^'DDnF@W?<#6c/B)G`GIT8n.XR"[-XV)p4:;$oKC\9$,l?dQ:"+[V%L5k^Gu8fXb=%7L]gki2BgOk0.'gFG*N6<*b5g2TkY
%f&fU.mQp7]<F5R2pT?B)LTmdU/NQnZ7]Si??tK&D=EQrc<FZK#fVppq6e%s/NR[IG9+Zp(4l<SKX9A0Oi*[SHa^_do/(37.U5-S4
%`BSL2[f3847he.0,j35ZM03!b^>835Zr!+8jL4,,=N^0A^YP$&j<D\J;WNP*,0$S^40=c:nZ=D&ifscO#VVdg3/,@)_^e0!2kb,#
%M;mDQ93D5>]tHbm46OE,43)kCfj#8T[<bAff*eFO)sn0D)gEJYE)FdhM:'!pd1qKY*:r_g@e08&E[SOg4pqV^1qV:#'JBJ-,!&L-
%o((Ec`JJ]KU$uKpFRegXV6,*=giX"]\Pq$`,`".piA5,)VV9,KC'7rQ"p.it-g\`WHPUK(nH#TN^"'#`U/[*h#h9bF^TKlRX$_R"
%d"1O4]9P?NE>o6&cI0]'XX1+4rO5iVGir6`M6m-d6d"W:c@>1J#?,Jf5u(5A[!R+\[RW>3r^CmGBfmH$%_V(:ggKq]FdV/cAG=5!
%_M)W"-`GUiSYYaS7YHYfE#s5VgbK"QIoIV2r(`0b[d(Ja*l^@1og<9?:;-CJc"hA+P+s?ls.K`EB(F)bje?8tNLPB/lKl1CDUa6Q
%,*:.!G;OI]VgGV'bU4!!In8u]AI>pB6CrPS(`ue)lbP:I3DNoirQkd_PnRsSU#m#oLnE't>L9QL(h.0M8jA'0<VQ;hFHgDGe1E7r
%g4IC*j\RCPUpd`1m%te(Kh/mCTEQd&mFZ*/mKB"c2@G+3;lAPRF?^PJ#[-o/2'uSSdLM?i!;4\0%6SW>G[C]mFIJfRE;\(c;1O</
%WiG6)DGIlD]>3'.m6\E1O,,g?J-oW^OZV>jlIT3!NL"+RFTZ5CN:BH]V>B+g=-nu)/ghMDHq(e7]t`,d>Bc>"L`GF;-QM["jPGee
%6OIYac>e.Cr+R8lifr6+RR2H;;cl'4/[pUdC4VfY;`6&X(VdTTHK;.5q:Do1=j3iFk*,4R>]T+HEZH!cTD'5Snm6_ZAKP%taW0[u
%$r9'%Ti!m%.8&tZM,6B>irBZl$*-LQH7bdkQ6*`?ZJK6oO]?bq2gHP#o6c+?-.;LYI94LmANQd\"td*,^DaB&STlVH=0fAZ?.DU^
%h7&:Zq_pU)+]VmF[`G*.#:<7q;)#d.C(a^Ne*7SX\\K]E[F<*$)T_j37j+KGo1OeZ#pc.FpPBf\=3#<JiRIaa/>n\'UG%F%oPG9L
%o(lJ[O[Pc.-,e8?V><VI-tB+\@J+/X%XR)lo%'R>=-B9PSU.A+Ro*'15L/Ai'[\=A(S*Xj#R1BEP4Z<hLsEN)R&:uj9^uabp9/SR
%@C]t"`8c#n\;46V63`M7^I(1[&TK<p_CQ>5*X'XrS0Ra%<WZbR(:gYi/3hp<B--uh\3E1i$:>P%+hfbr$uYA\5YS5):ES!5[W+9e
%(UR;QU\[<_WkKITB"U\HlskM.kXj^$lnX^%RMe0lOnq,WmO`t/`KLSp^GCGLk]`nhXMO@!qoP(r6KGII8oDCRa<K==[gDrBjK't>
%3sFQCl?s=O5pQVeZR=fFb#rIUhX_kAYA!!eBQNWVl;s^WmA#Yp)o=og'<bbJ:R8<4ZXGt-/L!;"$Za:((ZIHomO)O)9,>j_L9cAD
%G^"e[<"KF\Mu(mfRANfV91'6q9$JQ.-9s;>:)/p[3t(_R'Ra\:-<FKfZ-9M[mp:/`H>bHGcs/Y\8QC=YA3QV8)Z_M`-(P),@Et8-
%93j5<e5Hbfbfc`/I8]ZJMLr@$H`$.fi^j-HBGQ96]XoS%Mt10(pJbfMMUHp?PecF-9tk;P**K&$k8\eKdgQW/lI;ZWq+fc$k("H2
%GE[g2N0)sRg<2esR@7&UaN[UtS"CqjPtq"4GD(O[oV)a<A"GC!aHk`IK@`8+/Ktsd#"/d]q!>VXGZM'gME/u/-"'tFgOT+Wh'%uO
%?gH<,Tn]PiNW=P1cp;uZ5-.iQJKSVLODmcHao.l/7t.mJ";#u+&a,PlKP44/]#[C-getB\@uT^o)dQ-o\fR=rL(K@r+h<knkU^Q=
%<9oCl,cC>Q4MG]=M]eETkRTDL1prIs>t_Vu&Z$2.6Z+-RUS[>KCmfN<gO'tA>r;H:0$4Vo3s/q%SM:/;RrueXd4<hlH'7'Fk""^5
%<5%oJgI)aMatVGX*'6aQ59+)\SPiCBjt`i8R$mPcLs?:T0aF=*X:d'qB"2eEL2-mk(sWX?qsFNF)>WEbEcWls?i/k<ru3m>?D3[L
%N<+Y\;Up[Qs+d.kILHV/)Y8lZ?ms$bf^tej_/PW/W7cim]aQoF9Y8".fLTq!qS6O7].,Xc"B8OIOtTJDRQeT!=NY['GVqjZr1Jtq
%23%Be9qPTgcV7I\1&+G5-eD?JL7sMR>/G]g,,RAKRd$sfi2j#_rQqO=WI$G?l=C9X8S-:+oh"^Y6nB_p81PGEJek&uZ*_hN9<n62
%D+O)lMR8u?[bj#ZU^NbYh,(_hl%c%9f?3ImKt=r\l/4@P>>d8uaV*@iYVsgLRVE;+FXt.nDW9JGit`@hkU`O>>4uV*S)0;,IQLEp
%Y.o7O:V)r@@TrCX$S64e4>#GQbAtW'4HH*/='4UY,8^M?T%Vr?.@+5MT!H-M3"O$8$E+p6hP^uR.4_OrRS1NN,o.&tW!.Gkaf`S8
%=a!$'[:[P?NBU!=cWg*r65D^?Gm(7SN2B#=cd;'GV.b(l)D*8_]5o,_W&:(RG9g3J59t!Ck#cuAd(6?G!"iTL88Ae,#oSghB=!\M
%<Qoo$N\b2P(tXj-@/b@oBJ_t+3&Elr*2rG$[A:J9`2X07e[s!0HFtBOPG^3nVP2lQbQ5/e_gY+^FM1Zt<32@;=>t(AkUfVhLsOP#
%]TU012YPp3i82sm7jP%VeJ3/6`YKMH&aT!*f]!<(LeD]c2:/LWnS$5sZpEg9Y4<LuX\3\Fb+:$"lb092.6%[r^Z8)7oZF1'L`@Uo
%b1]0c!F^.l+Crege%>eB)FSsB#39Ss]97\Kb_BT(1NWqJf?cG6s**)YV[:kCPsg6.F[o)$2J[.-#sb2Qat.k[UbBXV_Ui]l>7:8J
%S$EYND?3$2>//@[#;(%#Y!qO1+"W3\@(_[[3S4"S411i9,3jEt?-)Lo_aQF[:_[HN5;]Rq;$+<I[?AV^=jTs502JJpI$I^r\XnML
%4@Pd]Uk;op<BUaWIje_5/?4VDk)'*HFdXWQGGP`cYXT@`olq\Jm)W>]J;W+o>+UTdLb(O>EQZ<j-Ed35MI`VsVZfB2!tcYjHP/3F
%Wi3)]5ga</AL5R2d"[?ah'\R<N9#HS,EU1Y:n]%a;97/)N+].pq_>#R]k_/[/#8.gH'V49W`WtW-K?K$YC5BP[oE,fB*EC]V3<s5
%/U>k_7-4MUe`.>l0X+U:LX$sMN)Uc^U*I(W1X.ZI.Lq3Reb27Nhk^WOnhV\L!jTs!cJFLIlG5l[2Y"`TB46BU4otL<HV7j2I)SX5
%[5hK`U4i9XVF`->p0uFjV,sXs.4+#n]Z/)iTU<@T1a8T!;u%;eQ?O6De`sW=Z^:KuO$K1ohu4:>7!QuSUZ9"@Gr0k54[s\5anBL-
%ZO25Ejm9-$VQij)oQQoj/in)7[Q^k0k#LVQA.U?%#j\P"gVD=m[C"o8oLcedR!ZctJ:7tB&NRSCk3!__duX=m70oNTh.]-BcDj]C
%)nP5b2^WLpDM&bEop0Mj+CgKT>9A'<i*R,fe@"&%`nUc\fTatAlV"Y2U=(2)8,R0f1kB,mg/\.<$^a*]`VaV&mN[h*K+YjgT`=8q
%O5JJNraj42J"l#o`L9=m%6jK[Yjh*F&sa5d6r;koJ$Y<QrQOT)e"XGhm@)Xbq,b*a9O\RHD:aYPQ0r2Z4H8DaLgE1k,7\lD;hu8m
%O`+%*:=D6mLD%O:P-#F%OXRV#3RRIgd2M*&Kjs/MJe?tr15l>Y=qN8^kH<T[;G+EEpPADH+U:B$*f#4A*<Qol:BrFR@ET@o/'/#p
%M$7j3&-'oC-f[[qZBF=k=Ee;L`:B#/glZtS>08j`rm+O"O&j%\T9)F==&'^PQ50d&BCM<5;L$uY?&=l/^Y=i.7jO:(j>E6_Vb>IZ
%%`9p%YbreL7g(4#5jk<$;B3$Q*CVMll/EQ3Ok)8eq`?Y1<\.?4NSRt5OID1'[:mClQ,`8XX@di!-&ot1B9EmI;<p^k@q=ufEAaC$
%qWo?q54itJg@\^PSE;kab\GelF>\IrAE9n;U^k<uIE!GIo5pYB%)d/!Ft#6`:k[JAEi>Jb;*N3qqb<F`6[,VW]p?0[aR]qQ.q]Ho
%OO2YbmLmM<n.6TNZ'*d?(=L>'6:<kjhT\s-k!+guUKu005?kT"7hm@B-2@'MW8f;l&WoVk+Eu+S-&u!\INjenA9!QD#jYXnm0tgg
%'oHJI4h"JQ[W2upc&(iee:Ql7c^N7,g?7"=IRTohq'AkC/"s_PTDJm.r#F9(lqDY;Qh*DOIX#/7eYdY"`?o$)J^=od\-Mti5YQ55
%M0f1&b;r5JQ(Qgb5dLte_C@&(Y/&FL$EDeekNL315l+AhMQ?I!rm_i?Q9RnZ0?(1OLJ.Z:*q;7+`jbsA0kQ@O43=+OrPD`13KB?X
%5D%PN-1n0h"!Il+(q*.MOREJ4p1C9Sl1^tVSUE8]6h!H72I.pCA.-,7EG2M-Y&]ttA6mH7"gQG_.+&*OKUUeE9ZXE<;.c#h4Baah
%2qU``4hT,:Z;@S=#CNEE;??j3C\=fZ7dkTK+juY5=aOf1'iS3GgYHF+";iV@c?=*[;<+lc?"eA.FFBJ#cX_HV>@MGfh7BXf+Ud#b
%>Z=7ag:"NkJQ#i6_=_Ls(FV5%&S,hG+@[nQW*Qbf^??.GHoaVGWPWWMrT$(_7r.S4"%%4%=7,(K!_f0r>2uNUG8fOg:H+V%b89_G
%T8psI1lg-r1/jCP;D(^6)rh-.XSu.:^;819FB#(8;:&&cIhCK1,BI*e<N6c.]+Z3f]j_rR$F9(X*\9*aM7h9b>DM:qW).?GGP8&L
%EEqJ8oNlTbVl-j7"9_qr+@rGgZV*YaC6*%P.np)aItf/k0a#uUV[0;u_?)C)!XbF1j\KC+I2QP^4Lc=E=^,BL]%+RrWY!T=.dMmm
%(/dTEXBU42mT'=f$G$n)h+D?T$mPGC[;J3>)iPuSdEPJkf-1'<^D;j8k?$eiP(mUi$4b-$qW/VAZ,7^OkH)hT]Gm:$hQ6BN-Nq9Q
%b=gFm)mAA(Ip/<V@lFNh1Bf,WhSr0ur-;P4P4OTg4U`\h='piWT00/MpA8$9IZ6$YGK`K&np9SOTln%`W?#YVW!AL3m*081/Ib"%
%e\5L)BVKK[YAEE::X]'tc(9nTTdL-=\S^2FEem70oH7qj\YV8qd-W6e.32ieC$LN?T*Td5i=f(1P15qTH><&>68W];O]r/A([lOS
%mV9lMri-O=KNTad-e`\XR9SB+5]B%*j3H>[_srW=:;h15.ZSQjAKCN[^I3^6m(n74]TTT,k/[o6oH(@T<S;\@g9Q$'6P(bJQV$fg
%AfZO?$elK>,rTHj%sNbh:_@&rr0((V$@1CJ+i<hm+D]*0V)W8;m3o7h*FYIPlA4cM>CYZ7)gOSH3u@V%.]V<;8G2*q-UZZ]nk7XA
%$PS**Mn=T^D;#5e`N2LTD`Y`@!]?0u;n^K3'%\?PWG"TcW81>k]=8l8>\=B'RF`)'?\#W[kiZ<]7,7JX]0,0He[t!(GLsS+oD_X#
%+PN"rT[B'3LBdb;,;2Cd0l`Pp=ioQMk%/4Vrg?+/I/@%V*B,O!PSR,n2O2/Eo3%-%ql_#rr[DJ?o'HND<pKk6%"1;0mAE*<rQ'ZQ
%T#;_>X9d;3'.BfQT@?B"-'D,Jqt(D>60+Jlc-K4__]p'[l;P"5ml4-$<ioZLNnD?$WkCF+gWsc]N95#IWNqHHK`]stk2lHW;0Lj2
%a;RXGVA1,oBb/9.IQ(=`5BON@*JhG5dsgXU>3ji0pQIF)N[qhjiuM-e]X5$*bG4M3lOgu/30646[hQk4DF5#R=gC#qFd2R#s7QX+
%8rj2b-`W<:oer-g0HeN/r9!+QFs%g*,R_?bhs>3c/DD:Zq8VMc(PGt57%q!]Y4%t]R^Y6T87Dm$5?)?`!=*hKb!D9V1Cb"gVZU'p
%fI]PhIkJ-iC0e.&d=.HGpPU^;7R6RR*HCiAPJ)Ieh`-O-*cA5*i@]8:q2^>+/q9.)&%Gh7COsB$]-BJm%hdr"rbV"I7hq"[_Om/b
%hbhrL,(XDnm[WZ:*36UJ6lbC2iY^8Yf!55O)e9$Qqj1>jh+i3go:^o`fk/O:\A0HGhendq`VbTIHh5>8*p$bVO*q0%^\0n:#J$?K
%h(JH@Yr3VD>P^=J()8eWZb0Qt%eM7QM/A$O;FKckQraGCg&h#Y]h"cH8=2K1Zue,]9[oVpmH'TH&;!#]Er-@ZM.k(Va2q@l.1!$/
%XY:Hm\J3.e4"b.[!;npZM#SZXgDs=hn$8<%(>tIF>jZ4dD#=bNJA<9R?!0[niB,4>m(L]b+e#HM&Y&a/_?0]e,XNjUk2#)^(@+k#
%rJn)((k,m\DTQ6mcQniV,92&IC$L;3^$j#/b27Qe5a\i',C)]Q3n:K`4<oh0ciVJC]oN\7.3S&7!0XC_Q*m,Cp49o-^LI>^jCRmR
%1n)PX$hs@^^eUac-[>:"E^KWoKM=)6Z;Xpd^5^%@@KM\[K5^@3,qkH2qFon(m[/MUAV'PNd,Y%%$J[?:&F?s:e\(gG>NU\nEcSY0
%CTDp.rQ=kAoMrutnCd[Y)@[UhP0;[B)V,5PW79Xh1[+Vf-QT5+"O7@"fB7Qb&N!sX[SH%s[0Jqaa8kD5i5@+FlR8L3TfY#[b%JDq
%&8u8'X`jiA/GAp7Y46mkpnD0nSd;8BQkV9fV%]SK\G&Rnps3V,/^C8$-``csC<n@^RNii9Yue3C7Bp0[cB5$Ie'"H(K1i-t?`e8:
%&&SU\94'<lb0T.u-Q>M\J&`P-[[>cpF\_U&kq;IJlb2*0L<aD\hdX99aA@R&-RPQs.-na8mXQj_n\?E/UTXsX#iLRKJ=,1'ihYAX
%g\W.MWdQ\pOMX_O!K4K4")^I[2>u"laM?(c);eNiC*H4s<quL4e(UC$Ht_9Ff@5->GeX((?0J(o?Bn/!o..Z\C;Gd^R)nU[Q%#?V
%bcgu?R"K9BMoP4KY56MljO%VCb.dGZ*r,mXgpA'M#lnb[!YaNF6:Q`Q@)uKQENL_Nlg;mNXYUF\'b#*\$)^'I\icOK`;Bso;J./U
%fP&LniOgMrh#([s37ci:%=]g@;BM!N]8blV&R0>cdl1Ij^,J]&quP>5]1>#\<:`R`Bnp&6^N++Vp.WekJT#Mf!%u%COd`aX1`aj%
%N<"#f[X/iCkX<GJD^rr,ak4I>.4RN#3:N?2ldm)N:P:TCpT5PJjRXi*0+,Pa*jL<9]o@SEl8TqX]3H(GEYXmC=B38O%aeBeRnbC.
%%!V,SnCdHWM([RAlF_chBVhV_=[4pT2Y!!B>\/$_Ps+mbp==F(2a!%+j`aeV,mC"2Vqh;PCTG!6P\f.SF%d;iS?)0)1;\Z3m?q:W
%G1FM\UAoE&c`I\1+gduXq@$e#60R]6<iZWb*)1TEAbXV:EOpf8DVo\3E&(*bbo_IY6`?cIhc[Mkit.2Y0GUba)9ILnA'0NWA"IL-
%A&IqgTpO`6Wj^"/VQ8+]<#dFAplZ2WLq_V(c4--hk7PfuZou?A61]e)qW^1mJ?:Q*;T(i27GV1F;IQ2hlh3CjN7i\cD2gQ$8.]L0
%Xa:/(Eh_H*`F;oZJnKSN6:NeiNNBOJbeTXVQQrN3pFO0=S''hkXgHf[Q4\@<n\45*^'nJ?W8@\=R2_W<jHdLm<C<aP9"EB/U-RI>
%0-uG-(k;F7rqs92i=pTqRX3g*S3<b-rqntpPDJoXlkF=$F\LdJ54UHU&JKBaS!Ep=B>,lt&4&)4IT!$nI(,Wt5aPNS+H":&;sus[
%brh"00:uESl[:ESn89'4\Z/7EB"Ub2X,LH:@__=TV@$]0n\T@L%I%u]i&9(&SFTg2@i([h^'0=hjV)L_</:0/1T4?^W^Vm2h"<QN
%A6_\X/YB,PNn?8)T5#sJk(9)E;Hp)B.B/1:R+0)5PI<6XI?\:1KH-^HI<U/(G+JNVLch(`A60t*r,tGa()h=o&TDi#hDifZ4.P5"
%lO_GMH&t1&[hQk6DFY;^=h6T4Fej0(s8EMQjU)4)RT)1^eb"!eFi^M*+@4($LTGkhn4^uCMS?R-3M*3$6ZW3@P>(i@pH$e0cu!4j
%U%6/:aJ[<K%Utpn3?05(:CF2I$6Ri7Q_HXMQ8Y:1X1d>Lkk$ZZUYUTk0Z(i4ra[?nD(af+LYS0$L_c7H\-'>6gd,n^V`No#]7hq,
%G[6'rrb+NPOEGi+"<:F?,!aT6i<2YRLBp>C"5.b(.rhZMp(MG9,E$&:6Wh\2Df:^j=&=8%NWBEVa[5E!Fj`8j,Ql6hT1T4kqA"ST
%jqnl/n:#0Oc[>p'I]eqdLt!F8.VTo6K:"X7jAnFSTap]F!f8b0=4bPbF)%"F-%b?d6[J'2+CUOUc/=lqeZ'@AaR:K\R(b[]8HW9K
%=j*#A&#/Vk>U/P?J1sdoEeU&@*?ag8KYD$0aq[;o&*4.K]!!3B.6G6g')^S23_sA[oOR6.)%%)uU:X+hiEd*&rtW'M_Y6h=i0he.
%U-?Y4YL`&SY"U+mj*Enk>@hB)qD+9P<#<)aLmI/8SC^06p-T$P06\9*m+htN$AdFi7,(,:KpES/1B/h^]mV;N?f^jd1JFoPXTB%&
%j)LuRUDBBT'e0>AO!3E:kq*la>)$478H$rYQTEVG3"YLQIcuebJ<1Gk7b$-SSlBF[d1r#+g:F#]qBZbqW)WgS?!@XAdPfT)YicJ(
%5%tqJ-mC)rgjRleiU`g.s.ffF%&dhllD$hV^]`-dSfe'S<7o^Vcp61*C2PPb7nE7?H^d1C)J;Qa?im`S;PT\epmNm-n%9C$6GpW9
%<H%JNKKW9'1@_=lWlL24DZT6c/X&_F+/,X0Nm5pV5_0Kup>ksLlXjuB\Z.L"q_$$LX.dhe#Da$$J.(diJm9F]U_b%^c@hVliNJUN
%28?uh-IsT&=\96%Qo65L@(,gACmrEhT\4>I.!rOEWBD>YkVm=@`>4*Ahj:$E!Q=VN&C][&hI-^Vlj,n&2k"mH3%aC,EJ5^oL,=`D
%%g<>sam"*DDrtM2iTDR!lVOg)IWYm.d>'#oKCL_?_J+Y1BV'G?4U7ueF'2Zb55f?$!6-A#G'Sp/!u2Is%tF!l:nXuLSt`rRS#12^
%cTo=mXnroN\Dl>A#L%srdtl(P+.UJ-oZ&NmX`M)KJ(2;n$+Shu`JF#4PFmB\ci*_;4Q1sB^#ShOK!tR+gn4V%HudW+BVcDZl*X=T
%00\sT-PmG?q4!ZIm:X.M+X1b%Ug59]@S!hu2@rr:D]p<.aHOm65Zi-KP+IV7&=W,Q9SV#R^=tr:W6ZG)s/UjpZDBX"1GS$/&DPn]
%6t8QM1G/,maMhiKj?pl66M^8_]Bj5:,(4E,.=\jmON@3-FOX\_Bn"qm6['kMC<;!H1(6_1IsBBK@N/k-%t?n]d2OJ&6au*sJ#3c"
%*&hD/U3"T:D2<[@B[D/f_AlkFrIOZd44>0`4X)kZ!+ZSn0?#])hbh10N\6W;4_ZM>^V<.5KnobJ@rUbH>):PLmWKO0&>$a*>1r"`
%!\oqqlGuImimX)m$[j'ZlL(:Mo/i9\%*UL*:AIeIkk:im%Vb]1!!l?KJ^U?FWls%r7+OS)4#trSrlOYhm[Kfi_O0"r\W3t0Ee]8A
%boh?4&C'KUINo)k;$N$HDpOVQ#6b0s?b-)9d;BL;=a@?!_&Q1jbseklN\j7-O,1`J#L/%j(1Pt8DoXZ'Vhntf93'%)DspHJ49Qtu
%p3]0Ba.ZZ0mYqml2a%J_%eM7S*MYi0^&!>JTDJoTJ*qf4GC[=g\P,PZd0Y+V&!;Kj14UD/<sTF!8ERjr<E[u)(1cU[0%92D9\.Wo
%3Ueq]YI>"`bOQnb"3Nt\EA+n-Ss3@h,S/j\=L9fhp'Osj]JKdSW<cRgYXms=8J5(Ni9+jonK9HNS0Eh+ifgaC:;<R`7_DuH%afWY
%BSpqVan`.(_mDNt_Fg-a$.3?(o8XK>.u:O"(sPu+U2,$PK`MYIXP1:dCA-*;9B.W8?FqFIUiS"(]UFTm&AF\_lUmY%J@Jm*82&*i
%(7e=S)f;k4gEd(K%l(E6"!W';P:Fe!3)j[.(:STnkc&S!F.Ct$+YFb^EGK;qqcPf>H?iDB*@Rsj>b4o'7Gtn[olf&k\tdFpVg!@+
%N9`)V0fkUJ<EMQIh::?bG7kSVPBFf"pF,\P0+=dg.@7LQ"S2[.j/Ilso_p!<<4#QgetRKjO:D&h_]r)T2RU$$<n>H/DO6kW6XuPh
%Sk+$H]AurW)muW9^Y.H1r:Pe7R\5-`OBp'B::2Y<<36KEhU<(`H\fn/`I:3-Te>r>hm1BR\boH=7e:":_:Y`Cft<hV3uaH`GB=>V
%'ed<-Fb[g)&W6LY%,[;HrY#kd\6of2QdMZ.__392Su9j%7K?rRkn6ZG9sVlknmp!DZsX=Qa!1BQR`2PJ+S.Pej7:5>@X(#@k'epY
%QEVtV!@V#DkL0&&+o64amPqZton[ZZ06`qDaROZf*mJ8*K:ebuXH,;X9=h!5$#1OV9OS=_-:b5M/J_SMbEJ?jg(2&I>?`A8r%C@#
%gGu-,n7\PYs.tO_XI=(*Lo9sOB9?o."_k?4.L1_('sbD7@9[7c+'k7W\fhHh`R2Jm'L^TMNe!G*GWaXgbMbZPAg?VT"+o6Eo&.dE
%'JfWT.hrqmZ,$(M'D9RNs+[VHkUXsf:`<Tsg7:OeVCXBBb0`"@*+FP:B:C!>lo>]ekFWsd(QoSMD7>AS>9\'SIjKo1X+%N=!HF,d
%WZWgX-RmXr!f_.jgJT'T^@-CBV^0fYHj<sF>\1[D9!!AC8YEOhqgq^dV1gtWVUMsp0;`+F`X!9mE@#ZqMMl(DcKe3,34L9sC*mOY
%HJQ^1:3#f[5ct<a3q41?R<bD0EMP1qY]>B!Nq99[%/C3RZFEHb]CUood$%jKC,[-?o5F,E35#Jg%5tnIk+UX00^#%GW8KIjc/b5;
%_4m=P2T"62I#C6?7l`oFbt<]9FOJ`W6T^b$"`eK"NsI;Y!&S>+Yhk*"HDc[BTslC_R5E6ZgNf^p4$0^0DB0t!.[UIMIGtD#c0VJL
%,/u-ck?NpRbC7eshBR@+oE!"fUB?+oS;0kIn%f#nN._dtaquG<PK25c:G2Fm"_BWGfk5qLUK1:&Y+Fb)kXEp#CHQL?%eA-+5?C(I
%7QlJpo9=u.HD@'sH[$>537(ja_j7YR:oaqCg2$[P-W)<]m`J3,OP>`F0'=To8t)m'2;WI*0CjDK*5qVjB'"Wf!R6S)lGE]Jc-0VY
%KY\aZ):gD"2PUaMpG7OLC!*m4N_5&-eq4YB&FY@*K3@WJUk8@K53#rM]+c`2k*J3_&L)4DE@bD&[gp/(noeGl\ta+m#\:RMflQj[
%0q@5^'_.ZB*A,l(g,dN/H\$YFMoaYEQn.&`8!+*u7GdC's-FpJ_4Cq$"^CgMo(MlL?:Wj=i\#_eP/$t>GEFg-iR%':;91gE&m^X/
%;MRFk%Kst3%69*/p:Y/GrA?o5h3XgB$@p*!pmKp9VdG>&^Y(fo<+@LIB-"7K[,Gp2RP/H0870j=BYS%CMu&F_TII"8d(GP/SDSJ(
%T<28db;D,XHaIFcCgHD`NQ<)N2_4rhn!\4Z%`fht^]>*tL^puA:e<cdaK.cm.do8`_gEWT&FHcF;;YOuHL!Q="pf]F!QZ7f?]&D1
%^S?>@**j!1HHKFBIt*+5\=3Zj;ju2NG<<:-M2VNK%:&5GLka/Qe@skf?[%LRakJoLZN7>^HhP]AnmOg#J&5JXjYHcG2-J,L>"<JS
%<ujL=+G/YGT]Tu-f5$ZrS2L+!rJn<In$tr]B>VI'ds<$S2\YrlDOa#"0[cETh+5OO#W'RHLG4ot#j*S4T22[@fMB[fJ,8.aWaH-O
%H"a>?-lX91M<I7fSD?dgX8)Vr*9YFQ):oMPZ2WJsjJ-YYnpVcggK[6t[I0C[%tQSGqA"V)f:Drn?eXH$4p(PPl`L''Jf:/4FNGA)
%qcEDa1ts1XAjO0uO9e2f@km'P<LbYJ-NA.#kjTaoe^e%/cE?r3p.)aTDnF#(Sr@sff]Sr>%1G+`;H3<@:L=A2CmCT9PR:bP(ZDKi
%8WSJAkWc8%Z%R#Ip_/,Z6+F->LO,R!*t@a!MeI"r6>O(mroUp=)FHZB-9Z[-L6mS_S(Vc3G54e'Ph:RsE]ujc*q&<T[&jZ)UmDR"
%Zb=?@QD4V$,",)!]dq[g%iN`;C=h<R0<J?-V1<fbDo/6TiP@'s3]-,QdrcH&/L>P4_(rC^!@$D4)WoQ'M:1T<%o$B#k+Wl@NhK0C
%U]>*BSo&/ij$4Lpc9n'B7;+(/j_bdHl$i'QgSS;fa(*l@"!W&H2EcB"a.(8CIHL*pH@__k?2gn$"_4q%T`pK,A*MRtlP4b&TW7[8
%[j'@3DbM;p@W*4-q"T89Dq6OZ$EJG]DnJG*"kl&m6B:ErM7j3>Ll)nVTtcqNS#d[r6Z6'^7lXLbSS`gF*nnCh7(ZlQQ7MAZgkBV/
%8E3ZKHIhH+e(4f>EBN^BQ)Li@oaZ>B_i?o%XFiPjf[33UTBW+6"%77M,*37@S!E=le9(Slh1#(KK&Ds]>r'Z(g!c=\X's3<,^(*>
%M>i#VU)+lqo%7>RIFHQ@#K67^&:rl14qTd*HFBCX.MR44:>_'n!bXFp;t"kmdfZ>)Df"o^VO8*HIe('6+h6[8AGH!UoMsibQsp)G
%?@\pMYO9(r;\]&X;G-HNiB0W-VFo\,WK\sr:?&a\cMD-65Z=fcc=a]c6]>l#h4&><+'gu#LT^?r%ahpgq-8Z75Q3Hto3orM*H9;3
%-,LS%<Q&+=4[lk(*7X3H=!5JE"fIjf`7$Q^OZ#U$-e-t.#.3?.A\)iQA*[1$On86JT>>t7U;F;c&7%KsR4-;f^??-p<LXY)\f+R,
%3$*]cYrmBUp+r:=lr#s`q>GQH[8c[tD[?7>#6!mPYBJ`Fq8%*oBk[m)$A+t?Y$\YlZGaAI]aC<VBDcH$ojHTOXE-=W>`:@u2s*_^
%fbJLcDd83,n]VFk\aJ&:,0Q;NM=Z:cK1Z`-_uSKKOo*r/!+b>AW$E,^YoKn5/E]$j^hNFu'>NBB&-o>tY<haX5k?^P6rNh>C(Gt/
%$t5*5,N)CNkVlpWL(6-P6r!cVU*hj1QU9>=jV7/gh-``pa]Xt(*KhWU_:b94(0lm0!Q(I+#b$dB%Rb(Q)M36KQLo/=WT(IKD<$&m
%5T7Y-@pY^S_R80dLV3&k"n9COgnPq];#4L8Q1Rcs;kdfJAP6`7lTB:^;/KjN[30s_G#pqTB6_dbC=c"#,R@>:5+Yb+Wajn^#2!RS
%,3)'dRViF"a#uaG2#!G`:n?,B9c;%L&2LY^0:<'X'R*OjRX-hOT`+pfpkpJ+1oj+KouDN@s7Re"]0qd<6e`)GYmMqG^qrAM(,"pD
%GMq%<PTHfC;'=R&U%+N_/6)tZIo"_ti=F"^lo?9s[lj<WF1d)Mj?8WPFc$B"6B5R1*70m6@Mp!1c(&10s8?.Ya0b6ZW;8taWO,iU
%9UiK?6V-*dF<jU%3dQ@Em2]HegX&;\]`Fn-d_j<8`B.-m%?X(H&iu>\,qmLE@[W3ZO,+9&!bLa\8837q*dhQKpq<OLG<<[9*Q;XF
%OWb,aMW[9]IHFf[gP35h5o\T>n)Ykl3^5[n1I;;!ifi\9QU2f3)+*#t_$5!OnCEoDoLX7;>7#?UE?U:'^4lY?EC3-e@p;,T8*uXP
%fnCHk&j0P_-7*Osa%Xgk=tr&pO7`AMp)<n!aEEjCPM#D/S%n<ICth2S01E=%4V<ng[e*:)qt#l]NbjKh?2eF^J,>Y[a3l=r6&]Mp
%d9(]"Eq@mKbV<?a`]_^`_`H/g0R.kKEI?8"b;C,00:%uKXXB[HP!BX&]WE6*QI./Ieks^QmGIB0bjMan_+a])=rttpAh8hWc_O@5
%Fa%*?bj/8.oC5r$mpIKUs,<AZmT/<o\-MnNF5S'=gam_<f&6#qf`WF=`-rkq:&K/9AogAF/F2P8g&Cs;1"E'04I-mRoB7dG9jQAA
%9c:WfGWQ2sV0"NO+lSf[lc."e$?L*]7g+V36,n0hXMd6/IREV\pl41I1jVF9Y!$KWM'`FnbohJIC%Mnp`icq-\EWD.Id@Jf7hmsP
%hGH0r"Hq,abW5Qcbad\%'C_KhMIg!b=3L@,/l,;<3fSQCaHNqf)Fa*[d3s=$I#94>;s$:Iq4G9&bKuDmQqFHsBlmGSM(nfHJb_ej
%/!tZA$m<.S01ieEkeI?6GAAiEX8Q_Oa+5':hcSr8L&OXUe^WaI`'^EYDp:gM&8f]/7\qbdJAa9`>nL#:Pk]o;m"B&7*)(K8'%-Nu
%RY/r5hea?=XEukA\4)1Lb6$"d1rSJ?m?McSYZ]f>>0#M]akRA8X[D0s8[9LSde'L_aIb=hF83T/gqeiW^O+j#5'&Sik;-&hS?T(i
%(r,4rJs^V7`S-ssoc8=]lhm-Xd*t27*RGdA>?%_M)RHs`1"b'ZA3r+Z+M@`]ch!bP)$8Mu6Ts4NFheHsoiEM'--GH;liDF=hV9S(
%-rSK"JX`(NNL65W"[$76_%7,,VdVW`=%rO!g?e6_\9)-A)BERg\*(`-(stPY?FXW]".J8^q5]jUFf!51HNZ)70$)i\2p`Fb4qs6n
%"sl>BJUWnHbS@MM.fmYs54bEk-((:ddm6&qRf.51jhe3Zp0jM7EW>dL1Zgt]nZ(mDCH8QX'SWaHjuOe.a?.*#2,&&LK.!Zhpm!7O
%qdedYR$9k,3n1q-HoRCQ:c']5B)jq[j+E'WBn\'aTR0SA%AM5^2_p1<hM@pH?FouBJf*68p)c<rXkKSNCRes,\034,H.U_oCOjM]
%p?o%$SUQSZX/=6,rr#((S4/-*:<iCo5\)^>QQho>F_WGMd"kTE@cPEr`3TX'[dd=3*A"gc6TU*^s"kO)"pckB6I;5k4Y4HbJpnNt
%e/GG\3&tF^P9];uC=Um#BR&>Lc=Nhr5>_@t-i)RrLjASgjkElHG*La.\&o)>Hjg9*Cs,^Skq4)Kee$g$\d+Wjp.MZLicc)U>4<e@
%L3:FW9`OhS4A'Sap-^.^,6s9iW%"e&EfEd-&(9s,r7=lhA$';D?dj]*aQ=h:1ekK(VRn`?4@*4PM:VS8&H4s$5gudn(Ll8J^E<Ke
%H)fLUdSn^[fC"0`kITlHZ-)h:UYr[03+FjWQZ@Ijml!QbWNqi%SCWjWGa.^oqD]`I])'/O11_HFS?Q@SjV#=pJD!%V/C/XJ\l\Um
%oe@%1#<!VEC<AIXf>K(qTkL\dD-dldQdtCFeC,3,F_Bh>(,q^!Og%"e+3&1G%Rl8p4ZLYgrW+3&9FnGnH%%%tDWWhkGXOZ"XCK55
%eich.Xp)#!]LN2k[-b@QU0!@+=h\p91NH,3p`lZe3YW)"*GGpr?Zd-<:'>Tjd5Vj<q)#T;`!m9/0_?K/eA5$pDXe['Gg=^UZ*'k(
%jo0I*k[+J!6s9O^KTRqk0_qkZPl:4R:bXERdrpIMH6(6+MiYLZB#V\oramI+qjEee/2rnVdm@d8$h?eNT(6J'`In_s,CIX1O9f=(
%Hr9CQ\b;G'&E<lCJkU<WCG19tVKu#O)7lT).==XZEn[Bf#8(Ef.F\AHc,j.<-/*6rgpt"sO4Wc3+W4pkY\pUQ6^G^Tp7AW!_oYA<
%Q9-7Jpt[Itb"tgr5ZG9g)mUt;mdPBeeDDqB:`S``,)Be`6\2'YD1M+''S+Cn#>6eqicc*@S>2!R>YePDr,;&NT^W*BA+h=ZR+?GN
%6S4u6YppN:#B+^&A#^4HVFqiM)PPJZ2q0cnc_3<2biF="P!iXT*KB%uf"$gk!eSnn+Hq'mX<^N(>GM-Jo8`]2R)uY(F4m[jls^#'
%_0nCnV`]\OY'2Uos%!d9l5[qYm5h3(5139W)!qOtEMTKhda:Hml=HosFE@s'JN3:pq2kPA%%@CSEQmQZ@Th8[eM@+#]4433U2\4=
%Gfh2'o$e2LKsWbkrDS./5eeMi;J2p&YNY.5!X1f4KsW`umpV`0<hVJ53rOmhLQ6$Z$)i,W4f!dlHJIp@5][.m.S$c4q]4,5_jS/6
%n;VhU%V^KuXV>dR0LPb]l"BC*:&EaVh0#6'QM4i/.M3CM[*lq\j47skm5"!^H.mI-bC,&>mW%0nDKmQkd"%ICRIB)cA_=88Xa(3h
%SMGYJZN*^[2g'!oo_o21kqb3Zi43Rp>el3#c/X()62V4*!LfcJn-J?nJk5gdS1oc<Z9Eu<!3up#&Zj^7;"=m*1\&C`l#MK5gkKdZ
%\WtgS6i?..%Ag9-1TQPg540hS>;(t@q8OH#Jg_%/>1U*@BPLBk]AD't2)d<b5,UO;7L]np24On'1WsVrW-_qN`Q,UO0I`:Td4>jS
%3?ZM#(%,`N11][-bmiBq$/%BA(fcXFf>?pb#C-LlUBY!Hg_J*)MC57O#aR!0jcrn&/IO,]UKO9#bhT#iTWK[q5J2&?Y=Oo0`]YMj
%`B;5;?-#Y1Z<m&PY4F>U^-sFA)RaUNH_>[NYYsR(LP<SNB/;N,a-10ujM/T8:)tT$a[5E7Q:(<2!"S3&B18FA+RX37,"ASoW5&r"
%i@GO+BBBrU*R7R0<3<KU0p?"[j&oO^f?-+s;nVT)D]bu>Sn6P1WGCTEJGR_uk,OZV_ClBeJB#58.ja,]a5pM!=)R(>#m,\(\`Y>F
%1B*_GNF8.5$]&@0E<i4'>ic>3I0pNlF9J8i!B`!NBS!u@QFW6emD4lnZ*>B@:91W(6Gok;]ZmPM%_2;[35P'LP.sb`ju`8MmV$I`
%h&SiQK]0-KAaJ4XA;TUO4qR!#A.CS$L^c]Hr<-Bfha>SgNjOi*hqf<IrOO07:-AR@;4k-YDib)"$:/"'V.<'h3%.:hJ]uI=UEJEj
%Ym$)G</Snj(F4g9i.qTN3\(,D^T3EQ/Z#@9KHIcfnZ!Oq!bBfF0o7TR*%c%nU1QfH/->nED<c0uRtp_P?+f$6(]Jm3RrK,ak>9S,
%iZ.i.;T1%^i2QNNASLdZFPf&>*jQZS6X!08I7u?PAhSR_f]SF4mM^;BI;4S](qFc2#C5Ys/+J'AB]CXV>OK"R=tRJ"'=%6FEi?qX
%m132;g?ClW3uuDq!S&rC?qaN[o(dgk8!\l#\QY?b3i557\n7h5i)MW>;[>sSdKro+!MhWq<!t&(//S$%Q4lZl"hHQ#($98>R!<cS
%.^Q8(m[.8&rNSC`O.!$<(jW=r26ZlAO8X=U[eqg48m;'=G+3D>U[7f&P]?Du(/.m->=AcW_XB%bKc]GNe,lg@m?RhXCh_B9!n_>Q
%/lC[0cI#[+EUlh*F&i/f4,aLuiY"h4#Bc:28'6OA2"P:/Z.G6VhIWVt;f`G*]C!YQ[?>$;d*p-D!4G*!`O53s0^ZjsT3>&RP?)!C
%/2;]d&Y0J.<kW8p>utRf.0e>``c32b.5!,dHV,[Bja\i(4cAgReqEG93!O["AO.5'<2"b@$3OC"de@-[5)2`p,l]]#R24khOtgD"
%G#3J]FLJ[Ps*YMQgK*lRcL^68_\EQcJ,Wf4V$22i$l3[DRonD-+*el"$]2LnbtA!/1Z&q%c-t/uD1lS3fdk[$@@67'6NNAQdAck"
%L*EQiq^W=:.YO@b^rBEF3^A3F/PiL/kWjH,P?\E2U*G3%CdUXX.(]#CU&a/AScg23AQ)rJ<g(sA:Am3XgKE=tl)Ct[XrP;T<gC-[
%Nqid_L_d&Dq4T1mj$#iHr4!i\&mj"q)o?`'l;3XTaeAl`NhNJr&N2oLo*I\ER"LY@<XC\F):"A`ZE:%+Ac;?^BJ'e$i8PZfbAWt/
%SpB<Y(;t;C;8&SW-kOiHRHR;P%+S>(a&WPOqn3J.=cdoLs"USuD*q_JLrHaD[><a'4\1OTBt\sEphY]k6a3?HoR_TIMlZQX`&46I
%i/AF1O<S37jL^Go6$.or*@dc<65\7W/jhp)Zl^R7\i`tqN[h.Ektp$o-lX91J`oD^SGc%gWs&=i*#F^U0WlY%Ac9(saHq^^/b$]]
%2DZVR%32ITs/5_:JUU$1`q#(Wp93]C4otmPpQUJNiuE<^bF$TN-\<=ZPF`Ob94/fjgK&DmP:WK"(ND,p4;D<T0T@#fk8R2VD(DbN
%,#0;lJkq(/+=9n+U3D3O3nYRm'2I#ROE1d$i>*BV^qp/!.`D6taKlgu`@JF^i2gK9N2Z7JIcq*;D8o7e^/,7!Va:g=jSbiHhf]DC
%@b_G?/1rNGWC6sSX@%]/(_ecGq[_duW"9'l,'.H;lEW\!8W2:pp8JT*?lLPqK6A+^`)poG6]jgZE_!(pITd]0Bd!].X'<k\aG0G]
%a`Op-lA")7EG"d$-_e&op0r*"g?#K$?Zl6LKGU8d0)g<7G8_U0mk*]gG'4hPZC1G]^l:n<2ACr./T-j\)a*)deMOjlYc0h*@8>WW
%hg$8X#U6BJB/FKnEL6j9G,RcJQrd\c7NOp:=JuJVYA?teB[_dE4OeM!IG?'!=3Q;5c3Kb9a&!hs<F3f"C7V"t+tUq-P_ZdSWn.n5
%=mgMQC*S,^2q<82%cq+o.7D+ZOsci5&M7YRjFj+LRer&J.>T@C[adCnYG'QX-k?DGX5ub?9=j:?f'O<s_\=rIXa*.p$2)6cZm4tj
%2Y#$Z22BWhHYtE\k>!(:j^Eq%Qok:W6*8Q)oLs'0RUQ!J=_K#6>&Oq*<No18k;2ebXjXeCn^g]q"-LeOSiGBRI-G_l>ALAr_MX?R
%AAcCH,)d]_lscC+*rBe4`:.b,92MCk#3XuG?]F;$6Nr\RN0jEb.>08C:eVVl.(@7bM.9]*^pYfUM1o*<#)GOK8"f+.K;J?FR,*nf
%["'ib@0>LmVLNr:U@L!MXQp8CPN0#)f:9X5JKggNhnq&ekZ8&4Y.9+<hW4K]66)VKd]DfR5PGI4:q9ec/burXHf8V1i9/Zs:O4<F
%".+EC1ArbRI;g[N#*J/:<p&OnIl'F-A$S:9nUU,FQTbJ=TDR`\N4od2\"-M-MN&g!Tn95o]3K\tR+9XU(nsdr>9kb@OlX,"gSd&&
%)lK620+0c&^V_kVn)MiN6r^$paHuUtMhnXq._iF8(]"2$d[#8PhD`-He$%-Ms2mIGqttXpeQbPs[Y*2HHUiYG7&e81@&lDN.ihWg
%Qod/lX1ot1.bY2P=o->N0\W7/?\Ha)@/L?tL"9Z+YQ6UAhu294fkbgn_*VGR(7)f>(S.BV&f/c4#t8-i^.;^kaR<bfE*1IOS-a0F
%Yp?]E3n:\T6o9nLPe=1=>==FBq__M!rA[YMoFl9'3fZVrgIe'U1XGU0QY1g1`,8HTEm$[<N>0Y%;Qf7l\:1^Cj0Gii`(!ChSJqEP
%Zlsr##^6Un(L>8oQElEg/K;8X427Ip%R;p/\1^!FBE<ElJ#4:g@HG(;ZBLmBr$+0CKD6<)[)#/30*4N/-[tau!N<ZHBaI1?8hcOQ
%@$DDE"GW>Nctht=+@aSslkXKGg(IU/JK\hRK^!D'!B9tF.r*"Cjedp\^U@AA>Al6e*>eOJhL-L"a[m<A/lJdUk`h9b<iU"Q$VkBG
%0ga*d%K#c'cO0beeLQ#P[HGA(R*[==[f.!.8.2&$.D8>OREcBK,@)^qW@Xcp#IH@T3]J:8#e@cZqRdl^-L`)=^i?f3g"R\jS%;J8
%Ma_FLN='L(Zjf:qY.iC-8>jY"R93*0lap7-HW\cI]doi,M:'`u-10;X;>Q6Gc`rj`[:c-K2F=#B.K-'lm+,[>]JR*k9ufP=#4imA
%s6DA*71]bs/,/Gh%1!LqI37Mh64@%jl45ld$!J2:g>dB#06>m6ZaCH0GsFc:.hPkM=tBq6da+]_hM!KAL@^),rmf_)Sj/<bk2&g7
%[NH]<[H`)95TK;]9;8!%eu&H6lm2$O+m-S1i+.kSFanFfhtlt]OB%Sp.b&ch&8%^u@'c)Tkm:EL+%$N^,eBF:_c+UUoEM9.@798G
%<VLluH'?g7W57Bd1C6>/BPC2LD$/BMp:sJ&6nS/?+jX_qs((4kgk@38<Qb"-ilKa@!',5+\0(JdrLqKnR@jCN4]S@!ZMn^%0:#/#
%<)baf%lmgOGc"+m8OO8PoELWYDukeo-m1*3mY>CD6^QiuahsW"^2Yl7'7tupaq^+@g<"-=#VFc36mj=Ts2q5#R'b>*7kg6CVJZAH
%=Xl@6]p(!-l)W&X;/fE3lcYlD*FP;cmk&IaI\QRZCVsmF<2HGJSU7@Hr`YU'0L;G[?oZ'U7I7cmIun?>[p0XHSY#Qp3jj>]D6:j1
%^L7nO=1RNTi[S.GA?__,-YpL+oT%5/?\t5\+KD@]<Q@K'%:uFe=LsU)1MJ+pZjmWeOMf-oZ^kqLR74_=`f]QVLe3i?XUc_>Y6a#2
%VK!oQ!cX"!0'sH"RBe`On*JSZ&d[M1*7g?uCa43F<I'aW,;Q()C\I`.qe6["nrNhB,Q7DPs/W'#OSdS%:BlgWo9PpZ-HCN6:]<,o
%k4QKF<ZC4\r1>'hm#I*=oL#UUC:V2gAKsq7BG/"HU@]hcWFlk.bg#l)PWee/N^HjQ[-VoCU-Cr<S"cFi,(HYL/T:2HMJ8%\L^"#C
%dr]VG_r!oDM!RdqhWh12]raBp=`DptT2d'c!a8ftFaTBp*tWL&]2QO<SiuK_+?$tgE`rrI]@J'D(`X4Rk`GIm?cA_(<ei)NXa\6-
%7M$Gu*=9emdIT1T(pd8PV5\c-'1^Z,#&Q=IcD$ipO2iGt[jqQ+Ki4cG]#X`+0Uq)JcS-Gl/2%F?Zhm`_:6OL5PGHoa`NP4KatDT#
%X?-=-J.)Y3\<QtZ/,>?sZ"Pim\]MJt-7-KhE3:=0]Gb.&BtVj6UF]JJ*][;lm2Pmlf!%KgIN>sJ$N(Io^iZaUU2,_$9EbR8hZmu_
%6()E=K)F00A&1JeRSIH[MqYMRITkLGV#JeCXqfa[q9iEWg-Z9ZLd=F&C,*&ilD0/1?KAD7T+XiBE.P(sc%enZ5k;Y3qneRkI&n=`
%7Z"QC-+=sD-3lRb;dd_"js3iG^oBKX`1#??!@`@K)F,4B6K.617Mj8o;]g.s3(_G;?]Q]Rs2<J$]l<3oV]I62Vip>@ZM]mu+.H:4
%["%'Hr!kGA!MpS%ffZ2G@]7.3G=]oYUnWF`;FSLe)'\E[mhH!hJ6c#X@JDod$WTT%VfcJ/cq=8g-3m_#!Xk5=8%3U2K+PWG?-*4b
%f`V*HaXLQ,P9MR'N=N-l(4PAN+NIXoGO$[l!N&SDOnFQkGH/Ed1-k@9DB9kkO+Kt>^&@)HHtY%0jjo#5-&KKEBi.ZF<l?i.!b)gC
%POJ,l^qkC8=`@MC@WZ'8]=D7_ZI=G,^j;ecXt6BMb@4ZXX/q++iSu3&=D2\2f2hGJ=GJeZU+2':Rahr8^;;0Brr\=''7N$LSE0=r
%ZNfEb3S2s$6^o:r!6sEg/CEKGNi;ugD.T6&HkP_0XW2QC8e=A"2>rWs>D97L;6)jIE)=_2Cj9hYX&GG+KB1NNc#7eVWCdg$ejdIj
%4bER%o]qdoCg0!ea`!a2Lp(j/[.0eV1C-(ZLq>=[^31c##q?e&1g:K"CjPh!qRO$[n:hck/-gu^-\%li-BDha?g]c)^@#G&TLq^R
%O_(PFjL15Nd(X8&_q*u$Bg=F]PZh`fMNV;Oc6L^])!=^rAj=3*Eq5-S8."13i7mZm(Eb,_'#nWXe_5MoJm)s35#J=p$&(o<b&6j!
%6jPL_/SfsPn5CW$Nek5&$PeG6(@Ipm+C1;T%BfScQ+.kBW`Q&GJTNMPKqFC3k;^X@a]HDK:k-4ek;(&m*MP8T?MAe.3VX"/Z,.j2
%EOI6SV48b'o?k0sT/\YUD!93G+u1rt6l$hl;UEP`6-Q8SO,Fh5JJ:6.%3OSnDe8/HI$>;.hciOZlN>MZ!I:#X]s`Y,(@A=LkB.O+
%R!2'%;)-3]Wnm"l3tjY\c(_KfoRpaH)dX=LLsR@K<!sl!07X:Z\r<X$Ka&0@ed=$Kd4^Dm)[@70ntF&;:K+8l&Ro/ae.!<3H3?W"
%25C%.fAVK3cris5'8,l>^0=)D5mZ$/8UV&QOqDlJM"mYn00$*f=gC)n330#dk9QDi$=UE%NK,SKn^:[M&ONZj3g#!'Zk/]JjL+aR
%pc9fXa-pnTjWfk+qEd6d'uft`rS2%YAaXjAO&CdjeY6;T[8VcS&Q]-4<C5.VYJ&fj!=0TY[+HKR4et?/Drdt#dpB_2k"K5F6lYBu
%3G?oPDN#^ZWYB#!YH:@=hJm,R[?lL1@iU:35_[2\64$,p`h+uP5nMcc'Hk)W$ROe)oWLX\Nt1]l>t`u2nfIIWm@mJc2t%J%E>LQL
%nG9:I%.:m81Oacs,eDO8*(5?G`l[&dK"F?"IsIFQf#5@r&@=05\PI'\ILn5Aj=Z:tH!HE-"fZ!R6YDSf:D7bE%g'RU[t`gU7>XaW
%.s(>Q"b^i$=]2F['L37Op5X7pDSJQ@p<k1/c$C9!:I1d^DE[sn[5+hjDB%F#]g`9r/DNBu[moN\A8`4T,M@*O%33Yh6,G.5'%5dt
%roZHG"Yq;SR;`1Z=.(3J$Pj6[IkI]`.bq;<qVBI_&II7=I0^`4b'u_`I<I*3b>uJ-["7T]FcUlJfe?i&Wl7YA3WX'fQsU`:MV.$#
%ntt$>q@etSR7(<&fn@43TP7&790Q2oP'_NpYl8rgD)Us\f9N/0l4H6F\Y[1TEEr2-JG$G=iFNlc3hZ\?3NXlV8g*U9Za3*I[`\2b
%Waqk4rE>5$U@=@DcE4?AC`t00'+"i"L'b?)pB"g+<tF8t]si7dH\=7HLrufMSh\^Sc5n6'nB+/<X507LMR@$nN\J#0E_G<`6^BE,
%XnTcAQ@V8q^qc%KkfY8*VREJp?_OC7b&VW6bo*TN&.+B=Q^]5Rcr.**.3C";&HQ/QVSI**G2*/I3^@XL%V(RQXi%E$gJ5\,N[g'/
%/R^g2^UlgBl'VdG7K$pC]'h<U-(eHdRQrE=?SRdK!IB*s7=,STX,3n`d[DV55FRlcg+1E:<2^h`m^&91X1J#YD5-(EZKE9)UUQF8
%+*BYk8bBi4YAuXq;hTsedt(&#>DBE8/-Q)^]ng)91#07f9`DHeM!Wljm[&AIKc[7(?#<%SN,5asQ;1k?\hSm6jSob@'U?1KTQ7<f
%QLSR/E8S=%c*cANZ3TS->.<]O7)),ePW,EbpA:[s/HP)_n.G+;[Ea$@D/8eSN\FGV;oa?&a,[YN&]mEGP+re05)\[_-D:74=E\[G
%MR^qD`\FYAY.F[Pmu]%a9D$Cr`SEqWCTi+n#?*gA3dnILY]__,eZaZJT=hRaYN!-ijo*/AY^j[k&:IbX>>(<Q*R'<tm,2qp3d(ks
%@!Z"6%3h.C:#Cut@/3UXlltT$?@(Qo6[)KaKZ0BdmU4%&(D*=Xd_^RX_A(_?M:$oq*i4S^2fAqR.$REtX=%WbH[rSW4XNum[K#<:
%2_4b:'If+:f07&r',V(6:05rLCCVb&!e]FIkg*r4-85^6&1/g4,5/eRk-S^+V4D-uRjSR\7)9"l)pQ84]OnD1?&c2qm^19Sl;(Yg
%42L\Jjr.>0R&blDbhUcTA'0?+S8$$SiT\lH='u(+.r-_EJ+EaMpoSf)(,3E'Bc;#kdd"M-=s'k.]:+$s'KZ&fM`,/qVIUlJX8"ZF
%D1%G[L,L5WYNJ'2T=)eWjsuKN;/9(TZNoI$^I&jOj^4)O6j98<9>=nd2^@RC\_aB_\R'm:VX'o=85HdarsW(KRNl$(d!4"RDP?1g
%2!-:Q2LdJLoS6I64*#*nhUa#I77cc^r)LoQJ$P3je+'53/eR)NEa!s6M>7$c5@d$1LsSImO`7oj%Y#Wl4@jp=/4oXb"Aud3NkBNA
%$=^VGiOT`K0PMtA=5XWb1$VAXN>pp*o=/l[U'.9KF'e<lI.$r:PI3(rB2[),8%I.>@C6:<1mJgP;1G\3+!H9[rpj4dkFg*T1n/T[
%j,fS&$G:>C]JQEa1n0o<GI6jB>1RXSn&/&C:8ju!1h@IT[nj-G;A`W2"c00AH=WM#l6JUK%iJ2_fXZB,TKpr'Qpp>=TR\7LaDuqV
%BT]mmh#MI(Of9>(gjFCgeidW$HuOY*Wnnc'ZTb.p<'BkS6V/RRWA(Ngj(`kYr'5&_*]q(LF3J8TJ$f_M#VCb@Kl-F-"cPQ.aMgSc
%P%3>)"31oT@:['`lJXV[#D\-1_1A>UVVFkrYFX[qq&q07,2CLm"q#I39N$Z`2km"<a&)qE,El4R#jhq\"'(!,\];GAs!#rM3:`j<
%fn=p_*PaDZW^]%dTk1P=/0[.S6Ie'&3R$le#X22$kgbKaimn+lG;(huM!Rd:BCA.)okFi#o-J/4)*F7N7*beob!0!o?N-[NA<dDo
%p=BI/q)e!%kMpj:d[7_*^=V"Afl/KtrtBtc%bl)#Cm>f2+1Y05Gi8%G;8_gP[&_64hp%L@hk!lc8PA;L&Q.f*KBd[PGCA_T6`"m&
%/<3qtY!U11<O5>Jl*[B>/R$`61eBb#s4apG9N8MV?,8S/euC4^;n<gV`E%9mou7hPRI*3``\PXARmmGun]3&fWbSJl'CIm+jm"m$
%_EnjW;4W0h5I=0Z6NNbSc>krYksp'#g7Yk1685h:I=[U.1UW@c*eBGo?LI+X`&j&C'R(4)rJW:]*.[2#Bc<(<TIi*^^?qjCC?=gJ
%jg*Rb4,p>jD*(:]?O+8V/\R=]P@'>M9^_#bCcT8%iN-5;7ML%'6rWOe^`n5^Htbi#o*T]7?s`(hs1A=D`*$7J6IJaO=nY[dC:t97
%YHU5sDt`='&d1Lj]XB>l[%Z74Z&%n]\ioYNM58?sM%;]2]g$l3?JrS#).HW;>W>ALj9hE@E4EQKh6X[^T;c1!OC>[AhFStiHjRQp
%^&l8,[\#IGlBe#T0+.k<ns*2"kdc[LL0.f/Wsamt=8I<Q]GM2AcZa)+=$KsLmE]rM$n-POTJ7++iO&W!X''<JDlnRd(@J8^$"7m=
%-`W7XeE)V\L_D#5p8jA?;<[WmP)/rJ74O8=*$-j2r"<@!Y-^Z2q$84n,-@*9LF@d69`'V%V&3G+)2cAZe!BE:djOm_)[si&W?Ff`
%Dc*M5XHtF\\I1L$==Zbe>A<d.3HM4DnKW9Sg`:\7/</M&](+2t\`F.+"MdEEFmVnLr\Rb24'b8C][AbK8@c7IkA!8Z87E<.juPq`
%lCQ$_a.9-:o9*5i<sV@8S"+0[RZ2K?(A=f2/>IJ_pU^N(M@dY0=L)SGf<69:+SssQpak1=TON\IG;fh]rRB_`H\l^seipr?&G/"C
%g\I\(6$XZ0jKnf#S4Q*Rh!L]tcr7dgI4+nr$fX:OFRE$iU;+\QeEtq%_.PYH@GZXmh.]&!3iZX3N-Sb.m;Z^\qj>t.:E"_Gi$F>L
%\g\-F`,7eCdkEU90>i]kP<nSQOn]2JVJEq,gP\S@YhZEXR+E*`mtl>[,*qFZ]BnC^n0\>Bar'es+pUQ?3Rr9L&LK1V*QD9Fqk@d?
%[<4EA0Ab1h*CQVlFZh?1dR#+I-Cijpe9:+F(#d)O[SWEt,:SDZDs+P4#2iNVll`SYl"3<$:S-GiSWOr''mfBdWl=G2endk),!l3/
%+K<>e,!1rkjB_,/0opXh,<)/j,gnL9l-^nj445>T448a*h-:n>Q*PNZrsTU0M!jFi!sNl/`q]BnQ$RQekJ?CG[[Q3WSNI'q?Hm&>
%c5AT>41p:Zr?^!hP>#=@3NJZsmUJJ&Ot4[)N80uj1rMH$X(6$V4H#$;];LR:4\qW$d4FY\l4GB?C[2:X3AMlS75NuHV2KROjpjHo
%f?f`L`D!Si3iIf83XBYhgL<&$oeHU:'4!(bYc@!>>>`jViIflXd^(h4BM6q=GMCZ\,(LN"<!<RS:kR/jRKG3PbAa-bO_M*DkgHpE
%pMR1]GEZ[DRrgPFVR3=];L#Q&YHR@T8QubN2&thm41[]'dnN\]>^qPaO@)o_n/6LuE*e@mDrEJkKVT0!9K@&0bkaC_G*;dKAQ#0t
%d>MP;4TS7g,"mXQc^*Fj@F_tccuMO1+?JgSfWF_fWfZr^B![^[H;8U]X8$_l&W_%i`"m$[OS2%r/hUo+8F%JWmY%;7\iXU*)9XS`
%e5P4hj1/Zl>2&pmX?A9jqcT=pE*b2jjaAtjPGRs?0)c1a@Od94);R)2,I4ej^a-R*3(NB[g<+Qlm>it>0@KB4e!Qq$o.kUK8Z2!:
%7:.lc^ZQ"7NZ.ji)Psk9N6!^h-Cj5)c!(Go/Aa"Ja13RO#G9\W#!5\VV7G52nS$hD,4JPg3p2A!&;*VZepm#6!;#(?IsR.mD9p.\
%ZEDpUOj#%VI[->t6Oj^a1^C<>^KX;bS^mXu&3oaLp*7.[a"sW:9nAiCEVT]O@C2MoJ$ZNU8VfX0O:n?:?!$E-a;BBGa^lD[p#=f?
%e'VGgqfjIEZra&^76::`Nq4CM]kE$#<HW>EJoW:48=Ji$PV?<4W1\ad34A6(1kgT*G4N_Sk,GaYEdHOO]("QVF[)T]_?@IW>;X0:
%S6ejc_G";+r?Ak'PRoDD-_Bu]9^:ImS?aukgbglBH6Tn.Pi"Un=M'`]o^eZH^@gEHW?VPQ'.%Q!>rtp'3^OCPPAS??([^Jn5qiu6
%HFWnKr;>UeLH<;Jc_l(XY.@#"7Hb;sL/=5Eos2slPC*h5JoF(p[hWUl#XQfLj`hhG;a[L:IQAXl21ut$-JIi1K"n^^Fk/EgA#44>
%-P?0pnt6Z+E*e`r_5l?O<6k@j)[^<h5qm4KQBJlWa4(]A=:AFMMHgaDZ&Xp\Y#eHoHMaU$_F.^+VMb%i/Xndf&>`:bGrb>F3l1mX
%lNi.#13J8dH;,ERDHL5TE]qfI*MM?gP&aJOHC/-B,6WPnFD17>(-JIa?nIW(C8opF1g`//BO#MSi4718JtS]W3EcK[I;KK%,I)Q=
%ZGV<(;Z.UFk7RRT4h>JNU!QX"0*f*/A5T6HY)Y2$pc?7l1t<3'67C/\d8kl\6J[\bUO2=Ffj3j>N_j:)^?D<aLcqMFX<Z4f87D%R
%5O9I`KJO%h-b@?:X\aRlao,q0>fOE6pF*=!8EEJ/LdLe$H>Z\PW;L!DDm^D?:(E^B_DdYMk>\^Y$6m$9PeoC2P.-t85_%P]U'@UD
%U9$'b7ulp!!t1XE;oPQ8=2Nr4]P_Q"W]-R/"]$M$3W!%8(;OZdCB0\emLb"*kWq+rh(?Sl`4I$YH1d1OmbU"a\uY;F.$>^Lcoh5?
%R1t%'Md.k8(l8ei?orJZ+iQMmoV`Z8n1@cMD8AY%M\__aN:31A*YFp(#MF_f$ZW9-Fq\kc,Dou97p*h0Dsu$i>OgXE;P;D9>L`Lq
%NG3I6TWCbe5+S@uPP;/NUG-$DkUAdq0"IKhffgmSHAsd0`2.nj!fM-3&cmBVJ4E#Jks..p^$*t>Xec?#-m>0&4`0S]UjAs`C?\nl
%/S4Kn5[!Xbmn%Fm<V!UNGXi,rE-ZEJ[^tBQQ"#fLVp^8l&Hk89mKPK+NfY>aX+TQ"YuI^`R#=G^HQr]YonZ-_3fkp,n4U%!icZ$@
%S0O!U>YA>JrU2A$/JC+OTN3,aZ_n.!0cgi4r:Mmffb+&6N9Wi$Ta(`u*Y5Pb*^Lb_Q<-"++6K8b$0(8ce/X3gkWt>+\cl@g>K1KT
%pWAcpE0G@7GZF:sP.B'<j+_!6>%hIjl7'i93QNXCQ0<ke7-oq?*c0ZWK%Tc[D]3M=&`o]&(lrkiq$pWR;4bA"p5ac.@pb9e"Ap3N
%MU%YaWBO2@HC`rGU&^5N\^*N,PXd-T7qWe41$0l[4`iIFG(lc@Pc'Z_,5V%7f&O>q0$6Pr&5b'hQ?JmQ0MfY!HQN2PFfb5a^:Xo[
%p0GcJP)iF3g&+M2/+a2]omL`s>7fkh:X^Wl:6sR]5s^Uq>]_m?VDcJ8"@4(V,[?GoXfUdP^j0\0!NLTe+2X8RVpce\8gDfeFW0hD
%?Qgh*_3:k;Z<Lr%>aFX[THKee()laNU*a`Dl[:C15&$@R;CcckR`G+]e!5*pODb8)U!0rh`&`]'VPAA0qotulpM*RO8:*Vdg`]16
%[rPVB1;Y,[)1U_7;-:'f/?Dh`kAdugkt7bar)d7V+=5\[9b0hLb."AH`!P?[5nl&h:-)]<_.H<95R>8hKQ`[i4fO*_:_2[M'aEm'
%UldLmd;F06+hVPA?2*VBL3N6gB*\K[l'LBRRtYC-%;\]/n#!PCX%cOXGH'G?9*dg8=i]LDZ)@TfXNiU'.$L=T/RelXE=k>T$?b\%
%B;D#s:j+M*b)Sq.n87UbXrTiYB[N[X]hdi1I:glE)7Sg1`98t.+V1m"7)@8]:g*mU:3%+^5kQrY_(Yt28DU%<h(\d8^1WC3XdTdS
%Q90GG\3<^_LurM%O$gIk.NUu6A50+Agu%SQZ"&@K#jg-4?u!rclP95$[D0W1RhO0#VKm45[d3KD"r1"VQFfU&FRgc]Lto#*^$OKi
%cijZYc/D)S8+cMp;hmkbL-Ym&_HqOA"nNJLR+`'"\&MN@!9*<tN7k<l5B`#RIQ(]VN4b>qhl1VO1lPY8,q1?==m1VdK^3]N[Kp<#
%_YuV,A8\Ff8:Kj%g4cFcWa8uk(**1P]m&Yj]Mp'NQ.^P'LuR1C?S^.5T<:1KDP6P0:")X44W%)#='-%R:#qaa\&l-/e$b/EVWIO)
%B.]pMKR8'U0'R#iY!:O05(H<ZN"ScHUQ7cI#LCk);gV6t6R_HX2En5mpns6dYT"H0kB9SR-<3huHR=`Z*:gQLVhla3D508XLDks[
%1:Q&Z<o(emE8_E)GT2@p0E@+ff&n7V3da&^9u1LO@*7%hWG3F#Ng!X]re]F,r]&>An/d2/`h6fl$\<',St!h*(a+cdf71klBLC#u
%WNCN9geqr=;ST!$]f@m/fUG/I@;M9,7pERt&B-+^'^ni=,*[:BC>F2^qc8<p/EEkf=g)VFP(g!f4(*NU)d3gFf0m;(U<?G7RCkV_
%HeNd6E'taX:YID>EJrRK`,q"nNcuL`4o`:/76dD`SnL)u\h:*6>jq<0lZ[hF`'1q2s"jf%PB$sZN?*8.KI$DOnrg2"/_!>ad_\]j
%"_I$QQaL83:8"uNK:721$%S#sp0>]$)]`:&V''Ko/NNe!Lu1o@dFgo'86=J%p^Bk0G`>mH:<t%(o2\,<9.ARhC'2,j;pP,ngN&4?
%dJa/GK_<c:Gua':1YPZ]i\KU[ckp6?*T7o+UTLX>lkVAjk@7*,X.2(B.a@f-g5fMa*>QE?bLF4N\t_=C%1ObO[@+P<6jAacd%UQK
%+D)#Lm^F_2<";&](U3=@RM;g_@'527LIYU9A`A+3)>]qd%Fu^^frl4[5+/"VG)c+?cF^b%7%\QMQutss2BajTH:c&>HUuh8If`"`
%@iQmqmrh-KPC@+L-Q@K)A#6c+l&hhbgK6^a8PPXPV(9@dKbQJpH0)naLTlZ=W=rSCo^>&<8I?]h-#tCpFe:s+hm@6Xi[bcVUMiYn
%cZTQB+!R6WrE_\=]&.-uCjVOT0<=;KkU(M2""l68J\:`q(QZ?7-%l1B"a'&pj?Pb19aFdG2c3]bT!S'Bk8EYF%(-;EN*Z+Oaof>7
%'S`\mpX*69ZdkA/*\/VbH-"$g35ot2V+'>k5WaFYV9N/#5;S9*G,]:3<$dA,2j=MYM9tk">s2W"-Zm*Df54"adWPSeIKju-kL?Kk
%K@5?/odQZn5?9+?g,)DqX"+@[p\&\IAS+@(;sk;]WV""ligr;qb!4(;(?@gtDtpmO#SGk3:@rF!Z]^CfD(eP]H]S%c7Dg>O=lM_J
%m;Yd=Wfu17Uk(PC3(;+)fB\[pN$=fj5g,NM(46<h0/kp4I8$lsDMd\CIW@;Y%[CQ3p>kZ8[N1L5?+t4&<9d1>N5"]kOkT7hc?c]f
%nJ6r:;/"$Q_K^FK'%cH6n*\T%;l2na-Md(UjE+"T#^"3g2#f(36?:X)'?+O-NUAi?X&%.WBuTCd2(+CUai#045dduuJ4?)'pif3V
%g?X;V4K^p_`IXo=fb]W<-ulk.kHE7:7g*faa46j<C6RFC"DhFoXA'&c&CW6j(LRTWafIWt[OWOBBTnk`@%p&fYuthC9d4#c"BDX"
%Ah#)#5%(D&f4Sr`hEg^p[,4UL")X3-8%\,dhCkSQ-L&H+2Vn_Ha]%eUC#*l9Et+WtaYe@NU+Q5#p+`NA/o>X_U`]rgY%(1h;^^gX
%KjIjSgu%3rT1n<5*%dqq"];?bkn0&*E?M;XZ4I;n4N]\2-b4gH=8LGp+OVVL;fJFDG.k#aeL.mqb[)r&*WD0Fkh^hTTB*8F.o5ME
%K]hEJ**;u'TMK1eoHVS/3MdsK19[.7eSi\Nk`^VN8D((4[u+=\FGNJ[oH:21Z4sRcjBl.X.]Z?W>&jq![NK@Gogp;8O&PN0[KcRR
%n+7IQpPL)FXt\O8'9Rm4&H*@Zd5Z2]%pS[o9!Q!a_J@qbdjGa_7%oX7abA1k\W!<4dd**K5gIb_ip"HHl'(!h<0'52Br810dg>rV
%06p\W`k%Ml9=KQ,9d+1B8-)+#'9OuN#(27@*&7tZ%[mnd6H1.fh$\RJk?[@bU-HE0h0fD5-W<1.2`8eAEClfG^[Fr(1.a2C[QYqC
%\]?Xb]!YOT\qqQ0OL&3^m\m4En`43c?TIpH>TFH5b&BW=X$t"_N!LLP'kWNR+'K8gV0!"WI:fmh<o$Z^T[g'sdAB(.6r<5G^"H)H
%m0cB3]kLJ7>_hed7fg]rO+&N9Y2OO<'_?UefW5`^gnL")/t^6$S<66^AseY5J&\dP?]*sVE(>q6*F[_,E5[0KO%.[SSX&Rfng=S9
%#3C-Z3KR>@@epWMaWSno++[,A_ESJTYMS+D]n65S+OJ.)PcqNgWBV"HFAP,?m%lf/I=EM-q._BWH`k^pis21k1kq=^&i`rX&>Era
%/XfpdM'^l5k*kbhR*R>;Rd`<0:,F]??F.UY7%2rQ:R(0u?(!%S6_>&RhVOqs.oA'm.e^1"hI][)8X5(q:0Io7J["VdS?sXqTt@&X
%Q=;M-hbd3Ii9=]$$9W0B16Okr+K*>R[/Z*H(>Fem1L8AUc1A+*%-RF.]mjhN/hJUMmJWZJA7F,I_L2!?W6:,U?-iXLE.N5G/_&&c
%O4*_&aJUTjb&golQHRLX[sTR[6+8La'b]?nSQqj6f$3:VMf(Q(ZPb33C\@+]n#4JkT<3>r\AO_#h@q>[cUE6)GIjSVQLGsVr+DR5
%/8*_l/GsI(cnZ%mkSe]KQ[7ZGTE3JQLOCfG%p-j\+u/Drg&J`.DJXq@+FG-8!+afVku-rlfe+kRVF'WpTuU=%$IKp'\IBI=@>n?-
%juKk9K=#U7P65CnQZ7b6Epf^1_X`MT+_1@,BHbI*5motWM^K&d(*@S&Go09L2;EPA%C[EBa;M?N"#RBdm4CKAc=.pWMTA67ZOI6l
%TM6an:(F5(25jmGge534\b99pi%rP9)_^E/c9\&kbMM@nqo/9XhDYT#Z'D@?bTshd\.3OX)`63mFc`qHciT;IK>qg9/*?H5rQ-Cs
%8@]B?J*4o*2J<Xk#dAFuC?Yu3%@XTl_5,#Mr7&/@"!OHSIV91nJgUgi,r5)6)i@rW39JB[%^U4bbq06#/Rs5(fEVigP-Ci`p2OQ=
%&K22"c8".o)n$>^n>*Quo'U'-MKRPhV-CA""RN'!)Dn1bMgV^hjKKcg@ljO,4e!,9at+f`i=3L.[t@.`ShFn)1_:kK\+?l\9d@"F
%i>\JETW&Nl/qm&V>B`-=7VI*(HaepFrl)F/G.Jd=JbFDD+/TVgIrDpL=ecem2j`&pWacKNHL=&Pg=iu(hnXG[43KPNcr\1O\4iKM
%j\^(n)`3hpBj7dg?p@m8Zp9A82J=8N[Qt9ds1bfherf!ITtLL,__tTmYWF(D1hC.+#[ec(dKbP<i<2-4K<p[_Iigk3e4:jEh9n2E
%1Fl<8T?-cj(!^^/Y)u"SEb2NM9uHN2*F5_Q6)#h-*8,Rg!q!YYiU,(.3Yo(0N-r5ks0b"*$5;-,:dl5i3OY=e-O_,2?MY/uJsVEs
%KjAZ+\]Ak/bmm!#41R6s.Q[Hcf$DcK(Qnr=annU\>7_4M+<Sc4)`rIImQP/4hFE32NPZ9fib&3OA+\Q*eci>YOo$k&(dGA\j1V)k
%fm^f$)>bFX/'?)P^nkN3`YucFL#rC`/.sG1(ZA"Kp3L+Tr8E'Nd;0LX<e8D1DVea[:4.Uii9UAbG8Zh1(G5u3,?L]nKLDSqY&4dN
%0Q.[$#UgiQ+$KD/cR8d$i-8r%VRIX'!(4+hj4TU',3q>n0YT\`B8Sgf_(X)E1_k\%nsj@f"i:W6e3e.lMjprFBO&aMV%.q4;I:hp
%0eJlD4(=0rs.S([7UK[lj)kt3Smq<q,m<duF@\/koL0O:"(&HfH&DZNGpA6]b/4*ObIRsj`C2OYA>#$V2EX-?*VsOB!FCH9R9T<;
%,Po&eEqp?@0C7YN>I4#t#go"5aoHiY7Lji87WVhf!k'\]p:Nn&W-"qC17-R`0LfCh&^W_r'k&*Y_SgS;c5NosH1GYlZgr-(oS!H0
%#hf'0,fl;4U5W*5^#8qO/I`k;(CH)6GYRB/:q#hG]i`qJ-s1H0$XuNHqX=).(3t2#!.!NtPpULu"M$m+nBA7;]EV>7;h2Nb+TXjs
%b"dbS(Yfg@@AV%ljFq!/*&/NeE%PU8A8nMNqq`>;]Oa-*rF7bRXMKFo\+#fI(Y0sfnQPH!,;3R<BTc7g\Z:n;aNL2%DM?k,P"+Md
%F.9T?jTNTEMe0;>Fhoq#?EC-6GNs%P?R=c$f-C;4+YW!p%XG<%'KKPA#`UY2neM8sMMu0.Ka!2&d^bte(4!=GMnEedh/gXFk=ffO
%+T^t0Mp0<cEe0te#8:jhi7%G+3f!R="()IfM@tLc!6<5]6<@LqN@[8GT]nP<:-.`qq?CuteqZ"t!VZ(G\A_d:Ku76R.)9.JS_%>S
%N<TE3WTag*MOeGip,Or20olf`WKuR-Nf7X^8ifB6dFp9ir/87eE*Yub>&Vp79080R9[?0gbHf\QhIMl!#gB/.$N?H&(%E=/#!F>#
%Ol]r/J:gRoU*p<DIVmD&d8RQrVO!uqQta(OeC@l9=b7Cpr1\n5)d3'#\W`G>2<ed)[GOtf#&n*-[4md\bso&fDRr>O%lVMQV;k$U
%Imec46'\SM'Le:$mjY_rb(kj):^X[lK?uQ#&uAi!`03jN-'0;d`b?)=.cSE(_:"_4_K'Ku.Rf+]C?Lg8!lrHjkN4?cAYqY'XiYD.
%%oj9W:8X;NbCr(Wh"gk]Gt#?"1r\sbPCGLO*.-kL[X$5qT%2dqY^f3^f%L8L2UL\UlnQe;[ZX?2%O<=o7M$0\r!9L<%9Knd1+5R3
%,?GVp.+8YLEf]T9_MVIHodI,BU"b^0fEPJ+)I33TTp[ks=q5Xa@0lYIg:Ttan/RmJ5L<8,N^@g]Qkf!.[!F2OY_)J@'X\@DYu\`-
%b697*96ZqWc#6[,djf+DQQtX.+\F=8*?<H`=50uq3[5kLp"YKUU>E;Ud#;]_IkUbo-2ci"S14d_Is=mp[s#h%N-pRgVLRoR'mHk?
%a53DNR)5j^Mr-U461:sJ\lW.2&g<'G'm/g[1m'*\'of/.AX^i(<M.4$FWN071+:bpTi7>:Z:PIMnmqjY!ptuu,&H]`%7N`tkjcdP
%]49HY0]_;q$aB@VLmYP''+;Nh&'s8P-$YsF!PiA7S'WJadO"rO`U,&d:0>ZZ):t`V(NTsR[n"-id^m2$VU7'XOC3EQ$Y5U4_F9_b
%G6ed;gt3U,cF>2FhsM4qgtU=Sl>XXLG21uEn"\Ae?[B[:mQnl+8l473)\8qZ)@m?F*MLHj-'/qf7fIdh<lD!i%7M0I.aXM:nH>iO
%?'IGGlVXT6ggo5F[\L$>7*G68K1/Hnp?:O7cPK!b$gs*i,a_aU.3cX*,dH#KiMO20KNX3I[^?4T'R.V"QsqpoEQHPaEW*H5]FV*i
%RuufZ;dNVUj*hPW`@6c:15tKn0^]2UN:J_Tb1M[).PJ\I"c9uam"+g";HK0d4YM+-Cm:u.OJ^(0H]3h'[RIf2`4D-d_J-`f6iV)r
%(l1?'\9&kX^'%;Rh'<Pq*e?e,RAS+@(L--8=KE/D_+HAe`J@;7l/g[+3(P\U[;aV@l.Hj9)=ch(`lg$qe!>jD&BHNrpHs,gkQ#;W
%QXQ"(qLb&?k.q8:o-2Ld!r6CEi?iS0/eK\BXLOQ6UMm3m#QHiG9f4+L5T&Uf'n#M<`-A6TS6W/n1+Z7[ZF'TTai4mZ:XGgSRrSsi
%O:"C!Q4"&qdQ*Dg349'OA/>c]j#A8:^Dso0a=deUCZLgj@JK(nI[SePKlEB`89%P_i=,d\#<*URqiN=DV+F]*SXp=1d;K3U#V%&j
%B$<IDIEfm97K2f;e5I.h\^HOS-^JlIEk\iQQi"jnE[e(!;M"Hee/<$\X\"%'Yj__<J^M[G_M@'ZfrGlUg2]d_StVL[L\\NVXglnF
%+56I1\KmL"<-[bi8o2nJe"',VS:r>.?+D2sd(S!n-<\d+.>EN50$jhbPl/2p1Q:Ud]6*[:^D.Xjk*m=T^]8r(iu.,SMCtX1]/L'P
%Lc`VOUa,baT2C^#oWPmI.*B1m7W[i8()2gHWd3hb=-1Pj'HQ#^D!HG(#Tk'!WO(/ml@$^,%7Pj(]j:%Hg4//lZm<rqL=>8@h#KpT
%GAe1k9`=:/gcK$U#P8maAOn&ocTFh9D!nu;mX)8(aWK[%CLtXpjT6a]Q=c'_R780M&tfFJQa[6@n'3?R/R8,"Wn]6G4PjW`pq)%3
%>t.-JrT6F`&_4oDhnFC2iMZV.LR14h55f\RIJ8d$io-6%:Y/r\TDj/N^:o$el0He_f@/3lbEm-Chl_IX5Fk!O?GCsdnp3HIrU\4I
%p`'./rZ<1&55\+#rZ>W^!j)~>
%AI9_PrivateDataEnd
