%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: layersize2.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: weinan
%%CreationDate: 12/31/2015
%%BoundingBox: 0 0 429 358
%%HiResBoundingBox: 0 0 428.8000 357.3334
%%CropBox: 0 0 428.8000 357.3334
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 108 8
%%BeginData: 12243 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDA9FF7D76A852A87D7DA87DFFA8527D7D7C7DA87D
%A852FFA7527DFFA8FFA8A852FFA8FFA8FFA8FFA8FFA8FD05FFA8FFA8FFFF
%FFA8FF7DFFFFA852A87D7DA87D7DA852A8FD3DFF527DA8277D7D525252FF
%7D5252A727527D525252FFA827527D527D5252527D7D7DFD0552A87D7D7D
%27A87D7D7D527DFFA8527D52A7FFA852A1A827A8277D5252A8FD3DFFA852
%527D52527D2727FF7D277D5252527D525252FF7D52A852527D52FF7D7D7C
%527D7D527D7DFD0452A85252FF7D277DFF7D275276FFFFCF527DA8FD0752
%FD3DFF7DA8A8FFA8A8A8FF7DFFA8FFA8A87DA8A8FFFFA8FFFFA8FFA8A8A8
%FFFFFFA87DA8FFA8FFA8FFA8A87DA8A8FFA87DA8A8A8FFA87DA8A8A8FF7D
%7DA8A77DFF7DA8FF7DA8FD2CFFA8CFA8A8A8CAA8A8A8CAFD07A8FFA8CFA8
%FFA8CAA8FFA8CFA8FFA8FFA8FFA8A8A8CAA8CFA8FFA8CFA8CFA8CFA8FFA8
%CFA8FFA8FFA8FFA8A8A8FFA8CAA8FFA8CFA8FFA8A8A8FFA8CAA8FFA8FFA8
%FFA8CFFD05A8CAA8A8A8CAA8A8A8CAA8A8A8FD1AFFA87DA8FFA8CFA8FFA8
%CFA8FFA8FFA8A8A8CFA8FFA8CFA8FFA8CFA8FFA8A1A8FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8
%FFA8FF7DA8A8FFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FFA8FFA8
%FF7DA8FD1BFF7DFD0DFFA8FD0DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFFFA8A8FD1BFF
%A8FD1CFF7DFD20A8CFFD1FA8CAA8A87DFFA8FD1CFF7DFD0DFFA8FD0DFFA8
%A8FD20FFA8FFFFFFA8A8CFFD0DFFCAFD05FFCFFFFFFFA8FFA8FFFFA8A8CF
%A8FD1AFFA8A8FD1CFFA8FFCABCCAFFFFFFCABBCAFFFFFFA87DA8A87DA87D
%FF7CCAA87DA8A8A8FF7DFFA152A8FFA8527CCA7DA8A87D7DA1FFA7A8A87D
%FFA8527DFFFD06A85252527D52FFA8FFA8FD1CFF7DFD0DFFA8FD0DFFA8A8
%AFB5FCB5C9CAA7B5FCB5AFFFFF7D527D277D527D527D52527C52527D2727
%517D52FFA87D52527D7D277DFD05527D517D527D527DFF522752527C7D7D
%527D527C7DFD04A8FD1AFFA8A8FD1CFFA8FFCABCCAFFFFFFCABCCAFFFFFF
%7D527D7DA87D7D7D52FD057D527D52A87C52A8FF52527CA152527DA87DA8
%FD047DA87D7D527DFF7C5252A87D7D52A87DA1A8A8A8FFA8FD1CFF7DFD1B
%FFA8A8FD0DFF7D7DFFFFFFA8FF7D7DFFFFA8FFA8FFFFA8A8FFA8FFFFFFA8
%FFFFFFA8FD05FFA8FD05FFA8FD07FFA8A8FD05FFFD04A8FD1AFFA8A8FD1C
%FFA7FD43FFA8FFA8CAFD1BFF7DFD0DFFA8FD0DFFA8A8A8FFFFFFA9FD23FF
%A8FFCFFD18FFFD04A8FD1BFFA8FD1CFFA8FFA97FA8FFFFFFA87FA9FD04FF
%A8A8CFA8FF7DFFA8CA76A8A8CFFFA8A87D7DFFA8FFA8A87DFFFD047D52FD
%17FFA8FFA8FD16FF7DA8FFA87DFFA8FD0DFFA8FD0DFFA8A8FF5B0354A9A9
%A9540355FFFFFF7D7DA8527DFD04527D527D7D277D527D527DFF7D275252
%7D7652527D7D5252FD16FFA8A8FFA8FD14FFA87D7DFF7D527DA8FFFFCFFD
%19FFA8FF7E2A7EFFA9FF7E2A7EFFFFFF7DA7A77D527DA87D7D527D7D5252
%52A87D7D7DFFA852277D7D7D527D7D7DA87DA8FD15FFA8A87DCAFD15FF52
%7DA8A827A87DFFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8
%FFFFFFA8A8FFFFCFFD05FFCFFD05FF7DFFA8A8A8FFA8A8A8FFA1A87DCAFD
%04A8FFFFA8FFA8FFA8A7A8A87DFFA8FD16FFFD04A8FD16FFCAFFA8FFFFA8
%FD1CFFA8FD43FFA8FFA8FD1CFF7DFD1BFFA8A8FD43FFFD04A8FD1AFFA8A8
%FD1CFFA7FFA8A8A8FFFFFFA8A8A8FFFFFFA8FFA8FFFFA8A8FFCAFFFFFFA8
%FFA8FFA8FFA8FFCFFD06FFA8A8FF527DA87DA8FD13FFA8FFA8CAFD1BFF7D
%FD0DFFA8FD0DFFA8A8FF840459A8AEA85F0483FFFFFFA85252527D527D52
%7D277D7D527D527DA752527D7D51A8A87D527D527D5252527D52527DFD12
%FFA8A8CAA8FD1BFFA8FD1CFFA8FFFF5FAEFFAFFFAE83FD04FF7D52A7A852
%A87DA87D527D7D277D52FD077DA8FF5227277D527D527D7D7DA17DFD12FF
%A8FFA8CFFD1BFF7DFD0DFFA8FD0DFFA8A8FD0DFFA87DA8A8CA7DA8A8FF7D
%A87D7DA17D7DFD04A87D27CFFFA8A1A8A8A87D7DA87DA8A8A8FD12FFA8A8
%CFA8FD1AFFA8A8FD1CFFA8FD21FFA8A8FD20FFA8FFA8FD1CFF7DFD0DFFA8
%FD0DFFA8A8FD43FFFD04A8FD1AFFA8A8FD1CFFA8FD0FFF7DFD0EFFA8A8FD
%0AFFA8FFA87DA8A8A8FD12FFA8FFA8FD1CFF7DFD1BFFA8A8FFFF35FFAFFF
%AFFF35FD04FFA8277D7D527D7D7D527C7D52A852A77C7D7D7D527D7D5252
%FF7D7D527D7DA85152277D277DFD11FFFD04A8FD1AFFA8A8FD1CFFA7FF84
%1360AF8BAF601384FFFFFF527D5252527D52FF52A8277D7D52277D527D52
%A87D527D52FFA82627527D527D527D7DA87CFD11FFA8FFA8CAFD1BFF7DFD
%0DFFA8FD0DFFA8A8CAFFA8FD05FFA8FD04FFA8527D7D7DA87D7DA7A87D7D
%A852FD047DA7A8A87D2752FFA87D7DA8A8A852A87D7DA8A8A8FD10FFA8A8
%CAA8FD1BFFA8FD1CFFA8FD23FF7DFD1FFFA8FFA8CFFD1BFF7DFD0DFFA8FD
%0DFFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFCFA8A8CFA8FD1AFFA8A8FD1CFFFD2AA8A7FD1AA8
%FFA8FD16FF7DA8FFA87DFF7DFD0DFFCFFD0DFFA1FD46FFA8A8FD14FFA87D
%7DFF7D4BA8A8FD1AFF77034DFD45FFA8FD15FFA8527DA87D27A87DFFFFFF
%A8FFA8FFA8FFCFFFA8FFA8FFA8FFFFFFAFFFFFCFA1A29C77024E9BCACAFF
%AFFFA8FFFFFFA8FFA8FFA8FFCFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FFCFFF
%A8FFCFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FFA8FFA8FFCFFFA8FF
%FFFFA8FFA87DA8FD15FFA8A8FFFD04A8FD14FFC9C49BA2A2FFFFCFFFFF78
%A2C3FD41FFA8CFFD1BFF7DFD0DFFAEFFCACAC3C4A1A27EAFFD04FFA8FFFF
%FFA97E9BC9C9FD05FFA8FD2BFFA8FD0CFFA8A8FD1BFFA8FD0CFFCACAC9CA
%A2A985AFFD06FFAE0B83FD04FFAF7FCAC3CACAFD3BFFA8FD1CFF7DFD05FF
%A1C3CACAC3CAC3CAA2A97FA9A9FD09FF2DA8FD06FF8585A8CAC3CAA8FD38
%FFCAA8FD1AFFA8A8FD05FFB5FCBCCAFFCBAF85A9A9FD0BFF83605FFD08FF
%A985FFCFCAC3CAFD36FFA8FD1CFF7DFD05FF9AB5A8AF7FA9A9FFCFFD0BFF
%8384133B60AFA8FD06FFA97FA9A9FFCACAC3CAFFFFCAFD05FFA8FD0FFFA8
%FD1AFFA8A8FD1AFFA8A8FD05FF55037FA9FD0FFF838A8BFFFF8A8A8B8BAF
%FD06FFA9A9A9FFFFFFCACAB5B5CAFD2FFFA8FD11FF7DFFA87DFD07FF7DFD
%05FF2AF9A2FD05FFCFFD09FFA8848BFFCAFFA8A8FFAF848B84FD05FFCFA9
%7FA9FFFFA8FC8CCAFD2FFFA8A8FD10FF7DA87DA8FD06FFA8A8FD16FFAE5F
%84FD05FF83FD04FFAF848BAFFD05FFA9A9A9FFCFCAC3FD2FFFA8CAFD10FF
%A8277DFD08FF7DFD0DFFA8FD07FFCA5F60FFFFFFCFFFFFAE83FD05FFA8AF
%848B84FFFFFFA9A97F7F5ACAC3FD21FFA8FD05FFCAFD06FFA8A8FD10FFA8
%A87CA8FD07FFA8FD15FF8A60FD08FF8AAEFD07FFAFAF8BAFAFFFFFFF0303
%FFCAC3FD25FFCAB5B5FD05FFA8CFFD10FFA87D7DA8FD07FF7DFD0DFFA8FD
%06FF843BFD05FFCFFFFFFFA884FD08FFCAFFAF8B84AFAF7E2AFFFFCAC3FD
%24FFCAFCFCA8FD04FFCAA8FD10FFA87D52FD07FFA8A8FD13FFAE3BFD0BFF
%83FD0DFF8BAF8A847FFFFFCACAFD23FFC3C3CAFD05FFA8FD11FF7DF852FD
%08FF7DFD0DFFA8FD04FFAF3BFD07FFA8FD04FFAF83FD07FFA8FD06FF3513
%A97FFFFFC3A8FD0FFFA8FD11FFC3FD08FFA8A8FD12FF7DFD07FFA8A8FD12
%FF60FD0EFFAEAEFD0EFFAF8BA9FFFFFFC3CAFD1FFFC3FD09FFA8FD16FFA8
%FFFFFFA8FF7DFD11FF3BAEFD08FFA8FD05FFAE83FD0FFF8BA9A9FFFFCAC3
%FD1DFFCAC3FFFFFF7EA9FD05FFA8A8FD14FFA87D7DFFA8527DA8FD10FF3B
%8AFD10FF84AFFD0EFFAF8BA9A9FFFFA8C3FD1AFFAFCAC3FD04FFF903FD05
%FFA8A8FD14FFA8527DA8FF52FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF3B
%5FCAFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF83FFA8FFA8FFA8FFFFFFA8
%FFA8FFA8FF84AF7EFFA8FFA8C3FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFFFCAA1FFAFFFCFA92A7EA8FFA8FFA87DA8FD15FF7D7DA8
%A8A8FFA8FD0EFF8A60FD13FFAEA8FD0FFF8AFF7FFFFFFFCACAFD17FFCAC3
%FD05FF7FFD07FFA8FD1CFF7DFD0DFF605FAEFD0BFFA8FD08FF83FD04FFA8
%FD0AFFAF8AA9A9FFFFFFC3CAFD15FFCAC3FD05FF7FFD08FFCAA8FD1AFFA8
%A8FD0CFF8B5FA8FD15FF84AEFD0FFF8BAFA9FD04FFC3CAFD13FFCAC3FD05
%FF7FA9FD08FFA8FD1CFF7DFD0BFF846083FD0DFFA8FD09FF83FD0FFFAF8B
%A8A9FD04FFC3CAFD08FFA8FD08FFCAC3FD05FF7FA9FD09FFA8A8FD1AFFA8
%A8FD0AFF8B8B83FD18FFAE84FD0FFF8BAFA3FD05FFC3FD10FFCACAFD05FF
%A9A9FFFFFFAFA8FD05FFA8FD1CFF7DFD09FF8B8B83FD0FFFA8FD0AFF83FD
%10FF60AF7FFD05FFC3FD0EFFC3C3FD05FFA97FA9FFFFFF133CFD05FFA8A8
%FD1AFFA8A8FD08FF8BAF83FD1BFFA8AEFD10FF60FFA9FD05FFC3FD0CFFCA
%CAFD06FFA9A9FFFFFF8A8484FD05FFA8CAFD1BFF7DFD07FF848B83AEFFFF
%A8FD0DFFA8FD0BFF5FFFA8FD0EFF8A8AA9A9FD04FFCAC3FD0AFFC3C3FD06
%FF7F7EFFFFFF848BFD07FFA8A8FD1BFFA8FD06FF60AFA8AEFD1DFFAE84FD
%10FF8BAFA9FD05FFCAC3FD08FFCACAFD06FFA97FFFFFFF8BAFFD08FFA8CF
%FD1BFF7DFD05FF6013A883FD04FFA8FD1AFF83A8FD0FFFA88BA9A9FD05FF
%CAC3FD06FFC3CAFD07FF7FFFFFFF8A8BFD09FFCAA8FD1AFFA8A8FD05FFAF
%6083FD20FFAEA8FD10FF84AFA3FD06FFCACAFD04FFC3CAFD07FF7FFFFFFF
%AF8BFD04FFA8FD05FFA8FD1CFF7DFD05FF7D33A8FD05FFA8FD0DFFA8FD0D
%FF83FD0DFFA8FFFFFF60FF7FFD06FFC3CAFFA8C3CAFD07FF7FA9FFFFA867
%AFFFFFFF0A34FD05FFA8A8FD1AFFA8A8FD05FFA834FD22FFAE83FD10FFAF
%8BCBA9FD06FFC393C3CFFD07FFA9A9FFFFAF8BFD04FF8383A8FD05FFA8FD
%1CFF7DFD1BFFA8FD0EFF84A8FD10FF8BAFA3A9FD05FF99FC93FD07FFA9A9
%FFFFAF8BAFFFFFFF83AEFD07FFA8A8FD1AFFCAA8FD2AFFAEAEFD10FFAF8B
%CBA9FD06FFBCFD07FFA97FFFFFFF8BA8FFFFAE83FD09FFA8CAFD1BFF7DFD
%0DFFA8FD1BFFA8FF83AEFD10FF84AFA3A9FD0CFFA97FA9FFFF8BAEFFA883
%83FD0AFFA8A8FD15FF7D7DFFA77DFFA8FD2CFF83FD11FF8BFF7FFD0CFFA9
%A9FFFF8BAFFFA88AAEFD0BFFA8FD15FFA8527DFF5252A87DFFFFFFCFFFA8
%FFCFFFA8FFFFFFA8FFCFFFA8FFFFFFA8FFA8FFCFFFA8FFA8FFFFFFA8FFFF
%FFA8FFA8FFA8FFFF8384FFFFFFA8FFCFFFA8FFA8FFA8FFFFFFCAAF60CB7E
%FFFFFFA8FFA8FFA8FFFFA97EFFFF8B84FF8383A8FFCFFFA8FFFFFFA8FFCF
%FFA87DA8FD15FF7D7DCA7D527DA8FD2DFF84FD11FF8BAFA9A9FFFFFFCFFD
%04FFA97FFFFFAF8BFF5FAEFD0EFFA8CFFD15FFA8FFA8FFA8FF7DFD0DFFA8
%FD0DFFA8FD0DFFA8FFFFFF83AEFD08FFA8FD07FFAF8BFF7FA9FFFFFFA8FF
%FFFF7FFFFFAF84AE5FAFFD0FFFA8A8FD1AFFA8A8FD2EFF83FD11FFAFAFA9
%A9FD06FF7FFFFFFF84AE84FD11FFA8FD1CFF7DFD1BFFA8FD12FFAEA8FD11
%FF60FF7FA9FD04FF7FA9FFFF3C83A8FD12FFA8A8FD1AFFA8A8FD2FFF83FD
%12FF8AFF7FFFFFFFA9A9FFFF3B8AFD14FFA8CAFD1BFF7DFD0DFFA8FD0DFF
%A8FD0DFFA8FD05FF84AEFD11FF8B8ACB7FFFA97FFFFF3B84FD08FFA8FD0C
%FFA8A8FD1BFFA8FD30FF58AEFD11FF8BFFA97E7FFFFF60AFFD16FFA8CFFD
%1BFF7DFD0DFFA8FD1BFFA8FD06FF580AAE84AEA8FFA8AEA8FD09FFAFAF54
%F954AE3BAFFD17FFCAA8FD1AFFA8A8FD30FFA8A8AFFFAEAE84AE84AE84AE
%A8AE84AEA8AEA8FF8A35015960AFFD18FFA8FD1CFF7DFD0DFFCFFD0DFFA8
%FD0DFFCFFD05FFAEFD0BFFA8FFA8FFA8FFA8AE83AE3B115FAFFD19FFA8A8
%FD1AFFA8A8FD45FFAF13AFFD1AFFA8FD1CFF7DFD0DFFCFFD0DFFA8FD0DFF
%CFFD1BFF841384FD1AFFA8A8FD1AFFA8A8FD46FFA8FD1BFFA8CAFD1BFF7D
%FD0DFFA8FD0DFFA8FD0DFFA8FD2BFFA8FD0CFFA8A8FD1BFFA8FD62FFA8CF
%FD1BFF7DFD0DFFA8FD1BFFA8FD38FFCAA8FD15FFA87DFFA87DA8A8FD46FF
%A8FD1BFFA8A8FD15FF527DFF7D52A852A8A7A87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA8A7A87CA87DA87DA87DA87DA87DA87DA87DA77D
%A87DA87DA87DA87DA87DA87D7DA8A87DA87DA87DA87DA87DA8A87D7DA87D
%A87DA87DA87DA8A1A87D7D7DA87DA87DA87DA87DA87DA87D7D7DFD14FFA8
%7D7DFFA852A8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFFFFFA8FFFF
%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8
%FD05FFA8FFA8FFFFFFA8FFA8A8FFFFA8FFA8FFCFFFA8FFA8FFA8FFFFFFA8
%FFA8FFA8FFFFFFA8FFCFFFA8FD16FFA8A8A87D527D52A852A8FD08FF52A8
%52A8527DFD08FF52A8527D7D76A8FD07FF52FD047D7CA8FD06FFA87DA852
%A8527D7C7DFD05FFA852FF52FD047D52A8FD05FF52FFFD057D52A8FD05FF
%52A87D7DA8527D7D7DFD14FFA8A17D7D277D7DFD07FF7D2752A7527D7DFD
%07FF7D527C7D7C7D7DA8FD06FFA852527D7D527D7DFD06FFA8A87D7D277D
%527D7DFD06FF7DFFA8FD057DA8FD05FF7DA852277D7D527D7DFD05FFA87D
%7D527D7D527D7DFD14FF5252A852A852A8FD07FFA8527D52A8527DFD07FF
%CF52FD047D7CA8FD07FF52FD047D52A8FD06FF7D52A852A852A87C7DFD05
%FFA8517D27A87D7D7D7CA8FD05FF27FD067D52A1FD05FF52FD047D527D7D
%7DFD4CFFA8FD62FFA87CA1FFA8A8A8FFA8A8FD06FFA8FFA8A8FFFFA8FFA8
%FFA8FF7DFF7DA8A8CAA8A8FF7DA8FD07FFA8FFA87DA8FD4EFF52A8527D7D
%A8527DA8FF527DA8A85252527D527D527D52A8A852527CFF7D517D7C5252
%7D527D527D52A8A8A87D76527D277D52FD4CFFA87DA752527D7C2752FFA8
%7D527D527D7D7DFD05527DFFA8527D7DFF7DA8527C527D5276525252A77D
%FF52527D7D527D7D527DFD4EFFA8FFFFFFA8FD05FFA8CFFD04FFA8FD0EFF
%CFCFFFA8FFA8FD05FFA8FD05FFA8FDFCFFFDA7FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-12-31T17:18:35+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:MetadataDate>2015-12-31T17:18:35+08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-12-31T17:18:35+08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>216</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FWBa15m8z6b5+tbe9LWnla5mtrSxuYbeK4imuZwQ0N0/qie3cuyiMrHx8TgV5/pv5y+ervy3&#xA;ZwSvaweZ28vzatMxirA5uZtNOn3Cr/J6V9LG6j9tG8BilmPlD8ytX8wWPnK6kiW1n0GGNFsmWrW1&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <pdf:Producer>matplotlib pdf backend</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>428.800000</stDim:w>
            <stDim:h>357.333333</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DocumentID>xmp.did:23a554f7-0bad-5d4c-bf9a-5171a619eeed</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:23a554f7-0bad-5d4c-bf9a-5171a619eeed</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:23a554f7-0bad-5d4c-bf9a-5171a619eeed</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:23a554f7-0bad-5d4c-bf9a-5171a619eeed</stEvt:instanceID>
                  <stEvt:when>2015-12-31T17:18:35+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -357.333 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 357.333 li
428.8 357.333 li
428.8 0 li
cp
clp
428.8 357.333 mo
0 357.333 li
0 0 li
428.8 0 li
428.8 357.333 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.9143 156.174 mo
149.657 137.049 li
221.4 164.464 li
293.143 246.104 li
364.886 178.165 li
0 .993988 1 0 cmyk
@
gsave
73.4216 160.666 mo
82.4069 160.666 li
82.4069 151.681 li
73.4216 151.681 li
73.4216 160.666 li
cp
clp
77.9143 160.416 mo
82.1569 156.174 li
77.9143 151.931 li
73.6716 156.174 li
77.9143 160.416 li
cp
f
.5 lw
0 lc
0 lj
77.9143 160.416 mo
82.1569 156.174 li
77.9143 151.931 li
73.6716 156.174 li
77.9143 160.416 li
cp
0 0 0 1 cmyk
@
grestore
gsave
145.164 141.541 mo
154.15 141.541 li
154.15 132.556 li
145.164 132.556 li
145.164 141.541 li
cp
clp
149.657 141.291 mo
153.9 137.049 li
149.657 132.806 li
145.414 137.049 li
149.657 141.291 li
cp
f
.5 lw
0 lc
0 lj
149.657 141.291 mo
153.9 137.049 li
149.657 132.806 li
145.414 137.049 li
149.657 141.291 li
cp
0 0 0 1 cmyk
@
grestore
gsave
216.907 168.957 mo
225.893 168.957 li
225.893 159.972 li
216.907 159.972 li
216.907 168.957 li
cp
clp
221.4 168.707 mo
225.643 164.464 li
221.4 160.222 li
217.157 164.464 li
221.4 168.707 li
cp
f
.5 lw
0 lc
0 lj
221.4 168.707 mo
225.643 164.464 li
221.4 160.222 li
217.157 164.464 li
221.4 168.707 li
cp
0 0 0 1 cmyk
@
grestore
gsave
288.65 250.597 mo
297.635 250.597 li
297.635 241.611 li
288.65 241.611 li
288.65 250.597 li
cp
clp
293.143 250.347 mo
297.385 246.104 li
293.143 241.861 li
288.9 246.104 li
293.143 250.347 li
cp
f
.5 lw
0 lc
0 lj
293.143 250.347 mo
297.385 246.104 li
293.143 241.861 li
288.9 246.104 li
293.143 250.347 li
cp
0 0 0 1 cmyk
@
grestore
gsave
360.393 182.658 mo
369.378 182.658 li
369.378 173.672 li
360.393 173.672 li
360.393 182.658 li
cp
clp
364.886 182.408 mo
369.128 178.165 li
364.886 173.922 li
360.643 178.165 li
364.886 182.408 li
cp
f
.5 lw
0 lc
0 lj
364.886 182.408 mo
369.128 178.165 li
364.886 173.922 li
360.643 178.165 li
364.886 182.408 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.9143 164.113 mo
149.657 137.049 li
221.4 175.877 li
293.143 286.93 li
364.886 196.477 li
.883665 .769161 0 0 cmyk
@
gsave
74.6643 167.363 mo
81.1643 167.363 li
81.1643 160.863 li
74.6643 160.863 li
74.6643 167.363 li
cp
clp
74.9143 167.113 mo
80.9143 167.113 li
80.9143 161.113 li
74.9143 161.113 li
74.9143 167.113 li
cp
f
.5 lw
0 lc
0 lj
74.9143 167.113 mo
80.9143 167.113 li
80.9143 161.113 li
74.9143 161.113 li
74.9143 167.113 li
cp
0 0 0 1 cmyk
@
grestore
gsave
146.407 140.299 mo
152.907 140.299 li
152.907 133.799 li
146.407 133.799 li
146.407 140.299 li
cp
clp
146.657 140.049 mo
152.657 140.049 li
152.657 134.049 li
146.657 134.049 li
146.657 140.049 li
cp
f
.5 lw
0 lc
0 lj
146.657 140.049 mo
152.657 140.049 li
152.657 134.049 li
146.657 134.049 li
146.657 140.049 li
cp
0 0 0 1 cmyk
@
grestore
gsave
218.15 179.127 mo
224.65 179.127 li
224.65 172.627 li
218.15 172.627 li
218.15 179.127 li
cp
clp
218.4 178.877 mo
224.4 178.877 li
224.4 172.877 li
218.4 172.877 li
218.4 178.877 li
cp
f
.5 lw
0 lc
0 lj
218.4 178.877 mo
224.4 178.877 li
224.4 172.877 li
218.4 172.877 li
218.4 178.877 li
cp
0 0 0 1 cmyk
@
grestore
gsave
289.893 290.18 mo
296.393 290.18 li
296.393 283.68 li
289.893 283.68 li
289.893 290.18 li
cp
clp
290.143 289.93 mo
296.143 289.93 li
296.143 283.93 li
290.143 283.93 li
290.143 289.93 li
cp
f
.5 lw
0 lc
0 lj
290.143 289.93 mo
296.143 289.93 li
296.143 283.93 li
290.143 283.93 li
290.143 289.93 li
cp
0 0 0 1 cmyk
@
grestore
gsave
361.636 199.727 mo
368.136 199.727 li
368.136 193.227 li
361.636 193.227 li
361.636 199.727 li
cp
clp
361.886 199.477 mo
367.886 199.477 li
367.886 193.477 li
361.886 193.477 li
361.886 199.477 li
cp
f
.5 lw
0 lc
0 lj
361.886 199.477 mo
367.886 199.477 li
367.886 193.477 li
361.886 193.477 li
361.886 199.477 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.9143 241.838 mo
149.657 150.234 li
221.4 286.93 li
293.143 292.691 li
364.886 240.462 li
.873045 .242161 1 .129244 cmyk
@
gsave
74.6643 245.088 mo
81.1643 245.088 li
81.1643 238.588 li
74.6643 238.588 li
74.6643 245.088 li
cp
clp
77.9143 244.838 mo
80.9143 238.838 li
74.9143 238.838 li
77.9143 244.838 li
cp
f
.5 lw
0 lc
0 lj
77.9143 244.838 mo
80.9143 238.838 li
74.9143 238.838 li
77.9143 244.838 li
cp
0 0 0 1 cmyk
@
grestore
gsave
146.407 153.484 mo
152.907 153.484 li
152.907 146.984 li
146.407 146.984 li
146.407 153.484 li
cp
clp
149.657 153.234 mo
152.657 147.234 li
146.657 147.234 li
149.657 153.234 li
cp
f
.5 lw
0 lc
0 lj
149.657 153.234 mo
152.657 147.234 li
146.657 147.234 li
149.657 153.234 li
cp
0 0 0 1 cmyk
@
grestore
gsave
218.15 290.18 mo
224.65 290.18 li
224.65 283.68 li
218.15 283.68 li
218.15 290.18 li
cp
clp
221.4 289.93 mo
224.4 283.93 li
218.4 283.93 li
221.4 289.93 li
cp
f
.5 lw
0 lc
0 lj
221.4 289.93 mo
224.4 283.93 li
218.4 283.93 li
221.4 289.93 li
cp
0 0 0 1 cmyk
@
grestore
gsave
289.893 295.941 mo
296.393 295.941 li
296.393 289.441 li
289.893 289.441 li
289.893 295.941 li
cp
clp
293.143 295.691 mo
296.143 289.691 li
290.143 289.691 li
293.143 295.691 li
cp
f
.5 lw
0 lc
0 lj
293.143 295.691 mo
296.143 289.691 li
290.143 289.691 li
293.143 295.691 li
cp
0 0 0 1 cmyk
@
grestore
gsave
361.636 243.712 mo
368.136 243.712 li
368.136 237.212 li
361.636 237.212 li
361.636 243.712 li
cp
clp
364.886 243.462 mo
367.886 237.462 li
361.886 237.462 li
364.886 243.462 li
cp
f
.5 lw
0 lc
0 lj
364.886 243.462 mo
367.886 237.462 li
361.886 237.462 li
364.886 243.462 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.9143 232.439 mo
149.657 157.312 li
221.4 184.222 li
293.143 298.455 li
364.886 218.741 li
.713191 0 .306584 0 cmyk
@
gsave
74.6643 235.689 mo
81.1643 235.689 li
81.1643 229.189 li
74.6643 229.189 li
74.6643 235.689 li
cp
clp
77.9143 229.439 mo
74.9143 235.439 li
80.9143 235.439 li
77.9143 229.439 li
cp
f
.5 lw
0 lc
0 lj
77.9143 229.439 mo
74.9143 235.439 li
80.9143 235.439 li
77.9143 229.439 li
cp
0 0 0 1 cmyk
@
grestore
gsave
146.407 160.562 mo
152.907 160.562 li
152.907 154.062 li
146.407 154.062 li
146.407 160.562 li
cp
clp
149.657 154.312 mo
146.657 160.312 li
152.657 160.312 li
149.657 154.312 li
cp
f
.5 lw
0 lc
0 lj
149.657 154.312 mo
146.657 160.312 li
152.657 160.312 li
149.657 154.312 li
cp
0 0 0 1 cmyk
@
grestore
gsave
218.15 187.472 mo
224.65 187.472 li
224.65 180.972 li
218.15 180.972 li
218.15 187.472 li
cp
clp
221.4 181.222 mo
218.4 187.222 li
224.4 187.222 li
221.4 181.222 li
cp
f
.5 lw
0 lc
0 lj
221.4 181.222 mo
218.4 187.222 li
224.4 187.222 li
221.4 181.222 li
cp
0 0 0 1 cmyk
@
grestore
gsave
289.893 301.705 mo
296.393 301.705 li
296.393 295.205 li
289.893 295.205 li
289.893 301.705 li
cp
clp
293.143 295.455 mo
290.143 301.455 li
296.143 301.455 li
293.143 295.455 li
cp
f
.5 lw
0 lc
0 lj
293.143 295.455 mo
290.143 301.455 li
296.143 301.455 li
293.143 295.455 li
cp
0 0 0 1 cmyk
@
grestore
gsave
361.636 221.991 mo
368.136 221.991 li
368.136 215.491 li
361.636 215.491 li
361.636 221.991 li
cp
clp
364.886 215.741 mo
361.886 221.741 li
367.886 221.741 li
364.886 215.741 li
cp
f
.5 lw
0 lc
0 lj
364.886 215.741 mo
361.886 221.741 li
367.886 221.741 li
364.886 215.741 li
cp
0 0 0 1 cmyk
@
grestore
grestore
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
.5 lw
0 lc
1 lj
10 ml
[1 3 ] 0 dsh
true sadj
54 321.333 mo
54 33.3333 li
0 0 0 1 cmyk
@
grestore
54 321.333 mo
54 317.333 li
0 0 0 1 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
54 321.333 mo
54 317.333 li
@
54 33.3333 mo
54 37.3333 li
f
54 33.3333 mo
54 37.3333 li
@
45.679 333.244 mo
49.807 333.244 li
49.807 334.24 li
44.251 334.24 li
44.251 333.244 li
44.695 332.788 45.307 332.164 46.087 331.372 cv
46.855 330.592 47.347 330.088 47.551 329.86 cv
47.935 329.44 48.199 329.08 48.343 328.78 cv
48.487 328.492 48.571 328.192 48.571 327.904 cv
48.571 327.448 48.403 327.064 48.079 326.776 cv
47.755 326.488 47.335 326.332 46.807 326.332 cv
46.435 326.332 46.039 326.404 45.631 326.524 cv
45.223 326.656 44.779 326.848 44.311 327.112 cv
44.311 325.912 li
44.791 325.72 45.235 325.576 45.643 325.48 cv
46.051 325.384 46.435 325.336 46.783 325.336 cv
47.683 325.336 48.403 325.564 48.943 326.02 cv
49.483 326.476 49.759 327.076 49.759 327.832 cv
49.759 328.192 49.687 328.54 49.555 328.852 cv
49.423 329.176 49.183 329.56 48.823 329.992 cv
48.727 330.112 48.415 330.436 47.887 330.976 cv
47.359 331.516 46.627 332.272 45.679 333.244 cv
f
54.823 326.272 mo
54.211 326.272 53.755 326.572 53.443 327.172 cv
53.131 327.772 52.987 328.672 52.987 329.872 cv
52.987 331.072 53.131 331.972 53.443 332.572 cv
53.755 333.172 54.211 333.472 54.823 333.472 cv
55.435 333.472 55.891 333.172 56.203 332.572 cv
56.503 331.972 56.659 331.072 56.659 329.872 cv
56.659 328.672 56.503 327.772 56.203 327.172 cv
55.891 326.572 55.435 326.272 54.823 326.272 cv
54.823 325.336 mo
55.795 325.336 56.539 325.732 57.067 326.5 cv
57.583 327.28 57.847 328.408 57.847 329.872 cv
57.847 331.348 57.583 332.476 57.067 333.244 cv
56.539 334.012 55.795 334.396 54.823 334.396 cv
53.839 334.396 53.083 334.012 52.567 333.244 cv
52.051 332.476 51.799 331.348 51.799 329.872 cv
51.799 328.408 52.051 327.28 52.567 326.5 cv
53.083 325.732 53.839 325.336 54.823 325.336 cv
f
62.455 326.272 mo
61.843 326.272 61.387 326.572 61.075 327.172 cv
60.763 327.772 60.619 328.672 60.619 329.872 cv
60.619 331.072 60.763 331.972 61.075 332.572 cv
61.387 333.172 61.843 333.472 62.455 333.472 cv
63.067 333.472 63.523 333.172 63.835 332.572 cv
64.135 331.972 64.291 331.072 64.291 329.872 cv
64.291 328.672 64.135 327.772 63.835 327.172 cv
63.523 326.572 63.067 326.272 62.455 326.272 cv
62.455 325.336 mo
63.427 325.336 64.171 325.732 64.699 326.5 cv
65.215 327.28 65.479 328.408 65.479 329.872 cv
65.479 331.348 65.215 332.476 64.699 333.244 cv
64.171 334.012 63.427 334.396 62.455 334.396 cv
61.471 334.396 60.715 334.012 60.199 333.244 cv
59.683 332.476 59.431 331.348 59.431 329.872 cv
59.431 328.408 59.683 327.28 60.199 326.5 cv
60.715 325.732 61.471 325.336 62.455 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
101.829 321.333 mo
101.829 33.3333 li
@
grestore
101.829 321.333 mo
101.829 317.333 li
f
101.829 321.333 mo
101.829 317.333 li
@
101.829 33.3333 mo
101.829 37.3333 li
f
101.829 33.3333 mo
101.829 37.3333 li
@
95.599 326.524 mo
92.6109 331.192 li
95.599 331.192 li
95.599 326.524 li
95.2869 325.492 mo
96.7749 325.492 li
96.7749 331.192 li
98.0229 331.192 li
98.0229 332.176 li
96.7749 332.176 li
96.7749 334.24 li
95.599 334.24 li
95.599 332.176 li
91.6509 332.176 li
91.6509 331.036 li
95.2869 325.492 li
f
102.511 326.272 mo
101.899 326.272 101.443 326.572 101.131 327.172 cv
100.819 327.772 100.675 328.672 100.675 329.872 cv
100.675 331.072 100.819 331.972 101.131 332.572 cv
101.443 333.172 101.899 333.472 102.511 333.472 cv
103.123 333.472 103.579 333.172 103.891 332.572 cv
104.191 331.972 104.347 331.072 104.347 329.872 cv
104.347 328.672 104.191 327.772 103.891 327.172 cv
103.579 326.572 103.123 326.272 102.511 326.272 cv
102.511 325.336 mo
103.483 325.336 104.227 325.732 104.755 326.5 cv
105.271 327.28 105.535 328.408 105.535 329.872 cv
105.535 331.348 105.271 332.476 104.755 333.244 cv
104.227 334.012 103.483 334.396 102.511 334.396 cv
101.527 334.396 100.771 334.012 100.255 333.244 cv
99.739 332.476 99.487 331.348 99.487 329.872 cv
99.487 328.408 99.739 327.28 100.255 326.5 cv
100.771 325.732 101.527 325.336 102.511 325.336 cv
f
110.143 326.272 mo
109.531 326.272 109.075 326.572 108.763 327.172 cv
108.451 327.772 108.307 328.672 108.307 329.872 cv
108.307 331.072 108.451 331.972 108.763 332.572 cv
109.075 333.172 109.531 333.472 110.143 333.472 cv
110.755 333.472 111.211 333.172 111.523 332.572 cv
111.823 331.972 111.979 331.072 111.979 329.872 cv
111.979 328.672 111.823 327.772 111.523 327.172 cv
111.211 326.572 110.755 326.272 110.143 326.272 cv
110.143 325.336 mo
111.115 325.336 111.859 325.732 112.387 326.5 cv
112.903 327.28 113.167 328.408 113.167 329.872 cv
113.167 331.348 112.903 332.476 112.387 333.244 cv
111.859 334.012 111.115 334.396 110.143 334.396 cv
109.159 334.396 108.403 334.012 107.887 333.244 cv
107.371 332.476 107.119 331.348 107.119 329.872 cv
107.119 328.408 107.371 327.28 107.887 326.5 cv
108.403 325.732 109.159 325.336 110.143 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
149.657 321.333 mo
149.657 33.3333 li
@
grestore
149.657 321.333 mo
149.657 317.333 li
f
149.657 321.333 mo
149.657 317.333 li
@
149.657 33.3333 mo
149.657 37.3333 li
f
149.657 33.3333 mo
149.657 37.3333 li
@
142.977 329.392 mo
142.449 329.392 142.029 329.584 141.717 329.944 cv
141.405 330.304 141.249 330.808 141.249 331.432 cv
141.249 332.068 141.405 332.572 141.717 332.932 cv
142.029 333.292 142.449 333.472 142.977 333.472 cv
143.505 333.472 143.925 333.292 144.237 332.932 cv
144.549 332.572 144.705 332.068 144.705 331.432 cv
144.705 330.808 144.549 330.304 144.237 329.944 cv
143.925 329.584 143.505 329.392 142.977 329.392 cv
145.329 325.684 mo
145.329 326.764 li
145.029 326.62 144.729 326.512 144.429 326.44 cv
144.117 326.368 143.817 326.332 143.529 326.332 cv
142.737 326.332 142.137 326.596 141.729 327.124 cv
141.321 327.652 141.081 328.456 141.033 329.512 cv
141.261 329.176 141.549 328.912 141.897 328.732 cv
142.245 328.552 142.629 328.456 143.049 328.456 cv
143.925 328.456 144.621 328.732 145.125 329.26 cv
145.629 329.788 145.893 330.52 145.893 331.432 cv
145.893 332.332 145.617 333.052 145.089 333.592 cv
144.561 334.132 143.853 334.396 142.977 334.396 cv
141.969 334.396 141.189 334.012 140.661 333.244 cv
140.121 332.476 139.857 331.348 139.857 329.872 cv
139.857 328.492 140.181 327.388 140.841 326.572 cv
141.489 325.756 142.377 325.336 143.481 325.336 cv
143.769 325.336 144.069 325.372 144.381 325.42 cv
144.681 325.48 144.993 325.564 145.329 325.684 cv
f
150.465 326.272 mo
149.853 326.272 149.397 326.572 149.085 327.172 cv
148.773 327.772 148.629 328.672 148.629 329.872 cv
148.629 331.072 148.773 331.972 149.085 332.572 cv
149.397 333.172 149.853 333.472 150.465 333.472 cv
151.077 333.472 151.533 333.172 151.845 332.572 cv
152.145 331.972 152.301 331.072 152.301 329.872 cv
152.301 328.672 152.145 327.772 151.845 327.172 cv
151.533 326.572 151.077 326.272 150.465 326.272 cv
150.465 325.336 mo
151.437 325.336 152.181 325.732 152.709 326.5 cv
153.225 327.28 153.489 328.408 153.489 329.872 cv
153.489 331.348 153.225 332.476 152.709 333.244 cv
152.181 334.012 151.437 334.396 150.465 334.396 cv
149.481 334.396 148.725 334.012 148.209 333.244 cv
147.693 332.476 147.441 331.348 147.441 329.872 cv
147.441 328.408 147.693 327.28 148.209 326.5 cv
148.725 325.732 149.481 325.336 150.465 325.336 cv
f
158.097 326.272 mo
157.485 326.272 157.029 326.572 156.717 327.172 cv
156.405 327.772 156.261 328.672 156.261 329.872 cv
156.261 331.072 156.405 331.972 156.717 332.572 cv
157.029 333.172 157.485 333.472 158.097 333.472 cv
158.709 333.472 159.165 333.172 159.477 332.572 cv
159.777 331.972 159.933 331.072 159.933 329.872 cv
159.933 328.672 159.777 327.772 159.477 327.172 cv
159.165 326.572 158.709 326.272 158.097 326.272 cv
158.097 325.336 mo
159.069 325.336 159.813 325.732 160.341 326.5 cv
160.857 327.28 161.121 328.408 161.121 329.872 cv
161.121 331.348 160.857 332.476 160.341 333.244 cv
159.813 334.012 159.069 334.396 158.097 334.396 cv
157.113 334.396 156.357 334.012 155.841 333.244 cv
155.325 332.476 155.073 331.348 155.073 329.872 cv
155.073 328.408 155.325 327.28 155.841 326.5 cv
156.357 325.732 157.113 325.336 158.097 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
197.486 321.333 mo
197.486 33.3333 li
@
grestore
197.486 321.333 mo
197.486 317.333 li
f
197.486 321.333 mo
197.486 317.333 li
@
197.486 33.3333 mo
197.486 37.3333 li
f
197.486 33.3333 mo
197.486 37.3333 li
@
190.645 330.088 mo
190.081 330.088 189.637 330.244 189.313 330.544 cv
188.989 330.844 188.833 331.252 188.833 331.78 cv
188.833 332.308 188.989 332.728 189.313 333.028 cv
189.637 333.328 190.081 333.472 190.645 333.472 cv
191.197 333.472 191.641 333.328 191.965 333.016 cv
192.289 332.716 192.457 332.308 192.457 331.78 cv
192.457 331.252 192.289 330.844 191.977 330.544 cv
191.653 330.244 191.209 330.088 190.645 330.088 cv
189.457 329.584 mo
188.953 329.464 188.557 329.224 188.269 328.876 cv
187.981 328.528 187.849 328.108 187.849 327.604 cv
187.849 326.908 188.089 326.356 188.593 325.948 cv
189.085 325.54 189.769 325.336 190.645 325.336 cv
191.509 325.336 192.193 325.54 192.697 325.948 cv
193.189 326.356 193.441 326.908 193.441 327.604 cv
193.441 328.108 193.297 328.528 193.009 328.876 cv
192.721 329.224 192.337 329.464 191.833 329.584 cv
192.397 329.716 192.841 329.98 193.165 330.364 cv
193.477 330.748 193.645 331.228 193.645 331.78 cv
193.645 332.632 193.381 333.28 192.865 333.724 cv
192.337 334.18 191.605 334.396 190.645 334.396 cv
189.673 334.396 188.929 334.18 188.413 333.724 cv
187.897 333.28 187.645 332.632 187.645 331.78 cv
187.645 331.228 187.801 330.748 188.125 330.364 cv
188.437 329.98 188.881 329.716 189.457 329.584 cv
189.025 327.712 mo
189.025 328.168 189.157 328.528 189.445 328.78 cv
189.733 329.032 190.129 329.152 190.645 329.152 cv
191.149 329.152 191.545 329.032 191.833 328.78 cv
192.121 328.528 192.265 328.168 192.265 327.712 cv
192.265 327.256 192.121 326.908 191.833 326.656 cv
191.545 326.404 191.149 326.272 190.645 326.272 cv
190.129 326.272 189.733 326.404 189.445 326.656 cv
189.157 326.908 189.025 327.256 189.025 327.712 cv
f
198.277 326.272 mo
197.665 326.272 197.209 326.572 196.897 327.172 cv
196.585 327.772 196.441 328.672 196.441 329.872 cv
196.441 331.072 196.585 331.972 196.897 332.572 cv
197.209 333.172 197.665 333.472 198.277 333.472 cv
198.889 333.472 199.345 333.172 199.657 332.572 cv
199.957 331.972 200.113 331.072 200.113 329.872 cv
200.113 328.672 199.957 327.772 199.657 327.172 cv
199.345 326.572 198.889 326.272 198.277 326.272 cv
198.277 325.336 mo
199.249 325.336 199.993 325.732 200.521 326.5 cv
201.037 327.28 201.301 328.408 201.301 329.872 cv
201.301 331.348 201.037 332.476 200.521 333.244 cv
199.993 334.012 199.249 334.396 198.277 334.396 cv
197.293 334.396 196.537 334.012 196.021 333.244 cv
195.505 332.476 195.253 331.348 195.253 329.872 cv
195.253 328.408 195.505 327.28 196.021 326.5 cv
196.537 325.732 197.293 325.336 198.277 325.336 cv
f
205.91 326.272 mo
205.298 326.272 204.842 326.572 204.53 327.172 cv
204.217 327.772 204.074 328.672 204.074 329.872 cv
204.074 331.072 204.217 331.972 204.53 332.572 cv
204.842 333.172 205.298 333.472 205.91 333.472 cv
206.521 333.472 206.978 333.172 207.29 332.572 cv
207.59 331.972 207.745 331.072 207.745 329.872 cv
207.745 328.672 207.59 327.772 207.29 327.172 cv
206.978 326.572 206.521 326.272 205.91 326.272 cv
205.91 325.336 mo
206.882 325.336 207.626 325.732 208.154 326.5 cv
208.67 327.28 208.934 328.408 208.934 329.872 cv
208.934 331.348 208.67 332.476 208.154 333.244 cv
207.626 334.012 206.882 334.396 205.91 334.396 cv
204.926 334.396 204.17 334.012 203.654 333.244 cv
203.138 332.476 202.886 331.348 202.886 329.872 cv
202.886 328.408 203.138 327.28 203.654 326.5 cv
204.17 325.732 204.926 325.336 205.91 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
245.314 321.333 mo
245.314 33.3333 li
@
grestore
245.314 321.333 mo
245.314 317.333 li
f
245.314 321.333 mo
245.314 317.333 li
@
245.314 33.3333 mo
245.314 37.3333 li
f
245.314 33.3333 mo
245.314 37.3333 li
@
232.576 333.244 mo
234.508 333.244 li
234.508 326.572 li
232.408 326.992 li
232.408 325.912 li
234.496 325.492 li
235.684 325.492 li
235.684 333.244 li
237.616 333.244 li
237.616 334.24 li
232.576 334.24 li
232.576 333.244 li
f
242.536 326.272 mo
241.924 326.272 241.468 326.572 241.156 327.172 cv
240.844 327.772 240.7 328.672 240.7 329.872 cv
240.7 331.072 240.844 331.972 241.156 332.572 cv
241.468 333.172 241.924 333.472 242.536 333.472 cv
243.148 333.472 243.604 333.172 243.916 332.572 cv
244.216 331.972 244.372 331.072 244.372 329.872 cv
244.372 328.672 244.216 327.772 243.916 327.172 cv
243.604 326.572 243.148 326.272 242.536 326.272 cv
242.536 325.336 mo
243.508 325.336 244.252 325.732 244.78 326.5 cv
245.296 327.28 245.56 328.408 245.56 329.872 cv
245.56 331.348 245.296 332.476 244.78 333.244 cv
244.252 334.012 243.508 334.396 242.536 334.396 cv
241.552 334.396 240.796 334.012 240.28 333.244 cv
239.764 332.476 239.512 331.348 239.512 329.872 cv
239.512 328.408 239.764 327.28 240.28 326.5 cv
240.796 325.732 241.552 325.336 242.536 325.336 cv
f
250.168 326.272 mo
249.556 326.272 249.1 326.572 248.788 327.172 cv
248.476 327.772 248.332 328.672 248.332 329.872 cv
248.332 331.072 248.476 331.972 248.788 332.572 cv
249.1 333.172 249.556 333.472 250.168 333.472 cv
250.78 333.472 251.236 333.172 251.548 332.572 cv
251.848 331.972 252.004 331.072 252.004 329.872 cv
252.004 328.672 251.848 327.772 251.548 327.172 cv
251.236 326.572 250.78 326.272 250.168 326.272 cv
250.168 325.336 mo
251.14 325.336 251.884 325.732 252.412 326.5 cv
252.928 327.28 253.192 328.408 253.192 329.872 cv
253.192 331.348 252.928 332.476 252.412 333.244 cv
251.884 334.012 251.14 334.396 250.168 334.396 cv
249.184 334.396 248.428 334.012 247.912 333.244 cv
247.396 332.476 247.144 331.348 247.144 329.872 cv
247.144 328.408 247.396 327.28 247.912 326.5 cv
248.428 325.732 249.184 325.336 250.168 325.336 cv
f
257.8 326.272 mo
257.188 326.272 256.732 326.572 256.42 327.172 cv
256.108 327.772 255.964 328.672 255.964 329.872 cv
255.964 331.072 256.108 331.972 256.42 332.572 cv
256.732 333.172 257.188 333.472 257.8 333.472 cv
258.412 333.472 258.868 333.172 259.18 332.572 cv
259.48 331.972 259.636 331.072 259.636 329.872 cv
259.636 328.672 259.48 327.772 259.18 327.172 cv
258.868 326.572 258.412 326.272 257.8 326.272 cv
257.8 325.336 mo
258.772 325.336 259.516 325.732 260.044 326.5 cv
260.56 327.28 260.824 328.408 260.824 329.872 cv
260.824 331.348 260.56 332.476 260.044 333.244 cv
259.516 334.012 258.772 334.396 257.8 334.396 cv
256.816 334.396 256.06 334.012 255.544 333.244 cv
255.028 332.476 254.776 331.348 254.776 329.872 cv
254.776 328.408 255.028 327.28 255.544 326.5 cv
256.06 325.732 256.816 325.336 257.8 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
293.143 321.333 mo
293.143 33.3333 li
@
grestore
293.143 321.333 mo
293.143 317.333 li
f
293.143 321.333 mo
293.143 317.333 li
@
293.143 33.3333 mo
293.143 37.3333 li
f
293.143 33.3333 mo
293.143 37.3333 li
@
280.404 333.244 mo
282.336 333.244 li
282.336 326.572 li
280.236 326.992 li
280.236 325.912 li
282.324 325.492 li
283.512 325.492 li
283.512 333.244 li
285.444 333.244 li
285.444 334.24 li
280.404 334.24 li
280.404 333.244 li
f
288.852 333.244 mo
292.98 333.244 li
292.98 334.24 li
287.424 334.24 li
287.424 333.244 li
287.868 332.788 288.48 332.164 289.26 331.372 cv
290.028 330.592 290.52 330.088 290.724 329.86 cv
291.108 329.44 291.372 329.08 291.516 328.78 cv
291.66 328.492 291.744 328.192 291.744 327.904 cv
291.744 327.448 291.576 327.064 291.252 326.776 cv
290.928 326.488 290.508 326.332 289.98 326.332 cv
289.608 326.332 289.212 326.404 288.804 326.524 cv
288.396 326.656 287.952 326.848 287.484 327.112 cv
287.484 325.912 li
287.964 325.72 288.408 325.576 288.816 325.48 cv
289.224 325.384 289.608 325.336 289.956 325.336 cv
290.856 325.336 291.576 325.564 292.116 326.02 cv
292.656 326.476 292.932 327.076 292.932 327.832 cv
292.932 328.192 292.86 328.54 292.728 328.852 cv
292.596 329.176 292.356 329.56 291.996 329.992 cv
291.9 330.112 291.588 330.436 291.06 330.976 cv
290.532 331.516 289.8 332.272 288.852 333.244 cv
f
297.996 326.272 mo
297.384 326.272 296.928 326.572 296.616 327.172 cv
296.304 327.772 296.16 328.672 296.16 329.872 cv
296.16 331.072 296.304 331.972 296.616 332.572 cv
296.928 333.172 297.384 333.472 297.996 333.472 cv
298.608 333.472 299.064 333.172 299.376 332.572 cv
299.676 331.972 299.832 331.072 299.832 329.872 cv
299.832 328.672 299.676 327.772 299.376 327.172 cv
299.064 326.572 298.608 326.272 297.996 326.272 cv
297.996 325.336 mo
298.968 325.336 299.712 325.732 300.24 326.5 cv
300.756 327.28 301.02 328.408 301.02 329.872 cv
301.02 331.348 300.756 332.476 300.24 333.244 cv
299.712 334.012 298.968 334.396 297.996 334.396 cv
297.012 334.396 296.256 334.012 295.74 333.244 cv
295.224 332.476 294.972 331.348 294.972 329.872 cv
294.972 328.408 295.224 327.28 295.74 326.5 cv
296.256 325.732 297.012 325.336 297.996 325.336 cv
f
305.628 326.272 mo
305.016 326.272 304.56 326.572 304.248 327.172 cv
303.936 327.772 303.792 328.672 303.792 329.872 cv
303.792 331.072 303.936 331.972 304.248 332.572 cv
304.56 333.172 305.016 333.472 305.628 333.472 cv
306.24 333.472 306.696 333.172 307.008 332.572 cv
307.308 331.972 307.464 331.072 307.464 329.872 cv
307.464 328.672 307.308 327.772 307.008 327.172 cv
306.696 326.572 306.24 326.272 305.628 326.272 cv
305.628 325.336 mo
306.6 325.336 307.344 325.732 307.872 326.5 cv
308.388 327.28 308.652 328.408 308.652 329.872 cv
308.652 331.348 308.388 332.476 307.872 333.244 cv
307.344 334.012 306.6 334.396 305.628 334.396 cv
304.644 334.396 303.888 334.012 303.372 333.244 cv
302.856 332.476 302.604 331.348 302.604 329.872 cv
302.604 328.408 302.856 327.28 303.372 326.5 cv
303.888 325.732 304.644 325.336 305.628 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
340.971 321.333 mo
340.971 33.3333 li
@
grestore
340.971 321.333 mo
340.971 317.333 li
f
340.971 321.333 mo
340.971 317.333 li
@
340.971 33.3333 mo
340.971 37.3333 li
f
340.971 33.3333 mo
340.971 37.3333 li
@
328.233 333.244 mo
330.165 333.244 li
330.165 326.572 li
328.065 326.992 li
328.065 325.912 li
330.153 325.492 li
331.341 325.492 li
331.341 333.244 li
333.273 333.244 li
333.273 334.24 li
328.233 334.24 li
328.233 333.244 li
f
338.913 326.524 mo
335.925 331.192 li
338.913 331.192 li
338.913 326.524 li
338.601 325.492 mo
340.089 325.492 li
340.089 331.192 li
341.337 331.192 li
341.337 332.176 li
340.089 332.176 li
340.089 334.24 li
338.913 334.24 li
338.913 332.176 li
334.965 332.176 li
334.965 331.036 li
338.601 325.492 li
f
345.825 326.272 mo
345.213 326.272 344.757 326.572 344.445 327.172 cv
344.133 327.772 343.989 328.672 343.989 329.872 cv
343.989 331.072 344.133 331.972 344.445 332.572 cv
344.757 333.172 345.213 333.472 345.825 333.472 cv
346.437 333.472 346.893 333.172 347.205 332.572 cv
347.505 331.972 347.661 331.072 347.661 329.872 cv
347.661 328.672 347.505 327.772 347.205 327.172 cv
346.893 326.572 346.437 326.272 345.825 326.272 cv
345.825 325.336 mo
346.797 325.336 347.541 325.732 348.069 326.5 cv
348.585 327.28 348.849 328.408 348.849 329.872 cv
348.849 331.348 348.585 332.476 348.069 333.244 cv
347.541 334.012 346.797 334.396 345.825 334.396 cv
344.841 334.396 344.085 334.012 343.569 333.244 cv
343.053 332.476 342.801 331.348 342.801 329.872 cv
342.801 328.408 343.053 327.28 343.569 326.5 cv
344.085 325.732 344.841 325.336 345.825 325.336 cv
f
353.457 326.272 mo
352.845 326.272 352.389 326.572 352.077 327.172 cv
351.765 327.772 351.621 328.672 351.621 329.872 cv
351.621 331.072 351.765 331.972 352.077 332.572 cv
352.389 333.172 352.845 333.472 353.457 333.472 cv
354.069 333.472 354.525 333.172 354.837 332.572 cv
355.137 331.972 355.293 331.072 355.293 329.872 cv
355.293 328.672 355.137 327.772 354.837 327.172 cv
354.525 326.572 354.069 326.272 353.457 326.272 cv
353.457 325.336 mo
354.429 325.336 355.173 325.732 355.701 326.5 cv
356.217 327.28 356.481 328.408 356.481 329.872 cv
356.481 331.348 356.217 332.476 355.701 333.244 cv
355.173 334.012 354.429 334.396 353.457 334.396 cv
352.473 334.396 351.717 334.012 351.201 333.244 cv
350.685 332.476 350.433 331.348 350.433 329.872 cv
350.433 328.408 350.685 327.28 351.201 326.5 cv
351.717 325.732 352.473 325.336 353.457 325.336 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
388.8 321.333 mo
388.8 33.3333 li
@
grestore
388.8 321.333 mo
388.8 317.333 li
f
388.8 321.333 mo
388.8 317.333 li
@
388.8 33.3333 mo
388.8 37.3333 li
f
388.8 33.3333 mo
388.8 37.3333 li
@
376.061 333.244 mo
377.993 333.244 li
377.993 326.572 li
375.893 326.992 li
375.893 325.912 li
377.981 325.492 li
379.169 325.492 li
379.169 333.244 li
381.101 333.244 li
381.101 334.24 li
376.061 334.24 li
376.061 333.244 li
f
386.165 329.392 mo
385.637 329.392 385.217 329.584 384.905 329.944 cv
384.593 330.304 384.437 330.808 384.437 331.432 cv
384.437 332.068 384.593 332.572 384.905 332.932 cv
385.217 333.292 385.637 333.472 386.165 333.472 cv
386.693 333.472 387.113 333.292 387.425 332.932 cv
387.737 332.572 387.893 332.068 387.893 331.432 cv
387.893 330.808 387.737 330.304 387.425 329.944 cv
387.113 329.584 386.693 329.392 386.165 329.392 cv
388.517 325.684 mo
388.517 326.764 li
388.217 326.62 387.917 326.512 387.617 326.44 cv
387.305 326.368 387.005 326.332 386.717 326.332 cv
385.925 326.332 385.325 326.596 384.917 327.124 cv
384.509 327.652 384.269 328.456 384.221 329.512 cv
384.449 329.176 384.737 328.912 385.085 328.732 cv
385.433 328.552 385.817 328.456 386.237 328.456 cv
387.113 328.456 387.809 328.732 388.313 329.26 cv
388.817 329.788 389.081 330.52 389.081 331.432 cv
389.081 332.332 388.805 333.052 388.277 333.592 cv
387.749 334.132 387.041 334.396 386.165 334.396 cv
385.157 334.396 384.377 334.012 383.849 333.244 cv
383.309 332.476 383.045 331.348 383.045 329.872 cv
383.045 328.492 383.369 327.388 384.029 326.572 cv
384.677 325.756 385.565 325.336 386.669 325.336 cv
386.957 325.336 387.257 325.372 387.569 325.42 cv
387.869 325.48 388.181 325.564 388.517 325.684 cv
f
393.653 326.272 mo
393.041 326.272 392.585 326.572 392.273 327.172 cv
391.961 327.772 391.817 328.672 391.817 329.872 cv
391.817 331.072 391.961 331.972 392.273 332.572 cv
392.585 333.172 393.041 333.472 393.653 333.472 cv
394.265 333.472 394.721 333.172 395.033 332.572 cv
395.333 331.972 395.489 331.072 395.489 329.872 cv
395.489 328.672 395.333 327.772 395.033 327.172 cv
394.721 326.572 394.265 326.272 393.653 326.272 cv
393.653 325.336 mo
394.625 325.336 395.369 325.732 395.897 326.5 cv
396.413 327.28 396.677 328.408 396.677 329.872 cv
396.677 331.348 396.413 332.476 395.897 333.244 cv
395.369 334.012 394.625 334.396 393.653 334.396 cv
392.669 334.396 391.913 334.012 391.397 333.244 cv
390.881 332.476 390.629 331.348 390.629 329.872 cv
390.629 328.408 390.881 327.28 391.397 326.5 cv
391.913 325.732 392.669 325.336 393.653 325.336 cv
f
401.285 326.272 mo
400.673 326.272 400.217 326.572 399.905 327.172 cv
399.593 327.772 399.449 328.672 399.449 329.872 cv
399.449 331.072 399.593 331.972 399.905 332.572 cv
400.217 333.172 400.673 333.472 401.285 333.472 cv
401.897 333.472 402.353 333.172 402.665 332.572 cv
402.965 331.972 403.121 331.072 403.121 329.872 cv
403.121 328.672 402.965 327.772 402.665 327.172 cv
402.353 326.572 401.897 326.272 401.285 326.272 cv
401.285 325.336 mo
402.257 325.336 403.001 325.732 403.529 326.5 cv
404.045 327.28 404.309 328.408 404.309 329.872 cv
404.309 331.348 404.045 332.476 403.529 333.244 cv
403.001 334.012 402.257 334.396 401.285 334.396 cv
400.301 334.396 399.545 334.012 399.029 333.244 cv
398.513 332.476 398.261 331.348 398.261 329.872 cv
398.261 328.408 398.513 327.28 399.029 326.5 cv
399.545 325.732 400.301 325.336 401.285 325.336 cv
f
135.438 339.788 mo
142.83 339.788 li
142.83 340.784 li
139.722 340.784 li
139.722 348.536 li
138.535 348.536 li
138.535 340.784 li
135.438 340.784 li
135.438 339.788 li
f
146.466 342.728 mo
145.89 342.728 145.434 342.956 145.098 343.412 cv
144.762 343.868 144.594 344.48 144.594 345.26 cv
144.594 346.052 144.75 346.664 145.086 347.12 cv
145.422 347.576 145.878 347.792 146.466 347.792 cv
147.042 347.792 147.498 347.576 147.834 347.12 cv
148.17 346.664 148.338 346.052 148.338 345.26 cv
148.338 344.492 148.17 343.868 147.834 343.412 cv
147.498 342.956 147.042 342.728 146.466 342.728 cv
146.466 341.816 mo
147.402 341.816 148.134 342.128 148.674 342.728 cv
149.202 343.34 149.478 344.18 149.478 345.26 cv
149.478 346.34 149.202 347.18 148.674 347.78 cv
148.134 348.392 147.402 348.692 146.466 348.692 cv
145.518 348.692 144.774 348.392 144.246 347.78 cv
143.718 347.18 143.454 346.34 143.454 345.26 cv
143.454 344.18 143.718 343.34 144.246 342.728 cv
144.774 342.128 145.518 341.816 146.466 341.816 cv
f
152.334 340.112 mo
152.334 341.972 li
154.554 341.972 li
154.554 342.812 li
152.334 342.812 li
152.334 346.376 li
152.334 346.916 152.406 347.264 152.55 347.408 cv
152.694 347.564 152.994 347.636 153.45 347.636 cv
154.554 347.636 li
154.554 348.536 li
153.45 348.536 li
152.61 348.536 152.034 348.38 151.722 348.068 cv
151.41 347.756 151.254 347.192 151.254 346.376 cv
151.254 342.812 li
150.462 342.812 li
150.462 341.972 li
151.254 341.972 li
151.254 340.112 li
152.334 340.112 li
f
158.958 345.236 mo
158.082 345.236 157.482 345.344 157.146 345.536 cv
156.81 345.74 156.642 346.076 156.642 346.556 cv
156.642 346.94 156.762 347.252 157.014 347.468 cv
157.266 347.696 157.614 347.804 158.046 347.804 cv
158.646 347.804 159.126 347.6 159.486 347.168 cv
159.846 346.748 160.026 346.184 160.026 345.476 cv
160.026 345.236 li
158.958 345.236 li
161.106 344.792 mo
161.106 348.536 li
160.026 348.536 li
160.026 347.54 li
159.774 347.948 159.462 348.236 159.102 348.416 cv
158.742 348.596 158.286 348.692 157.758 348.692 cv
157.086 348.692 156.546 348.512 156.15 348.14 cv
155.754 347.768 155.562 347.264 155.562 346.628 cv
155.562 345.896 155.802 345.344 156.306 344.96 cv
156.798 344.588 157.53 344.396 158.514 344.396 cv
160.026 344.396 li
160.026 344.288 li
160.026 343.796 159.858 343.412 159.534 343.136 cv
159.21 342.872 158.754 342.728 158.166 342.728 cv
157.782 342.728 157.422 342.776 157.062 342.872 cv
156.702 342.968 156.366 343.1 156.042 343.268 cv
156.042 342.272 li
156.426 342.128 156.81 342.008 157.182 341.936 cv
157.554 341.864 157.914 341.816 158.274 341.816 cv
159.222 341.816 159.93 342.068 160.398 342.56 cv
160.866 343.052 161.106 343.796 161.106 344.792 cv
f
163.326 339.416 mo
164.406 339.416 li
164.406 348.536 li
163.326 348.536 li
163.326 339.416 li
f
175.938 344.576 mo
175.938 348.536 li
174.858 348.536 li
174.858 344.612 li
174.858 343.988 174.726 343.532 174.486 343.22 cv
174.246 342.908 173.886 342.752 173.406 342.752 cv
172.818 342.752 172.362 342.944 172.026 343.316 cv
171.69 343.688 171.522 344.192 171.522 344.828 cv
171.522 348.536 li
170.442 348.536 li
170.442 341.972 li
171.522 341.972 li
171.522 342.992 li
171.774 342.608 172.074 342.308 172.434 342.116 cv
172.782 341.924 173.19 341.816 173.646 341.816 cv
174.39 341.816 174.966 342.056 175.35 342.524 cv
175.734 342.992 175.938 343.676 175.938 344.576 cv
f
177.978 345.944 mo
177.978 341.972 li
179.058 341.972 li
179.058 345.908 li
179.058 346.532 179.178 346.988 179.418 347.3 cv
179.658 347.612 180.018 347.768 180.51 347.768 cv
181.086 347.768 181.554 347.588 181.89 347.216 cv
182.226 346.844 182.394 346.34 182.394 345.692 cv
182.394 341.972 li
183.474 341.972 li
183.474 348.536 li
182.394 348.536 li
182.394 347.528 li
182.13 347.936 181.818 348.224 181.482 348.416 cv
181.134 348.596 180.738 348.692 180.282 348.692 cv
179.526 348.692 178.95 348.464 178.566 347.996 cv
178.17 347.54 177.978 346.856 177.978 345.944 cv
f
190.806 343.232 mo
191.07 342.752 191.394 342.404 191.766 342.164 cv
192.138 341.936 192.582 341.816 193.098 341.816 cv
193.77 341.816 194.298 342.056 194.67 342.536 cv
195.042 343.016 195.234 343.7 195.234 344.576 cv
195.234 348.536 li
194.154 348.536 li
194.154 344.612 li
194.154 343.988 194.034 343.52 193.818 343.208 cv
193.59 342.908 193.254 342.752 192.798 342.752 cv
192.234 342.752 191.79 342.944 191.466 343.316 cv
191.142 343.688 190.986 344.192 190.986 344.828 cv
190.986 348.536 li
189.906 348.536 li
189.906 344.612 li
189.906 343.988 189.786 343.52 189.57 343.208 cv
189.342 342.908 188.994 342.752 188.538 342.752 cv
187.986 342.752 187.542 342.944 187.218 343.316 cv
186.894 343.688 186.738 344.192 186.738 344.828 cv
186.738 348.536 li
185.658 348.536 li
185.658 341.972 li
186.738 341.972 li
186.738 342.992 li
186.978 342.596 187.278 342.296 187.626 342.104 cv
187.962 341.912 188.37 341.816 188.85 341.816 cv
189.33 341.816 189.726 341.936 190.062 342.176 cv
190.398 342.416 190.638 342.776 190.806 343.232 cv
f
202.098 345.26 mo
202.098 344.468 201.93 343.856 201.606 343.4 cv
201.27 342.944 200.826 342.716 200.262 342.716 cv
199.686 342.716 199.242 342.944 198.918 343.4 cv
198.582 343.856 198.426 344.468 198.426 345.26 cv
198.426 346.052 198.582 346.676 198.918 347.132 cv
199.242 347.588 199.686 347.804 200.262 347.804 cv
200.826 347.804 201.27 347.588 201.606 347.132 cv
201.93 346.676 202.098 346.052 202.098 345.26 cv
198.426 342.968 mo
198.642 342.584 198.93 342.296 199.278 342.104 cv
199.626 341.912 200.046 341.816 200.526 341.816 cv
201.318 341.816 201.966 342.14 202.47 342.764 cv
202.962 343.4 203.214 344.228 203.214 345.26 cv
203.214 346.292 202.962 347.132 202.47 347.756 cv
201.966 348.38 201.318 348.692 200.526 348.692 cv
200.046 348.692 199.626 348.596 199.278 348.416 cv
198.93 348.236 198.642 347.948 198.426 347.552 cv
198.426 348.536 li
197.346 348.536 li
197.346 339.416 li
198.426 339.416 li
198.426 342.968 li
f
210.618 344.984 mo
210.618 345.512 li
205.662 345.512 li
205.71 346.256 205.926 346.832 206.334 347.216 cv
206.73 347.6 207.282 347.792 208.002 347.792 cv
208.41 347.792 208.818 347.744 209.202 347.648 cv
209.586 347.552 209.982 347.396 210.366 347.18 cv
210.366 348.2 li
209.982 348.368 209.586 348.5 209.178 348.572 cv
208.77 348.644 208.35 348.692 207.942 348.692 cv
206.886 348.692 206.058 348.392 205.446 347.792 cv
204.834 347.192 204.534 346.364 204.534 345.32 cv
204.534 344.252 204.822 343.4 205.398 342.764 cv
205.974 342.14 206.766 341.816 207.75 341.816 cv
208.638 341.816 209.334 342.104 209.85 342.668 cv
210.354 343.244 210.618 344.012 210.618 344.984 cv
209.538 344.672 mo
209.526 344.084 209.358 343.616 209.046 343.256 cv
208.722 342.908 208.29 342.728 207.762 342.728 cv
207.162 342.728 206.682 342.908 206.322 343.244 cv
205.962 343.58 205.746 344.06 205.698 344.672 cv
209.538 344.672 li
f
216.186 342.98 mo
216.066 342.908 215.934 342.86 215.79 342.824 cv
215.646 342.8 215.49 342.776 215.322 342.776 cv
214.71 342.776 214.242 342.98 213.918 343.376 cv
213.582 343.772 213.426 344.336 213.426 345.08 cv
213.426 348.536 li
212.346 348.536 li
212.346 341.972 li
213.426 341.972 li
213.426 342.992 li
213.642 342.596 213.942 342.296 214.302 342.104 cv
214.662 341.912 215.106 341.816 215.634 341.816 cv
215.706 341.816 215.79 341.828 215.886 341.828 cv
215.97 341.84 216.066 341.852 216.186 341.876 cv
216.186 342.98 li
f
223.674 342.728 mo
223.098 342.728 222.642 342.956 222.306 343.412 cv
221.97 343.868 221.802 344.48 221.802 345.26 cv
221.802 346.052 221.958 346.664 222.294 347.12 cv
222.63 347.576 223.086 347.792 223.674 347.792 cv
224.25 347.792 224.706 347.576 225.042 347.12 cv
225.378 346.664 225.546 346.052 225.546 345.26 cv
225.546 344.492 225.378 343.868 225.042 343.412 cv
224.706 342.956 224.25 342.728 223.674 342.728 cv
223.674 341.816 mo
224.61 341.816 225.342 342.128 225.882 342.728 cv
226.41 343.34 226.686 344.18 226.686 345.26 cv
226.686 346.34 226.41 347.18 225.882 347.78 cv
225.342 348.392 224.61 348.692 223.674 348.692 cv
222.726 348.692 221.982 348.392 221.454 347.78 cv
220.926 347.18 220.662 346.34 220.662 345.26 cv
220.662 344.18 220.926 343.34 221.454 342.728 cv
221.982 342.128 222.726 341.816 223.674 341.816 cv
f
231.798 339.416 mo
231.798 340.316 li
230.766 340.316 li
230.382 340.316 230.106 340.4 229.962 340.556 cv
229.806 340.712 229.734 340.988 229.734 341.396 cv
229.734 341.972 li
231.51 341.972 li
231.51 342.812 li
229.734 342.812 li
229.734 348.536 li
228.654 348.536 li
228.654 342.812 li
227.622 342.812 li
227.622 341.972 li
228.654 341.972 li
228.654 341.516 li
228.654 340.796 228.822 340.256 229.158 339.92 cv
229.494 339.584 230.034 339.416 230.778 339.416 cv
231.798 339.416 li
f
241.974 344.576 mo
241.974 348.536 li
240.894 348.536 li
240.894 344.612 li
240.894 343.988 240.762 343.532 240.522 343.22 cv
240.282 342.908 239.922 342.752 239.442 342.752 cv
238.854 342.752 238.398 342.944 238.062 343.316 cv
237.726 343.688 237.558 344.192 237.558 344.828 cv
237.558 348.536 li
236.478 348.536 li
236.478 339.416 li
237.558 339.416 li
237.558 342.992 li
237.81 342.608 238.11 342.308 238.47 342.116 cv
238.818 341.924 239.226 341.816 239.682 341.816 cv
240.426 341.816 241.002 342.056 241.386 342.524 cv
241.77 342.992 241.974 343.676 241.974 344.576 cv
f
244.122 341.972 mo
245.202 341.972 li
245.202 348.536 li
244.122 348.536 li
244.122 341.972 li
244.122 339.416 mo
245.202 339.416 li
245.202 340.784 li
244.122 340.784 li
244.122 339.416 li
f
251.778 342.968 mo
251.778 339.416 li
252.858 339.416 li
252.858 348.536 li
251.778 348.536 li
251.778 347.552 li
251.55 347.948 251.262 348.236 250.914 348.416 cv
250.566 348.596 250.158 348.692 249.678 348.692 cv
248.886 348.692 248.238 348.38 247.734 347.756 cv
247.23 347.132 246.99 346.292 246.99 345.26 cv
246.99 344.228 247.23 343.4 247.734 342.764 cv
248.238 342.14 248.886 341.816 249.678 341.816 cv
250.158 341.816 250.566 341.912 250.914 342.104 cv
251.262 342.296 251.55 342.584 251.778 342.968 cv
248.106 345.26 mo
248.106 346.052 248.262 346.676 248.586 347.132 cv
248.91 347.588 249.366 347.804 249.942 347.804 cv
250.506 347.804 250.95 347.588 251.286 347.132 cv
251.61 346.676 251.778 346.052 251.778 345.26 cv
251.778 344.468 251.61 343.856 251.286 343.4 cv
250.95 342.944 250.506 342.716 249.942 342.716 cv
249.366 342.716 248.91 342.944 248.586 343.4 cv
248.262 343.856 248.106 344.468 248.106 345.26 cv
f
259.398 342.968 mo
259.398 339.416 li
260.478 339.416 li
260.478 348.536 li
259.398 348.536 li
259.398 347.552 li
259.17 347.948 258.882 348.236 258.534 348.416 cv
258.186 348.596 257.778 348.692 257.298 348.692 cv
256.506 348.692 255.858 348.38 255.354 347.756 cv
254.85 347.132 254.61 346.292 254.61 345.26 cv
254.61 344.228 254.85 343.4 255.354 342.764 cv
255.858 342.14 256.506 341.816 257.298 341.816 cv
257.778 341.816 258.186 341.912 258.534 342.104 cv
258.882 342.296 259.17 342.584 259.398 342.968 cv
255.726 345.26 mo
255.726 346.052 255.882 346.676 256.206 347.132 cv
256.53 347.588 256.986 347.804 257.562 347.804 cv
258.126 347.804 258.57 347.588 258.906 347.132 cv
259.23 346.676 259.398 346.052 259.398 345.26 cv
259.398 344.468 259.23 343.856 258.906 343.4 cv
258.57 342.944 258.126 342.716 257.562 342.716 cv
256.986 342.716 256.53 342.944 256.206 343.4 cv
255.882 343.856 255.726 344.468 255.726 345.26 cv
f
268.314 344.984 mo
268.314 345.512 li
263.358 345.512 li
263.406 346.256 263.622 346.832 264.03 347.216 cv
264.426 347.6 264.978 347.792 265.698 347.792 cv
266.106 347.792 266.514 347.744 266.898 347.648 cv
267.282 347.552 267.678 347.396 268.062 347.18 cv
268.062 348.2 li
267.678 348.368 267.282 348.5 266.874 348.572 cv
266.466 348.644 266.046 348.692 265.638 348.692 cv
264.582 348.692 263.754 348.392 263.142 347.792 cv
262.53 347.192 262.23 346.364 262.23 345.32 cv
262.23 344.252 262.518 343.4 263.094 342.764 cv
263.67 342.14 264.462 341.816 265.446 341.816 cv
266.334 341.816 267.03 342.104 267.546 342.668 cv
268.05 343.244 268.314 344.012 268.314 344.984 cv
267.234 344.672 mo
267.222 344.084 267.054 343.616 266.742 343.256 cv
266.418 342.908 265.986 342.728 265.458 342.728 cv
264.858 342.728 264.378 342.908 264.018 343.244 cv
263.658 343.58 263.442 344.06 263.394 344.672 cv
267.234 344.672 li
f
275.538 344.576 mo
275.538 348.536 li
274.458 348.536 li
274.458 344.612 li
274.458 343.988 274.326 343.532 274.086 343.22 cv
273.846 342.908 273.486 342.752 273.006 342.752 cv
272.418 342.752 271.962 342.944 271.626 343.316 cv
271.29 343.688 271.122 344.192 271.122 344.828 cv
271.122 348.536 li
270.042 348.536 li
270.042 341.972 li
271.122 341.972 li
271.122 342.992 li
271.374 342.608 271.674 342.308 272.034 342.116 cv
272.382 341.924 272.79 341.816 273.246 341.816 cv
273.99 341.816 274.566 342.056 274.95 342.524 cv
275.334 342.992 275.538 343.676 275.538 344.576 cv
f
281.394 345.944 mo
281.394 341.972 li
282.474 341.972 li
282.474 345.908 li
282.474 346.532 282.594 346.988 282.834 347.3 cv
283.074 347.612 283.434 347.768 283.926 347.768 cv
284.502 347.768 284.97 347.588 285.306 347.216 cv
285.642 346.844 285.81 346.34 285.81 345.692 cv
285.81 341.972 li
286.89 341.972 li
286.89 348.536 li
285.81 348.536 li
285.81 347.528 li
285.546 347.936 285.234 348.224 284.898 348.416 cv
284.55 348.596 284.154 348.692 283.698 348.692 cv
282.942 348.692 282.366 348.464 281.982 347.996 cv
281.586 347.54 281.394 346.856 281.394 345.944 cv
f
294.57 344.576 mo
294.57 348.536 li
293.49 348.536 li
293.49 344.612 li
293.49 343.988 293.358 343.532 293.118 343.22 cv
292.878 342.908 292.518 342.752 292.038 342.752 cv
291.45 342.752 290.994 342.944 290.658 343.316 cv
290.322 343.688 290.154 344.192 290.154 344.828 cv
290.154 348.536 li
289.074 348.536 li
289.074 341.972 li
290.154 341.972 li
290.154 342.992 li
290.406 342.608 290.706 342.308 291.066 342.116 cv
291.414 341.924 291.822 341.816 292.278 341.816 cv
293.022 341.816 293.598 342.056 293.982 342.524 cv
294.366 342.992 294.57 343.676 294.57 344.576 cv
f
296.718 341.972 mo
297.798 341.972 li
297.798 348.536 li
296.718 348.536 li
296.718 341.972 li
296.718 339.416 mo
297.798 339.416 li
297.798 340.784 li
296.718 340.784 li
296.718 339.416 li
f
301.122 340.112 mo
301.122 341.972 li
303.342 341.972 li
303.342 342.812 li
301.122 342.812 li
301.122 346.376 li
301.122 346.916 301.194 347.264 301.338 347.408 cv
301.482 347.564 301.782 347.636 302.238 347.636 cv
303.342 347.636 li
303.342 348.536 li
302.238 348.536 li
301.398 348.536 300.822 348.38 300.51 348.068 cv
300.198 347.756 300.042 347.192 300.042 346.376 cv
300.042 342.812 li
299.25 342.812 li
299.25 341.972 li
300.042 341.972 li
300.042 340.112 li
301.122 340.112 li
f
308.946 342.164 mo
308.946 343.184 li
308.634 343.04 308.322 342.92 307.998 342.836 cv
307.662 342.764 307.326 342.716 306.978 342.716 cv
306.438 342.716 306.03 342.8 305.766 342.968 cv
305.502 343.136 305.37 343.376 305.37 343.7 cv
305.37 343.952 305.466 344.144 305.658 344.288 cv
305.85 344.432 306.234 344.576 306.81 344.696 cv
307.182 344.78 li
307.95 344.948 308.49 345.188 308.814 345.476 cv
309.126 345.776 309.294 346.196 309.294 346.724 cv
309.294 347.336 309.054 347.816 308.574 348.164 cv
308.094 348.524 307.422 348.692 306.582 348.692 cv
306.222 348.692 305.862 348.656 305.478 348.596 cv
305.094 348.536 304.698 348.44 304.278 348.296 cv
304.278 347.18 li
304.674 347.396 305.07 347.552 305.454 347.648 cv
305.838 347.756 306.222 347.804 306.606 347.804 cv
307.11 347.804 307.506 347.72 307.782 347.552 cv
308.046 347.384 308.19 347.132 308.19 346.808 cv
308.19 346.52 308.082 346.292 307.89 346.136 cv
307.698 345.98 307.266 345.824 306.594 345.68 cv
306.222 345.596 li
305.55 345.452 305.058 345.236 304.77 344.948 cv
304.47 344.66 304.326 344.264 304.326 343.748 cv
304.326 343.136 304.542 342.656 304.974 342.32 cv
305.406 341.984 306.03 341.816 306.846 341.816 cv
307.242 341.816 307.614 341.852 307.974 341.912 cv
308.322 341.972 308.646 342.056 308.946 342.164 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
54 321.333 mo
388.8 321.333 li
@
grestore
54 321.333 mo
58 321.333 li
f
54 321.333 mo
58 321.333 li
@
388.8 321.333 mo
384.8 321.333 li
f
388.8 321.333 mo
384.8 321.333 li
@
36.566 317.733 mo
35.954 317.733 35.498 318.033 35.186 318.633 cv
34.874 319.233 34.73 320.133 34.73 321.333 cv
34.73 322.533 34.874 323.433 35.186 324.033 cv
35.498 324.633 35.954 324.933 36.566 324.933 cv
37.178 324.933 37.634 324.633 37.946 324.033 cv
38.246 323.433 38.402 322.533 38.402 321.333 cv
38.402 320.133 38.246 319.233 37.946 318.633 cv
37.634 318.033 37.178 317.733 36.566 317.733 cv
36.566 316.797 mo
37.538 316.797 38.282 317.193 38.81 317.961 cv
39.326 318.741 39.59 319.869 39.59 321.333 cv
39.59 322.809 39.326 323.937 38.81 324.705 cv
38.282 325.473 37.538 325.857 36.566 325.857 cv
35.582 325.857 34.826 325.473 34.31 324.705 cv
33.794 323.937 33.542 322.809 33.542 321.333 cv
33.542 319.869 33.794 318.741 34.31 317.961 cv
34.826 317.193 35.582 316.797 36.566 316.797 cv
f
41.666 324.213 mo
42.902 324.213 li
42.902 325.701 li
41.666 325.701 li
41.666 324.213 li
f
45.4939 316.953 mo
50.1379 316.953 li
50.1379 317.949 li
46.5739 317.949 li
46.5739 320.097 li
46.7419 320.037 46.9219 319.989 47.0899 319.965 cv
47.2579 319.941 47.4379 319.917 47.6059 319.917 cv
48.5779 319.917 49.3459 320.193 49.9219 320.721 cv
50.4979 321.261 50.7859 321.981 50.7859 322.893 cv
50.7859 323.841 50.4859 324.573 49.8979 325.089 cv
49.3099 325.605 48.4819 325.857 47.4259 325.857 cv
47.0539 325.857 46.6819 325.821 46.2979 325.773 cv
45.9139 325.713 45.5299 325.629 45.1219 325.497 cv
45.1219 324.309 li
45.4699 324.501 45.8299 324.645 46.2139 324.741 cv
46.5859 324.837 46.9819 324.873 47.4019 324.873 cv
48.0739 324.873 48.6139 324.705 49.0099 324.345 cv
49.3939 323.985 49.5979 323.505 49.5979 322.893 cv
49.5979 322.293 49.3939 321.813 49.0099 321.453 cv
48.6139 321.093 48.0739 320.913 47.4019 320.913 cv
47.0899 320.913 46.7659 320.949 46.4539 321.021 cv
46.1419 321.093 45.8179 321.201 45.4939 321.345 cv
45.4939 316.953 li
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
54 260.057 mo
388.8 260.057 li
@
grestore
54 260.057 mo
58 260.057 li
f
54 260.057 mo
58 260.057 li
@
388.8 260.057 mo
384.8 260.057 li
f
388.8 260.057 mo
384.8 260.057 li
@
36.2848 256.456 mo
35.6727 256.456 35.2168 256.756 34.9048 257.356 cv
34.5928 257.956 34.4487 258.856 34.4487 260.056 cv
34.4487 261.256 34.5928 262.156 34.9048 262.756 cv
35.2168 263.356 35.6727 263.656 36.2848 263.656 cv
36.8968 263.656 37.3527 263.356 37.6647 262.756 cv
37.9647 262.156 38.1208 261.256 38.1208 260.056 cv
38.1208 258.856 37.9647 257.956 37.6647 257.356 cv
37.3527 256.756 36.8968 256.456 36.2848 256.456 cv
36.2848 255.52 mo
37.2568 255.52 38.0008 255.916 38.5288 256.684 cv
39.0448 257.464 39.3088 258.592 39.3088 260.056 cv
39.3088 261.532 39.0448 262.66 38.5288 263.428 cv
38.0008 264.196 37.2568 264.58 36.2848 264.58 cv
35.3008 264.58 34.5448 264.196 34.0288 263.428 cv
33.5127 262.66 33.2607 261.532 33.2607 260.056 cv
33.2607 258.592 33.5127 257.464 34.0288 256.684 cv
34.5448 255.916 35.3008 255.52 36.2848 255.52 cv
f
41.3848 262.936 mo
42.6208 262.936 li
42.6208 264.424 li
41.3848 264.424 li
41.3848 262.936 li
f
47.8767 259.576 mo
47.3487 259.576 46.9287 259.768 46.6167 260.128 cv
46.3047 260.488 46.1487 260.992 46.1487 261.616 cv
46.1487 262.252 46.3047 262.756 46.6167 263.116 cv
46.9287 263.476 47.3487 263.656 47.8767 263.656 cv
48.4047 263.656 48.8247 263.476 49.1367 263.116 cv
49.4487 262.756 49.6047 262.252 49.6047 261.616 cv
49.6047 260.992 49.4487 260.488 49.1367 260.128 cv
48.8247 259.768 48.4047 259.576 47.8767 259.576 cv
50.2287 255.868 mo
50.2287 256.948 li
49.9287 256.804 49.6287 256.696 49.3287 256.624 cv
49.0167 256.552 48.7167 256.516 48.4287 256.516 cv
47.6367 256.516 47.0367 256.78 46.6287 257.308 cv
46.2207 257.836 45.9807 258.64 45.9327 259.696 cv
46.1607 259.36 46.4487 259.096 46.7967 258.916 cv
47.1447 258.736 47.5287 258.64 47.9487 258.64 cv
48.8247 258.64 49.5207 258.916 50.0247 259.444 cv
50.5287 259.972 50.7927 260.704 50.7927 261.616 cv
50.7927 262.516 50.5167 263.236 49.9887 263.776 cv
49.4607 264.316 48.7527 264.58 47.8767 264.58 cv
46.8687 264.58 46.0887 264.196 45.5607 263.428 cv
45.0207 262.66 44.7567 261.532 44.7567 260.056 cv
44.7567 258.676 45.0807 257.572 45.7407 256.756 cv
46.3887 255.94 47.2767 255.52 48.3807 255.52 cv
48.6687 255.52 48.9687 255.556 49.2807 255.604 cv
49.5807 255.664 49.8927 255.748 50.2287 255.868 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
54 198.78 mo
388.8 198.78 li
@
grestore
54 198.78 mo
58 198.78 li
f
54 198.78 mo
58 198.78 li
@
388.8 198.78 mo
384.8 198.78 li
f
388.8 198.78 mo
384.8 198.78 li
@
36.5504 195.179 mo
35.9384 195.179 35.4824 195.479 35.1704 196.079 cv
34.8584 196.679 34.7144 197.579 34.7144 198.779 cv
34.7144 199.979 34.8584 200.879 35.1704 201.479 cv
35.4824 202.079 35.9384 202.379 36.5504 202.379 cv
37.1624 202.379 37.6184 202.079 37.9304 201.479 cv
38.2304 200.879 38.3864 199.979 38.3864 198.779 cv
38.3864 197.579 38.2304 196.679 37.9304 196.079 cv
37.6184 195.479 37.1624 195.179 36.5504 195.179 cv
36.5504 194.243 mo
37.5224 194.243 38.2664 194.639 38.7944 195.407 cv
39.3104 196.187 39.5744 197.315 39.5744 198.779 cv
39.5744 200.255 39.3104 201.383 38.7944 202.151 cv
38.2664 202.919 37.5224 203.303 36.5504 203.303 cv
35.5664 203.303 34.8104 202.919 34.2944 202.151 cv
33.7784 201.383 33.5264 200.255 33.5264 198.779 cv
33.5264 197.315 33.7784 196.187 34.2944 195.407 cv
34.8104 194.639 35.5664 194.243 36.5504 194.243 cv
f
41.6504 201.659 mo
42.8864 201.659 li
42.8864 203.147 li
41.6504 203.147 li
41.6504 201.659 li
f
45.1663 194.399 mo
50.7943 194.399 li
50.7943 194.903 li
47.6143 203.147 li
46.3783 203.147 li
49.3663 195.395 li
45.1663 195.395 li
45.1663 194.399 li
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
54 137.504 mo
388.8 137.504 li
@
grestore
54 137.504 mo
58 137.504 li
f
54 137.504 mo
58 137.504 li
@
388.8 137.504 mo
384.8 137.504 li
f
388.8 137.504 mo
384.8 137.504 li
@
36.3473 133.903 mo
35.7352 133.903 35.2793 134.203 34.9673 134.803 cv
34.6553 135.403 34.5112 136.303 34.5112 137.503 cv
34.5112 138.703 34.6553 139.603 34.9673 140.203 cv
35.2793 140.803 35.7352 141.103 36.3473 141.103 cv
36.9593 141.103 37.4152 140.803 37.7272 140.203 cv
38.0272 139.603 38.1833 138.703 38.1833 137.503 cv
38.1833 136.303 38.0272 135.403 37.7272 134.803 cv
37.4152 134.203 36.9593 133.903 36.3473 133.903 cv
36.3473 132.967 mo
37.3193 132.967 38.0633 133.363 38.5913 134.131 cv
39.1073 134.911 39.3713 136.039 39.3713 137.503 cv
39.3713 138.979 39.1073 140.107 38.5913 140.875 cv
38.0633 141.643 37.3193 142.027 36.3473 142.027 cv
35.3633 142.027 34.6073 141.643 34.0913 140.875 cv
33.5752 140.107 33.3232 138.979 33.3232 137.503 cv
33.3232 136.039 33.5752 134.911 34.0913 134.131 cv
34.6073 133.363 35.3633 132.967 36.3473 132.967 cv
f
41.4473 140.383 mo
42.6833 140.383 li
42.6833 141.871 li
41.4473 141.871 li
41.4473 140.383 li
f
47.7952 137.719 mo
47.2312 137.719 46.7872 137.875 46.4632 138.175 cv
46.1392 138.475 45.9832 138.883 45.9832 139.411 cv
45.9832 139.939 46.1392 140.359 46.4632 140.659 cv
46.7872 140.959 47.2312 141.103 47.7952 141.103 cv
48.3472 141.103 48.7912 140.959 49.1152 140.647 cv
49.4392 140.347 49.6072 139.939 49.6072 139.411 cv
49.6072 138.883 49.4392 138.475 49.1272 138.175 cv
48.8032 137.875 48.3592 137.719 47.7952 137.719 cv
46.6072 137.215 mo
46.1032 137.095 45.7072 136.855 45.4192 136.507 cv
45.1312 136.159 44.9992 135.739 44.9992 135.235 cv
44.9992 134.539 45.2392 133.987 45.7432 133.579 cv
46.2352 133.171 46.9192 132.967 47.7952 132.967 cv
48.6592 132.967 49.3432 133.171 49.8472 133.579 cv
50.3392 133.987 50.5912 134.539 50.5912 135.235 cv
50.5912 135.739 50.4472 136.159 50.1592 136.507 cv
49.8712 136.855 49.4872 137.095 48.9832 137.215 cv
49.5472 137.347 49.9912 137.611 50.3152 137.995 cv
50.6272 138.379 50.7952 138.859 50.7952 139.411 cv
50.7952 140.263 50.5312 140.911 50.0152 141.355 cv
49.4872 141.811 48.7552 142.027 47.7952 142.027 cv
46.8232 142.027 46.0792 141.811 45.5632 141.355 cv
45.0472 140.911 44.7952 140.263 44.7952 139.411 cv
44.7952 138.859 44.9512 138.379 45.2752 137.995 cv
45.5872 137.611 46.0312 137.347 46.6072 137.215 cv
46.1752 135.343 mo
46.1752 135.799 46.3072 136.159 46.5952 136.411 cv
46.8832 136.663 47.2792 136.783 47.7952 136.783 cv
48.2992 136.783 48.6952 136.663 48.9832 136.411 cv
49.2712 136.159 49.4152 135.799 49.4152 135.343 cv
49.4152 134.887 49.2712 134.539 48.9832 134.287 cv
48.6952 134.035 48.2992 133.903 47.7952 133.903 cv
47.2792 133.903 46.8832 134.035 46.5952 134.287 cv
46.3072 134.539 46.1752 134.887 46.1752 135.343 cv
f
gsave
54 321.333 mo
388.8 321.333 li
388.8 33.3333 li
54 33.3333 li
54 321.333 li
cp
clp
[1 3 ] 0 dsh
54 76.227 mo
388.8 76.227 li
@
grestore
54 76.227 mo
58 76.227 li
f
54 76.227 mo
58 76.227 li
@
388.8 76.227 mo
384.8 76.227 li
f
388.8 76.227 mo
384.8 76.227 li
@
36.3629 72.6262 mo
35.7509 72.6262 35.2949 72.9261 34.9829 73.5261 cv
34.6709 74.1262 34.5269 75.0261 34.5269 76.2261 cv
34.5269 77.4261 34.6709 78.3261 34.9829 78.9261 cv
35.2949 79.5261 35.7509 79.8261 36.3629 79.8261 cv
36.9749 79.8261 37.4309 79.5261 37.7429 78.9261 cv
38.0429 78.3261 38.1989 77.4261 38.1989 76.2261 cv
38.1989 75.0261 38.0429 74.1262 37.7429 73.5261 cv
37.4309 72.9261 36.9749 72.6262 36.3629 72.6262 cv
36.3629 71.6901 mo
37.3349 71.6901 38.0789 72.0861 38.6069 72.8541 cv
39.1229 73.6341 39.3869 74.7621 39.3869 76.2261 cv
39.3869 77.7021 39.1229 78.8301 38.6069 79.5981 cv
38.0789 80.3661 37.3349 80.7501 36.3629 80.7501 cv
35.3789 80.7501 34.6229 80.3661 34.1069 79.5981 cv
33.5909 78.8301 33.3389 77.7021 33.3389 76.2261 cv
33.3389 74.7621 33.5909 73.6341 34.1069 72.8541 cv
34.6229 72.0861 35.3789 71.6901 36.3629 71.6901 cv
f
41.4629 79.1061 mo
42.6989 79.1061 li
42.6989 80.5941 li
41.4629 80.5941 li
41.4629 79.1061 li
f
45.3148 80.4141 mo
45.3148 79.3341 li
45.6028 79.4781 45.9028 79.5861 46.2148 79.6581 cv
46.5148 79.7301 46.8148 79.7661 47.1148 79.7661 cv
47.8828 79.7661 48.4828 79.5142 48.8908 78.9861 cv
49.2988 78.4582 49.5388 77.6661 49.6108 76.5861 cv
49.3708 76.9221 49.0828 77.1861 48.7468 77.3661 cv
48.3988 77.5461 48.0148 77.6301 47.5948 77.6301 cv
46.7068 77.6301 46.0108 77.3661 45.5068 76.8381 cv
45.0028 76.3101 44.7508 75.5901 44.7508 74.6661 cv
44.7508 73.7781 45.0148 73.0581 45.5428 72.5061 cv
46.0708 71.9661 46.7788 71.6901 47.6668 71.6901 cv
48.6748 71.6901 49.4548 72.0861 49.9828 72.8541 cv
50.5108 73.6341 50.7868 74.7621 50.7868 76.2261 cv
50.7868 77.6181 50.4508 78.7101 49.8028 79.5261 cv
49.1428 80.3421 48.2668 80.7501 47.1628 80.7501 cv
46.8628 80.7501 46.5628 80.7141 46.2628 80.6661 cv
45.9508 80.6181 45.6388 80.5341 45.3148 80.4141 cv
47.6668 76.7061 mo
48.1948 76.7061 48.6148 76.5261 48.9268 76.1661 cv
49.2388 75.8061 49.3948 75.3021 49.3948 74.6661 cv
49.3948 74.0421 49.2388 73.5381 48.9268 73.1782 cv
48.6148 72.8181 48.1948 72.6262 47.6668 72.6262 cv
47.1388 72.6262 46.7188 72.8181 46.4068 73.1782 cv
46.0948 73.5381 45.9388 74.0421 45.9388 74.6661 cv
45.9388 75.3021 46.0948 75.8061 46.4068 76.1661 cv
46.7188 76.5261 47.1388 76.7061 47.6668 76.7061 cv
f
19.7129 185.542 mo
24.0689 187.15 li
24.0689 183.934 li
19.7129 185.542 li
18.5489 186.214 mo
18.5489 184.87 li
27.2969 181.534 li
27.2969 182.77 li
25.0529 183.562 li
25.0529 187.51 li
27.2969 188.302 li
27.2969 189.55 li
18.5489 186.214 li
f
18.5489 180.394 mo
18.5489 179.206 li
23.8649 179.206 li
24.8009 179.206 25.4849 179.038 25.8929 178.702 cv
26.3009 178.366 26.5049 177.814 26.5049 177.046 cv
26.5049 176.29 26.3009 175.738 25.8929 175.402 cv
25.4849 175.066 24.8009 174.886 23.8649 174.886 cv
18.5489 174.886 li
18.5489 173.698 li
24.0089 173.698 li
25.1609 173.698 26.0129 173.986 26.5889 174.55 cv
27.1649 175.114 27.4529 175.942 27.4529 177.046 cv
27.4529 178.15 27.1649 178.99 26.5889 179.554 cv
26.0129 180.118 25.1609 180.394 24.0089 180.394 cv
18.5489 180.394 li
f
19.2209 164.926 mo
20.4689 164.926 li
20.1089 165.334 19.8329 165.754 19.6409 166.21 cv
19.4609 166.666 19.3649 167.134 19.3649 167.638 cv
19.3649 168.646 19.6769 169.414 20.2889 169.942 cv
20.9009 170.47 21.7769 170.734 22.9289 170.734 cv
24.0809 170.734 24.9689 170.47 25.5809 169.942 cv
26.1929 169.414 26.4929 168.646 26.4929 167.638 cv
26.4929 167.134 26.4089 166.666 26.2169 166.21 cv
26.0369 165.754 25.7609 165.334 25.3889 164.926 cv
26.6249 164.926 li
26.9129 165.346 27.1169 165.79 27.2489 166.246 cv
27.3809 166.702 27.4529 167.194 27.4529 167.71 cv
27.4529 169.03 27.0569 170.074 26.2529 170.842 cv
25.4489 171.61 24.3449 171.982 22.9289 171.982 cv
21.5249 171.982 20.4209 171.61 19.6049 170.842 cv
18.8009 170.074 18.3929 169.03 18.3929 167.71 cv
18.3929 167.182 18.4649 166.69 18.5969 166.234 cv
18.7409 165.778 18.9449 165.334 19.2209 164.926 cv
f
1 lw
2 lc
54 33.3333 mo
388.8 33.3333 li
@
388.8 321.333 mo
388.8 33.3333 li
@
54 321.333 mo
388.8 321.333 li
@
54 321.333 mo
54 33.3333 li
@
117.901 18.1813 mo
117.901 19.5637 li
117.354 19.3045 116.85 19.1173 116.374 18.9877 cv
115.885 18.8725 115.424 18.8005 114.992 18.8005 cv
114.214 18.8005 113.61 18.9589 113.192 19.2469 cv
112.774 19.5493 112.573 19.9813 112.573 20.5285 cv
112.573 20.9893 112.702 21.3493 112.99 21.5797 cv
113.264 21.8245 113.797 22.0117 114.574 22.1557 cv
115.438 22.3285 li
116.49 22.5301 117.267 22.8901 117.771 23.3941 cv
118.275 23.9125 118.534 24.5893 118.534 25.4389 cv
118.534 26.4613 118.189 27.2245 117.512 27.7429 cv
116.821 28.2613 115.827 28.5205 114.517 28.5205 cv
114.013 28.5205 113.48 28.4629 112.918 28.3621 cv
112.357 28.2613 111.781 28.1029 111.19 27.8725 cv
111.19 26.4037 li
111.766 26.7349 112.328 26.9797 112.875 27.1381 cv
113.422 27.3109 113.97 27.3829 114.517 27.3829 cv
115.323 27.3829 115.942 27.2245 116.389 26.9077 cv
116.821 26.5909 117.051 26.1445 117.051 25.5397 cv
117.051 25.0213 116.893 24.6181 116.576 24.3301 cv
116.259 24.0421 115.741 23.8261 115.021 23.6821 cv
114.157 23.5093 li
113.091 23.3077 112.328 22.9765 111.853 22.5157 cv
111.378 22.0693 111.147 21.4501 111.147 20.6437 cv
111.147 19.7221 111.464 18.9877 112.126 18.4549 cv
112.774 17.9221 113.682 17.6485 114.834 17.6485 cv
115.323 17.6485 115.813 17.6917 116.331 17.7781 cv
116.835 17.8645 117.354 18.0085 117.901 18.1813 cv
f
120.752 17.8357 mo
122.667 17.8357 li
127.318 26.6197 li
127.318 17.8357 li
128.701 17.8357 li
128.701 28.3333 li
126.786 28.3333 li
122.134 19.5493 li
122.134 28.3333 li
120.752 28.3333 li
120.752 17.8357 li
f
131.523 17.8357 mo
133.438 17.8357 li
138.09 26.6197 li
138.09 17.8357 li
139.472 17.8357 li
139.472 28.3333 li
137.557 28.3333 li
132.906 19.5493 li
132.906 28.3333 li
131.523 28.3333 li
131.523 17.8357 li
f
151.856 23.4085 mo
152.158 23.5237 152.461 23.7397 152.749 24.0709 cv
153.037 24.4165 153.325 24.8773 153.613 25.4677 cv
155.053 28.3333 li
153.526 28.3333 li
152.187 25.6405 li
151.842 24.9493 151.496 24.4741 151.179 24.2437 cv
150.848 24.0133 150.402 23.8981 149.84 23.8981 cv
148.299 23.8981 li
148.299 28.3333 li
146.874 28.3333 li
146.874 17.8357 li
150.085 17.8357 li
151.28 17.8357 152.173 18.0949 152.763 18.5845 cv
153.354 19.0885 153.656 19.8517 153.656 20.8597 cv
153.656 21.5221 153.498 22.0837 153.195 22.5157 cv
152.878 22.9477 152.432 23.2501 151.856 23.4085 cv
148.299 19.0021 mo
148.299 22.7317 li
150.085 22.7317 li
150.762 22.7317 151.28 22.5733 151.626 22.2565 cv
151.971 21.9397 152.158 21.4789 152.158 20.8597 cv
152.158 20.2549 151.971 19.7941 151.626 19.4773 cv
151.28 19.1605 150.762 19.0021 150.085 19.0021 cv
148.299 19.0021 li
f
158.307 23.3221 mo
158.307 27.1669 li
160.582 27.1669 li
161.346 27.1669 161.907 27.0085 162.282 26.6917 cv
162.642 26.3749 162.829 25.8997 162.829 25.2373 cv
162.829 24.5893 162.642 24.1141 162.282 23.7973 cv
161.907 23.4805 161.346 23.3221 160.582 23.3221 cv
158.307 23.3221 li
158.307 19.0021 mo
158.307 22.1701 li
160.41 22.1701 li
161.101 22.1701 161.605 22.0405 161.95 21.7813 cv
162.296 21.5221 162.469 21.1333 162.469 20.5861 cv
162.469 20.0677 162.296 19.6645 161.95 19.4053 cv
161.605 19.1461 161.101 19.0021 160.41 19.0021 cv
158.307 19.0021 li
156.882 17.8357 mo
160.51 17.8357 li
161.59 17.8357 162.426 18.0661 163.016 18.5125 cv
163.592 18.9733 163.894 19.6069 163.894 20.4277 cv
163.894 21.0757 163.736 21.5941 163.434 21.9685 cv
163.131 22.3429 162.699 22.5877 162.123 22.6741 cv
162.814 22.8325 163.362 23.1493 163.75 23.6245 cv
164.125 24.0997 164.326 24.6901 164.326 25.3957 cv
164.326 26.3461 163.995 27.0661 163.362 27.5701 cv
162.728 28.0885 161.821 28.3333 160.654 28.3333 cv
156.882 28.3333 li
156.882 17.8357 li
f
166.76 17.8357 mo
168.877 17.8357 li
171.555 24.9781 li
174.248 17.8357 li
176.365 17.8357 li
176.365 28.3333 li
174.983 28.3333 li
174.983 19.1173 li
172.275 26.3173 li
170.85 26.3173 li
168.143 19.1173 li
168.143 28.3333 li
166.76 28.3333 li
166.76 17.8357 li
f
185.192 19.0021 mo
185.192 22.9477 li
186.978 22.9477 li
187.64 22.9477 188.144 22.7893 188.504 22.4437 cv
188.864 22.0981 189.051 21.6085 189.051 20.9749 cv
189.051 20.3413 188.864 19.8661 188.504 19.5205 cv
188.144 19.1749 187.64 19.0021 186.978 19.0021 cv
185.192 19.0021 li
183.766 17.8357 mo
186.978 17.8357 li
188.144 17.8357 189.037 18.1093 189.642 18.6421 cv
190.247 19.1749 190.549 19.9525 190.549 20.9749 cv
190.549 22.0117 190.247 22.8037 189.642 23.3221 cv
189.037 23.8549 188.144 24.1141 186.978 24.1141 cv
185.192 24.1141 li
185.192 28.3333 li
183.766 28.3333 li
183.766 17.8357 li
f
199.131 24.0709 mo
199.131 24.7045 li
193.184 24.7045 li
193.242 25.5973 193.501 26.2885 193.99 26.7493 cv
194.466 27.2101 195.128 27.4405 195.992 27.4405 cv
196.482 27.4405 196.971 27.3829 197.432 27.2677 cv
197.893 27.1525 198.368 26.9653 198.829 26.7061 cv
198.829 27.9301 li
198.368 28.1317 197.893 28.2901 197.403 28.3765 cv
196.914 28.4629 196.41 28.5205 195.92 28.5205 cv
194.653 28.5205 193.659 28.1605 192.925 27.4405 cv
192.19 26.7205 191.83 25.7269 191.83 24.4741 cv
191.83 23.1925 192.176 22.1701 192.867 21.4069 cv
193.558 20.6581 194.509 20.2693 195.69 20.2693 cv
196.755 20.2693 197.59 20.6149 198.21 21.2917 cv
198.814 21.9829 199.131 22.9045 199.131 24.0709 cv
197.835 23.6965 mo
197.821 22.9909 197.619 22.4293 197.245 21.9973 cv
196.856 21.5797 196.338 21.3637 195.704 21.3637 cv
194.984 21.3637 194.408 21.5797 193.976 21.9829 cv
193.544 22.3861 193.285 22.9621 193.227 23.6965 cv
197.835 23.6965 li
f
205.813 21.6661 mo
205.669 21.5797 205.511 21.5221 205.338 21.4789 cv
205.165 21.4501 204.978 21.4213 204.776 21.4213 cv
204.042 21.4213 203.48 21.6661 203.091 22.1413 cv
202.688 22.6165 202.501 23.2933 202.501 24.1861 cv
202.501 28.3333 li
201.205 28.3333 li
201.205 20.4565 li
202.501 20.4565 li
202.501 21.6805 li
202.76 21.2053 203.12 20.8453 203.552 20.6149 cv
203.984 20.3845 204.517 20.2693 205.151 20.2693 cv
205.237 20.2693 205.338 20.2837 205.453 20.2837 cv
205.554 20.2981 205.669 20.3125 205.813 20.3413 cv
205.813 21.6661 li
f
211.155 17.3893 mo
211.155 18.4693 li
209.917 18.4693 li
209.456 18.4693 209.125 18.5701 208.952 18.7573 cv
208.765 18.9445 208.678 19.2757 208.678 19.7653 cv
208.678 20.4565 li
210.81 20.4565 li
210.81 21.4645 li
208.678 21.4645 li
208.678 28.3333 li
207.382 28.3333 li
207.382 21.4645 li
206.144 21.4645 li
206.144 20.4565 li
207.382 20.4565 li
207.382 19.9093 li
207.382 19.0453 207.584 18.3973 207.987 17.9941 cv
208.39 17.5909 209.038 17.3893 209.931 17.3893 cv
211.155 17.3893 li
f
215.288 21.3637 mo
214.597 21.3637 214.05 21.6373 213.647 22.1845 cv
213.243 22.7317 213.042 23.4661 213.042 24.4021 cv
213.042 25.3525 213.229 26.0869 213.632 26.6341 cv
214.035 27.1813 214.583 27.4405 215.288 27.4405 cv
215.979 27.4405 216.527 27.1813 216.93 26.6341 cv
217.333 26.0869 217.535 25.3525 217.535 24.4021 cv
217.535 23.4805 217.333 22.7317 216.93 22.1845 cv
216.527 21.6373 215.979 21.3637 215.288 21.3637 cv
215.288 20.2693 mo
216.411 20.2693 217.29 20.6437 217.938 21.3637 cv
218.571 22.0981 218.903 23.1061 218.903 24.4021 cv
218.903 25.6981 218.571 26.7061 217.938 27.4261 cv
217.29 28.1605 216.411 28.5205 215.288 28.5205 cv
214.151 28.5205 213.258 28.1605 212.624 27.4261 cv
211.991 26.7061 211.674 25.6981 211.674 24.4021 cv
211.674 23.1061 211.991 22.0981 212.624 21.3637 cv
213.258 20.6437 214.151 20.2693 215.288 20.2693 cv
f
225.613 21.6661 mo
225.469 21.5797 225.311 21.5221 225.138 21.4789 cv
224.965 21.4501 224.778 21.4213 224.576 21.4213 cv
223.842 21.4213 223.28 21.6661 222.891 22.1413 cv
222.488 22.6165 222.301 23.2933 222.301 24.1861 cv
222.301 28.3333 li
221.005 28.3333 li
221.005 20.4565 li
222.301 20.4565 li
222.301 21.6805 li
222.56 21.2053 222.92 20.8453 223.352 20.6149 cv
223.784 20.3845 224.317 20.2693 224.951 20.2693 cv
225.037 20.2693 225.138 20.2837 225.253 20.2837 cv
225.354 20.2981 225.469 20.3125 225.613 20.3413 cv
225.613 21.6661 li
f
233.101 21.9685 mo
233.418 21.3925 233.806 20.9749 234.253 20.6869 cv
234.699 20.4133 235.232 20.2693 235.851 20.2693 cv
236.658 20.2693 237.291 20.5573 237.738 21.1333 cv
238.184 21.7093 238.414 22.5301 238.414 23.5813 cv
238.414 28.3333 li
237.118 28.3333 li
237.118 23.6245 li
237.118 22.8757 236.974 22.3141 236.715 21.9397 cv
236.442 21.5797 236.038 21.3925 235.491 21.3925 cv
234.814 21.3925 234.282 21.6229 233.893 22.0693 cv
233.504 22.5157 233.317 23.1205 233.317 23.8837 cv
233.317 28.3333 li
232.021 28.3333 li
232.021 23.6245 li
232.021 22.8757 231.877 22.3141 231.618 21.9397 cv
231.344 21.5797 230.926 21.3925 230.379 21.3925 cv
229.717 21.3925 229.184 21.6229 228.795 22.0693 cv
228.406 22.5157 228.219 23.1205 228.219 23.8837 cv
228.219 28.3333 li
226.923 28.3333 li
226.923 20.4565 li
228.219 20.4565 li
228.219 21.6805 li
228.507 21.2053 228.867 20.8453 229.285 20.6149 cv
229.688 20.3845 230.178 20.2693 230.754 20.2693 cv
231.33 20.2693 231.805 20.4133 232.208 20.7013 cv
232.611 20.9893 232.899 21.4213 233.101 21.9685 cv
f
244.578 24.3733 mo
243.526 24.3733 242.806 24.5029 242.403 24.7333 cv
242 24.9781 241.798 25.3813 241.798 25.9573 cv
241.798 26.4181 241.942 26.7925 242.245 27.0517 cv
242.547 27.3253 242.965 27.4549 243.483 27.4549 cv
244.203 27.4549 244.779 27.2101 245.211 26.6917 cv
245.643 26.1877 245.859 25.5109 245.859 24.6613 cv
245.859 24.3733 li
244.578 24.3733 li
247.155 23.8405 mo
247.155 28.3333 li
245.859 28.3333 li
245.859 27.1381 li
245.557 27.6277 245.182 27.9733 244.75 28.1893 cv
244.318 28.4053 243.771 28.5205 243.138 28.5205 cv
242.331 28.5205 241.683 28.3045 241.208 27.8581 cv
240.733 27.4117 240.502 26.8069 240.502 26.0437 cv
240.502 25.1653 240.79 24.5029 241.395 24.0421 cv
241.986 23.5957 242.864 23.3653 244.045 23.3653 cv
245.859 23.3653 li
245.859 23.2357 li
245.859 22.6453 245.658 22.1845 245.269 21.8533 cv
244.88 21.5365 244.333 21.3637 243.627 21.3637 cv
243.166 21.3637 242.734 21.4213 242.302 21.5365 cv
241.87 21.6517 241.467 21.8101 241.078 22.0117 cv
241.078 20.8165 li
241.539 20.6437 242 20.4997 242.446 20.4133 cv
242.893 20.3269 243.325 20.2693 243.757 20.2693 cv
244.894 20.2693 245.744 20.5717 246.306 21.1621 cv
246.867 21.7525 247.155 22.6453 247.155 23.8405 cv
f
256.371 23.5813 mo
256.371 28.3333 li
255.075 28.3333 li
255.075 23.6245 li
255.075 22.8757 254.917 22.3285 254.629 21.9541 cv
254.341 21.5797 253.909 21.3925 253.333 21.3925 cv
252.627 21.3925 252.08 21.6229 251.677 22.0693 cv
251.274 22.5157 251.072 23.1205 251.072 23.8837 cv
251.072 28.3333 li
249.776 28.3333 li
249.776 20.4565 li
251.072 20.4565 li
251.072 21.6805 li
251.375 21.2197 251.735 20.8597 252.167 20.6293 cv
252.584 20.3989 253.074 20.2693 253.621 20.2693 cv
254.514 20.2693 255.205 20.5573 255.666 21.1189 cv
256.127 21.6805 256.371 22.5013 256.371 23.5813 cv
f
264.623 20.7589 mo
264.623 21.9685 li
264.248 21.7669 263.888 21.6229 263.514 21.5221 cv
263.139 21.4213 262.779 21.3637 262.405 21.3637 cv
261.57 21.3637 260.907 21.6373 260.447 22.1701 cv
259.986 22.7029 259.755 23.4517 259.755 24.4021 cv
259.755 25.3669 259.986 26.1157 260.447 26.6485 cv
260.907 27.1813 261.57 27.4405 262.405 27.4405 cv
262.779 27.4405 263.139 27.3973 263.514 27.2965 cv
263.888 27.1957 264.248 27.0373 264.623 26.8357 cv
264.623 28.0309 li
264.248 28.2037 263.874 28.3333 263.499 28.4053 cv
263.111 28.4773 262.693 28.5205 262.261 28.5205 cv
261.08 28.5205 260.13 28.1605 259.439 27.4117 cv
258.733 26.6773 258.387 25.6693 258.387 24.4021 cv
258.387 23.1205 258.733 22.1125 259.439 21.3781 cv
260.144 20.6437 261.109 20.2693 262.347 20.2693 cv
262.751 20.2693 263.139 20.3125 263.514 20.3989 cv
263.888 20.4853 264.263 20.6005 264.623 20.7589 cv
f
273.608 24.0709 mo
273.608 24.7045 li
267.661 24.7045 li
267.719 25.5973 267.978 26.2885 268.467 26.7493 cv
268.943 27.2101 269.605 27.4405 270.469 27.4405 cv
270.959 27.4405 271.448 27.3829 271.909 27.2677 cv
272.37 27.1525 272.845 26.9653 273.306 26.7061 cv
273.306 27.9301 li
272.845 28.1317 272.37 28.2901 271.88 28.3765 cv
271.391 28.4629 270.887 28.5205 270.397 28.5205 cv
269.13 28.5205 268.136 28.1605 267.402 27.4405 cv
266.667 26.7205 266.307 25.7269 266.307 24.4741 cv
266.307 23.1925 266.653 22.1701 267.344 21.4069 cv
268.035 20.6581 268.986 20.2693 270.167 20.2693 cv
271.232 20.2693 272.067 20.6149 272.687 21.2917 cv
273.291 21.9829 273.608 22.9045 273.608 24.0709 cv
272.312 23.6965 mo
272.298 22.9909 272.096 22.4293 271.722 21.9973 cv
271.333 21.5797 270.815 21.3637 270.181 21.3637 cv
269.461 21.3637 268.885 21.5797 268.453 21.9829 cv
268.021 22.3861 267.762 22.9621 267.704 23.6965 cv
272.312 23.6965 li
f
283.89 24.3733 mo
282.839 24.3733 282.119 24.5029 281.715 24.7333 cv
281.312 24.9781 281.111 25.3813 281.111 25.9573 cv
281.111 26.4181 281.255 26.7925 281.557 27.0517 cv
281.859 27.3253 282.277 27.4549 282.795 27.4549 cv
283.515 27.4549 284.091 27.2101 284.523 26.6917 cv
284.955 26.1877 285.171 25.5109 285.171 24.6613 cv
285.171 24.3733 li
283.89 24.3733 li
286.467 23.8405 mo
286.467 28.3333 li
285.171 28.3333 li
285.171 27.1381 li
284.869 27.6277 284.495 27.9733 284.063 28.1893 cv
283.631 28.4053 283.083 28.5205 282.45 28.5205 cv
281.643 28.5205 280.995 28.3045 280.52 27.8581 cv
280.045 27.4117 279.815 26.8069 279.815 26.0437 cv
279.815 25.1653 280.103 24.5029 280.707 24.0421 cv
281.298 23.5957 282.176 23.3653 283.357 23.3653 cv
285.171 23.3653 li
285.171 23.2357 li
285.171 22.6453 284.97 22.1845 284.581 21.8533 cv
284.192 21.5365 283.645 21.3637 282.939 21.3637 cv
282.479 21.3637 282.047 21.4213 281.615 21.5365 cv
281.183 21.6517 280.779 21.8101 280.391 22.0117 cv
280.391 20.8165 li
280.851 20.6437 281.312 20.4997 281.759 20.4133 cv
282.205 20.3269 282.637 20.2693 283.069 20.2693 cv
284.207 20.2693 285.056 20.5717 285.618 21.1621 cv
286.179 21.7525 286.467 22.6453 286.467 23.8405 cv
f
290.413 18.2245 mo
290.413 20.4565 li
293.077 20.4565 li
293.077 21.4645 li
290.413 21.4645 li
290.413 25.7413 li
290.413 26.3893 290.499 26.8069 290.672 26.9797 cv
290.845 27.1669 291.205 27.2533 291.752 27.2533 cv
293.077 27.2533 li
293.077 28.3333 li
291.752 28.3333 li
290.744 28.3333 290.053 28.1461 289.679 27.7717 cv
289.304 27.3973 289.117 26.7205 289.117 25.7413 cv
289.117 21.4645 li
288.167 21.4645 li
288.167 20.4565 li
289.117 20.4565 li
289.117 18.2245 li
290.413 18.2245 li
f
303.848 22.6741 mo
304.525 22.8181 305.058 23.1205 305.432 23.5813 cv
305.807 24.0421 306.008 24.6181 306.008 25.2805 cv
306.008 26.3173 305.648 27.1237 304.943 27.6853 cv
304.223 28.2469 303.215 28.5205 301.904 28.5205 cv
301.458 28.5205 300.997 28.4773 300.536 28.3909 cv
300.075 28.3189 299.586 28.1893 299.096 28.0165 cv
299.096 26.6485 li
299.485 26.8789 299.917 27.0517 300.392 27.1669 cv
300.853 27.2821 301.343 27.3397 301.861 27.3397 cv
302.754 27.3397 303.431 27.1669 303.891 26.8213 cv
304.352 26.4757 304.597 25.9573 304.597 25.2805 cv
304.597 24.6757 304.381 24.1861 303.949 23.8405 cv
303.517 23.4949 302.912 23.3077 302.135 23.3077 cv
300.911 23.3077 li
300.911 22.1413 li
302.192 22.1413 li
302.883 22.1413 303.416 22.0117 303.791 21.7237 cv
304.165 21.4501 304.352 21.0469 304.352 20.5141 cv
304.352 19.9813 304.151 19.5637 303.776 19.2757 cv
303.387 18.9877 302.84 18.8437 302.135 18.8437 cv
301.746 18.8437 301.328 18.8869 300.882 18.9733 cv
300.435 19.0597 299.946 19.1893 299.413 19.3621 cv
299.413 18.0949 li
299.946 17.9509 300.45 17.8357 300.925 17.7637 cv
301.386 17.6917 301.832 17.6485 302.264 17.6485 cv
303.33 17.6485 304.179 17.8933 304.813 18.3829 cv
305.447 18.8725 305.763 19.5349 305.763 20.3701 cv
305.763 20.9461 305.591 21.4357 305.259 21.8389 cv
304.928 22.2421 304.453 22.5301 303.848 22.6741 cv
f
313.007 22.6741 mo
313.683 22.8181 314.216 23.1205 314.591 23.5813 cv
314.965 24.0421 315.167 24.6181 315.167 25.2805 cv
315.167 26.3173 314.807 27.1237 314.101 27.6853 cv
313.381 28.2469 312.373 28.5205 311.063 28.5205 cv
310.616 28.5205 310.155 28.4773 309.695 28.3909 cv
309.234 28.3189 308.744 28.1893 308.255 28.0165 cv
308.255 26.6485 li
308.643 26.8789 309.075 27.0517 309.551 27.1669 cv
310.011 27.2821 310.501 27.3397 311.019 27.3397 cv
311.912 27.3397 312.589 27.1669 313.05 26.8213 cv
313.511 26.4757 313.755 25.9573 313.755 25.2805 cv
313.755 24.6757 313.539 24.1861 313.107 23.8405 cv
312.675 23.4949 312.071 23.3077 311.293 23.3077 cv
310.069 23.3077 li
310.069 22.1413 li
311.351 22.1413 li
312.042 22.1413 312.575 22.0117 312.949 21.7237 cv
313.323 21.4501 313.511 21.0469 313.511 20.5141 cv
313.511 19.9813 313.309 19.5637 312.935 19.2757 cv
312.546 18.9877 311.999 18.8437 311.293 18.8437 cv
310.904 18.8437 310.487 18.8869 310.04 18.9733 cv
309.594 19.0597 309.104 19.1893 308.571 19.3621 cv
308.571 18.0949 li
309.104 17.9509 309.608 17.8357 310.083 17.7637 cv
310.544 17.6917 310.991 17.6485 311.423 17.6485 cv
312.488 17.6485 313.338 17.8933 313.971 18.3829 cv
314.605 18.8725 314.922 19.5349 314.922 20.3701 cv
314.922 20.9461 314.749 21.4357 314.418 21.8389 cv
314.087 22.2421 313.611 22.5301 313.007 22.6741 cv
f
320.898 23.3509 mo
320.221 23.3509 319.688 23.5381 319.299 23.8981 cv
318.911 24.2581 318.723 24.7477 318.723 25.3813 cv
318.723 26.0149 318.911 26.5189 319.299 26.8789 cv
319.688 27.2389 320.221 27.4117 320.898 27.4117 cv
321.56 27.4117 322.093 27.2389 322.482 26.8645 cv
322.871 26.5045 323.072 26.0149 323.072 25.3813 cv
323.072 24.7477 322.871 24.2581 322.496 23.8981 cv
322.107 23.5381 321.575 23.3509 320.898 23.3509 cv
319.472 22.7461 mo
318.867 22.6021 318.392 22.3141 318.047 21.8965 cv
317.701 21.4789 317.543 20.9749 317.543 20.3701 cv
317.543 19.5349 317.831 18.8725 318.435 18.3829 cv
319.026 17.8933 319.847 17.6485 320.898 17.6485 cv
321.935 17.6485 322.755 17.8933 323.36 18.3829 cv
323.951 18.8725 324.253 19.5349 324.253 20.3701 cv
324.253 20.9749 324.08 21.4789 323.735 21.8965 cv
323.389 22.3141 322.928 22.6021 322.323 22.7461 cv
323 22.9045 323.533 23.2213 323.922 23.6821 cv
324.296 24.1429 324.498 24.7189 324.498 25.3813 cv
324.498 26.4037 324.181 27.1813 323.562 27.7141 cv
322.928 28.2613 322.05 28.5205 320.898 28.5205 cv
319.731 28.5205 318.839 28.2613 318.219 27.7141 cv
317.6 27.1813 317.298 26.4037 317.298 25.3813 cv
317.298 24.7189 317.485 24.1429 317.874 23.6821 cv
318.248 23.2213 318.781 22.9045 319.472 22.7461 cv
318.954 20.4997 mo
318.954 21.0469 319.112 21.4789 319.458 21.7813 cv
319.803 22.0837 320.279 22.2277 320.898 22.2277 cv
321.503 22.2277 321.978 22.0837 322.323 21.7813 cv
322.669 21.4789 322.842 21.0469 322.842 20.4997 cv
322.842 19.9525 322.669 19.5349 322.323 19.2325 cv
321.978 18.9301 321.503 18.7717 320.898 18.7717 cv
320.279 18.7717 319.803 18.9301 319.458 19.2325 cv
319.112 19.5349 318.954 19.9525 318.954 20.4997 cv
f
330.229 22.5157 mo
329.595 22.5157 329.091 22.7461 328.717 23.1781 cv
328.343 23.6101 328.155 24.2149 328.155 24.9637 cv
328.155 25.7269 328.343 26.3317 328.717 26.7637 cv
329.091 27.1957 329.595 27.4117 330.229 27.4117 cv
330.863 27.4117 331.367 27.1957 331.741 26.7637 cv
332.115 26.3317 332.303 25.7269 332.303 24.9637 cv
332.303 24.2149 332.115 23.6101 331.741 23.1781 cv
331.367 22.7461 330.863 22.5157 330.229 22.5157 cv
333.051 18.0661 mo
333.051 19.3621 li
332.691 19.1893 332.331 19.0597 331.971 18.9733 cv
331.597 18.8869 331.237 18.8437 330.891 18.8437 cv
329.941 18.8437 329.221 19.1605 328.731 19.7941 cv
328.242 20.4277 327.954 21.3925 327.896 22.6597 cv
328.17 22.2565 328.515 21.9397 328.933 21.7237 cv
329.351 21.5077 329.811 21.3925 330.315 21.3925 cv
331.367 21.3925 332.202 21.7237 332.807 22.3573 cv
333.411 22.9909 333.728 23.8693 333.728 24.9637 cv
333.728 26.0437 333.397 26.9077 332.763 27.5557 cv
332.13 28.2037 331.28 28.5205 330.229 28.5205 cv
329.019 28.5205 328.083 28.0597 327.45 27.1381 cv
326.802 26.2165 326.485 24.8629 326.485 23.0917 cv
326.485 21.4357 326.874 20.1109 327.666 19.1317 cv
328.443 18.1525 329.509 17.6485 330.834 17.6485 cv
331.179 17.6485 331.539 17.6917 331.914 17.7493 cv
332.274 17.8213 332.648 17.9221 333.051 18.0661 cv
f
152.385 127.841 mo
381.6 127.841 li
381.6 40.5333 li
152.385 40.5333 li
152.385 127.841 li
cp
0 0 0 0 cmyk
f
152.385 127.841 mo
381.6 127.841 li
381.6 40.5333 li
152.385 40.5333 li
152.385 127.841 li
cp
0 0 0 1 cmyk
@
162.465 51.894 mo
182.625 51.894 li
0 .993988 1 0 cmyk
@
162.465 56.1366 mo
166.708 51.894 li
162.465 47.6513 li
158.222 51.894 li
162.465 56.1366 li
cp
f
.5 lw
0 lc
0 lj
162.465 56.1366 mo
166.708 51.894 li
162.465 47.6513 li
158.222 51.894 li
162.465 56.1366 li
cp
0 0 0 1 cmyk
@
182.625 56.1366 mo
186.868 51.894 li
182.625 47.6513 li
178.382 51.894 li
182.625 56.1366 li
cp
0 .993988 1 0 cmyk
f
182.625 56.1366 mo
186.868 51.894 li
182.625 47.6513 li
178.382 51.894 li
182.625 56.1366 li
cp
0 0 0 1 cmyk
@
201.071 55.7532 mo
201.071 59.9148 li
199.775 59.9148 li
199.775 49.0571 li
201.071 49.0571 li
201.071 50.2523 li
201.331 49.7916 201.676 49.4459 202.094 49.2155 cv
202.511 48.9852 203.015 48.87 203.591 48.87 cv
204.542 48.87 205.319 49.2587 205.924 50.0076 cv
206.515 50.7707 206.817 51.7644 206.817 53.0027 cv
206.817 54.2411 206.515 55.2491 205.924 55.9979 cv
205.319 56.7468 204.542 57.1211 203.591 57.1211 cv
203.015 57.1211 202.511 57.0059 202.094 56.7899 cv
201.676 56.574 201.331 56.2284 201.071 55.7532 cv
205.478 53.0027 mo
205.478 52.0524 205.276 51.318 204.887 50.7707 cv
204.484 50.2236 203.951 49.9499 203.275 49.9499 cv
202.583 49.9499 202.051 50.2236 201.662 50.7707 cv
201.259 51.318 201.071 52.0524 201.071 53.0027 cv
201.071 53.9531 201.259 54.702 201.662 55.2491 cv
202.051 55.7963 202.583 56.0556 203.275 56.0556 cv
203.951 56.0556 204.484 55.7963 204.887 55.2491 cv
205.276 54.702 205.478 53.9531 205.478 53.0027 cv
f
213.527 50.2667 mo
213.383 50.1803 213.225 50.1228 213.052 50.0795 cv
212.879 50.0507 212.692 50.022 212.491 50.022 cv
211.756 50.022 211.195 50.2667 210.806 50.742 cv
210.403 51.2172 210.215 51.8939 210.215 52.7868 cv
210.215 56.9339 li
208.919 56.9339 li
208.919 49.0571 li
210.215 49.0571 li
210.215 50.2811 li
210.475 49.806 210.835 49.4459 211.267 49.2155 cv
211.699 48.9852 212.231 48.87 212.865 48.87 cv
212.951 48.87 213.052 48.8844 213.167 48.8844 cv
213.268 48.8988 213.383 48.9131 213.527 48.9419 cv
213.527 50.2667 li
f
217.934 49.9643 mo
217.242 49.9643 216.695 50.2379 216.292 50.7851 cv
215.889 51.3324 215.687 52.0668 215.687 53.0027 cv
215.687 53.9531 215.874 54.6875 216.278 55.2348 cv
216.681 55.7819 217.228 56.0412 217.934 56.0412 cv
218.625 56.0412 219.172 55.7819 219.575 55.2348 cv
219.978 54.6875 220.18 53.9531 220.18 53.0027 cv
220.18 52.0811 219.978 51.3324 219.575 50.7851 cv
219.172 50.2379 218.625 49.9643 217.934 49.9643 cv
217.934 48.87 mo
219.057 48.87 219.935 49.2443 220.583 49.9643 cv
221.217 50.6987 221.548 51.7067 221.548 53.0027 cv
221.548 54.2988 221.217 55.3068 220.583 56.0268 cv
219.935 56.7612 219.057 57.1211 217.934 57.1211 cv
216.796 57.1211 215.903 56.7612 215.27 56.0268 cv
214.636 55.3068 214.319 54.2988 214.319 53.0027 cv
214.319 51.7067 214.636 50.6987 215.27 49.9643 cv
215.903 49.2443 216.796 48.87 217.934 48.87 cv
f
224.946 55.7532 mo
224.946 59.9148 li
223.65 59.9148 li
223.65 49.0571 li
224.946 49.0571 li
224.946 50.2523 li
225.206 49.7916 225.551 49.4459 225.969 49.2155 cv
226.386 48.9852 226.89 48.87 227.466 48.87 cv
228.417 48.87 229.194 49.2587 229.799 50.0076 cv
230.39 50.7707 230.692 51.7644 230.692 53.0027 cv
230.692 54.2411 230.39 55.2491 229.799 55.9979 cv
229.194 56.7468 228.417 57.1211 227.466 57.1211 cv
226.89 57.1211 226.386 57.0059 225.969 56.7899 cv
225.551 56.574 225.206 56.2284 224.946 55.7532 cv
229.353 53.0027 mo
229.353 52.0524 229.151 51.318 228.762 50.7707 cv
228.359 50.2236 227.826 49.9499 227.15 49.9499 cv
226.458 49.9499 225.926 50.2236 225.537 50.7707 cv
225.134 51.318 224.946 52.0524 224.946 53.0027 cv
224.946 53.9531 225.134 54.702 225.537 55.2491 cv
225.926 55.7963 226.458 56.0556 227.15 56.0556 cv
227.826 56.0556 228.359 55.7963 228.762 55.2491 cv
229.151 54.702 229.353 53.9531 229.353 53.0027 cv
f
235.89 49.9643 mo
235.199 49.9643 234.652 50.2379 234.249 50.7851 cv
233.846 51.3324 233.644 52.0668 233.644 53.0027 cv
233.644 53.9531 233.831 54.6875 234.234 55.2348 cv
234.638 55.7819 235.185 56.0412 235.89 56.0412 cv
236.582 56.0412 237.129 55.7819 237.532 55.2348 cv
237.935 54.6875 238.137 53.9531 238.137 53.0027 cv
238.137 52.0811 237.935 51.3324 237.532 50.7851 cv
237.129 50.2379 236.582 49.9643 235.89 49.9643 cv
235.89 48.87 mo
237.014 48.87 237.892 49.2443 238.54 49.9643 cv
239.174 50.6987 239.505 51.7067 239.505 53.0027 cv
239.505 54.2988 239.174 55.3068 238.54 56.0268 cv
237.892 56.7612 237.014 57.1211 235.89 57.1211 cv
234.753 57.1211 233.86 56.7612 233.226 56.0268 cv
232.593 55.3068 232.276 54.2988 232.276 53.0027 cv
232.276 51.7067 232.593 50.6987 233.226 49.9643 cv
233.86 49.2443 234.753 48.87 235.89 48.87 cv
f
246.676 49.2876 mo
246.676 50.5116 li
246.302 50.3387 245.927 50.1948 245.538 50.094 cv
245.135 50.0076 244.732 49.9499 244.314 49.9499 cv
243.666 49.9499 243.177 50.0507 242.86 50.2523 cv
242.543 50.4539 242.385 50.742 242.385 51.1308 cv
242.385 51.4332 242.5 51.6636 242.73 51.8364 cv
242.961 52.0091 243.422 52.1819 244.113 52.3259 cv
244.559 52.4267 li
245.481 52.6283 246.129 52.9163 246.518 53.262 cv
246.892 53.6219 247.094 54.1259 247.094 54.7595 cv
247.094 55.4939 246.806 56.0699 246.23 56.4875 cv
245.654 56.9195 244.847 57.1211 243.839 57.1211 cv
243.407 57.1211 242.975 57.078 242.514 57.0059 cv
242.054 56.9339 241.578 56.8187 241.074 56.646 cv
241.074 55.3068 li
241.55 55.5659 242.025 55.7532 242.486 55.8683 cv
242.946 55.9979 243.407 56.0556 243.868 56.0556 cv
244.473 56.0556 244.948 55.9548 245.279 55.7532 cv
245.596 55.5516 245.769 55.2491 245.769 54.8603 cv
245.769 54.5148 245.639 54.2411 245.409 54.0539 cv
245.178 53.8667 244.66 53.6796 243.854 53.5068 cv
243.407 53.4059 li
242.601 53.2331 242.01 52.974 241.665 52.6283 cv
241.305 52.2827 241.132 51.8075 241.132 51.1883 cv
241.132 50.4539 241.391 49.8779 241.91 49.4748 cv
242.428 49.0716 243.177 48.87 244.156 48.87 cv
244.631 48.87 245.078 48.9131 245.51 48.9852 cv
245.927 49.0571 246.316 49.1579 246.676 49.2876 cv
f
255.892 52.6716 mo
255.892 53.3051 li
249.945 53.3051 li
250.002 54.198 250.262 54.8891 250.751 55.3499 cv
251.226 55.8107 251.889 56.0412 252.753 56.0412 cv
253.242 56.0412 253.732 55.9835 254.193 55.8683 cv
254.654 55.7532 255.129 55.5659 255.59 55.3068 cv
255.59 56.5308 li
255.129 56.7323 254.654 56.8907 254.164 56.9772 cv
253.674 57.0636 253.17 57.1211 252.681 57.1211 cv
251.413 57.1211 250.42 56.7612 249.686 56.0412 cv
248.951 55.3212 248.591 54.3275 248.591 53.0748 cv
248.591 51.7931 248.937 50.7707 249.628 50.0076 cv
250.319 49.2587 251.27 48.87 252.45 48.87 cv
253.516 48.87 254.351 49.2155 254.97 49.8924 cv
255.575 50.5835 255.892 51.5051 255.892 52.6716 cv
254.596 52.2971 mo
254.581 51.5915 254.38 51.03 254.006 50.5979 cv
253.617 50.1803 253.098 49.9643 252.465 49.9643 cv
251.745 49.9643 251.169 50.1803 250.737 50.5835 cv
250.305 50.9867 250.046 51.5628 249.988 52.2971 cv
254.596 52.2971 li
f
263.193 50.2523 mo
263.193 45.9899 li
264.489 45.9899 li
264.489 56.9339 li
263.193 56.9339 li
263.193 55.7532 li
262.919 56.2284 262.574 56.574 262.156 56.7899 cv
261.738 57.0059 261.249 57.1211 260.673 57.1211 cv
259.722 57.1211 258.945 56.7468 258.34 55.9979 cv
257.735 55.2491 257.447 54.2411 257.447 53.0027 cv
257.447 51.7644 257.735 50.7707 258.34 50.0076 cv
258.945 49.2587 259.722 48.87 260.673 48.87 cv
261.249 48.87 261.738 48.9852 262.156 49.2155 cv
262.574 49.4459 262.919 49.7916 263.193 50.2523 cv
258.786 53.0027 mo
258.786 53.9531 258.974 54.702 259.362 55.2491 cv
259.751 55.7963 260.298 56.0556 260.99 56.0556 cv
261.666 56.0556 262.199 55.7963 262.602 55.2491 cv
262.991 54.702 263.193 53.9531 263.193 53.0027 cv
263.193 52.0524 262.991 51.318 262.602 50.7707 cv
262.199 50.2236 261.666 49.9499 260.99 49.9499 cv
260.298 49.9499 259.751 50.2236 259.362 50.7707 cv
258.974 51.318 258.786 52.0524 258.786 53.0027 cv
f
276.916 50.2523 mo
276.916 45.9899 li
278.212 45.9899 li
278.212 56.9339 li
276.916 56.9339 li
276.916 55.7532 li
276.642 56.2284 276.297 56.574 275.879 56.7899 cv
275.461 57.0059 274.972 57.1211 274.396 57.1211 cv
273.445 57.1211 272.668 56.7468 272.063 55.9979 cv
271.458 55.2491 271.17 54.2411 271.17 53.0027 cv
271.17 51.7644 271.458 50.7707 272.063 50.0076 cv
272.668 49.2587 273.445 48.87 274.396 48.87 cv
274.972 48.87 275.461 48.9852 275.879 49.2155 cv
276.297 49.4459 276.642 49.7916 276.916 50.2523 cv
272.509 53.0027 mo
272.509 53.9531 272.697 54.702 273.085 55.2491 cv
273.474 55.7963 274.021 56.0556 274.713 56.0556 cv
275.389 56.0556 275.922 55.7963 276.325 55.2491 cv
276.714 54.702 276.916 53.9531 276.916 53.0027 cv
276.916 52.0524 276.714 51.318 276.325 50.7707 cv
275.922 50.2236 275.389 49.9499 274.713 49.9499 cv
274.021 49.9499 273.474 50.2236 273.085 50.7707 cv
272.697 51.318 272.509 52.0524 272.509 53.0027 cv
f
280.876 49.0571 mo
282.172 49.0571 li
282.172 56.9339 li
280.876 56.9339 li
280.876 49.0571 li
280.876 45.9899 mo
282.172 45.9899 li
282.172 47.6315 li
280.876 47.6315 li
280.876 45.9899 li
f
288.465 52.974 mo
287.413 52.974 286.693 53.1035 286.29 53.3339 cv
285.887 53.5788 285.685 53.982 285.685 54.5579 cv
285.685 55.0188 285.829 55.3931 286.132 55.6524 cv
286.434 55.926 286.852 56.0556 287.37 56.0556 cv
288.09 56.0556 288.666 55.8107 289.098 55.2923 cv
289.53 54.7883 289.746 54.1116 289.746 53.262 cv
289.746 52.974 li
288.465 52.974 li
291.042 52.4412 mo
291.042 56.9339 li
289.746 56.9339 li
289.746 55.7388 li
289.444 56.2284 289.069 56.574 288.637 56.7899 cv
288.205 57.0059 287.658 57.1211 287.025 57.1211 cv
286.218 57.1211 285.57 56.9051 285.095 56.4588 cv
284.62 56.0123 284.389 55.4076 284.389 54.6443 cv
284.389 53.7659 284.677 53.1035 285.282 52.6427 cv
285.873 52.1963 286.751 51.966 287.932 51.966 cv
289.746 51.966 li
289.746 51.8364 li
289.746 51.246 289.545 50.7851 289.156 50.4539 cv
288.767 50.1371 288.22 49.9643 287.514 49.9643 cv
287.053 49.9643 286.621 50.022 286.189 50.1371 cv
285.757 50.2523 285.354 50.4108 284.965 50.6124 cv
284.965 49.4171 li
285.426 49.2443 285.887 49.1004 286.333 49.0139 cv
286.78 48.9275 287.212 48.87 287.644 48.87 cv
288.781 48.87 289.631 49.1724 290.193 49.7627 cv
290.754 50.3531 291.042 51.246 291.042 52.4412 cv
f
299.841 50.5691 mo
300.157 49.9932 300.546 49.5756 300.993 49.2876 cv
301.439 49.0139 301.972 48.87 302.591 48.87 cv
303.397 48.87 304.031 49.1579 304.477 49.7339 cv
304.924 50.31 305.154 51.1308 305.154 52.1819 cv
305.154 56.9339 li
303.858 56.9339 li
303.858 52.2251 li
303.858 51.4763 303.714 50.9148 303.455 50.5404 cv
303.181 50.1803 302.778 49.9932 302.231 49.9932 cv
301.554 49.9932 301.021 50.2236 300.633 50.6699 cv
300.244 51.1164 300.057 51.7211 300.057 52.4843 cv
300.057 56.9339 li
298.761 56.9339 li
298.761 52.2251 li
298.761 51.4763 298.617 50.9148 298.357 50.5404 cv
298.084 50.1803 297.666 49.9932 297.119 49.9932 cv
296.457 49.9932 295.924 50.2236 295.535 50.6699 cv
295.146 51.1164 294.959 51.7211 294.959 52.4843 cv
294.959 56.9339 li
293.663 56.9339 li
293.663 49.0571 li
294.959 49.0571 li
294.959 50.2811 li
295.247 49.806 295.607 49.4459 296.025 49.2155 cv
296.428 48.9852 296.917 48.87 297.493 48.87 cv
298.069 48.87 298.545 49.0139 298.948 49.302 cv
299.351 49.59 299.639 50.022 299.841 50.5691 cv
f
310.785 49.9643 mo
310.093 49.9643 309.546 50.2379 309.143 50.7851 cv
308.74 51.3324 308.538 52.0668 308.538 53.0027 cv
308.538 53.9531 308.725 54.6875 309.129 55.2348 cv
309.532 55.7819 310.079 56.0412 310.785 56.0412 cv
311.476 56.0412 312.023 55.7819 312.426 55.2348 cv
312.829 54.6875 313.031 53.9531 313.031 53.0027 cv
313.031 52.0811 312.829 51.3324 312.426 50.7851 cv
312.023 50.2379 311.476 49.9643 310.785 49.9643 cv
310.785 48.87 mo
311.908 48.87 312.786 49.2443 313.434 49.9643 cv
314.068 50.6987 314.399 51.7067 314.399 53.0027 cv
314.399 54.2988 314.068 55.3068 313.434 56.0268 cv
312.786 56.7612 311.908 57.1211 310.785 57.1211 cv
309.647 57.1211 308.754 56.7612 308.121 56.0268 cv
307.487 55.3068 307.17 54.2988 307.17 53.0027 cv
307.17 51.7067 307.487 50.6987 308.121 49.9643 cv
308.754 49.2443 309.647 48.87 310.785 48.87 cv
f
323.097 52.1819 mo
323.097 56.9339 li
321.801 56.9339 li
321.801 52.2251 li
321.801 51.4763 321.642 50.9292 321.354 50.5547 cv
321.066 50.1803 320.634 49.9932 320.058 49.9932 cv
319.353 49.9932 318.805 50.2236 318.402 50.6699 cv
317.999 51.1164 317.797 51.7211 317.797 52.4843 cv
317.797 56.9339 li
316.501 56.9339 li
316.501 49.0571 li
317.797 49.0571 li
317.797 50.2811 li
318.1 49.8204 318.46 49.4603 318.892 49.2299 cv
319.309 48.9996 319.799 48.87 320.346 48.87 cv
321.239 48.87 321.93 49.1579 322.391 49.7196 cv
322.852 50.2811 323.097 51.1019 323.097 52.1819 cv
f
330.858 50.2523 mo
330.858 45.9899 li
332.154 45.9899 li
332.154 56.9339 li
330.858 56.9339 li
330.858 55.7532 li
330.585 56.2284 330.239 56.574 329.821 56.7899 cv
329.404 57.0059 328.914 57.1211 328.338 57.1211 cv
327.388 57.1211 326.61 56.7468 326.005 55.9979 cv
325.401 55.2491 325.113 54.2411 325.113 53.0027 cv
325.113 51.7644 325.401 50.7707 326.005 50.0076 cv
326.61 49.2587 327.388 48.87 328.338 48.87 cv
328.914 48.87 329.404 48.9852 329.821 49.2155 cv
330.239 49.4459 330.585 49.7916 330.858 50.2523 cv
326.452 53.0027 mo
326.452 53.9531 326.639 54.702 327.028 55.2491 cv
327.417 55.7963 327.964 56.0556 328.655 56.0556 cv
329.332 56.0556 329.865 55.7963 330.268 55.2491 cv
330.657 54.702 330.858 53.9531 330.858 53.0027 cv
330.858 52.0524 330.657 51.318 330.268 50.7707 cv
329.865 50.2236 329.332 49.9499 328.655 49.9499 cv
327.964 49.9499 327.417 50.2236 327.028 50.7707 cv
326.639 51.318 326.452 52.0524 326.452 53.0027 cv
f
338.648 49.0571 mo
339.944 49.0571 li
341.557 55.206 li
343.17 49.0571 li
344.696 49.0571 li
346.309 55.206 li
347.922 49.0571 li
349.218 49.0571 li
347.159 56.9339 li
345.632 56.9339 li
343.933 50.4827 li
342.234 56.9339 li
340.708 56.9339 li
338.648 49.0571 li
f
351.176 49.0571 mo
352.472 49.0571 li
352.472 56.9339 li
351.176 56.9339 li
351.176 49.0571 li
351.176 45.9899 mo
352.472 45.9899 li
352.472 47.6315 li
351.176 47.6315 li
351.176 45.9899 li
f
360.364 50.2523 mo
360.364 45.9899 li
361.66 45.9899 li
361.66 56.9339 li
360.364 56.9339 li
360.364 55.7532 li
360.09 56.2284 359.744 56.574 359.327 56.7899 cv
358.909 57.0059 358.42 57.1211 357.844 57.1211 cv
356.893 57.1211 356.116 56.7468 355.511 55.9979 cv
354.906 55.2491 354.618 54.2411 354.618 53.0027 cv
354.618 51.7644 354.906 50.7707 355.511 50.0076 cv
356.116 49.2587 356.893 48.87 357.844 48.87 cv
358.42 48.87 358.909 48.9852 359.327 49.2155 cv
359.744 49.4459 360.09 49.7916 360.364 50.2523 cv
355.957 53.0027 mo
355.957 53.9531 356.144 54.702 356.533 55.2491 cv
356.922 55.7963 357.469 56.0556 358.16 56.0556 cv
358.837 56.0556 359.37 55.7963 359.773 55.2491 cv
360.162 54.702 360.364 53.9531 360.364 53.0027 cv
360.364 52.0524 360.162 51.318 359.773 50.7707 cv
359.37 50.2236 358.837 49.9499 358.16 49.9499 cv
357.469 49.9499 356.922 50.2236 356.533 50.7707 cv
356.144 51.318 355.957 52.0524 355.957 53.0027 cv
f
365.605 46.8252 mo
365.605 49.0571 li
368.269 49.0571 li
368.269 50.0651 li
365.605 50.0651 li
365.605 54.3419 li
365.605 54.9899 365.691 55.4076 365.864 55.5803 cv
366.037 55.7675 366.397 55.854 366.944 55.854 cv
368.269 55.854 li
368.269 56.9339 li
366.944 56.9339 li
365.936 56.9339 365.245 56.7468 364.871 56.3723 cv
364.496 55.9979 364.309 55.3212 364.309 54.3419 cv
364.309 50.0651 li
363.359 50.0651 li
363.359 49.0571 li
364.309 49.0571 li
364.309 46.8252 li
365.605 46.8252 li
f
376.52 52.1819 mo
376.52 56.9339 li
375.224 56.9339 li
375.224 52.2251 li
375.224 51.4763 375.066 50.9292 374.778 50.5547 cv
374.49 50.1803 374.058 49.9932 373.482 49.9932 cv
372.776 49.9932 372.229 50.2236 371.826 50.6699 cv
371.423 51.1164 371.221 51.7211 371.221 52.4843 cv
371.221 56.9339 li
369.925 56.9339 li
369.925 45.9899 li
371.221 45.9899 li
371.221 50.2811 li
371.523 49.8204 371.883 49.4603 372.315 49.2299 cv
372.733 48.9996 373.223 48.87 373.77 48.87 cv
374.663 48.87 375.354 49.1579 375.815 49.7196 cv
376.275 50.2811 376.52 51.1019 376.52 52.1819 cv
f
1 lw
2 lc
1 lj
162.465 72.6408 mo
182.625 72.6408 li
.883665 .769161 0 0 cmyk
@
159.465 75.6408 mo
165.465 75.6408 li
165.465 69.6408 li
159.465 69.6408 li
159.465 75.6408 li
cp
f
.5 lw
0 lc
0 lj
159.465 75.6408 mo
165.465 75.6408 li
165.465 69.6408 li
159.465 69.6408 li
159.465 75.6408 li
cp
0 0 0 1 cmyk
@
179.625 75.6408 mo
185.625 75.6408 li
185.625 69.6408 li
179.625 69.6408 li
179.625 75.6408 li
cp
.883665 .769161 0 0 cmyk
f
179.625 75.6408 mo
185.625 75.6408 li
185.625 69.6408 li
179.625 69.6408 li
179.625 75.6408 li
cp
0 0 0 1 cmyk
@
205.492 70.1064 mo
205.492 71.316 li
205.118 71.1144 204.758 70.9705 204.383 70.8697 cv
204.009 70.7689 203.649 70.7112 203.275 70.7112 cv
202.439 70.7112 201.777 70.9848 201.316 71.5176 cv
200.855 72.0504 200.625 72.7992 200.625 73.7496 cv
200.625 74.7144 200.855 75.4632 201.316 75.996 cv
201.777 76.5288 202.439 76.788 203.275 76.788 cv
203.649 76.788 204.009 76.7448 204.383 76.644 cv
204.758 76.5432 205.118 76.3848 205.492 76.1833 cv
205.492 77.3784 li
205.118 77.5512 204.743 77.6808 204.369 77.7528 cv
203.98 77.8249 203.563 77.868 203.131 77.868 cv
201.95 77.868 200.999 77.508 200.308 76.7592 cv
199.603 76.0248 199.257 75.0168 199.257 73.7496 cv
199.257 72.468 199.603 71.46 200.308 70.7256 cv
201.014 69.9912 201.979 69.6168 203.217 69.6168 cv
203.62 69.6168 204.009 69.66 204.383 69.7465 cv
204.758 69.8328 205.132 69.9481 205.492 70.1064 cv
f
210.791 70.7112 mo
210.1 70.7112 209.553 70.9848 209.15 71.532 cv
208.747 72.0792 208.545 72.8137 208.545 73.7496 cv
208.545 74.7 208.732 75.4344 209.135 75.9817 cv
209.539 76.5288 210.086 76.788 210.791 76.788 cv
211.483 76.788 212.03 76.5288 212.433 75.9817 cv
212.836 75.4344 213.038 74.7 213.038 73.7496 cv
213.038 72.828 212.836 72.0792 212.433 71.532 cv
212.03 70.9848 211.483 70.7112 210.791 70.7112 cv
210.791 69.6168 mo
211.915 69.6168 212.793 69.9912 213.441 70.7112 cv
214.075 71.4456 214.406 72.4536 214.406 73.7496 cv
214.406 75.0456 214.075 76.0536 213.441 76.7736 cv
212.793 77.508 211.915 77.868 210.791 77.868 cv
209.654 77.868 208.761 77.508 208.127 76.7736 cv
207.494 76.0536 207.177 75.0456 207.177 73.7496 cv
207.177 72.4536 207.494 71.4456 208.127 70.7112 cv
208.761 69.9912 209.654 69.6168 210.791 69.6168 cv
f
223.103 72.9288 mo
223.103 77.6808 li
221.807 77.6808 li
221.807 72.972 li
221.807 72.2232 221.649 71.676 221.361 71.3016 cv
221.073 70.9272 220.641 70.74 220.065 70.74 cv
219.359 70.74 218.812 70.9705 218.409 71.4168 cv
218.006 71.8632 217.804 72.468 217.804 73.2312 cv
217.804 77.6808 li
216.508 77.6808 li
216.508 69.804 li
217.804 69.804 li
217.804 71.028 li
218.107 70.5673 218.467 70.2072 218.899 69.9768 cv
219.316 69.7465 219.806 69.6168 220.353 69.6168 cv
221.246 69.6168 221.937 69.9048 222.398 70.4665 cv
222.859 71.028 223.103 71.8488 223.103 72.9288 cv
f
230.707 70.0344 mo
230.707 71.2584 li
230.332 71.0856 229.958 70.9416 229.569 70.8408 cv
229.166 70.7544 228.763 70.6968 228.345 70.6968 cv
227.697 70.6968 227.207 70.7976 226.891 70.9992 cv
226.574 71.2008 226.415 71.4889 226.415 71.8776 cv
226.415 72.18 226.531 72.4105 226.761 72.5832 cv
226.991 72.756 227.452 72.9288 228.143 73.0728 cv
228.59 73.1736 li
229.511 73.3752 230.159 73.6632 230.548 74.0088 cv
230.923 74.3688 231.124 74.8728 231.124 75.5064 cv
231.124 76.2408 230.836 76.8168 230.26 77.2344 cv
229.684 77.6664 228.878 77.868 227.87 77.868 cv
227.438 77.868 227.006 77.8249 226.545 77.7528 cv
226.084 77.6808 225.609 77.5656 225.105 77.3928 cv
225.105 76.0536 li
225.58 76.3128 226.055 76.5001 226.516 76.6152 cv
226.977 76.7448 227.438 76.8025 227.899 76.8025 cv
228.503 76.8025 228.979 76.7017 229.31 76.5001 cv
229.627 76.2985 229.799 75.996 229.799 75.6072 cv
229.799 75.2617 229.67 74.988 229.439 74.8008 cv
229.209 74.6136 228.691 74.4264 227.884 74.2537 cv
227.438 74.1528 li
226.631 73.98 226.041 73.7208 225.695 73.3752 cv
225.335 73.0296 225.163 72.5544 225.163 71.9352 cv
225.163 71.2008 225.422 70.6248 225.94 70.2216 cv
226.459 69.8184 227.207 69.6168 228.187 69.6168 cv
228.662 69.6168 229.108 69.66 229.54 69.732 cv
229.958 69.804 230.347 69.9048 230.707 70.0344 cv
f
234.465 67.572 mo
234.465 69.804 li
237.129 69.804 li
237.129 70.812 li
234.465 70.812 li
234.465 75.0888 li
234.465 75.7368 234.551 76.1544 234.724 76.3272 cv
234.897 76.5144 235.257 76.6009 235.804 76.6009 cv
237.129 76.6009 li
237.129 77.6808 li
235.804 77.6808 li
234.796 77.6808 234.105 77.4936 233.731 77.1192 cv
233.356 76.7448 233.169 76.068 233.169 75.0888 cv
233.169 70.812 li
232.219 70.812 li
232.219 69.804 li
233.169 69.804 li
233.169 67.572 li
234.465 67.572 li
f
242.414 73.7208 mo
241.363 73.7208 240.643 73.8504 240.239 74.0808 cv
239.836 74.3256 239.635 74.7288 239.635 75.3048 cv
239.635 75.7656 239.779 76.14 240.081 76.3993 cv
240.383 76.6728 240.801 76.8025 241.319 76.8025 cv
242.039 76.8025 242.615 76.5576 243.047 76.0392 cv
243.479 75.5352 243.695 74.8585 243.695 74.0088 cv
243.695 73.7208 li
242.414 73.7208 li
244.991 73.188 mo
244.991 77.6808 li
243.695 77.6808 li
243.695 76.4856 li
243.393 76.9752 243.019 77.3209 242.587 77.5368 cv
242.155 77.7528 241.607 77.868 240.974 77.868 cv
240.167 77.868 239.519 77.652 239.044 77.2057 cv
238.569 76.7592 238.339 76.1544 238.339 75.3912 cv
238.339 74.5128 238.627 73.8504 239.231 73.3896 cv
239.822 72.9432 240.7 72.7129 241.881 72.7129 cv
243.695 72.7129 li
243.695 72.5832 li
243.695 71.9929 243.494 71.532 243.105 71.2008 cv
242.716 70.884 242.169 70.7112 241.463 70.7112 cv
241.003 70.7112 240.571 70.7689 240.139 70.884 cv
239.707 70.9992 239.303 71.1576 238.915 71.3592 cv
238.915 70.164 li
239.375 69.9912 239.836 69.8473 240.283 69.7608 cv
240.729 69.6744 241.161 69.6168 241.593 69.6168 cv
242.731 69.6168 243.58 69.9192 244.142 70.5096 cv
244.703 71.1 244.991 71.9929 244.991 73.188 cv
f
254.207 72.9288 mo
254.207 77.6808 li
252.911 77.6808 li
252.911 72.972 li
252.911 72.2232 252.753 71.676 252.465 71.3016 cv
252.177 70.9272 251.745 70.74 251.169 70.74 cv
250.463 70.74 249.916 70.9705 249.513 71.4168 cv
249.11 71.8632 248.908 72.468 248.908 73.2312 cv
248.908 77.6808 li
247.612 77.6808 li
247.612 69.804 li
248.908 69.804 li
248.908 71.028 li
249.211 70.5673 249.571 70.2072 250.003 69.9768 cv
250.42 69.7465 250.91 69.6168 251.457 69.6168 cv
252.35 69.6168 253.041 69.9048 253.502 70.4665 cv
253.963 71.028 254.207 71.8488 254.207 72.9288 cv
f
258.067 67.572 mo
258.067 69.804 li
260.731 69.804 li
260.731 70.812 li
258.067 70.812 li
258.067 75.0888 li
258.067 75.7368 258.153 76.1544 258.326 76.3272 cv
258.499 76.5144 258.859 76.6009 259.406 76.6009 cv
260.731 76.6009 li
260.731 77.6808 li
259.406 77.6808 li
258.398 77.6808 257.707 77.4936 257.332 77.1192 cv
256.958 76.7448 256.771 76.068 256.771 75.0888 cv
256.771 70.812 li
255.82 70.812 li
255.82 69.804 li
256.771 69.804 li
256.771 67.572 li
258.067 67.572 li
f
266.26 69.804 mo
267.556 69.804 li
269.169 75.9528 li
270.782 69.804 li
272.308 69.804 li
273.921 75.9528 li
275.534 69.804 li
276.83 69.804 li
274.771 77.6808 li
273.244 77.6808 li
271.545 71.2296 li
269.846 77.6808 li
268.319 77.6808 li
266.26 69.804 li
f
278.788 69.804 mo
280.084 69.804 li
280.084 77.6808 li
278.788 77.6808 li
278.788 69.804 li
278.788 66.7368 mo
280.084 66.7368 li
280.084 68.3784 li
278.788 68.3784 li
278.788 66.7368 li
f
287.975 70.9992 mo
287.975 66.7368 li
289.271 66.7368 li
289.271 77.6808 li
287.975 77.6808 li
287.975 76.5001 li
287.702 76.9752 287.356 77.3209 286.938 77.5368 cv
286.521 77.7528 286.031 77.868 285.455 77.868 cv
284.505 77.868 283.727 77.4936 283.122 76.7448 cv
282.518 75.996 282.23 74.988 282.23 73.7496 cv
282.23 72.5113 282.518 71.5176 283.122 70.7544 cv
283.727 70.0056 284.505 69.6168 285.455 69.6168 cv
286.031 69.6168 286.521 69.732 286.938 69.9624 cv
287.356 70.1928 287.702 70.5384 287.975 70.9992 cv
283.569 73.7496 mo
283.569 74.7 283.756 75.4488 284.145 75.996 cv
284.534 76.5432 285.081 76.8025 285.772 76.8025 cv
286.449 76.8025 286.982 76.5432 287.385 75.996 cv
287.774 75.4488 287.975 74.7 287.975 73.7496 cv
287.975 72.7992 287.774 72.0648 287.385 71.5176 cv
286.982 70.9705 286.449 70.6968 285.772 70.6968 cv
285.081 70.6968 284.534 70.9705 284.145 71.5176 cv
283.756 72.0648 283.569 72.7992 283.569 73.7496 cv
f
293.217 67.572 mo
293.217 69.804 li
295.881 69.804 li
295.881 70.812 li
293.217 70.812 li
293.217 75.0888 li
293.217 75.7368 293.303 76.1544 293.476 76.3272 cv
293.649 76.5144 294.009 76.6009 294.556 76.6009 cv
295.881 76.6009 li
295.881 77.6808 li
294.556 77.6808 li
293.548 77.6808 292.857 77.4936 292.482 77.1192 cv
292.108 76.7448 291.921 76.068 291.921 75.0888 cv
291.921 70.812 li
290.97 70.812 li
290.97 69.804 li
291.921 69.804 li
291.921 67.572 li
293.217 67.572 li
f
304.132 72.9288 mo
304.132 77.6808 li
302.836 77.6808 li
302.836 72.972 li
302.836 72.2232 302.678 71.676 302.39 71.3016 cv
302.102 70.9272 301.67 70.74 301.094 70.74 cv
300.388 70.74 299.841 70.9705 299.438 71.4168 cv
299.034 71.8632 298.833 72.468 298.833 73.2312 cv
298.833 77.6808 li
297.537 77.6808 li
297.537 66.7368 li
298.833 66.7368 li
298.833 71.028 li
299.135 70.5673 299.495 70.2072 299.927 69.9768 cv
300.345 69.7465 300.834 69.6168 301.382 69.6168 cv
302.274 69.6168 302.966 69.9048 303.426 70.4665 cv
303.887 71.028 304.132 71.8488 304.132 72.9288 cv
f
1 lw
2 lc
1 lj
162.465 93.3877 mo
182.625 93.3877 li
.873045 .242161 1 .129244 cmyk
@
162.465 96.3877 mo
165.465 90.3877 li
159.465 90.3877 li
162.465 96.3877 li
cp
f
.5 lw
0 lc
0 lj
162.465 96.3877 mo
165.465 90.3877 li
159.465 90.3877 li
162.465 96.3877 li
cp
0 0 0 1 cmyk
@
182.625 96.3877 mo
185.625 90.3877 li
179.625 90.3877 li
182.625 96.3877 li
cp
.873045 .242161 1 .129244 cmyk
f
182.625 96.3877 mo
185.625 90.3877 li
179.625 90.3877 li
182.625 96.3877 li
cp
0 0 0 1 cmyk
@
199.819 90.5509 mo
201.115 90.5509 li
201.115 98.4277 li
199.819 98.4277 li
199.819 90.5509 li
199.819 87.4837 mo
201.115 87.4837 li
201.115 89.1253 li
199.819 89.1253 li
199.819 87.4837 li
f
210.374 93.6757 mo
210.374 98.4277 li
209.078 98.4277 li
209.078 93.7189 li
209.078 92.9701 208.919 92.4229 208.631 92.0485 cv
208.343 91.6741 207.911 91.4869 207.335 91.4869 cv
206.63 91.4869 206.083 91.7173 205.679 92.1637 cv
205.276 92.6101 205.075 93.2149 205.075 93.9781 cv
205.075 98.4277 li
203.779 98.4277 li
203.779 90.5509 li
205.075 90.5509 li
205.075 91.7749 li
205.377 91.3141 205.737 90.9541 206.169 90.7237 cv
206.587 90.4933 207.076 90.3637 207.623 90.3637 cv
208.516 90.3637 209.207 90.6517 209.668 91.2133 cv
210.129 91.7749 210.374 92.5957 210.374 93.6757 cv
f
218.625 90.8533 mo
218.625 92.0629 li
218.251 91.8613 217.891 91.7173 217.516 91.6165 cv
217.142 91.5157 216.782 91.4581 216.407 91.4581 cv
215.572 91.4581 214.91 91.7317 214.449 92.2645 cv
213.988 92.7973 213.758 93.5461 213.758 94.4965 cv
213.758 95.4613 213.988 96.2101 214.449 96.7429 cv
214.91 97.2757 215.572 97.5349 216.407 97.5349 cv
216.782 97.5349 217.142 97.4917 217.516 97.3909 cv
217.891 97.2901 218.251 97.1317 218.625 96.9301 cv
218.625 98.1253 li
218.251 98.2981 217.876 98.4277 217.502 98.4997 cv
217.113 98.5717 216.695 98.6149 216.263 98.6149 cv
215.083 98.6149 214.132 98.2549 213.441 97.5061 cv
212.735 96.7717 212.39 95.7637 212.39 94.4965 cv
212.39 93.2149 212.735 92.2069 213.441 91.4725 cv
214.147 90.7381 215.111 90.3637 216.35 90.3637 cv
216.753 90.3637 217.142 90.4069 217.516 90.4933 cv
217.891 90.5797 218.265 90.6949 218.625 90.8533 cv
f
225.436 91.7605 mo
225.292 91.6741 225.134 91.6165 224.961 91.5733 cv
224.788 91.5445 224.601 91.5157 224.399 91.5157 cv
223.665 91.5157 223.103 91.7605 222.715 92.2357 cv
222.311 92.7109 222.124 93.3877 222.124 94.2805 cv
222.124 98.4277 li
220.828 98.4277 li
220.828 90.5509 li
222.124 90.5509 li
222.124 91.7749 li
222.383 91.2997 222.743 90.9397 223.175 90.7093 cv
223.607 90.4789 224.14 90.3637 224.774 90.3637 cv
224.86 90.3637 224.961 90.3781 225.076 90.3781 cv
225.177 90.3925 225.292 90.4069 225.436 90.4357 cv
225.436 91.7605 li
f
233.529 94.1653 mo
233.529 94.7989 li
227.582 94.7989 li
227.639 95.6917 227.899 96.3829 228.388 96.8437 cv
228.863 97.3045 229.526 97.5349 230.39 97.5349 cv
230.879 97.5349 231.369 97.4773 231.83 97.3621 cv
232.291 97.2469 232.766 97.0597 233.227 96.8005 cv
233.227 98.0245 li
232.766 98.2261 232.291 98.3845 231.801 98.4709 cv
231.311 98.5573 230.807 98.6149 230.318 98.6149 cv
229.051 98.6149 228.057 98.2549 227.323 97.5349 cv
226.588 96.8149 226.228 95.8213 226.228 94.5685 cv
226.228 93.2869 226.574 92.2645 227.265 91.5013 cv
227.956 90.7525 228.907 90.3637 230.087 90.3637 cv
231.153 90.3637 231.988 90.7093 232.607 91.3861 cv
233.212 92.0773 233.529 92.9989 233.529 94.1653 cv
232.233 93.7909 mo
232.219 93.0853 232.017 92.5237 231.643 92.0917 cv
231.254 91.6741 230.735 91.4581 230.102 91.4581 cv
229.382 91.4581 228.806 91.6741 228.374 92.0773 cv
227.942 92.4805 227.683 93.0565 227.625 93.7909 cv
232.233 93.7909 li
f
239.231 94.4677 mo
238.18 94.4677 237.46 94.5973 237.057 94.8277 cv
236.654 95.0725 236.452 95.4757 236.452 96.0517 cv
236.452 96.5125 236.596 96.8869 236.899 97.1461 cv
237.201 97.4197 237.619 97.5493 238.137 97.5493 cv
238.857 97.5493 239.433 97.3045 239.865 96.7861 cv
240.297 96.2821 240.513 95.6053 240.513 94.7557 cv
240.513 94.4677 li
239.231 94.4677 li
241.809 93.9349 mo
241.809 98.4277 li
240.513 98.4277 li
240.513 97.2325 li
240.211 97.7221 239.836 98.0677 239.404 98.2837 cv
238.972 98.4997 238.425 98.6149 237.792 98.6149 cv
236.985 98.6149 236.337 98.3989 235.862 97.9525 cv
235.387 97.5061 235.156 96.9013 235.156 96.1381 cv
235.156 95.2597 235.444 94.5973 236.049 94.1365 cv
236.639 93.6901 237.518 93.4597 238.699 93.4597 cv
240.513 93.4597 li
240.513 93.3301 li
240.513 92.7397 240.311 92.2789 239.923 91.9477 cv
239.534 91.6309 238.987 91.4581 238.281 91.4581 cv
237.82 91.4581 237.388 91.5157 236.956 91.6309 cv
236.524 91.7461 236.121 91.9045 235.732 92.1061 cv
235.732 90.9109 li
236.193 90.7381 236.654 90.5941 237.1 90.5077 cv
237.547 90.4213 237.979 90.3637 238.411 90.3637 cv
239.548 90.3637 240.398 90.6661 240.96 91.2565 cv
241.521 91.8469 241.809 92.7397 241.809 93.9349 cv
f
249.499 90.7813 mo
249.499 92.0053 li
249.124 91.8325 248.75 91.6885 248.361 91.5877 cv
247.958 91.5013 247.555 91.4437 247.137 91.4437 cv
246.489 91.4437 246 91.5445 245.683 91.7461 cv
245.366 91.9477 245.208 92.2357 245.208 92.6245 cv
245.208 92.9269 245.323 93.1573 245.553 93.3301 cv
245.784 93.5029 246.244 93.6757 246.936 93.8197 cv
247.382 93.9205 li
248.304 94.1221 248.952 94.4101 249.34 94.7557 cv
249.715 95.1157 249.916 95.6197 249.916 96.2533 cv
249.916 96.9877 249.628 97.5637 249.052 97.9813 cv
248.476 98.4133 247.67 98.6149 246.662 98.6149 cv
246.23 98.6149 245.798 98.5717 245.337 98.4997 cv
244.876 98.4277 244.401 98.3125 243.897 98.1397 cv
243.897 96.8005 li
244.372 97.0597 244.848 97.2469 245.308 97.3621 cv
245.769 97.4917 246.23 97.5493 246.691 97.5493 cv
247.296 97.5493 247.771 97.4485 248.102 97.2469 cv
248.419 97.0453 248.592 96.7429 248.592 96.3541 cv
248.592 96.0085 248.462 95.7349 248.232 95.5477 cv
248.001 95.3605 247.483 95.1733 246.676 95.0005 cv
246.23 94.8997 li
245.424 94.7269 244.833 94.4677 244.488 94.1221 cv
244.128 93.7765 243.955 93.3013 243.955 92.6821 cv
243.955 91.9477 244.214 91.3717 244.732 90.9685 cv
245.251 90.5653 246 90.3637 246.979 90.3637 cv
247.454 90.3637 247.9 90.4069 248.332 90.4789 cv
248.75 90.5509 249.139 90.6517 249.499 90.7813 cv
f
251.976 90.5509 mo
253.272 90.5509 li
253.272 98.4277 li
251.976 98.4277 li
251.976 90.5509 li
251.976 87.4837 mo
253.272 87.4837 li
253.272 89.1253 li
251.976 89.1253 li
251.976 87.4837 li
f
262.531 93.6757 mo
262.531 98.4277 li
261.235 98.4277 li
261.235 93.7189 li
261.235 92.9701 261.076 92.4229 260.788 92.0485 cv
260.5 91.6741 260.068 91.4869 259.492 91.4869 cv
258.787 91.4869 258.24 91.7173 257.836 92.1637 cv
257.433 92.6101 257.232 93.2149 257.232 93.9781 cv
257.232 98.4277 li
255.936 98.4277 li
255.936 90.5509 li
257.232 90.5509 li
257.232 91.7749 li
257.534 91.3141 257.894 90.9541 258.326 90.7237 cv
258.744 90.4933 259.233 90.3637 259.78 90.3637 cv
260.673 90.3637 261.364 90.6517 261.825 91.2133 cv
262.286 91.7749 262.531 92.5957 262.531 93.6757 cv
f
270.292 94.3957 mo
270.292 93.4741 270.091 92.7397 269.716 92.2213 cv
269.328 91.7029 268.78 91.4437 268.089 91.4437 cv
267.398 91.4437 266.851 91.7029 266.462 92.2213 cv
266.073 92.7397 265.886 93.4741 265.886 94.3957 cv
265.886 95.3317 266.073 96.0517 266.462 96.5701 cv
266.851 97.0885 267.398 97.3477 268.089 97.3477 cv
268.78 97.3477 269.328 97.0885 269.716 96.5701 cv
270.091 96.0517 270.292 95.3317 270.292 94.3957 cv
271.588 97.4485 mo
271.588 98.7733 271.286 99.7669 270.696 100.429 cv
270.091 101.077 269.184 101.409 267.96 101.409 cv
267.499 101.409 267.081 101.365 266.678 101.308 cv
266.275 101.236 265.872 101.135 265.497 100.991 cv
265.497 99.7381 li
265.872 99.9397 266.246 100.084 266.62 100.185 cv
266.995 100.285 267.369 100.343 267.758 100.343 cv
268.593 100.343 269.227 100.113 269.659 99.6805 cv
270.076 99.2341 270.292 98.5717 270.292 97.6789 cv
270.292 97.0453 li
270.019 97.5061 269.673 97.8517 269.256 98.0821 cv
268.838 98.3125 268.348 98.4277 267.772 98.4277 cv
266.793 98.4277 266.016 98.0677 265.425 97.3333 cv
264.835 96.5989 264.547 95.6197 264.547 94.3957 cv
264.547 93.1861 264.835 92.2069 265.425 91.4725 cv
266.016 90.7381 266.793 90.3637 267.772 90.3637 cv
268.348 90.3637 268.838 90.4789 269.256 90.7093 cv
269.673 90.9397 270.019 91.2853 270.292 91.7461 cv
270.292 90.5509 li
271.588 90.5509 li
271.588 97.4485 li
f
278.083 90.5509 mo
279.379 90.5509 li
280.991 96.6997 li
282.604 90.5509 li
284.131 90.5509 li
285.743 96.6997 li
287.356 90.5509 li
288.652 90.5509 li
286.593 98.4277 li
285.067 98.4277 li
283.367 91.9765 li
281.668 98.4277 li
280.142 98.4277 li
278.083 90.5509 li
f
290.611 90.5509 mo
291.906 90.5509 li
291.906 98.4277 li
290.611 98.4277 li
290.611 90.5509 li
290.611 87.4837 mo
291.906 87.4837 li
291.906 89.1253 li
290.611 89.1253 li
290.611 87.4837 li
f
299.798 91.7461 mo
299.798 87.4837 li
301.094 87.4837 li
301.094 98.4277 li
299.798 98.4277 li
299.798 97.2469 li
299.524 97.7221 299.178 98.0677 298.761 98.2837 cv
298.343 98.4997 297.854 98.6149 297.278 98.6149 cv
296.327 98.6149 295.55 98.2405 294.945 97.4917 cv
294.34 96.7429 294.052 95.7349 294.052 94.4965 cv
294.052 93.2581 294.34 92.2645 294.945 91.5013 cv
295.55 90.7525 296.327 90.3637 297.278 90.3637 cv
297.854 90.3637 298.343 90.4789 298.761 90.7093 cv
299.178 90.9397 299.524 91.2853 299.798 91.7461 cv
295.391 94.4965 mo
295.391 95.4469 295.578 96.1957 295.967 96.7429 cv
296.356 97.2901 296.903 97.5493 297.594 97.5493 cv
298.271 97.5493 298.804 97.2901 299.207 96.7429 cv
299.596 96.1957 299.798 95.4469 299.798 94.4965 cv
299.798 93.5461 299.596 92.8117 299.207 92.2645 cv
298.804 91.7173 298.271 91.4437 297.594 91.4437 cv
296.903 91.4437 296.356 91.7173 295.967 92.2645 cv
295.578 92.8117 295.391 93.5461 295.391 94.4965 cv
f
305.039 88.3189 mo
305.039 90.5509 li
307.703 90.5509 li
307.703 91.5589 li
305.039 91.5589 li
305.039 95.8357 li
305.039 96.4837 305.126 96.9013 305.298 97.0741 cv
305.471 97.2613 305.831 97.3477 306.378 97.3477 cv
307.703 97.3477 li
307.703 98.4277 li
306.378 98.4277 li
305.37 98.4277 304.679 98.2405 304.305 97.8661 cv
303.93 97.4917 303.743 96.8149 303.743 95.8357 cv
303.743 91.5589 li
302.793 91.5589 li
302.793 90.5509 li
303.743 90.5509 li
303.743 88.3189 li
305.039 88.3189 li
f
315.954 93.6757 mo
315.954 98.4277 li
314.658 98.4277 li
314.658 93.7189 li
314.658 92.9701 314.5 92.4229 314.212 92.0485 cv
313.924 91.6741 313.492 91.4869 312.916 91.4869 cv
312.21 91.4869 311.663 91.7173 311.26 92.1637 cv
310.857 92.6101 310.655 93.2149 310.655 93.9781 cv
310.655 98.4277 li
309.359 98.4277 li
309.359 87.4837 li
310.655 87.4837 li
310.655 91.7749 li
310.958 91.3141 311.318 90.9541 311.75 90.7237 cv
312.167 90.4933 312.657 90.3637 313.204 90.3637 cv
314.097 90.3637 314.788 90.6517 315.249 91.2133 cv
315.71 91.7749 315.954 92.5957 315.954 93.6757 cv
f
1 lw
2 lc
1 lj
162.465 114.135 mo
182.625 114.135 li
.713191 0 .306584 0 cmyk
@
162.465 111.135 mo
159.465 117.135 li
165.465 117.135 li
162.465 111.135 li
cp
f
.5 lw
0 lc
0 lj
162.465 111.135 mo
159.465 117.135 li
165.465 117.135 li
162.465 111.135 li
cp
0 0 0 1 cmyk
@
182.625 111.135 mo
179.625 117.135 li
185.625 117.135 li
182.625 111.135 li
cp
.713191 0 .306584 0 cmyk
f
182.625 111.135 mo
179.625 117.135 li
185.625 117.135 li
182.625 111.135 li
cp
0 0 0 1 cmyk
@
205.003 112.493 mo
205.003 108.231 li
206.299 108.231 li
206.299 119.175 li
205.003 119.175 li
205.003 117.994 li
204.729 118.469 204.383 118.815 203.966 119.031 cv
203.548 119.247 203.059 119.362 202.483 119.362 cv
201.532 119.362 200.755 118.987 200.15 118.239 cv
199.545 117.49 199.257 116.482 199.257 115.243 cv
199.257 114.005 199.545 113.011 200.15 112.248 cv
200.755 111.499 201.532 111.111 202.483 111.111 cv
203.059 111.111 203.548 111.226 203.966 111.456 cv
204.383 111.687 204.729 112.032 205.003 112.493 cv
200.596 115.243 mo
200.596 116.194 200.783 116.943 201.172 117.49 cv
201.561 118.037 202.108 118.296 202.799 118.296 cv
203.476 118.296 204.009 118.037 204.412 117.49 cv
204.801 116.943 205.003 116.194 205.003 115.243 cv
205.003 114.293 204.801 113.559 204.412 113.011 cv
204.009 112.464 203.476 112.191 202.799 112.191 cv
202.108 112.191 201.561 112.464 201.172 113.011 cv
200.783 113.559 200.596 114.293 200.596 115.243 cv
f
215.702 114.912 mo
215.702 115.546 li
209.755 115.546 li
209.812 116.439 210.071 117.13 210.561 117.591 cv
211.036 118.051 211.699 118.282 212.563 118.282 cv
213.052 118.282 213.542 118.224 214.003 118.109 cv
214.463 117.994 214.939 117.807 215.399 117.547 cv
215.399 118.771 li
214.939 118.973 214.463 119.131 213.974 119.218 cv
213.484 119.304 212.98 119.362 212.491 119.362 cv
211.223 119.362 210.23 119.002 209.495 118.282 cv
208.761 117.562 208.401 116.568 208.401 115.315 cv
208.401 114.034 208.747 113.011 209.438 112.248 cv
210.129 111.499 211.079 111.111 212.26 111.111 cv
213.326 111.111 214.161 111.456 214.78 112.133 cv
215.385 112.824 215.702 113.746 215.702 114.912 cv
214.406 114.538 mo
214.391 113.832 214.19 113.271 213.815 112.839 cv
213.427 112.421 212.908 112.205 212.275 112.205 cv
211.555 112.205 210.979 112.421 210.547 112.824 cv
210.115 113.227 209.855 113.803 209.798 114.538 cv
214.406 114.538 li
f
223.492 111.6 mo
223.492 112.81 li
223.118 112.608 222.758 112.464 222.383 112.363 cv
222.009 112.263 221.649 112.205 221.275 112.205 cv
220.439 112.205 219.777 112.479 219.316 113.011 cv
218.855 113.544 218.625 114.293 218.625 115.243 cv
218.625 116.208 218.855 116.957 219.316 117.49 cv
219.777 118.023 220.439 118.282 221.275 118.282 cv
221.649 118.282 222.009 118.239 222.383 118.138 cv
222.758 118.037 223.118 117.879 223.492 117.677 cv
223.492 118.872 li
223.118 119.045 222.743 119.175 222.369 119.247 cv
221.98 119.319 221.563 119.362 221.131 119.362 cv
219.95 119.362 218.999 119.002 218.308 118.253 cv
217.603 117.519 217.257 116.511 217.257 115.243 cv
217.257 113.962 217.603 112.954 218.308 112.219 cv
219.014 111.485 219.979 111.111 221.217 111.111 cv
221.62 111.111 222.009 111.154 222.383 111.24 cv
222.758 111.327 223.132 111.442 223.492 111.6 cv
f
230.303 112.507 mo
230.159 112.421 230.001 112.363 229.828 112.32 cv
229.655 112.291 229.468 112.263 229.267 112.263 cv
228.532 112.263 227.971 112.507 227.582 112.983 cv
227.179 113.458 226.991 114.135 226.991 115.027 cv
226.991 119.175 li
225.695 119.175 li
225.695 111.298 li
226.991 111.298 li
226.991 112.522 li
227.251 112.047 227.611 111.687 228.043 111.456 cv
228.475 111.226 229.007 111.111 229.641 111.111 cv
229.727 111.111 229.828 111.125 229.943 111.125 cv
230.044 111.139 230.159 111.154 230.303 111.183 cv
230.303 112.507 li
f
238.396 114.912 mo
238.396 115.546 li
232.449 115.546 li
232.507 116.439 232.766 117.13 233.255 117.591 cv
233.731 118.051 234.393 118.282 235.257 118.282 cv
235.747 118.282 236.236 118.224 236.697 118.109 cv
237.158 117.994 237.633 117.807 238.094 117.547 cv
238.094 118.771 li
237.633 118.973 237.158 119.131 236.668 119.218 cv
236.179 119.304 235.675 119.362 235.185 119.362 cv
233.918 119.362 232.924 119.002 232.19 118.282 cv
231.455 117.562 231.095 116.568 231.095 115.315 cv
231.095 114.034 231.441 113.011 232.132 112.248 cv
232.823 111.499 233.774 111.111 234.955 111.111 cv
236.02 111.111 236.855 111.456 237.475 112.133 cv
238.079 112.824 238.396 113.746 238.396 114.912 cv
237.1 114.538 mo
237.086 113.832 236.884 113.271 236.51 112.839 cv
236.121 112.421 235.603 112.205 234.969 112.205 cv
234.249 112.205 233.673 112.421 233.241 112.824 cv
232.809 113.227 232.55 113.803 232.492 114.538 cv
237.1 114.538 li
f
244.099 115.215 mo
243.047 115.215 242.327 115.344 241.924 115.575 cv
241.521 115.819 241.319 116.223 241.319 116.799 cv
241.319 117.259 241.463 117.634 241.766 117.893 cv
242.068 118.167 242.486 118.296 243.004 118.296 cv
243.724 118.296 244.3 118.051 244.732 117.533 cv
245.164 117.029 245.38 116.352 245.38 115.503 cv
245.38 115.215 li
244.099 115.215 li
246.676 114.682 mo
246.676 119.175 li
245.38 119.175 li
245.38 117.979 li
245.078 118.469 244.703 118.815 244.271 119.031 cv
243.839 119.247 243.292 119.362 242.659 119.362 cv
241.852 119.362 241.204 119.146 240.729 118.699 cv
240.254 118.253 240.023 117.648 240.023 116.885 cv
240.023 116.007 240.311 115.344 240.916 114.883 cv
241.507 114.437 242.385 114.207 243.566 114.207 cv
245.38 114.207 li
245.38 114.077 li
245.38 113.487 245.179 113.026 244.79 112.695 cv
244.401 112.378 243.854 112.205 243.148 112.205 cv
242.687 112.205 242.255 112.263 241.823 112.378 cv
241.391 112.493 240.988 112.651 240.599 112.853 cv
240.599 111.658 li
241.06 111.485 241.521 111.341 241.967 111.255 cv
242.414 111.168 242.846 111.111 243.278 111.111 cv
244.415 111.111 245.265 111.413 245.827 112.003 cv
246.388 112.594 246.676 113.487 246.676 114.682 cv
f
254.366 111.528 mo
254.366 112.752 li
253.992 112.579 253.617 112.435 253.228 112.335 cv
252.825 112.248 252.422 112.191 252.004 112.191 cv
251.356 112.191 250.867 112.291 250.55 112.493 cv
250.233 112.695 250.075 112.983 250.075 113.371 cv
250.075 113.674 250.19 113.904 250.42 114.077 cv
250.651 114.25 251.112 114.423 251.803 114.567 cv
252.249 114.667 li
253.171 114.869 253.819 115.157 254.208 115.503 cv
254.582 115.863 254.784 116.367 254.784 117 cv
254.784 117.735 254.496 118.311 253.92 118.728 cv
253.344 119.16 252.537 119.362 251.529 119.362 cv
251.097 119.362 250.665 119.319 250.204 119.247 cv
249.744 119.175 249.268 119.059 248.764 118.887 cv
248.764 117.547 li
249.24 117.807 249.715 117.994 250.176 118.109 cv
250.636 118.239 251.097 118.296 251.558 118.296 cv
252.163 118.296 252.638 118.195 252.969 117.994 cv
253.286 117.792 253.459 117.49 253.459 117.101 cv
253.459 116.755 253.329 116.482 253.099 116.295 cv
252.868 116.107 252.35 115.92 251.544 115.747 cv
251.097 115.647 li
250.291 115.474 249.7 115.215 249.355 114.869 cv
248.995 114.523 248.822 114.048 248.822 113.429 cv
248.822 112.695 249.081 112.119 249.6 111.715 cv
250.118 111.312 250.867 111.111 251.846 111.111 cv
252.321 111.111 252.768 111.154 253.2 111.226 cv
253.617 111.298 254.006 111.399 254.366 111.528 cv
f
256.843 111.298 mo
258.139 111.298 li
258.139 119.175 li
256.843 119.175 li
256.843 111.298 li
256.843 108.231 mo
258.139 108.231 li
258.139 109.872 li
256.843 109.872 li
256.843 108.231 li
f
267.398 114.423 mo
267.398 119.175 li
266.102 119.175 li
266.102 114.466 li
266.102 113.717 265.943 113.17 265.655 112.795 cv
265.367 112.421 264.935 112.234 264.359 112.234 cv
263.654 112.234 263.107 112.464 262.703 112.911 cv
262.3 113.357 262.099 113.962 262.099 114.725 cv
262.099 119.175 li
260.803 119.175 li
260.803 111.298 li
262.099 111.298 li
262.099 112.522 li
262.401 112.061 262.761 111.701 263.193 111.471 cv
263.611 111.24 264.1 111.111 264.647 111.111 cv
265.54 111.111 266.231 111.399 266.692 111.96 cv
267.153 112.522 267.398 113.343 267.398 114.423 cv
f
275.16 115.143 mo
275.16 114.221 274.958 113.487 274.584 112.968 cv
274.195 112.45 273.648 112.191 272.956 112.191 cv
272.265 112.191 271.718 112.45 271.329 112.968 cv
270.94 113.487 270.753 114.221 270.753 115.143 cv
270.753 116.079 270.94 116.799 271.329 117.317 cv
271.718 117.835 272.265 118.095 272.956 118.095 cv
273.648 118.095 274.195 117.835 274.584 117.317 cv
274.958 116.799 275.16 116.079 275.16 115.143 cv
276.456 118.195 mo
276.456 119.52 276.153 120.514 275.563 121.176 cv
274.958 121.824 274.051 122.155 272.827 122.155 cv
272.366 122.155 271.948 122.112 271.545 122.055 cv
271.142 121.983 270.739 121.882 270.364 121.738 cv
270.364 120.485 li
270.739 120.687 271.113 120.831 271.488 120.931 cv
271.862 121.032 272.236 121.09 272.625 121.09 cv
273.46 121.09 274.094 120.859 274.526 120.427 cv
274.944 119.981 275.16 119.319 275.16 118.426 cv
275.16 117.792 li
274.886 118.253 274.54 118.599 274.123 118.829 cv
273.705 119.059 273.216 119.175 272.64 119.175 cv
271.66 119.175 270.883 118.815 270.292 118.08 cv
269.702 117.346 269.414 116.367 269.414 115.143 cv
269.414 113.933 269.702 112.954 270.292 112.219 cv
270.883 111.485 271.66 111.111 272.64 111.111 cv
273.216 111.111 273.705 111.226 274.123 111.456 cv
274.54 111.687 274.886 112.032 275.16 112.493 cv
275.16 111.298 li
276.456 111.298 li
276.456 118.195 li
f
282.95 111.298 mo
284.246 111.298 li
285.859 117.447 li
287.471 111.298 li
288.998 111.298 li
290.611 117.447 li
292.223 111.298 li
293.519 111.298 li
291.46 119.175 li
289.934 119.175 li
288.235 112.723 li
286.535 119.175 li
285.009 119.175 li
282.95 111.298 li
f
295.478 111.298 mo
296.774 111.298 li
296.774 119.175 li
295.478 119.175 li
295.478 111.298 li
295.478 108.231 mo
296.774 108.231 li
296.774 109.872 li
295.478 109.872 li
295.478 108.231 li
f
304.665 112.493 mo
304.665 108.231 li
305.961 108.231 li
305.961 119.175 li
304.665 119.175 li
304.665 117.994 li
304.391 118.469 304.046 118.815 303.628 119.031 cv
303.21 119.247 302.721 119.362 302.145 119.362 cv
301.194 119.362 300.417 118.987 299.812 118.239 cv
299.207 117.49 298.919 116.482 298.919 115.243 cv
298.919 114.005 299.207 113.011 299.812 112.248 cv
300.417 111.499 301.194 111.111 302.145 111.111 cv
302.721 111.111 303.21 111.226 303.628 111.456 cv
304.046 111.687 304.391 112.032 304.665 112.493 cv
300.258 115.243 mo
300.258 116.194 300.446 116.943 300.834 117.49 cv
301.223 118.037 301.77 118.296 302.462 118.296 cv
303.138 118.296 303.671 118.037 304.074 117.49 cv
304.463 116.943 304.665 116.194 304.665 115.243 cv
304.665 114.293 304.463 113.559 304.074 113.011 cv
303.671 112.464 303.138 112.191 302.462 112.191 cv
301.77 112.191 301.223 112.464 300.834 113.011 cv
300.446 113.559 300.258 114.293 300.258 115.243 cv
f
309.906 109.066 mo
309.906 111.298 li
312.57 111.298 li
312.57 112.306 li
309.906 112.306 li
309.906 116.583 li
309.906 117.231 309.993 117.648 310.166 117.821 cv
310.338 118.008 310.698 118.095 311.246 118.095 cv
312.57 118.095 li
312.57 119.175 li
311.246 119.175 li
310.238 119.175 309.546 118.987 309.172 118.613 cv
308.798 118.239 308.61 117.562 308.61 116.583 cv
308.61 112.306 li
307.66 112.306 li
307.66 111.298 li
308.61 111.298 li
308.61 109.066 li
309.906 109.066 li
f
320.822 114.423 mo
320.822 119.175 li
319.526 119.175 li
319.526 114.466 li
319.526 113.717 319.367 113.17 319.079 112.795 cv
318.791 112.421 318.359 112.234 317.783 112.234 cv
317.078 112.234 316.53 112.464 316.127 112.911 cv
315.724 113.357 315.522 113.962 315.522 114.725 cv
315.522 119.175 li
314.226 119.175 li
314.226 108.231 li
315.522 108.231 li
315.522 112.522 li
315.825 112.061 316.185 111.701 316.617 111.471 cv
317.034 111.24 317.524 111.111 318.071 111.111 cv
318.964 111.111 319.655 111.399 320.116 111.96 cv
320.577 112.522 320.822 113.343 320.822 114.423 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 17.0.0
%%For: (weinan) ()
%%Title: (layersize2.eps)
%%CreationDate: 12/31/2015 5:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&B3QUkdK"SXn+6#jCbcjoc2i[X82<19Baf7%K<^ERmb.?PrU%'dC3<J\LH0#AZHmj`mV5b$<2q3DCMp<%*jf5mXg^Xo5AM\K
%r_k'u-*,&8+*2M8NO*ql"(5Y^e+j)Z4Y+/DnBk/2Aaii@ohW0dQ[5i:CcC,)hHHrSGHI,kXM)H@>3`QQCps@9'q2Os%sTG9V`n*!
%c$H5BrN,ZjU7;t><De&l$l[CBUVZ,7]t9Sn</k.LT1H#L4_P=/`p`!"rj;D+Qd4pq5*-4EZ'i/^iU)2c(q?*d<C%6k6SN&ie-$Gf
%BY(/\P,_-/W$mBeXpC19RYE"*R\J^T;\1fTOA+1],ZtdZMg&h,[mmRYXn<Y#f#&+FY1rAlf")s:jBTUC0']("B!#Dfm$:$sX/89P
%J5=d@"q&Qu@&oH`AQ8h9'dQqEFZ$QVMFQ18Akb_F$oOm'C0&a_65;pp2"[$,CK\L#1sm":;c4=19kW8HIl?SAXeedMPg("kQ&7Fi
%q/65FnUJ>qi/o//:[?TbTNU_i[MjSX[7%0co^TimCV:$M3)*A@[5X"&d"_.+6!VpNDtQ<8?b8<`^94:@)[f2'[J"eb"\Q.`*-^\M
%MtRl/Gu`@QXQKFHB9>mKSuBg]9p&A;7M3LfMP=\r+Zc52.Voo*Ab^A3V%XEDj)3nZd99a3"^o*D=d$8CD7ho]Vb8IkIZU.4Ta1??
%MC+.MA1"uV"\.*3'r4`"ElDJpYdiSo[htH>+r(VodmD+sSm-;D]YifFeJ^D8&s+U\.A?hM+PEkpX^B!3&hn44rh!0Kms_qTGEGX'
%`_T=H:Cobc.i-f<'L2N6]-)nVIaYhrPh9K7L0uu;pk`CIL1$HNWN\id'4FQJ@BcNfERR<0dmPnfL7\`P/0\3$LlW=0Gc+Y3Qq@PN
%<[sP-*j8NSTMhHo;5,M]PTl!KhSi"<I54gm*sBK1i?s4c^K>F=4mWl3+q/W%5=s`M46XT70DraqfI?a:VC8cae(?,I,^m]dGT$C4
%==I#p"UKig_bYrb<:CeF,sj`U2!$#p'n4S$C%#a@./B)gMOtI+L5LQ/56Skfi[6WQ#EneNhQmCr^E=BeOc;2/%=K)jLnFGM4%SH5
%5:tmb&q2#Ap(9OR?rD!<bbZ!r:*p@%GU?!ukU;:PpBX6Va*9su:HLgtVkd26Zu%^;'SQE.%!I`S.!C\7:4#`S@it4S_5OGF+":R\
%_t]'BfKjbP8NE83P^O5NQ#n@u9PBgK&`Te2:n_9\KT.SF5,F>2SmnS@,K-p>@Jut^,8e<oS#6_Bqt/2YSk`67flZR0K4ko5njc.%
%RJlaqGb!#bB:^hi3V.bn3h$53,a-1gBjrmU)/[B/B/G\s`_Q*7_\,Ek,FMu;%F[g9Om-jp[HL]g-V<rro.U&01Q$\-^[r$X=&jRg
%q3V*F3rSID9E,FDMAV)-h6?nLH$[[0Qi7^,oXFEFrI`-`-$m]/Qi<8noXFEFr=eN^9@)W8i[5aRqO@GXs'd&rV5U>X;?aUGIHH*M
%H:c`ZL+;9opf>8X8d0_)0>0o[TG<)PE'qYb#_;qZf8RNF,sc[&'C>?A5"]%'Yi-u/Y*<J,Mp:Do8]U.sK`@1Tl&WJ0&cCu"!n,um
%)Bl\Fp_aE*]VMkUN-tIm?FQjFYpkQs+L7r^H\?P6Z<i]E!pg*nFAkOF1tX\&=C@fp35nQ^;]$?eM#IeVM1cZs*WW!2YZ"Hh'&u#_
%-2YsT0n)3'K_+gKC""q1c=?41s#XX0q.UF40-Y+.&OD<jQ=?HaMaZ$+n=DN*Gai"0;F']UlUBG*(&BoY&RL\#lP160$AsJ*8FO<Y
%P*gIb-NlMVUuDQ_Z&?FY@*?2M*:JA8ha/E/"tB=spc\1-*@e<ZKV]rYXJs=\kP_$spMc;UmY*hGr[>HQWMPZB`$-L4''LHq'fK_@
%bA7H&f<!"=J[J2+-?9(d6qGj#`A0&0$Apb8]M2:d!Yk6[,!8Qui-U$'B2cfNPsA:\$$FQ>!#(2qTt1KsZ\RIG&JZhpAW8cO;a@9N
%<<^i#9Y^.F:A\?HW0LgX/XeqW:;9_"W=GZ&b>F^Sd8=bZX@.f"kr_U1&Y09\7-APhf;Q3`&PLSV[u+/6-"<\Kh9tnT@3Cd7?A9&p
%(+BnG:1PeRQM<[AQ%HjoV?G?(Yq#rRFNL6$8?lQBSoKrBCKj'V0;#bc"O*]VD=crgX4p@LA68r(U"K$18Wal+'NG(mA_J3>Ripq#
%4laU?0jGP&:+o26VX>X2-]\Xmof1E5FEW4cC=]bk0L>@]/]qlL+a@8A?,EQqA)U*]Ig9?e$\GH0Gr(N<A):0"po.:F6)@<W1RCcb
%gnMuN-8CYH__>LFQBfhT)J+WN66EQ#CPD<eM)VP6/qZYj-=!sn;gMhtlKggWQs82`=+a7RlFeko-D!JVb*Y\R<^e`T(=o-2MBd-?
%J%a:MOZKC1Q?FMQl7RXmrtQC\kWLChT'aqU4ZZVbM3CEYV`b.'N3d'<-+NAG`?ZGlqW6RZ>k^gtkIYrX3Ek$G@4f/Z'W*HhP)Jq%
%8O_/u5V*?J,gM)3AJiRITGTH%kNH@PT*u_2;_?DDD&F$:$iS@"r<*HQ>MB^M,qr2Ir(8"V&M]W'"u8oPbA'&6bi$"/#&5&+gF.dD
%ksFbG`U,G-6t(c4)"rs3-Snj?l^6dC4tZa<ND,,Ld]ebu>?Xe-a1YU6RYHtNZ7F.H#HaP4i5-b_Bi(a1O-\H>PkdFWgJ;(1pqiZ)
%da90QQM`!qil!>?S1h05!)uG8XU-P$61l2'F/hbG#.:_1(toiJAJ:>oX9&8h+^`V";)T+<SmEk`h[X4X**<=+GS?8&NhEHS.oJE[
%<X;jk',!qY30m<JmY`U0Z_B)g78b@IBc4k8PVX<f-TJJZ00!FYRk2JX''@m4Jg],-nPT:$q#?I/n]6d?#`:P[TNgXGl?M.4FTL7>
%HH<a'n0L_bAiF8R4ef"h==H3QO0/kr!fnk_cr'DQe>CtAq1p]p9G7$\d'cJW&Xo#MZ3`-=b(hicGh/t[]?^<@pbj)o(qf9Tg+nf9
%I!6"(CT[]5^gU9f6=.f-Q6A]I5s/n]#RXZG\WTr^P6Cp-70WRkQh(qM$S9k/d-X/3QpoJl.$>mp6I?i*f+l^Z3:I&thDE_EZYa9I
%^s#*YU/qV4jDmh8bmNa=;q?d>J:,66fGlr$`:X3s8"useB\H8l&ge8?9Ros=Zf[c0SCfHN.Yutg"?cmKdH5r\"148LZs#3qUa%O,
%X3d^Z,gsn(J7;o!82F50Bc(N6IM6;'J/XK2Bp6m<:.1.3F\LsSn%tJkSdq^!+C"8P"c7sQ"`/oALB8r,C1RZ7MN)(rGX[>=$F!):
%X",CcZ:Kam7o]U3.1b6u>V6oa1^sVn'cBFoOE^q.\HPK.@R;-T;)F.?7]$e=mm_9Y4-:)>Yg.".&Ji<I\(j=$.695cBqjnsCW9LC
%TAai$F<k)pgLG5Vc9(<cctPqRPQ&pu-4ZGM;=bPUd4lMLfJIf]XS<ff4$.>S'@t5,:-t#(LKR.9<N%4NI):a`$W]$N@NlY.^_h'%
%q?i7rE<aX(-?(^g0V<`<!l@jY"\$(YJs\8hY[g*JO%Tf\6.T3Dd@*B;?L"E@I7Dhq9TUusVo2uX!(,(MaeP.3,[PXe]-Vr]'o3"t
%N/To6?[#j#B\4%norB9>+u_*$Z87[m%d]`ofORVj)Q+h0[ipBWc;p>A;OOi5Sj7sNZ!oS'3_%@56!'F0,Ss!-L*JI>XAoO]XI4pX
%Vt7T4%0Y5<jh.^8h<*'U!OHd.1&Ns]n],WlPKr;6P"aA]2:fjiMCB+YG@_:Q`RT9gVKnr-"+jf)Eojd4rr3G\qn$>'3X8&=Tk(ne
%0;@9d5U8cd<hrb:eIdPQc@*`hdRdt\&$-p(Z`-PCRu*8Y*_41HUMsRa%314)/$9cYEr"+W&1LukdVu0C.ib3\1@J,k1(1Ci_.!ZY
%Y=Z(KI;!^3ckEjr;$]W@ATjZ`C/f?pV>`R\n4,!B%M_]G':PRK/^c.K\1$Z*XkU.!GY)NPgMP4QnTcD/+H?K"Ipe-^0&iu[M"h=9
%qoh4-)4#JYR(F$/dkoMX"<H$8fH(rD^#Is8#s]fU/.FCGPmWoLU,*m>#+CKcJLVusn1%@gdFPOY9U[7;&d\d_'2:3S_IStYQU)kd
%'6YX.Y1R'W1GAt@\_SHG$'V4$$/W>N1!LV\Q6@Ffh5q*RW+qP]<bG$@Cb4/jZK6nA@1SI]lW=Fkl*d<*b.<2b6X_AK#0NMOPd,s9
%M-GjrNOsm=Z_^E@VC-A<aN3t#5@WNL<0J04b]G6fLTFA,"bkPj#mU_?V8AQZU02$[IF!a3$0PT8MYs0(kS70SLurb41DR(W<\QkQ
%KtM5[$E'L#hN]?uEJXE;#.dV^&5EjC-CSGA\<s8"]*Fq(V].V`T&bJLD2QS+11Aj$R3k<JZI:dkAZ.T8_3/YJaR00O2KVTj'rIc?
%D<$^a.'e#%11n&/3R^3H>iEFd]S5/ZIF<Af4mS(/a^]m<1>g)ka]4X/V[JH:kTV$P[/K26P<gK(&nPWM"`,p^2@<4O8ll7fkdBWA
%aLH3<IEd2r[=mr&1@4([s"X3qMuuU_Z(RFH^5W5HJKaEDi<TgH8di8_n7"kIq(NFBN!a'!hPCgd'K;FqejpJEXB7Bg9Jm/eT^tB,
%iT?\RQL$>YV6d$>NLtCrE#Z9<&IQotQ/KlMb0KdWGKn-uLo`2,$ItkOQE'#<;C%T!oodCddYbBb_8qguFE4\"UkatfA)ei<pVM/*
%(Pou-">#Oj;gp6,HPU^rN'%A9`>KQ(^g[`;PIS:uX)Bb875^S^W"A3Z(.>T/Dji7ppkWr0-Ii[uaN2$UgKDgj8NEt`ZE[l=$:ZD=
%>s2j4A1KT/o@1-%p-84eXS+(Q,;6*LW1"KqIYZ%9a)[u9/S2G(]BarG<_/o4;P=^tY'30p>i:,DOF.aKHf/#+#?)1%g,QVG7<>dm
%EcJqk2a$c.8Ncn<)`l[B?ra3AQu6:GYpF45onBP+Z.1Lr@\m41hZ'at"n2KPO^csQjF9>PEL,,92JoW5"<OJa<R,%TY?<XX=ZG=B
%G[;EYq:E)E.72>c9a'p6hN"DA/[K!kSs=<R4P5(J`Epu71AG\GP[Mjk^U4hk/Y#u\X^&NY<&@7`>8\39$'2JT5er<%%AQ"tfHV.i
%Pt&.rCLs)CF01*V.faBfkXlFmOg(?2P5;'qb*[CH>Ka?A8qT4=jXfk(9j$1YbtbNl<gK_h26PJc8i('qFk2;TVU1R6pOM'd_PnpA
%ij?+%N,bJ4L8YJ%BCu8b2#$pCgDMCKf!sbs$>6E.eI6%%FaTQ=.bag0)R^D^YT9S(efqUeJdDk7"-dMKBsa^smIF``CtKLI_-Yop
%^Ql*/Zu!"h)f4'T^K=*TD%.]:]%C#o2oFdj"%G8C3La#Nf3CtM7CI*pH/.*NkMF2!7NV(33/pgK.4]0m8]a-p[#[Lq;07uu`-!9a
%m[D=MSKHEH9AS#JF61t'DYLWS(>GH`%"auIBdphh\(tl8=a-DYjPG0q5NkegZ3bR1l)5%%1g4""0_NHu]k9Hu1^@u@VqW87p0']8
%;h$@\?e`p"e5cIDhsNE%YPstOIf9L8Q;WX:OsbD"Xh?t=nCr]>ef(*UQj,(c>.:)tGMu]q'E7res!E$*<<(Y>IQ@qbX6%p)ok(hr
%C=p6uCV?UJCY_aK`_W&2<iqi82sduRNBcAs%9Vc"mT`E7Cq\Th!0bJk"NH3@!l/q/&ZT%74]Q1H>H^3%Fo'QW4M@,Xan*83TA.U[
%n'c1$IDu2WOLfnSgH'4L1:r1qHg7?]DE<`L!7i`7OLor;bWc;g%Eq0>2ugFJ(Mh9-j/lPO]Jj/Am;q^MLdI\-,XjA>lTC-_>;ieF
%'E9=?9Sgip%8_KsdlJ-(r3'<(jW2joF19_;e77Vb%e%_5lP0[g+#Nh:B=urj*NTH>S\Nc;GSqYT/kDmGoa)%[gAn=X`gVWZSh]Im
%/4o4.h8HV+gd/">=,ZuKX[-mn5`OA"c2PUY.X+khXJ])!k.L6;C"@,D+a&_c:)T^l\uFYR1\d>6R4)qM-BHF*^])5[qs`th>l-#t
%$E:qmh1Lf8SV!>]S5Ab`"B2)"54qDq#Q;IlV";AU=4cJXGZ&>.5u;6-:S&ri4+A\1iTADbi@+J:A5?Ois+3VE:"aIf?A1j3K,eD1
%"W:1O7"O3j[Ki;uJ(SmWb^VJYK1.UIY-gBnV]<=!15J.60?B_gpM]B7c!g:DrE9`B]q/F*cY'Qf!37gN]8bu>^CI,cK`L;Jh:d@d
%R0d;A_7dK?R]kOnbCYmT\NO>cI2bEIJ"n&/[hn43]r+)1h;11doQ.gpHLo#Q=_eL`@(akp!Gm=QYi%'IHJY:oH<.H-Xa1U42;9c+
%p")TJ@\>7OL^lU-a?'dJ,b5(+J^EM7oHljoh;FJ2MXd)Y7Pc>..iPhYAj+Pc82AWnF$UXL.BNK9>V.)b5==A6T.bh'^]!s=:k-5[
%7+Z`Bo\IlK_E:LEWW.s'!sJSOkkY81<:9__lQ78,rrPpOCGoMus.dR90@.b2eSEEcmf1g^mCt"eIgbfhTuD`<If5h9:OiC3qW!(E
%;/H!`l]&CJ6n6[jrC:rdIc13h9H!drq?-Slcu)AHkIKCR?_^g)fr$Ji9%:Q46iS"4K':DLp7V:\-SIUZBD<3Lmf!f?I+J2&=)bYr
%5`@]]0f-"6eg-C%\Y.VT-2@$'D#%t^Q7(u=4<s<eFh4Pf.74X]f=T"D3q6#"NE2[5^I[43jq2NdZ..u[R^Km@CY]NPQ$g(@gobd,
%;])H>[Mgea53n@^_A&Da3Q[nI=[^(pa]Z<&d6=<n:o[:E]`rY7gm2cnp^0&R)kp\<m.FInXAmse:FI%giNl<Bo6Y)L`Ye8u09,QP
%.g5'[CTUp@#4hEWGNu<bGYRiLs2XW-'!N[h[?Qo%G/QpZKHjm&eu<keV9_Gk,Ub5]9iYa^]KHi4W7M[bGO>#n/?"KPfKM=?`e(eD
%'fF[+D.&Zc/Cn!Sep?Kh91=V1U6n"+epI)XTCp]&rBG_9ekg^21`Lj$P`'a@p".4A1Zc9Ymia+4Ua\Cu8X>?7euS(D'F9_Jat<Um
%D-sPPL\9MNlE&S&f=R%B,K&V0a#jmKo>pHph\l(H*YN:4"R2u<>&OLJM`tj!E(S#%6gt4W1oZO:qrOR^ptk6*b6hUI0X6)o1pW'V
%ND\N2]tX?JI+ETcrbJoRUZW`!?Dl&TSRUOX$0XE20u''t&,L.4+.P@MmS<r[<9r.%.dJ@\`pa9eL'aiOp'>h5Z`AS=[JJBoX]]GQ
%nDq^i9SZ2?qp0StKA#i][sUua1`IHsCs3(\#:@8+n@!!(@oX7sJ8080DrZ0_T0UBGn40>.DKi:!X[_b"H:K%G8OVK.oK@0t^OF_s
%2<Y`6n(7E;Q\K0G.G[t!GT,q70%q=)C=7d/%+RaspfF%f1gS7-0B83`<DATf'=GnmLi05%ehT7?.EO#+(5"Nlh]@)kKYV'1fe!0$
%+10#g$61S-f6XS!kIgfBDS6PU:o2S,fo/a<Rh;Bf)p&A0=IY[u,"rTC&b_a>UN%U&DJ3R3Z<IUWPHKi;q!3Zt:nFmWXuJ"jH</)o
%/k>=S^K2:0RnW]c5t`o:i@`T@P)`:=poN7jfso,f>B"D[gE(EEcQ!m>gD)@!EMrNiQp]e-'QBoB;U;i/Re9d%A7,Dk#UKX]=:<me
%LU6GI]u^EX"ckZi[MBY=++'tEj2;qp%Eqpg#ThM1`@B3`9DBVbc1@I")S-P=D;DK2-"mG6,sSZ=8`YX,HK@ZF,Vb6cm%'VPeM%Fe
%!nJae&WfS?,r*&fesLpbr7S.*Z4o?1W+CkuIPXMTZrMd$\Z&IdWOoZIYhe#UkDQ-tmU(3:3k!e:\_N3KX5?I!f2_-V!8[V\3.T7C
%X.JVL]BtZ*;Wp;(f!_=X4aLgd?gFm8(G_7;CA5F9=g+j`J$D7SYJg#s3=dbIrUcVDNQM-65A++]!?p*bJ"HOG]63W'H?DX&N<'4?
%[-8Dg0a*C/KJe:eM!-.<NreQp1cirjl^22L=JA'5i;L97^2CtZ\2.d4rJ\@d;TRsQ*"V)MF//b<6\!`-Sa^sPH2IN\Jm2Q2D?'O%
%*VAW)2[fDEEQ=(e!`+q[e)O@`.Hd>BiE/534JH.GZcnngq>C--2s#FK^q72$+1TOdB2dFTk>\\q,4V,5?Tc(e5.P#mr@(1Y-UHJc
%fk<js&HI6ro8uBLin_f+Q.2Wu1P7edCUMlVWT<Q15dBS1lU=JR$9;e5`50r-\AZF0FgBBKh8k(,=]_V^2a.5h)g$$QH[i^fqXo"Z
%JgLJ8G?tMo&A9L:5p0Lfd1E7-M#qjSU3oLf)*eT&W<SB#e,jcl?]oQiJ\D;bVC[CNFq`,06k@+M"G*^)eaC3,)HGq!KO2(n\sMYE
%?0*='7ccb&ACdO(COf_aXrb/,1ReBWDp))]<AbJpRh-XmJ%#4,f;;1_n<cIl3o-EF:I9YcS'LGh\IDB&Z+pY\9KNCX>CEeO.gcQP
%WaodIos^A?d2`;]gd#Wi%FZ#r$T3DRm,qPjnD*?Ak6I>d^%WF)#]B)Z:10OKH,`Emf<s3e%[Q0FT537+/>e=.cgKd@o)q6PSTk7n
%[!mP&?GDnVV+hR5`h)KN<X>>(*cNS$,S,$(E=Og0am&*'-?#JZ;WeY[3-;`<Mp$6c!6?@7744t$`E29`$h\X.k"eWpb.YZ1-t:cW
%:"'Xfc-Y"F7m)^QI%^\A"r8T^">U>4;-ul*+I]0BO?M2foQ+nEL)hsIk^Y.`U8l>_:O7Dr71`H)0j[f)J#>nEcir7hiPT84;ShbU
%Mk@iE;"6ZENO@T9,0qdE^&)GXTf1>g-BN,c0G:V@UY^3Z/T,a<?E:p,8bY*#M<niVPPm;/1S-4?E?Z6&qMJ9ch+/n&$0sO=Noq,-
%6TYbWN2La9[.k<IQhP[ts'j\mmT?CSfM]Fp^d`[<9lb<9Mn8Z2BtjM9['fW6"[eti>.nSe`KBQ%AY\AC!b0+>Hn^6<==^Dq=-LLI
%g$Ucf`&+Y\M\\BD@"PoF43>$sj0d`Z]X8@i<,YkO$J*,CN&VqhobgS,ip1@_"Nu>['=T<Gkr<qs]%1flRgI=cSRBB4\b(_;&!1G^
%mS&-ml(^9iM^OMae=.iYma(_;a&BkH\l/@;<#*kK=G_g`V.AC>Y]/i0+9bZc-g.J"DXA0mL-.ql9Ht?FXiD&^$]-]'X1R"`e<6tY
%V%KD^XT[:1.fsdX(C;ILUQu*5K[n/S-g)h2+q'/NbnY5TZ"P^DSp?V=?*ma/7M'40>&@n\1Y$0$F\A8&N$#XrlRQ80c-^k#<$?>m
%Pp283e=4LsQ![3mk.U;k(C47+6+MiJGb_2O_?S%<_XX?gSkQdWJ:]-[I2?nd[6Nu4i)M[cH21igOb*b&3a/r,-@c*?Hi(#&`iGj^
%Jgird)5")j$s?8^`fOKmk0tJ5]]$SXWQ"d\EGs0"96J`hUufgtqErSF>s7A(>iou_Zh<1AnXH>%4'e';)lNBgEarD3]''r&5L#a[
%h3kU/>3Vr(]4p/f1)jl[H[;B,nWdF+s0W5Jd[?G<%Y%`Z1P7P>]pb:KdrTZ:S6h=-46`$,mIRDa2$TJngQe)7SDWP/l/L-jdZ\;W
%UBWP;m"fs?^%1fALUbXYMn?Y;r-8YUc#dQ=UGHPVJZ^M-a$2J9h&lMua;?/.W@cG\lJ9=MS2mZWQO``;GRu&$.",WI4`tssn91Xm
%B'LmnjmIQKaR<m2oCX^*asbNI%a(WMjTBZ(qnZ_4gKa0I#b>18]/j"u>s;25;H<>Y)UWdIMY,0u8#4l)G1V'Wh>?XkHU:If?Z^MQ
%WF"p/Q2['@f`%6S?K]9CU-<`="Z5$?U%cgkr_@b\M!5qcc5A^$n[8?(IdT&On_93Cl[ANdnG\Z5F[pp\fCg8l"=p/8+mqP>*`YS4
%C5mk:3Bl#4l,@O9SEoaM!h,^#,2Oj!db6I[]=io`_po="lMG%-iO6tNWncG:'k-p"@)[EOlgAlV<L_ObQB$2lL!%AW.0Q\01O!l2
%ch"C#fDsnQ_TpC"9.lF+G?20hp7ATL4KRB9?T$*FHEsd5j062QDnZjcJ-L\t\a1?jg[9^$ItUpjJjZ$@;`5,D)8N8ZrE(-_^K#M\
%!=_>r2NOd5">L-sXnt(BG85_;ntNN-1ms90Q[b)'<he%Eh;))bGIMEQeo0#q]`ihubJW$Sr"/%W(:W]QHrpsi*Eoe^)8]p$B(l/&
%]?\Hsgcc"/LYXb(?`,Efosp.='i?lZmKu$+K;28E$h_!rj,h!PF's>iAeF@7K9bXW_W91gns7"\4p7s5a,dX.(N,Y0?=!23e]t3;
%<toHGrhJK;lh>7iH<4.(:@fU:]"@jidm%G>2(mItj_c:Wlh8@t1%3"P<@:([[j7KIeU)\F#HRS(YP"/E([LnGep8aqU\imG!k"W4
%mbS\4X+_LFO0q#)3.H:(27QblWaa_<Q(kMp?gcuuRUK;/KWC-G*J/ELl0@g88"PY3HL#hoVe9+UT:YWPlO^/lMXYS4Z,F\/FStju
%VY"`Y_<Nc'_F$P7)N+4Z,Vso`L:&3fSUQ"I@m/\gir8@O^/sB=\,:#A$c-TEVQZ&6.`GS\mdGBJcW57/IA\4=%)Ih7EG;B3RJ!Ds
%_<2J>h<=^?r`D@R[BP+Ib<F**0,u%4"KSo6\[^tER`4.UhY(RnnS1m%<3tid)6EsB[sJ.hGi(D.eucp^MN>[>I-#U(@X[IDm1Zhg
%@e.rYApnl5+0js[HLXm<eZ8;V!,H0(a4bBH/Ql3-::&fkU-!U&R%++F&Be:EeZ,OZ1Nu"Tq<eBj$3;)bABn!.oM>2]Wt`q2h>D?[
%1,C;-,Bnc0]%\eR$b)JQqgInmK3J,@Y]l`(LYQ1f'PkCG);e_(F\Z!f/*XU]C^C,%.djjDl'5B`mq./qh`K&jna<jT^j>tS@93m=
%kk>O+o=N;_]/QA=5/&YAL>;1"+7/C@oZ1=0B6,1X<&5D7^jl8IHTKm;*%Zcu4ns<.VI-J%mQ1((ke"p[X0`Mh>/I@(TL$DtC@de"
%]CKRTh/DMT>nt+[Dhe<,QEOr5NC(_Bh3Fn4G&bjCH^M#7g/sN)aB]k9Nm?L2oq';Dro6L-^HUac:("Q/q:/gMW#NI_NhkJpS7lQC
%eW@fnQLAW5&)Ma2\mh+jF16=FT$>:IMI,6De8L?srTW?'s6`\AiI0\:hDFuph"BpteRJAg.thWmm`*_T]R@B$L]H,d?)b&PHs6<`
%])d?0bs-XMdLQ^3hd+5Y:fqLkbB)Rh5IcabIV^PeDdP0LS@b8]V/ICF%CKDqBWFjKGP2j#A.Sg6'^agQGH">eXDGkNb6R?BHDP_,
%SR/jQ4N@Ho,/&611r+#W&;GWJe#N^LWfXjgd-5&0)sn.YkBraA,cI+aO?5:&$USakAjG?!:piO&fiVm-NK**IE;cZW&.I[59!gZ3
%/SprY>/AR%gMIohB4S@Rqk)A<LNr$.p?]]EhJTF;dX=++l,r%$-s!$>d#PfRJ;opWbq45>.0Su(@g(AR[*$:$]BVI>h-7M'Z3RG8
%47f9XmMXTHVO,12DQM"VXII,*gLji"i,sKt`p%AQ]m4l;JlR4hRHs@I.^ulLX>F**9R_$nXVWJo/OH[.`!N-VEu<IH_<M<5\%C*N
%_HJ?gihV6:7473FLR#C7(6_h:R64d.S+dAo\,m-G_,%dJK5i_mjh]=uapWMX;btj&o^PC3!F0j<oJ+C.)H@g1EDJd?R`&0T][!]3
%Ad[q^&Y0!mXb`"r*oRQ<Y!)N'NmE7#LF_Efcq"OKJh,Scjcbpo1\YuTR0R$.E*'E&W1=YonnGG:pj1oN;1QECH`rdun7.20mtoUH
%$uAfC7<^%t\aZYO+>RfO;1P.*jZ1otW(G#CpEfK-Btuq4`Ls:r4%'JRlJ*BT5`,!K+VnM,Frs>Ec"D=R`C$-fJ-LhD4Fo$SBG(Nm
%d:=Cp]kEjTNL@0hnj-E9\K00$rbNciI!$"HGk,k:%c'-.g_(-t/G9LnQd\=m;7e8GO.j4/F`A6ZL'.r'`g&naDJ7,0mG[p4Lh#Yn
%%ane@3H#AIYAf?N\Y?ICNHD\_8+TCK\aX_Tc$JYq,a#:==IWUKNLN3WXES,LMu1%Vc(LWjT#5km*]aVBHs5`WV<-;qjniN-4h/jg
%gD:]I6lsN\q4Y9-o2+T@E9CW#3,;sOZ[@8XpJKutLT(%ar4$gGC'3fQA"7u*SXs^^cCLP"Tq.B[f+4mTSTCYUlX*3GmUm_*7sI0m
%k7WO_W]D6F6G<)7);D?kH."@[bhoRF]N.Dn)1pe.Klj;Yon^4C+$JU9e5*CA?:Y"I/SSc]F8n*-D^]+EXt>+s0o!7(BY.&WiE<Dh
%3YTnE0ma`!#5F[nN-$CU!^97orrfDt<tk5[2>`bR';W*<Z(XK2i(A9KITYW!(Fk$BnLRH\RKTCC+-oMEfl)n$e><bqd&$e;m_,1E
%#h$0T'geD^,o+.`qtt?7'G__XbSah2dsT((@<?n7!fp]3,E3aG$b=YEMJ*6?;[K^.DJt^,9"ILeFbcnt9@?-X<RO240F#p:$HIn]
%=7HJ4aF?rTo*]o4j3cosfYR*L%OK:A-Q,YI1D/2ZgR5hH`ajl"H4f#RdpO=[,4H"N[',g(%'ABJ@I2_!CM\jk_E=c^SYgdE1MgiH
%@0p_lV/2l0o=,Us1+gf1)krg.[6$"i]\74IVHK<@9AH>[c0_Mi]%t=S;iV5hR+k::p+Xh'^DWe7>eVh?1;*";ObhS&Nq_p\+P^8n
%#41ADcaR3E@8Jp#,+M]fTp"!aRN%_^U"[BHVaWCTkN"F5^*1-JRm!Bu(hKXJ'^2:pHP9266V3e3#bf3(Fm]IHc6:j":uYCR5,Rl0
%a(K[SCU4@,:WcMM,:4SulDU6pGOM,,,7EpPmYppMWBXX4MWkYcB=!AEn4lkU_ODs4VXh)efd%r':K+>E+BfnE_t@e`**(p$MHDFU
%&'oK<&%C+b&"Obf[_WErpej?%HXN"pZ"Kl100Ssa`Nac'B`T'eS_HofR2HaNs4S-8MUT$uM/WWP6h6-ofgBD`ZNlB606I\P\Rml;
%JW5+dZA\U4"CYP_/o%$&oH_PCW2'Ojd'M-\&AOe?*msu#4M-=cKt,Ji4H\qf"T*ZJI\b7@niB:\-8l\"k-WH4-VK,SI%!^p5PKkX
%n)J`<0's0s8NiYd)k/+9B?`(UJK-_0iS,=4bu8hRF@fSP#IoDsSHK#];@9"[K\+JgXjD[Obs$+%CtF8L1klQ#)ta)&!qr=`7>]S]
%e?YCp99-H=1^Vhqn=%@YFDmD1Cj0b0oB*i$'pFNecUb71VS*0g-B67bpT;V!g".Or)F<@8q/'N@.^7KB]Y`Mcn6<[?;un\mZ$_l&
%%,jp^Ru7^'P6nV>1e"pb98a\VV@_tCc+-'a%@_dK83/<I"dM4"l3=HDA9ugu<YJTN"Qg5aasEQ:nQB%39pgHc/co+`#@jY$aiIUC
%d(T<b["c60Ak4Et%is-GOAh:n$F)PMYB(7q+q10qRtS53[,t\.9PRTKA`HF^n!plbSg[naEI#E(.J1&,)=p4O`DrZV<sh=*GnJ:q
%pXm!(djXUlbgC<pdFsRL":=g(^`44h]6VX>31O6=1l?JBICN`Xh^49?[9N)eRXbKo-"H,ej%eH(WWbk3npLs9CH&_u`A]WZG&p+#
%UnR=dgLWX^\SDOlkshWG06<F1nbiRYTWJTqEOKNUd@KCgpb%k#=MuaUR(TurgG?k(9/5^lY+$qkAo329IMbt,\pMXY@;%5lj8/>n
%8X/X[-[J,`:ZM4..c]%W\M.Q%aVBp.I4:@Vfu,c_j5)eu&4qdnB[g<&hH"Y'(\2&T$D0VmlL^p96K]T#2IrE+DTZu[I.hQ6@iqn<
%HN-+fkf\!s:)hsb`t6J0%jDi)-FSu^RQn_!23+r0>AS0SBge:3lEfNNs6F@YR,"cK-h[K!bhD_X]`2c=ETHSsMf1"O+/=g*@%#)!
%+)B>\;H!B/D&fZH0?bW2XSD-l?r'M`<i<2$hiP)L[u]sZ=jGTYd/F,UO5,iI>)Mf'e<u^J\IFKD@XLmW;q)frS*+RFM.UA4'9$E'
%Xf2V19;'4SBs"oOV@A`J]t$_u%_J$8\O#1Q2_*uReE/t^e,>W83eLrhE'etb.a'PF\&:rLQ\Q%[j.:T0Ann0HkcB,WG/o<Ai7>Ys
%5N*jq8I\7FRucdk.I#DiD!Gdo@VgeQa,d@q_j_Q"R<"cF%innTi!T*t0@<O%X0iMRUR9:d)mOXU>PG#:S<#3R9bH&h9.\HHK[2G)
%?0$5BF<`gOTt>2\nSD7HpW/k7NF"KUC90T"R`UfcAKkpc/@.6`3F?k[h\:@Za99Z]Jlpj:I*Ao7]::OcQ>_YpARt^Z4sjh<>!?/`
%a"?J4Y2u.Yh_Hs!3?K=nX6#i1QS&bTc50d02s$8VN`XLB?->b(D^J<+kAi@=[<uLNEY@J]dC"A1X$0EAT6CBZGU68.+0b?hA%0>l
%?3dnZ^:2?BCIuY5`YIEK4>67fGQ5+)]2IG`RA:.gPPKboB+rUkYTee_r(3(MlNpT!:DUhAY=GqA^VYG$nf.Ve<jq+Comdo$:!kJF
%&Zr/De\gm6Q1uQ;j?:`,cC4rq[qP?`&:%uY@Prk]aGNQY7F.HclM$$243fJ/gQh3:)5)#KSt3/[IZnV'+k9Z30CUt0P5\q"e`lTc
%BD_ALgNd8OmZQukYlm+pln3:T3F]Yb)SlR!mUGpWciqNNhF+GG,`>RU!o6FM.)p2M]>4jVgRX;`<`iLb8mIN>Tq\J[haD%KL'iqk
%V!`AmV<k$t%:-%(.Omq]ZrLe6.su1r8YXJA&=3]8<*i.A>YL8HnoC8i(Cs3MbN"c9UYYU<I>jk7$:E[Q0W^joh/P)=L@OT6mGtdo
%CZIDN>PfR#=`/EBSbGBMps+55pqk%t[smpWcGl:2`+/#VH;8H1nrlhuSbSYD)0[h^^9s=E28g'g?AdAAXjS)dS*n7ZnX1.kYqmZS
%_H0W)@@C90%G@1/?`\IB9iP'Z'!+[7\So*mnu4'Vd?6Z[6edDIU?"8k>$H@.NK"/r7/@LjX8?-#8KP>'2Ei/jA:u2Eq62e\8;5g_
%q4qk\'n^(-6X4966eE#YZKE)OmLJ6c?2qc6Gb>gYp6S#P`,d2OV38k/?<04b?n^$dL&!O:c?+9bS&i6<KSM!>oU`DG`7:I*]q"(]
%HMK\In62SfiWB'-f;jqLC\8;iT^]7g^uhGTrA:/r4SEDL;\IFTL]1c2H0a2D`/ul!CLK!"EY:Zu:)d1CibJ)k:%#9C.]aR=HP<33
%AY>,9Gs\UlA8b`HAiNi1PiqjUnqBrtm*1j+ht(DtjB8f&]iUep^#;POGVF;mA)EWdR<$p=%NADqmO-99\C,P/)Flnl(qXj"Cdolc
%nkcVVLsFj:4!EYLiKEOt%dfFE(YG@u^*G7`$d%7!H/I*fbF?#TVBOJU_0qlq+Dm's.UGVkHU&QbDbu5n9l\p0OuUm\K8EPuDI&.I
%BfLV'5c5tgW]:n[!u0HL5Vr=-h-fD(QD15*>)eCReBYn_Y<B5!5W\P^B>]u/L%!4U\f>]9INrcuGF:<>nI*[l`>5e+VhHd@)Cj+=
%gB#E&5X7K=i*2:sCQ&2j?@eZ/ad+9/Xiq00eg=[jQZ1^P\<V?]-#Ka+4SNI?o7WV+7]=NMAM`ZYQ$M-rQS^PHauj=nN*<'LW%u\%
%aH+tg21B*X&V23M,3)\cq01\"`Hf?<ZQtf]EFUeub.Q)d_IVt!Qukp*au>TYDQOO'7S30SQIf7J]L$o9Xd=Tu(F*[GbMf"=mY8oc
%p&n^(8m5ZfZ>gY<Yp!J1*S(RWUa$fspD!\\MRA:'CjX*>>HBJFoB!WUpPH=\Eu"n`Q7c^1f"EXYd<pV`(niKrb5YB,ioJs:N(mTS
%LXp15o<E[m)cP[``)R&6NuMoa`T#Xt,j$>[&lKN"9Sc=[8iRn;h_IM;)Ljq[/"Xl(bLn._r+Ts'pDo%&<QsR[7O5@GLDaIA$a7O\
%fduK]MCF_%Sj\\lWUZ?XOmN%u,`?4%^Eul).o%IkqMB28C=@s@I=L+2Q!kV(X@/t\MI`ESR+Dcm,Y(BBXi314rh=1+7VDVFnZU"W
%'.)X<YYk:aCsU*c+4h90!qUDK0kN*PDsbN,WS^O:a#@cI0?TbVrjM-4MXl#@o/@BF9d'.';O$@$4[YId"H)d*l%bbL0R^$s4?&_`
%amA@]M],ak4lkAdZ,Ftpk9BikpMR;Q<T5t"/)e-7RoJAbS+=4RE@fGu\`\BpEqmeq'`[hJh>tkIg;+`5)$3mlEA'\(?8"Up[>uZ+
%=?,&\P&>KOdRC(p-p>:DHOa<4J):.B,POgf.p(og\UL5UmQPMND-W;h`*sn!IpJMBn"5rT1?TGmm2m2T^?qEjgd88dF'j3X(,i'`
%e2WRAYq$?5'rXKh_B[$\[bO;[^9YA=X4n;3[```ngu_f1mPaD;]pks05<Q2I%)kgK,7hVjc/;1S&)kKV[unXY*B>)iSjXWW'i-$'
%F%oG[;:nc7g"hK7\ZgDGd)bJ,2V(-uTDFQqLc.U-i0GRErMD*QCa`>XEq&J7^"Y/9G,H=FIY=!B4[kXlc"]AB;t`5*V_d4Uh'E+[
%GMG0ZKjd-&i:,.1(!?u(]3?mp<kLd]94+X5^0*mUKB8(t!]ZFOJQrm%J-nN,fCB7+12H9+feKANlW_>'gBAtp![fKsN8!P=Z+i69
%\HUQa9AW[G;VX8;;'t(.UnR=<"Ri'[Fp=DU78C(^/%iBj(pe;6^S>S=a6SGl@Udd+lg]^JfX+rBX_l1;1O0;dPPMWuo=f>8hSG#S
%h5oGd&UOaQ3*@oALXscJ"Jq^WfRm3KHK\,\QP/Z8:.eHJ1KKYo5&QF)np/]E4!&p]!BO?57k7Ue>1glrl5M`r'40>3M\<+uh'<C*
%65.;$/aVM?DT[Ejk/7W(Ge6T#:<3_Wp*G#HchN3B$.@Xn..#toohCG<16]er5$h52Ija;ZKmgUV*]?//=P1Y5=)'lG>1gmMV;O67
%'.WA/eM6hL<[LYqa/eKpMKhYCLkU8iE[66KZA!]hj5_a[9WYIZ7h^*=c$4qjSh[UPqE35J7*da[3]!o@2<htA?;lEoipdER4AEee
%^cZ@?htTl<<7mP)C#]s%H(%?%jtgIT+0V]*V,Tt=O3B9Dj8#LbEeR(!p,NQbcAJ!"@:.Y.W!O:6KnQt"0'qV@C$Lb9(\[AgM/40$
%Cgg[UloCcV4ruce$i/g!p@5^N`HuZ(R(nNtL82_D?CeO4=R,_n.=UKo`V:Id68dVcpr.87.JKU<Y<qnOLs%Nu.=R+ZNq#m7F6>@4
%&Ur+[7l",aScMMcUCsg]f%Z"H"5AUNj6^=%lqKHe6)>.!_*?r#]u8LC>$d14/']Y98eWo^0dlW@AQ:m@)@)MO=]ib`H+WG+^=P\j
%2E&*nJZ,s/rqK^"nF43FI5X[qp#s<nVF&R1#oS=l&-)653Ps)A)mTZ(\E@=SrQq;Zrl7TSF3ae).]I"2ngP5C64S57T9Y(g3WCam
%6*Z4F0ipO7r4d5pON:XmR@1%ZhpKt7Qs>Wkf%Oi4K%r&(gp=EnrEEJG]5tX`*PU$"U7/gc%=H9AG9;cbm"!P2hbN4Y%5>'-p-id7
%8mEEm]G[Uif?9`J?6Xqq=OM<^)(]J_q';8Eb4Sf9E8qaKq64`h)`*q>[`"e6FK<sfjL/6_-f&MPZ]k7H1XRhU"GN49j/f%9XUnPl
%=p,Hr'Q4(fJiL34@A[L)qLLI[@\l5K-JhB.H)`Z/[4g_9bA_<NCUi3$;2GZei'oH4G/j"F777:2RZqJE]$$IpE0H7*YPN:X>:6tt
%AlK'?G]?BjYi!UVAE"Tn,frA(_$]_uLF\=oC6)I`_:rLOX\J)"a/_*ITbpuAoKJEX[ksAC&9E8FgaJje"kr\hk)jBoTU##sAsQ=h
%f[-Q%QFZ#pdZCr:A&uQD]RuLV//BV9U>VA7/:9#S8gkIhiX96/cH!ldr_5i5Heq4D\.>iB3b;=M9l*#aci"g6<?Lbd^OWBQ5Pf<J
%C#n*W0li(3gpqo50a@tZTJd/'rU]2gOrr8qBeB8=@if3FY]aN0F8r,#^V1`_^5U3%Y>-$K(J(q)"&1qh[PGG=g*kLc[HZkB"G,i;
%bj!d3j1ed@.`@iF[I=&qFRgsHN\5-]Zt`s?:*U4-?gWcR7)%Dn\E`tWaAjjB+dJT@Ngc$0SG@Cc<#X!7e/'k^f+o$#bet5o;7#uG
%9j12TW*1ejh7L[=W3&/.g+^pfV$00fr0p+MmFX`T`jDPL<:M9&=^IU?)LI2U.:DC?\=*p#(rOc486/'^8E)@5DgiJ.Wr]-'R#O6Y
%4d!d090>\Ib:ucJD;jX5s$@Jk.1cqO<8DCG)\Y1#<d[6SVO1(WaI_=l>0rKL],HsEmaf,t,]kmnd/ehd+,7mc`<;bQ32seLDk5-U
%%[rOFDOkJmj=3s+4G;"/kbia3gYEM*BYiWGQ@<'7?Fd`tI4ofRo=N_qI^+u_.2E<%"5GPUhI2.PY3De.b!gU![q76Sc+>EK%D0)=
%mOl.-cT#2lE=8#/1,$!5EpTt7UskMJ9fMeuh$tl%]Y00%#COdM@ML@/Ki;o;j/\;`=0)/%reNW5Dq/r<`DSS)S]<p_DCs>DZ2/7s
%PahF4HH=KUdu0nWEo"PB1!B9gnS7,?hpt$0O5Z!VE_s<[o3o$b=kHFI$nm)E.d`.P:os9=qYP%FeiKI\.LA5N$--45]%[PQY]Hrl
%bB8+CT*C#ck,=!+I'^b>/Krn1JTE?2&5_K&R]&ehl%HoVL9moM[u@O_>T#Bs`\]6]9JdF/r:tMKH6mG&7je"o]T`0b0KZ'SO*-B8
%@cL7]K\%;onRuC.,XZeg5gqDkCrfeJHi'b>^1sI'><J?Fd`EHfNgb/Q=btbhk1O\kc)Lmc[h>%J%CL1+U(5GW'@c1Q$n53DUjKo:
%Fq']LljZ\96\5Na)HoTtB]AI]o;kD-Y"KaL%p7o*M:`$@:!!^]6/DT(gNN4T'1Uf\F=%T64I199TYkAZ7ssnKT5!DD/V63Q-a?>J
%S\(LZ54,U;JM\4&3a!dJo0q7;1=C@.2Qe<F]XR3)l\QpEam.GdUDdqu\-HiKI%"t(b-TUkfC@FhX5%"lYABf,_8IO3?Q+3K*--b3
%dtmBR_nDuV?_S>8U+S3>imW;3$k.Q6KkEom:@t#!X>PUJF`nAZ1=;RB>jrh)Ikn3:i4V?lS._b[Vf%pj*OIV=iFLJ+?cA,B<VN&n
%k#;9dlOnJQkZsJ7^L&+'?"3.d`,#kLGn\#tX4=I$Jjfgp>"mo&&Fsu*?`3YblQ!LDfTVJR@Tr+A7mf!_[PfR[2uUc:NQ3k%PV?GZ
%F'u7t\<=e+&MLWm-@&0laRfnj,BB\pnrgp&+p.Fn;dni\-S%b^>*%mRT#6m.-EBY,ME"Bm5tPP6HGo#t4a*'Qeg!ZNIRmA"R'[p^
%ZPdq2N[1_sj=d\`/kJ`?O%@VcQR#`K"o@>%WZhs(FEH5T4fm#<Ie,W3/#7a:YJ&h@=J7*ZQWS_GI99pF:7L`]Kt]]H^[&,@5hbZ#
%**28Xd_G7T_PqP#pIp$<@Ea0$,cds#L\]Je8`"39V]AM9hJ+q-JVTaf6J&:[H+0@E^r,AfN2c$M=sZE&0L7_m,Rur,aBPe+%m3PZ
%<i`J94CeVGPBa-.`.<]]eU*=(i1Y)[qG',2''Q#!4EM5U4RJ4HG`6b&iCIND_]O+?QCOVG*JSK_)=kS\kS"c0P+D%ZJ)Fau>iu5"
%4H)Jkd-8fB#9G5L$p3$kLX%=<P/+ffG,$.((d3kVkW?Aq5O^A\nqG)T_]F%><qs)fO)IK?`[;!4-<qcdYVds%^r%>(?&s'b+VQ.#
%BnoX)=6/r`4H+03RnO^]^r)77,'S-gE8Y0sG.":pk7Jt"n1_F1fXD*#oE,W!@l`0/mdUcLoF[D]5c8$$4H*V0YnnZq[s5q5GSn-5
%gWA62H/N+oo!euGGfVA_pno,:]Zs@b4<-ctN,[\uY;jsM0PkrPe:s."De(?sSANZH/t>t`[d-L)GSkk_iKW[$L1;6K(qk^U^&)6>
%!tV0a4Q>*"<u^tN6bgilpO%3!`5BnkqnU*XFP7Q:*[YmW-ZJ!P-M"O]WF=+%*;]UugeHiS+*\W9`A8CLc.\6a*ek_5k]1PgE8Y01
%QN3"ni*g/i#@/RA`.<]kcHju^a`H-t#9H>r5J5e_,9;"G:g'C=%S+eSq@>]IDC&aLC:F?VUJEsF<j@hG^r$KFki*S,3+T#&2ZkqW
%JVX/$I<O><&'a;C*_)cFkgsMn+*\X9M/(0oV_Gir/gfNq*Sgsf2X5jK*5W=`c_1h2S3ZG/jM4,hiKZ'g2MhMH4Z!>jAa]3.=9fo$
%BXjr\qXS?q+*\Ws'J/P_A#,;1GSn\"b>0)W^dApe34k5s8][#(4H(o@NFggSMKGb0p$2;W*_)cFkhjuPnpuSD[_eM3op^l>Oq%2(
%<@+BtS=5;m2A4%H?l<Buf)3Vb1;]/hTeZHCaYaj9@3)1/$0Fs-c$L/?ihnk&7b"en((.%/@!,S+2pp^p=KsV5]m."C8?_.k%^U3+
%S7Nhn?FMHXo',8FmV-Q]DJ`^o5#h-RQKc*Ojk>@@_J\0`QacBp^JCd%qFg(#jUBO1h`bdjZfbEWr7jg.]Xgphn#U9eeZUA!j0e`l
%rUJq3rLeUWRRd+a?WZE"kMYP!qe;gN\W])p>WqI*/Nu<41J>K#eR-@h-^jY"S]piqIWt4-EM;-PB@G>sH5k8U$+'*d9Acd'<uEf8
%\@D>lqcOY?k?=^"GAHRk^&5*UR$J*"c-6$BZ7T%/X\GL0EEs0"B%fblcLK;/\(fP=m1.u3(O?H>8'fi\ZrQq4q,P^V(e8e'BpGSQ
%.DQV>=8Gk)pU3:2jGrP2j^a>[WH[1boh40mq.aIc^[^;'O@bL7>UXuj&Uk=(!?*o3R\Fj%IQ@;Uh/6psl0G*s9R'nL5I.W=o5ci<
%Zc7<t0R%QOZbQ"iHuDA,k7=tZ?)n<"FcSVq<qYbU0+a1<V)M]5>>9;\%lp^>4TeW(h"AsmU3dgWQtq#rZ05\">6P@/k<-fR\s]h"
%0<EF--)Guppq#2)op8;h;gHY'b0o]9>W^`urcrd/Pi(#?*+_fdA#j(aT"Pm]p1JP??_tVVVG-/3=d7Up\R)()h_U1Yd`U@<ZFINU
%-^Gk+^(hTpS;79s._g@YR6p?(@o[j/I9dG*[BET;qm3fS@MPL='=uTjOLHj?Z_Um(k@YQ$W$LG'A][9F!)2-b_j.V<q$@`3ljJ8[
%YL9$R^%r*3-I7/<p7q2cFE\l*I,'2*?E^6<5l#u#c5!&G_nNBLD?(U@??,Dd^:3*NkYcf9De.Z_hDTi:2[%`le_.W[G2m7moG&$F
%44WSaI6$>>hg*G[fJcje2`b^u?HZIe69PscB^/OOeZ'8]PXsiooA^g-R>SdoL-e%I7!tcNl)Lk4AjKrCnT:;M/-U=HMV-:T5[KO*
%^?co)T2rQWhsWrG_[*g-8g\b,rZT28$i6H!!0EMR24HN@=c,[NRPb5IGs5;90p`rjf7g8.[oe7]UtV)%Ttq;l1'Gs1c;(61X@^7Y
%SsZ#3IEPlu,La$E9B@S*5J/VsM7*!S4DfrFm@BLACfbuZKBqhFNfZh*K@^XbokTo,8>Y,OF:k^UO@uG=HQnT$oV"o2a"!VeV<4Ub
%I2gs)P%cS7QYK=I2sF&U2H8DMe+[]qnp?[ea@K*$M"&Nm:P1IW\Fa:qk1q<bh^'(-5Ls1k0iGb:RI\nQ0)"G\eXIZ4kp!-pFaOem
%=eV73>L&kRr2c1op<r,!>";t=V^tTR?J.C.9&;Ac>`e+QHZb)9+\-2C]QC+aHKFtq44X1.W\nTPfn-j4bS,!sNJjOkil+9]e=;!0
%T3^5*Pb2$dYL1^G6cG4`JPWH+d4/_lcq%QlWGA`;?@@*n2.%hkSC>-MbnUIk<pDW?RFaa8pong_ZhA@n?6i.MYgi%!WQa(6Te'_-
%f"Y9jRlelqRsRu5l0"$(C'CWdkh?gf8FOOZ]Km=GQe3!:Bj2Ugq8gpV/_iJ^K\XUi2V4<[R0ULiZS)TBfq'L_C3BVCDHBDELoF-i
%S?&DG75,7Ad.m$d4o4pBd$9.5a?J*jgdI>PaY2.6Qm1>1Ke1R:$@EFFU\]/?^\Qtm[7$R9MX=M6Df-5j]kFD:c+TX?4s+SE<,AIg
%mnYJ$IqoDlFY)6FnW=:mFl7F$Q<=_aZ/Ql>&]B^2;OpFe)lV5UV,$]ah;XKVHlXKq'puUS-3>*`EA1,OJWMtH?M5_[420>XLc?j;
%%c<"f>6N"$>:H-%U),k<8*S7l`U.cEWDq:r:TsZjF"+f6Dr.?I0A3,mMGu%%Q^/"0kuD6d0tl(MDPgK>VtYF;84*fo76O+A>sE9F
%6pOq[:LLWfF)]bu@9@Yd5,!1#hnD/(fW..-0@Jr(g@9OOBk;K8J,K#BR_L7"Z_a:l]eeY7o[46X--O!Vpcd_r9pd)C&4^.\[0jr%
%gG"7[ogf!jrRYLmmnVW`T+;^8\%cc[ZM&D;,&AS>0D@Z^6Ce=dI'35hUSOibQ`&s4p&"K];YKHI\+k$>ouuakPkE<9J"Nu;<8Cd8
%5]NBuZd_c/13e>UobNMWIH:haYAUDim:)hGhqc"M\G=irmriWsj[dO36nRT6l-f("/_,,MqDmH$=d+c?kAot1bL9:Ha+@PPRd7^W
%d^I`ZCH"@;+YD6TaPQiW,=cKI=,&`Q5E*g`2Ua0h)W0HD(K]5Eot&iTJA.o<orm2XC:RALaHjTU:;;ua$##7uSY"#C4ds#*Dn(ub
%S@RoKSo7q!/XJ3]aZ14e-Oq!-l[WTGhN'(&<^&*Tmj#Fs6-LM?=n[.2p"%6c]%>O2C,J\_$L*hZc8F.ORFCDC<2[e$L!Jd2hDdu!
%3fD/S4M@2M2t>oC2>#&Mc#.j,gKdCSUjjq'-a1O]p--;_ZPGRga3cl^qXV[MlRV]3ci=Ab[mNjdp<(J!-Do+!la`uZP4UcK_]Whu
%Z^?h9lZ]s=Ij(lZ()@n><mG;D,OP,lA4W4NLQXR8ZqEIC:^"egnd3N$R^Jh@qs\4R)\c&mPo7lKNU4g_G\o*&,\M>l%Qi[)]lCFW
%\0E$JCU[I,9X4NY=H[9CEMtoC*P!FFL;_c!Rp&$5PmD&RK5^V?_o\SYOdq0pbkkEhr&C-*,!X>X0p$S.JTqZ%i-?%=^o`7eY+"bo
%+8/@j,f^*30.Z/Pj4^7i-rfYgm9Hjd:*N'2Yi6!<8=GONODk0JH5.;EW9k^*/f:mfc)apk[b&[p7c@isn[,rUdL`n&o!s-^n$CDo
%(g/ClM.EI4+G2q*,P@'NDOA^cX`)M^3h@=6VcYKt/@=h<=ad",F"dSg\;rArIOL54Fo>^VFC3bTg%^)+QG81EC_3YnZUj@\;1Te7
%V+dQ<M7lJmc\F:<`2RboDXXnLNTWl[4Xm]qN!&1JXHUIr\;o-],#1Q`C*E_sL(V<RgYW^Lmr#9Cn+KoR[W0=(W3NlTc$HS,nWGTB
%>X;?)N_:oNXr3"q-=4^@%&<DT2-tU6=NCh/2IK$mO7FeA@6=L0H;l>1A^p\V9)DL7%;P@`A=7',k='$sgjOE2?JcC!%$HW%D(V)c
%np]3JAT*<)"h)UjeF/'"g0sBnR&FY1_9.5_!ud\e0FNf"pBdoQ1UZWb`dbh],W'X#5oeM>6lcJCZeAS?R_6RuP?%VlM&T:]S_8t0
%o0,!b0J*3=WKbYV]*@Hp6/5f(s#>)2NqOf;\B"3Ba<X,06^uli-%1Zb'64.gZUiTs?M28.CrAp-gNih2nq7%72MS"rFI4Fi;=eVB
%?K6p`0_9,!8]I%&Lj:o>,U7)O[4f@%j2#&ri7^rTf@!;^hbD;tDW=4fZ[PF:kL+B:9!@*<cS:>[`LPiehT2QqhLD*VcUrNJgX02N
%jm#\cfg/EJE$ECj^UH_QB!R8>T$)c8F2AfSTp$o3(M?(c#i*9NjaJ*GmuF1kRaL&9SVTO1qJ\2U%\O[oI5r#@Ls58-9*R[hH^&p3
%."[LD1^EoR=!degDG6kr>;Na>pkk\>qj8EfT;K_'X4cLM^2XQGJ"@pAAU&dMP]^"ppl+)k>JAEj>lK%CA9>mO\efANR2T@HbD<Pb
%@)s4PY<74iQRhlDm8j?P#AD0h\p#jAn\&f,H)Q.&7l(&OMoA0^DJ=n\MJ?;l[OQ+LV!/@<Q8os\k0Vt@$h\u=?%8e#S8;Q.+oM%Z
%PA]P9E2U[DDr[rqfh^:V3;fr,-U[?/OSh8::VP64&&32Xaj?dgr8,gK6]^s'pPqETH><cUD]J^Q<XM>6I5:F_$iJT'-UZ5>S)61$
%AE]4=[o&o=3W;q?jt+)TjJ;"h&U9\/Bt=++b&Qcrr%sSE*m;'#;FC6JWNWWr^tOq/5@0$\mZ$!Ta)DFZBf5)3,1ktAUXCSqX6O<P
%FHQjBD4OI*Q!UhW^&+(r[uGS^1:%%Y9@)9G[%^sJjh&ceQhF_`Vs!,g41=!09%u<7[P@9YYrf_d'NL5hNFW)oq\`Iq,S8g,OGK1X
%%"?CRf>uNLG$0?6k:fd0Md<nU:ftqjpF0/?i27[`I%q.mQAtXXkLm1g(c5fZ*.6i)2+4kXPNfaPi2S]N,EV9FI>^$rX>5IkjcQI\
%A,apqS&3T>L@+BcIE51`\n'8'$Nb:NiCTLS)D#d^2*HX:S'.%1Z@;^[S_PG!6t^t2A$9kOr%oY=FnF"c443`8I+OXU)'?p0EJk?#
%`UC!kN"=TAO16]I2A7.f9T\++D'jWX9OM$HE"H*#o.-7?h*LG_Oi%=tXsk:gGFmMjl(StW_<<$c+0s0+5^cJ+9^!70mm;`ET,JpB
%FsHQ@83;2i/%rQ?Rh%Fi_Q\+@8CP9$!2Auh<+Hs/V)j/c&iAOb2u%9MdFqt;gic#^Krb2"Eb=6tWacSp`TfV,lc=-#H@D'n,Gl^Y
%rg6*d%pZ,U7+#bH'/VC3%RLQR<EH;uo:/%e:N"o^Q=JE&mQ4o/S!0`]Kp?aJ:7`K:HF0'ZCZBb@)tdP(Lb-k5%1m)Lr+^T4GTTkk
%:-Jlr#&L._Dkik`kGE`\9R0tKG1)pnD;9S$D$[b/[kAe(lJC)c\#p2KQ%rYkBeQqkSOAVVeZ[`j`!XSJ1k-J;mW_[mp>%#@*_B!g
%pMW9NP7m4VTT.N1b`6fD$HQQD8D]KFo^G9D,jkKQ9\d"=HM:/Rl%Q24F*@`4cWgWAN-%s04P.>;,f2:acgPA$f(2Bb<%Qfo3bh'S
%>Q(7[Qqr>H,Q7Q%f0K]X&-c^XZmH&c?"&&:T9g;JW-s;&Z)cHalXL]An%&iLZ&h(\"W88gMDsnG=G9^CES[W\XZSbOd\E!a/I'*D
%J@P1D[RnB8X"UNT&Z_p&'cO-Qb)r=k)Q?0kgTNYahn-7U'Aqr*3JH:JolFtiPnH`>!hHFF:\]4Gen6jDH\,O.oH<MOqPH^HVS;-H
%E;*d^,NH@4Rk8N^)oYh?#,%(ch_2Ik]tKqW:S(jAbHi/%asg"$lte47fA*<KMCYhKLmkCWd!L+B%-o]IiT?^Gj=Z!bs(akLW5qc4
%Elr:[af8#rWK<RPAI'%9"VMDT_SRFlntZ\_#kZ5Y%Pb$bL9FbTGtH^qV?<&E\WcD9<#C4TD_lVs!uS?%QJY^`hY^bp8ESt0C+36]
%2S\t:>/45*=2'rb?`q$A9cWNTS@[T;_-T4>'&$>!W,*2o:%I#-U+a`HC!r3;=kYf09k1*,]hlHlmCdD5/XaAe&XaJC\-kBbRSRVJ
%=J]b,Z$Ti!$eb,+.@+9@^?XVs5%!G'l$pDZ`96FB&q%;)Xg5k-7qpH-P@2%pCGPe\WmF:_B#P\GO#,5F.X<ZMr4HJ"QQLDQqtB6p
%gp=Al<Sb%'q08012]gH=P?!6]pbh7,k2TB]m>Ru.0)[?8CR*pHe!Mk7q%h[1kC^K@a3!$,DmD:PQRVM%%htH2UEJu\gPbR'-F.Qn
%:<Ds_<MA(FV$+k:qcB'EV9O/]C3BBWo&F]7Um8.T:H`"9hoVfrffWqKdH-?QG9M=^G2jBj3_Tq4JkiN]FNS_9]>#,'Jq]jW2IX"d
%'.a9_A&GJRN@G(urP)`-FApdhL9+%IgtA?'miHZlDiIe4Aa5?LWBYG!4]/k.]s]HIHMsT;T73d<1AIr[qPgl%/q73_gG@>WrMBHr
%:T[_<^3!S'XBIcl"PirZ(/O<28LG<H5L#a[h3kU/>3Vr(]BQMX>3K4=i?eb6YJ_Fj3W*lZc4&8lgq%HpSu[c\gs3-f?<PuGVl@AS
%gD*E<DXbr3Ld>l>5$mT3H4DP**Sic]\D(6(T=<=4f\G]#??+;KZL--)K,*)5L+c;![WYVtS_hZb^[5t&HEZWLF6;MYI(_*r#)fdj
%^3o`t1%V+!_;D__Y"JQ.Q=J#&3V*?ITdG&/`JX?:!VNm:.FnDAAuVBuf'J)>ahEUiUjh/u_lCFE(+sQOV`)3n%]d0,?Y'6OndbRe
%[?tN$<cUn6n%)j_Z*Nk:HTDC)mMfcqIauA&`qQ3cC;t_W`.@f&'.]-T?*Jg?o?KJ]I2\jWr=jr=oSnlsSSQlIS]aJ!<>nBq=)%$6
%.JE'ONiY09m*9LtQPkUkWti#-8"p`5mT`B&oXdiN8MNTF"1n>dCcpBTAXW,*Z8Ho&W`eUS/8X+WN'9680_Zu!'E$pG[L6R"U>DNL
%1n.c[0=od\K9.5tOlQ5l*bRts8,bHZ3TfQ!/EaB1WYrfpnksEYFBrdc(%[d`lT^9qqEZKYO`+OSrA!5O'^h8/Xg_EFgt48e\<%a,
%QFF"X"m/!J='U1X24Mp)<;Q-0gEl]u2LS$M%!5)X2U7/$K,aPjhBdlGd_k"t*r0FDEmJYRoc`N%r4's;)`sd2$!3hjr$)+%Ee$Ah
%e2lV>'(I)L%e.N._C!ELeb,YpXink);SS2OD>4lCp;5pAhtG;HPl836H)hBNSmSAPb4kcNqTVHSs%OilfNWLRj8^+cqr_k'oQ.0Z
%Z2JP*7Uc;5K*j*jFO>D;7Up>-=O-\C#'K:O6Gn7*erd).4aZ5OEIXI0]AKc1]3?^I>;EqO[sdhI!PG[5lXf%pQ>>+,o%-Re?K&7Y
%ZCJn@R768]*4@CmG$JCO1X6aI,2_J+5WE<Ylch]HjViQ6%g6?E.tkiPR!S42"b//2\*Dme06:$*oe&W(Vl_:IaihGT'#g1AhH4N=
%k?uCmquLmhruH.lX78T.gtPdDdD*g2YD\<S/@J_,*Ea*"O0<b\BN27;<4c%PkA;Ha4I8[k*MJlCbsHK_<?\OS_FbL)X[+T&V)k0T
%HFU;P_*L7Q&_&D9DPsdtg.ee6W1Bse.ZG[q9mg0,o0+A1"9dU#[$pbA.@c+<kZ(EAeXOLoBCr2O7TgC-pl&PPUfkA;/:9pjH3SSX
%N4A?p^$;#-Gpddo1O@T8DHrUF_IrM@-_QmO_IrM@-P>Q6/:9pjHFalm``r4s?M,:%YoC"<)4^i!ighDOc8$>geT87Nf8,.,k\9!Z
%I3!7b1O@S-Bjs#EiA5e/e(*%V/:9p"QS!b0J)N20e^IZL*HU0q\cL^Rlf\_KdArkO26i8Z5,21B6eB82?20@boo*"$*H'hWpbf==
%(-\Kp4W2_g?MKIcoo*5?+(F1bHI[),FahZRBCrhG?[Wr8iA5f1djJk)0765>+R\O\-juZpX.DEu4jq41:ogdp0766mH4IF\)R8e"
%FGnY9$_PhISoI4\n\Sr2W[HQ82YP"#oW"gSgE1q(1O@U#aet-/n/8q)ks@2__IrM@-P:p#1D-C+;;Btg_t<&i.iBg#^Lbc55@(PN
%V`Ur_=_"s^fV['pbN];O18d.uKtLW:3,#4aou-*k9_6W/Z>7!lpSg5eAM.%!*/BGPpTi`.p:?fn:\$8BpN]R&jW450Y0ta9jkK9!
%o%LF7%5`?6h/JYneGdR+IHTS$nWlB]bVmW$?VbW8l9]T5P1%8+ELWe7+(]df<,o[#G>!F*-1A$=XdAOK(@fYAf/]/!^P9b#+-uDc
%aHBNS,Xp;(DmK=9Tad7<5Okl4hlZUD?:_*m4'b:LO+.u4Dkd-j]@*IF@JqgjDj3FtfimPleP9=`]N6/<e55dAO.?g]>E9k2X(_)%
%dP:=c!BtD)(\*u.Ij5PV$hWp__931@U=78GX4q)4@k:V0jhiU$/[Bi*6N)1(,ABpMotoTX]#mT\Yc[7m:2o6ZC)f=k]?D+;hQ]=\
%?`S""79O_u=R9k]!nFWMZ8.`gK"4:TK9"NoD.ft0Li915X;?R,Za`JDZ9iT\\].?.9@kj:.r-#C[K*7inilMm(4#62k^X[Zj=ECQ
%]h:VcG69=TXB'jp@mhD@8n$gZbgI4B[M&E$d;Ds8jRXeKr6$`3bb2FT\d$&uLhja!H+"o#>bTbadneF\P>V9Y\@MQ,;iePk'p1,\
%Ga=1+F_2^aK.ES(,_G?O:Z^0.HYjEKcbZILH@O9b+R2n!rmka_COarE15[OWT)eoMVf&A"a[f"'$9qM&>(*"=A!'$S`2-EJj12'm
%^=t:u?M]Y)X4I52[77=T**+`e8u]34Kmj*ep!b24,Wl)egfboFW_Z1Me'oI+.ZYZ1Ij#F"%XpX^&&FtDs1>8h("'U9o/H[&LMsrc
%g0Z:+80+Sq*e`&/'\ii/Y=M,`2k<0`r1m%fnK1oaZa/m-Y6H%>"@O1+8c$e"o&$>D:mI9H+Ze;L^kT"]P,Xjo\]VN8.<ll*K5XK8
%!c@]?gHHjhB2)<ZVbBrH"[Oh!_@F_O)rR@l$kZFQVK=t:MEn,AX-0358kK`7XJhSV.d;P!C*M(Q.V;^[F\rl!btqi-,tZ0ML8'R*
%C^>c1,'lfnZSH]&2G?h"Pa#iR=[N8m6pRF1"p$L@/>@dJ%9X>)PUMDl8MUmGX9u<\=];V\!Vf&W1JLG55p*D,Agih>MR'*P#]stW
%p,KLi21,+N]bO6NY3:J1.uGYk-MH#PJ,u)fM6`i>U1"1-!pDXl;mV>]?-uAPeu/T4EY_j*'MT8NpdYb$eE!tNTSWsa);#u)aJu5S
%rk3aEU$)UWE`S;j9f<^'co"`JYaQ?#?P2)c#Crfo+J^+COpjnu5nXojIP884:m2""6O/1gp!b(Vcq^M<0N3m&.6NJA\Lb&."QD&$
%\u);(@9-2m6WFQFJ1&Ht;rt)hRQ=Pa>ukLRSoK?)_H.cB#W<qW=VZ8cZVo<gM#tLiMMbl1\tTM.&nn53KHe,5r_%TIaWIqrK'[5J
%<'f(2WE2>l5uXd+.\P=D5ZJj:OK[t8##GM%,W##)kkm\?*Y8S4R.;'CdpQWA<3:`VF'@(uhi\,+"8&^3MOFM``)c$#C;B0o_DJuu
%"bghZ.ggBK-l5I.CFTb+TuiH@b/'C48SI*Vi4l]RQ40L4RY&.;J<fdMrIub8P&(J=rdmC8*Y?[OCSD;Z@i1NV%&3=q20hG,FQ:MO
%^^UhTWM+%ADaaeu:\p'hJ`N;>9f$nAp(^P,dks]-nL$RpJ.XJH=VOhh!^R'A%+#Td#STo@1t52c;2>AS4+"j*%n0E>[g0-Fnhh"E
%-'da\UgB6b70B:p5,]M*Wq([:F%J[g^$,AZ9caiNh3dcRnM$4ZE"So$1dst]?E^G]f*T/"peS2sJhgqUW!HpaK-9c6<<IUS&UFNm
%LA8mo8,s)E$^q9KMPLFqC*k*\07a)RY#l<mmE)6;4U(c-+S@Js1Us!K_6kC^Pm7HAgHpP,J47-VRieNLJ`.a3MVeP(\T%)Y_$B,>
%FAO8L&JP?6&VrM.X.fgD#L7Ssr,*l'NXYVLckYJ#8Z!oY`8?O[p-_h6D',-TjM\-oC)XU-i9R?T=/G-_39mdV,,Nq378R*:s+Ujb
%':h0M(B))+E4pH#InHC.6D4(-&-l1r!bhZX%QY\.P7&'m`s_nGXaOWo+3Z1Y")F9,;tnZmU,*bm<94,]Bo3t)?],,'npi^`U(,Gq
%Z3`Jf!K6B:Ca9:K@XtI@+A!%E"jm'rRRq0"$O?^.IB`l@O9r`./'($Qbt+KW%gY^)rBLC*I\8"uLkBT^1(!rI:UfYE=1=Bd7#:rE
%nph,p#S]Pe#APTZ.E"CL\+[cN&.M;bG[VmA8A>oH<94,]Bt>B7JBe\Tj8j8I9j/m[P^$F>:%u12,Z)ltJ>sS3bkVEnKG^@o&t6[(
%`d_]0m%DbE<.bEV<&sToO[)nV&13eI5^meUTI'o"LMjsa.;P[(F&d@dk=T2"4U.k-"4C]iO<:#8W0r=9YUK'Lg(ui0'J]REL"-;j
%rLgYEJZ:gT#Z/G>O<:#8W6#/$T_i(dP.E1mMCDqB8d?!F@E/N_;!'O19h`d!A4=V)'\O1OA-lih:4]JrJ.!smL*D7g/89+)MBnU$
%WhQ6RJdRS/"&/fD)rQrq.$A,1/RP0mM]i1RVM;NS&lh:6%."6ackJA$^AsTG))rLm1FL85a>HLc$LfAZQ%@?U!-+bh5>[QQ,j.Z6
%&n1bAaUAV"!EN*GU]oaE57fbu"O_B<5eeD3%u;/eEmVcCTZIOGE%t$_]^q%'NsUA/aGHX=5g:S<_SX<B*gr]6T`A[s$'Jmi!c]GO
%+AMP3"bSr[&2tfoT_n0b>!PS6kL%Xuba]U,+H*e(2@qNj$39T3fE18'r9f%WR:0MFF'nmABotZn0TUM&Ieq#S+C:GU6haq'["+\`
%M4N6TR\1%JS@h,"TI9fY>=f3q$OcJ'H";ZLDCD;#dc<qA?L3DqIfP9<Q?e%kYo<r(IojuV^7n;K7@4?!DL^Z$6_`fKi^PtX+RXiL
%+'m=&^]-HbT`H%HC6G2GJ#q`:iW`p+%V:`N/J<jYOE&YGNrq-km%PrOVBCC:.I0AkAO/]DNYaQ=O_GF04AaKY]::D!&K)Dm_c0U.
%>#\HYA=ob"%[7*D1j)[E9qB&k#M)7q!"\4_VW*I^0-X=(O;-V.(_g7U%?2Hla[T;gEBnW0m8WS.A/"'"A5"?7!U^*N(uU&PLqB2>
%#N>qLIWS.kZN!(UTeVsg<ldp;0\l4$EFUa1*>&9<pD3LAEFUag&2trrTSkNUPEn1'p`Y!^fI&&._0oMdGo-gD!^QZs7h2nj/1CCf
%P8P.#iEECeqag>!>6,ja:^1#J57fL)nc8331*4%,ZD;L4[-#ofTA6h&+fNV;lXN+$?FUY6QS9od#ETh7pniU@V"mOhXK2/J\;P9U
%<V?Luf@>76gr22^])T47E<6]TZ2`m<19)8b#Qd:h!%9,L$+,pN/Gie<)&AN(K:3Jsbnk@'J@K$UKKK3]5_4a7&&\k!Gj,.MOr![,
%(")>%Ie$qc=Uhm+_5PEc`!pthk`Wqss*HLgj"b:E<rAch6S:S72_G367KCMjc4@jQb;e_b[rE:G/VHtM1;9_L0dW_g!MN5<eKPH)
%=JauI(ZmXgC$g1h(DFY%KbPJ,\/gqD!hR$YZ07gc-t(khCXE[8D,UHe68rJVMLpHiVGT$4UBmN39NprdhOl$B."DS=.]<V;8<j8Y
%rh9]kL>5_5Ot+71727W]3Z<Fqf6ELpBI4X#pbX7Md&8EDBI&T*I83']A.O!fgEDQ4Z6m[Bn-9+a(Bi+s"AjIi!goD^!.lc#@+\C2
%J4@^k;1NA\MBp:^ZiX!tJj?mQDPJb['HQ<:1d`d`5R0XV-359iTLcYI<@IpA@Wt'jlah[ZH$WN=Ts#[4%bqtZ+G)ig>uORpZ=FRb
%"8Do`QZZ-AC.a&VCmkV0LfDnu5r9me#[o,HOX)+RbXfMOW&<8T&OIcTJtXU(U_>j[<\][dW[Q:^4G`j=6_[tOC(b>P`H"6WJ)RDp
%A:fr^0$@dH]#'.$`7SW)##6m)6ieF[J3^<:@>'N_."Z!U.Qo'c=c&*!C')-u.I\VV#lH#T2@r2TFlYa=*OJM)F("<a0oVS%A=t1b
%[*1u`6R:\71-Wcg(>tl(;pd9HM6c%OeGoRa"iWVk]LE#\RA@VlU"#MP[c#)e7?A6a1j%1h&-g&p+LH_/!K0S>W*)\Y[Xc*u(>2(u
%:"KtJ`W@J(BWOf^d(oih0?Q%:-jGR!BYnilq>inu&Wm)`>ZWc!=p^%N<"jXp,ul3ha9Nu"BdFl7d<u`TCS$*/#9[0u,`iT@_PAjW
%#6mKsUQ>$k?Na*AV%_:9Ne:m6!P8e^;@li.P>+b?#XcQh,fq_KdBM7RG\.6^_$%ee"=A`aV`4bYD@VcOfDkn4mNo)-,QL-L75JnK
%BZ)"E36_Te;T*EA\mgj-&12Qkcs\u6"9ABB<Fi^2?AS;RO;Ndm$kmDXENE0YA&SU#JC%;\DTpGDk`S4U&1UEg<=D40*)ZlZaT:tW
%=,>X/dg6YGZ>)oZ;Y6"If/7Mu9begNS3p9IWC/6b#.C3B#,s;_H6cq&=hC'I+nUAl"Ml:<6k=3%Ms72)lumr$"q!;iZBA%2]!W(!
%*$G'm3LJeM9RWX44i3+%,U0d$egK]M.t`6M#\L=UoZ=<HoP3=p6HC59;c/WVS?Q*?Xl6;mZI!76Q]eGC/]-QTBI)'X,QJu!';5DG
%"sAp`Pso/BQNq2GU$K!,d40Hp,C!miZ'H(uPQ8E5mMuc;WEL(%!]6[pL+E^C)JB2t>4BPI4%lP6d&7%s,&3nh$O'<q1SF&9/P4.q
%!3%*3U+(Y.2+7QlG\dP$jAJh!MBIp/Nho#KKKs3]>duLK&7F,f"uHSg<n=%H!i05TgG;f[*r24_Gl2@YLI*=SUFE^a,c1XEPpA&o
%LrY$3##gcoN)0KU&]qg_%"!(qc2n4V+9ZV<!i/@i27>jb%#F]Y&be2cRPhXAf_e)7LE,$3_iE'VA"67P1^V19Qo5eBh?KHB^4n`7
%^[JS+M#H\%FO"su@]11Z<TdL&4$oX&'Ttf"`h#>%;Cs"aU.pLiE]"o0&s1ZfU)e7s\']@KSltE36CtN*EL^f9l^@e?):J,BIf-,=
%_!S%$9];&&\@0[";[u'[($uB&EP>U,bW=jmZc(K0&[cXf(G84cLo=*)`mbO1GZ\k!W;AZ7.,VcA5(^k-`5Boo2ts"18+D+C2]\j7
%W%t\:1MQEq(odZW>0l0Z_e8Jn(qQB2/-'OFG*Ks#\G#C$o4ASaM+"/j#A[=C5p[A&c`6f7OU@&(l=U/2J4'].65K58Y6P,^TG+cf
%\dfR_d$7B"jJsP.8-*EF,2+1FZMX!#i`O/P-t5//(!j=SZC^aHStN(>rc_@^#EN0:+11gd/1=@_4kEiUj#lTmdusR\JXEQdd\=\V
%o[k$q_$!ZW/_D8T2OIjFbipfV'<blG^l9"5SPQaM$uGQ&;oae\NsKpZK<-bM;fMlpXXI!RN\!r9379hkj`W'#F$9&-qb_%!bBmba
%%%W.jL)+.^7l6Jum]:!DTO4Y\BUfiC0@nTrYNK;;()h3imoRV^R^7P.e6.`/EcrLq;s\6cL9j9fChr;#3WJIIH76<0m$&LGR$DIQ
%\=]T3S93ob5]%46A]Tq-G\I2s5sl^%YWT4OA.BF5nK!u//bA8m,T!)M_lPN$Gehf]QP4fh&03Y6ZBEkd`(G*[Sk(:iZ<5Z:.-n7(
%5AYn6_jR?T$eCKH1+=';I'h*.JZI)^9R\<FT(&:,(C&Pc]Uh`F0P!P:GX8"`JB1F!\f-M1n\$s23^g>B%V5=ec,?lE>u8IYQ7AJC
%/S.*2^HFk9-26k,a*m>pL=V(8UkhVHUA17=>lWu:\i9Jt1]>a#rF^b9*p8VA1!0E2-=7;TYKLaeo,5p*(]DPLD^>!$m9W\L.es1.
%lW97<45#78"eaY1GD;dVK;IA=[7Ql4hgdQDH3lh//^VE*4rCf@7K_==ojrXK@l/RB@2PB?OHp\iom@8Q)'eR=HG\C[lZ7!Qi7CU0
%]"'iA.ebG\CX@.R`G&:]3kJC@#NS)CbM1##^a1uqgZ2b!Qe;<?Onhj_42@L+WCBtIF?m4q:5;h2LNidfpTlR_EgES7^GAd9!TLtL
%"!K'E"'^P:<q)/Lp'+R&7g*SBK<4J&VW,fa]:croZnucWW$A?!B&2lC2DO;aj*+l8WlNHs!sQ%`a%qCqhCk3O`lH3?T3sA_SQM>>
%+]4biIo:DPQED8@Cl\hS?$9-Q3+ZGmb\r4cSnSXB"1E]'H6,Oq"Em8>-j?,M**8Pn#8'fNfRd8QY&ejRJr!Acj`GWI,*@l%`P^9I
%g.nOF'Q<4Id7LUeg(N6hG/&e[c![X+k,2W^5I[$$JoiiSG,QXd1M-M^$S5bYfYm?X8%Tlg=u6YH^QTbViPW]gRBWb=ecQ9nPE"C#
%'HO\U@$JP&Jq5k>Lf2?a&ou)+Be:Oa+:E5%ChMc'`%3=t2FEa[B+8DS^41?S!k1rtP*JI3noPL7l7IS+1q9Ir(4XUC@tS/3#%lr?
%=](;:mUVm:m_#]4_u_;@D)@:]gAles!jS"U"j(=QHci<Ho6[j>#3&UOSV1']FtJhoZNTe:`=g^:-+c+@EZ6^_n0*VabeS+hgb^e_
%>*)g'N4Zc+&2<4A&I1'jqPV!GB3e<Y"LgV8S-,h.,/P"+6/I>N;[Kh#=\u3V$sgMl1SbK4rnZgaWj_sJW&KMC8Fpin,PKq+EH$7p
%Tca)f6j533*=HY/onWb]/)qU:X"d*\Gp4LI7kOO-^KEh3Rhk)(YapUej^pZ\7PJBCHGr_3X!W&I+q4bgm99",#588',H2ZOpn;[m
%QY&IG7'e>+b)Ei[U9Q.4(j!`PSFm5f!l-e;SR'G&HHJ9:-k7iMDR5mi@hcPFLtsUV4O[KFHH(G]IfA![@p`eA(Pqt[5MtMmc'a%J
%nbJqG@ZO;QR[@W82Nt>"q:+HBZJL;o:g?f!RDm[DIO'd"o[EiB[D-nsB#2\6W26"f\I4'4r)k+MX&u2mG70YRUadM00hYDCWU+pF
%Ldtd_fItQm5Ws&dV::tsM`jIRiJ,;h=%Xg<SI12T^iZgcBl-8FD6?1a)ib8`qa,@4#rr&!Obbu//U/nY0Epf&ki,0s;f%fEQT#@$
%E%ic=+%d[EJIh9Qerp`@?Td)E8q1Fn#34Z0PiA%j.c="I4+fUE@krWa\-+N=0S=L0D<H[p5Ig9e^2f^b,jF!)l%p[o_k%ep=jise
%3KeKs&97GDqNGq;+39l,Xt5r=(::5Y7!*<gea!%ZK$),BB!NZB6Ns=r<cT0`g,U"Inf;QL[D@\iF46Dcp)&B!R$)W[R=%Sl>H+fU
%.<"\(4\aKZ&`f+<V)l/aAs)u,r1sB4+CO"34(0pQS`TMf$aMmMWB@[4W\5=>ih'I`3G_fgf'8j<43p_*-PYd4cH<sS:aooUf.u;j
%%oLN[%uV<n!j`_jaNahj\c[+eNid*$$SH<.*SR#.)?sgO`JlL(Q/2W/]&J`G[a"/$:r9R_@a_^2cFPW\-+]PX]a&T_f!Rk5lJ@).
%,-agqLUEbNYV?3>oAC,9M1%cs("<JX[WVchkbMH0>pLdGMmdNam?P+MqQor[6k^h=kVK>_s,e_-^-%Af6O>fa6T+*ALL:tGRtrk1
%e`rsaa?i/NG=pHk/49d8Y:T@gErAQFQOQRjX5.<*'Pi9s"P!2"l?QZSr-;`n8EH+Fr3q8-`!eWnp0m;1+u[-SjA(0n:<4.n:OPV$
%n3nY03uN2\;l\X-GsKZ*&c)nX*g.h_dZ?mY@k)2o?tfQ_]WUU;%gXJ;#N\]=#;7+Ud3!faep@#tJm.jiZ?3&f@c=I["$\nbSYbe`
%.(V*/=W_a\?i;B)*6+uZ58B!rV_4$3</pJ?KON,&ORA:g;DfZ$7g+0L6#NUf9K]Z6"bf'Ol/GjtdPbS7Y>8$V'Pdq!kA$-CJok=E
%#Rru9''KYe@EpN55uWq=@L=2o3!TNc/<^=PG=qmrcqVni8\TeJ'K_bGDS."6r50#]IMA=jGYB)$;@O,s1lRu_f2?c\Ofl$$nJ]l>
%en\R'6a?2'U-C,0K]t^`nn->HF$X,XZNBTb"n?R64,"ZHA3pr+TeMm.IkiV5;q<+d%<<T#cXnMq<U=`mNjD])Hts$-Yl;6Jo[Is`
%fK7+J/o@pAN->9:o9BZ[SYR'apFlRJ3ac*CKQ!QVJkN!j3n%.3Db%LZQECI"%JA`Z,n:K(V$/mBNLPcG!87$uDBqjjkD\-ZlBRPp
%Bp"Ek9Zu_-B48?F@:9)nJlcBVSSIofdqHr=^atCSCrL[*+uoqocm68aHC=h2oO4D)5^9k$6mrBoaDS;QM;o8]TSV>2;*<$*\pCf7
%HZhaSL.gM5lV>D5kdM^I1F-++rW@Mg_)a#(I6lG3dNfcl'F66pHW":UTMX?U<t]d--uYEad-=1T8%:Jdgufllk7H%<3foQBFt-g]
%gD,G=c&a6uDhbWMIPX&"lF4c(#sP0&7[MTDpJ]BAq5H3]bC.&H?<\mbAk[W6'H@YhKU!eeSP^<57teq.K"N7:V@j_5AjN[rAa&,*
%1IKlHq;7a:9uD7\f5ULsKfk^sDXG8;-K8.aYEW6:0Y1M;E:"NsreaP;FLaZESkj2ql=F$57p?'q29XI*577a@dt54`[PRIEgoMl(
%$\g3=\JWHnlH,X,:s3-Rh!.86,DmU$p?Z8/M*j+H0G@P`Vj<O'QSP6,nU#'C7Am')^`d>p3p<57CID0\#WKeUg_SY4GV49D-"Jf!
%Mh"q>4TgFgGAdC>j>0PVFIi2K7UCFW%)i,?T-*Y"k"NN"q>AV_EQBLO9h_iWS&s:"b`GWK/Tm8gTL!9O5r_M;!lc4udD'";F6EUg
%`8/h6RC*D;7"Zh=MVP^*E3$O%aA!3V.kcUa)$i8rW>K;Pl3qs%8^gZb<JTtQ;Wc0-.lX`_0AM)e#g$KG5C<`g;Nur(n3\G*6<0jD
%S`_UDL@L=*?O;pF.Z*Gp^+p_('b+1q8hB-a4k>WI5\/Y"E(s#(?bhg_pjM%lq3_[[A\P^2m6"K*@CHL.Ea7.K8[j[/Y/5gdXHu=u
%K,d3AAG4[e@sQ$h`NiaY,0RNg0UDGRD;UqXTCXW6-iG+H74\cg]dTF!:6$9p[>)@SZkoUXn>%bZQs,(I(.m_27tlL3:-:4P^CG+r
%S,7SCH)XuI;E=qi!EU`#?.TDK1>tUd8[q!oI)!tb*NY/l@i/?2PgcHN,0haMi9,X=X6W+l-m8+MEuAeV26t7#PR-+P%6(GkCW6B<
%);[E^/4J5!Wm(F;<sBG!7e%<VfLe:4j#dY.%FTboIC+Yt@0P[X^Pn[CbkIAAl__OXI!TeU\-'p'7BFm+_Hc2_*#la'^/n'0!hIeK
%@h6%7KR4D`bZ;%bkMTc/7QtIhek!.<EBL35EZLGT)%4;$YNYT']Kkt`Ta+S]\'4qmdat(cq4XO"b,9^j:dY#(eZPOT\7,n=MXb!G
%8/-p<H+(o`THB?dYY$]'_I;V9Hd@knrM.K*Xduu/.G]0<e3@&hU#"6Z4JG9e`.AghfOD6RYRAr2a19nsSTFtS(pI+Dh5S-9IaN!W
%IplK.Y.B5k_?mm;[9:Dc?'_#kNpb[^LU]3Vb+L`^gb9Fp<!#K%g4F$D/;/U0cAL@o53(0ip,ok#OlSR\OjtVLh/ORHad`X;,O&]i
%bOZ%+_]Hef#\XGA4L]=Tg`2<Pk(%/s\2GsYN;lod4g3XY2f4,L^D1k[S%[.P]*6<*F5F5\Z\5WUrXf2=2`$_eBY\XX>lC[q2-1<&
%!t1oj`bsQ3aih\,ge(eemui6EcBo$Eo&2\TgeJA@[a:P68`c)mFKp8Crn,h$@7!/SjZ3Pa<PY3e)LS?YI-P.o.I6EEDM+Z62\!*k
%XpKhk%%Thfnk<-S;dmJ6p\lq#KWLj>//Ya1;:;:AG!(igkJcl7I?q5@+>g3EOP=D,'?;V.OHJ=ijlErnm#K:.Tj!n&B3YEn_.gJ*
%*:(@&6'5r.^js>XY&plJ=ceXe`st/a4MeC*aC(cg=utpd2uYh'cYm8!a`E-N`<Y2=nKbj?'G>u?;8peYeX:inHQ,*ln>(;jomOEN
%3</6WSB(kLki)KMQDB(X1HQ8M2r)D/^E_O%,L?!iaen61r)EO5nb$@10VF0>UNc@Oc-BstI">BU.sXS*:(@jr\K&]dPO2>^5C$I-
%kY/E!ER&)fe:?B4SXN9ZH*DK>j-q&ukt9srNmame/"HY*A0tsQT,U\#m3PdW0Ad=V!0W^4"*<NMA4(;ABO$C,']+-S*?a-0$Z^,\
%2\Y@8[He,^Ya-icKki+VW$H`<6Hqu@B2CP859>dc7Jr&2"qTgM,YM3@pgT53Z5a.1B2qYr(!<*NKn!Qr.Os"Ieg!L9BL-O*m7]X?
%Qj&3AAuH>]m7u;an_]n05d0:%M,9tlK!D"QK,m2b()UbC&X9k;+3r1(N7+S!h!)4>>(I^R/ElWA-%^FbpR@RA[6`.S<f'GUVLo]%
%*YIh>"aSX1V@ogcZ_B].33kN7i^iD-P22d%]<NO<SK/r3JUS:SZKHQ39XLSLfBZkM[RXcRJ1?suFW6_-BOX5Rb$%3C5o/PUfh<^M
%'sjR#jU>EWiu6>M]`7*s4]G[:FW-8WnXO=tgY`oi:)>F@@_u$I_T<-/=rt3?o%I?p8E(2eq*gk0P!53[.%&_I_]."d!T@?gOI*k.
%-=3"-ogC:GOi8dc7p2aZggLR)*02Xfg+aW"d4"s'/-"l^Eq1]uTYdChV/SGr6jh9e7j*%@8An[,[S.%`Se5Nc,2=:KEnbDCi]4t/
%.-*<SQ%3WZAHU5-F+4*FCmpd&rp%$K_hd`as7DuKpZD9_aRi8_#Qpq9<C10nd4E!O,b@NJ+&E+gXr_TJ.`X%N(rpns7t=D8q%[9W
%6OG6J:Xb/in<%AZo4%%bG`XL_5!O7(B?QPkW$%<tA)4m5ZLWGhpDt#$NaB_,O.Yl+*n?N<NPGD=%mI$f6WrFZfl2!m0':s/p8)<3
%K7#hg[m6$uS#$?W3m2@\>;\!$k]&u,Pf=D&?J2YC4AGLg_W3L*]A!aZXt:%aPAFps'4Z2f5U9,W`gK)8*o;j]bDD049+u6l=h8pc
%cu)Wm?1RM/4uDT?7Q,!E=NpWH+?u+nGEXrn.LZLOAa0]5H*RFd7M4s>#,HBtBS.;GD6od*^aWk]0uFm?Gd]K*%64CD!IC3$!SH.n
%I/8W)?QL3mN0`QuUlK@aUOuBAo5W\=iZ0?HB6d4,mq=qIaD0W867f"h:-!*73'_`D/BCs[DC3YlZKhf+1.rBqelg.AbKufhaM=ln
%",::n+jsuU4$*iQCLFS@7iF1Io"iH_Q0"4l9<hkf1qNdgI/_cM9RJ&"Q7FL'A3,$)\3h%mp=[a0Z\hm^aDck`!S\O8#-@jm"@YM=
%`lZ$'`GMtXmGsO;@lZ&'Ls-L)$'%&&le-UV2NY&JBJ;4TP8:3b8e5JC9<RILe-BYaM6tKil[s+mnk=CRim/dB?$.8;N9sTW5dr8$
%e:K!)="]fG?:!6bMY.tdKbUabMlZ)R2Yu(Wj4,+gi4`>)qg<qmqO,fQDd)OXJk[s3a_e(UjM`:Z@qS*aRP@_Ie=9Z<XQBps]UIS(
%)mK=R'D0dp!BAGHdR3/%M87M9+#%C6-7*U#JmuDuf6K)R)#H8O9.cJ?1l-<HSNAL7Y)cKMQeOC\A=j$Y>A6B0&=\N$=hZO9ed.!U
%?EY3GHI_(O>,:-2+m(?i?`niINYic#bc:5fIYkt?^(UL<55VURlpg<'[n>upFi\q4Wj%nI[$mN`Uc`'+,*[csA9Z_O`%d-T:rI4:
%.\:3'ANee_4[#Kn46ai%Jc)SdJS7$Wlq=B;B4T4E)W"@D@HN)D6.$j++L6_)i]jD\7M,#i:sbZriM@=I42DKW868b]e0C\nFW`&e
%m8U_L[jqeCS0:Oui='E&%;0i4e8UDt:YPd:/fKImc^kO8;o.i:$T_A\Y%TuB+?<4+g6R*7l@%N-_6G]5Ue+cu4'4mqln$4^11i"e
%270P7[]'[8]Ob[\)mK=R'=;I5&,$p%:V!Vcn'IH`,9pl]/$Ud5$R4Ote-'bIno`5OFY@j(3@FJ(k8RMV]%F$G"dXJ^L,Mg'=[9Kb
%(?@ohSV\0GAj*D"0P'^b`DAHh:\M/L>4*$`p0?]\Jmg;0"YsFXYP;-aPRQ(9k;[(5n8LO<Y=+qd\jCYI$u)'O5'EA;i(7\ri=9"P
%gLiS]cRNNm+i>1t"Dhj%)mK=R'D0>-!o'5lqTmuis7rpODpJ"@BYbc"')Uo<d_mF.Z^H2(9K\[-i/:8?p'PiL382=slX$qVCJ`7?
%=+CSZ#5D(K4l[4rB3",_%i@9&'JSJ.TZ58IR4'-b\B5&/i6\()_r<g->[70)'joG^d;NKc;1Y:VTDoN.$SiBCgU!_EYXa?%jGm@_
%/[2(#7@7p9OD;=@:7R;gf\_(?B0n6-VL*6MH>8p3Etrip]'8dE_>&1u(4hr%V3A700qMAXF7VPdq)aKRc?9`?-a457s&HFMPSP`h
%4e=HNOP']?Y<I':aYONQ_jgI`E,Y;@":Qr"/[$,i_SkO?'@a;N=_ohgg2'0I[2(f!%sc64S&Ro'fAnpnm7j0`^A?dNmaAO&Gp_NN
%lg0f^c_N50N*&\6?/O^Gp5$Y`\N]>jC]sp_#ofX/[4VdNcRfKZaU-F]S?EX>!L/e%H"VPa*-;G]993Gr-6@I^$sr+Zq$4MNBo"S@
%0$eQi/tAS$)d`t6\Lu2L'QeVdDfokLp2W#:gUfSk5s$\AUfX33p+F[sC`XC@GgUqF]1LoX4=A*kH&d'`=SCOk-3Z[+g1p@GNU1W#
%Yg%2AM5i%McEpUF.,#;7FJtO)f'N5q'?!s!l)n<$q`Kdi`'cGU3Xt!0fcd(RcOn5>=[$^a<ggLkcZ>DMB,=c5c4FU7kF%tI2Im;p
%^7V[\;2H\sijq>",VHDq=@#nZ\H\%b"iQR?j1*i4n,+\_"<j(+\Qr1lka@6ZU5m7\XOH2J4c=,!ksQ5Pl8q.mV_4nN/N9[i^W+';
%V_<P6@drFU==H,.`ft](N9atrEep4@Ai="IUoA&l^9a0a_U^6&eSaJ/@bc<a+PuV'1=JO#0B@hj$9%9`0D-@u>ZNu.\es4%S=@Bt
%-usK5Z?VFe-*?pQfGt<i2ZQ-+o0!ou?:@_OJSX)M+?u+q"o3%%9k5H.gKeC=8s&lMREF7)G@m<6hDdoFSTH";]s1N+hAa)"d!]Eg
%inQJYZiTd54$ug<9`XnTS&*7/=PHj$\4?n'D2esF%gE*t"0TaTB#G8g@*2FHq`?eL#r5/E><Qq34$^<F(?BiODC3Y)@Fl1(4"OO)
%e&5/8qd&!&Mqg8O'$Ur!\h?-g(m_eNLSXdl'dT;)W?:h+c*IUF]H4f"m5*3oY6:.Bcj%i#3*KH6kt,Y&i=9"PgLiS]cRNNm+i>1t
%"Dhj%)mK=R',1Qu0Q#A^'^Hu]AP;L8!>[b/:A>R3r$h!L!lM@F!TeCI#e3W)I(\2#Gs)Cb)Q!RZEk83^Sc]_]XmhmAHi=rK[jSuW
%2Y6`0\!^5!Wkab6.259IVj,u>7(Nh:iM5F#0`GZo5!KHNhmOXlPp2RFY8<GB$ub\@>bd%>/?k`iUgTe>;BDF:((otp"o/Tc;[F;Z
%/1BX:6Pn(NL9q!!^H4@bh%kR4DBh[olW5r=*Jh%:e.tI[aop%]Lr^;Qb/]GfH;VT!Nrj<SJ`<iG7%>J<om6iOSin4O9ae6.f[%JC
%EOVN1(HA^&NT)APP`e7LJSsMQV.'79mI#bG_1i)1a/[8BAceG.6<s?SL]d,j5QHu6a!mr<=\*IVZeqsbY,MMVqdV<tPO11hT:"/^
%gh'(in>mdK_"[;Xc_&3'^iHZRdqeJ0b2E9s:QJ.rGG\`e-2q_B0GY4_-77E<c/e2!ijmF2MZ5_-^[IiHm9PA]lYL)H]=f43$;L#"
%#=09DW*sAVK7_I'I'2QK<S*Sp0'Z9sT7V*tVW[)gTQ"o4,G48/;j$bobeppYWVkk=T>"pQQ%IT4"]D.Z28dE+iTC,L4nK+rPVcXR
%"\!j1$QBWlR*]DiQbEV1>$UsNI1,\C&sb^Z*\/l5k/V01;Eq&2T*;@2"U]Qq^Yac905`^-kPgblf%?*neLHE&EViab#NS&bo\qK>
%09g+cPoMqB'u&rTI)ih`j9LEEAc&5)$T[Y!rnS?k4PRADa[=8sXs$J8]BB9f5sB4S<lT&3bdj1*46+m8,-C5tcIB:$n`IDg;.T<'
%ZM:JQ-*=q2fGt<;0pN8G&$Vm0Qj^&X6las5r)="sPBRDOfip%nC(K/3iIXi)nX.m@86UoWGK>C67[p@[b[M>%o:2M4k?LC.JGJ)n
%U$"!S!;ft/T5!74kEP7(CGs``T4r:bZaNqC&[HI!jRVXM)WnXC"$$RR[uu-/Fir;H&Bn;+[(YYB"2`m$+D5K%R5f9DXs^UQ/Qplb
%_,Aik5MUOBDD=,Z[IbUn_UrKT$j/=oc_>#;0G@JUWC,QMI?H92!p!`80m-/ZA7=j>Yc$%l%GG-57(>T"jS%9P`3Y>(:rmU1.KS9B
%ap+sImK>s"3d0MVWZ840XOhMfRSC(R;End!V)dfMQG]+\/a:RJhk^JVX"*80jc'Vj\>NIU[RC'3Lk&S0<S@lH47VJFdB5Nl'?52F
%?D-$f7;BZ%`@D`t>-FUc%Y]4hYBK^;pWs9Bd4j"Jm'.Zt'io$q\"McV?eBSqEsD)gLo:kedLe6)r>@^Ag`['r)f;Gb0T0(1b]ALk
%SoY?T"6P)WL7W]D!.-l\=EbKYON2Q&36FW'BTCR[*fKkN&943sK%8*_MB+=`1V;ifEHW`BS^6h)MP!aj5e*:!jFje-M%f)r4eZ2d
%A9$>B;V!?HGMXN,f;-e=5V(jULLGUq`<+^_U'SPc(g+t(Hr_Fb":.7KIk%D763LNDPtQ-LE^X)h#^=@AgcjJ\GZHO,$5q,c-"'qE
%fmrbQSY/2jfEH`4d/E[aGM%=bVI)FOrb.DG8J\EV-J>$9jQg76\X]5f?_qu?)&*kFJEJ@M/_R`YN(!UO0VQDPAD:OCGfGo$;SBun
%JKfm*WMS\i:@WX7m%%$%RiMpZ\LST+H&INFFtp07@T-3S_c1B3H+K1ZNPGD]F*AWte:S=7Y=Nc^7,<KI-L(_rUd['/1n)$8;(kUG
%"G4<]dqm[@2u4kQ)gl98Q_90r606XI;![Of?.=]jJ66M"4sdR@ln.k"Clhe'/pb/K`90h.$&2k].]l<g2eC^SW0aQr27kL+"EDei
%NK01jU.ti<,J8,km1q=1S@0Q%l_7,cFmVh7fK;GDfKsu:i(:Y@3nHK8q9fTqR3q3P0I,grU[1_)M;TJ[]Xlgbf_%LHRYeO$lJ-%g
%St('W!N8NmF/ZlijZT'sP&6UG3?%tZY_d[g7+paFD%lRd>oZaZ?m`R"gEu2,&[^/L5aLN-K>EKCZgFJ>#8):i[="p.,3Yar\t#fn
%qht^F?.@sIiG@#V&inbWk3CB0!,0WX%PL/8\?P;B^@T7HoS&gQQ"X^r6!'1L*3Gk-M`#\h!iBf2m-[/)*#3jJB]lk_*omlp?04C1
%;.$3kZFZ3;U<XJqbhQh%ORQEO4KGYX.[kRp2,P`4Rs5]48^bHKoNbJ-S82RT`HNMu+kV=1c=NlZ,hN#6K*Z.C[9Q/Q(@#oMT1![u
%k%*47eitI^T6t\RHX6<WeiDk$>,[X</7CroS>OZg5t#Nmc1N(g$-r^Q>;=!<efs&rbpRuF?*QgT@k,X'eMl(QJ5C]>d,*m=cc"[\
%r.9NTj.7m3Dn2dJ]90WUMCs)5@U<,rQ&b0cYtDf-L$t<KMEG4mBf)G0bdgr?!HC7HfHUcE4)JWiRDgd,j>fjLcaoFNT)IQ;U<&$K
%b2.RiFCC3P]"e)DV+5q6b%Mthnb[FE>"?qQcSd5G1PqsG6%`<J5OqB#T,+&9A#43-^Qq5TC;GIkG-P!9)JWVTUua.!]WSVPp$1,r
%:8kSr6j=_7D^BOlpgHS55F1?-P."[dd;f`Gp;N6V^iIHUo;K<T7teKa6%5$B<!#PBQ4n>/To%r76e6ePhjp=9NXNYZFiahh][T7X
%`8s`RX7id]]aKX58Q_GJ3bDJWE$S#Q'r^Tsat%F$YlPVpL!l?^?gH*[J8d"jaLTpX9Uq$dXs`l6)6,Z?Tr"ek9^\]FqJB3\/^Y)-
%:%L(u'3l1F!9BZR]]8+($DonHV+P7(RB9>KV6!+=)e;6PS*`m3VjIXAr+;l?E35gM_"dBD:S?NO38h[(E$8923n/'?aC7$5V:T`.
%m%A[/mi:cFXn3nH2H`=2@kY)Am^*!BE@M?OS+`/[fHPn`,@$dO3k#iP*YIb=#?a@ZVW*9>>>_%+**Je8EMR`WamDp#iTbEMeid?W
%%F\/(CUbP^\??ZI"tqR)C@1qt*rlm4BD&)M]oKFTnD%0.f5YCPJW;MoMRAtJMs">4g49"VSY:h)Mni*2nXJmi2mb\5E0Q4;NMTuk
%G=N6nFt(8HkE;21ECU"3r3N54+M<I(fEP84o+<5r3'b!C(?C1SSV\0HAj)8_E+H6-`DP28."C(T4\*lUJB&2<-d#iCQF,S*T1P@:
%4%&2"5?UdJNc3NT8C`lW,)2YBB*)X@7*-Z?M.f1eTD_G7X1/<:%-OSKf[`nX@/Y9skb[ILP?X^_pVK/)`.e18dGG7"lAm4I`6>]2
%J,h$02QLnl?P*R1>tUcqW^%-6;URSccgj!T>8YAT`:#"e6*Tkt4'NbRoijPe?1,0e_/a0f,r%?72iU1?/c8/!,sX.1Wg8$,qLP]-
%>jjd]#D*6[i!"RC+d>;]54D,l%ge$tU=6Z!N[DTq`0QGM2YM)LJ4K.UR+fYqDuut'g?+<"AQd7g+u"q?@t#',h">_G/e&@#rlZ/<
%^q2h<K9"kWqc"("+gW@ndj1UZQ?$irfuap3WX`C4T*=cuB&sOn>`;9C]mJGc/[>BP%!Mj?abRT,o7O9W*p0.l!E(`b5&$H;/9tFZ
%jckf>(]'i2,Y(gBM#DKXVhhVo&T3[6q0f\Mn[r=3'XO;Q9Ye2n[K6-;4%'T(_1V-Vrmq%\#%L$S51tREW25YuUs`[\BVJia!1<t?
%o*uWp[/2<:PI]e]Ol3p!VTH<AD0#a;XRHCLNlEumQ!RR1"P].VDUp-2YWUS>+P9D@Tp4_>o$LiNT$!XK/.=!8>grShcceqZ/E_Uc
%5FV<79sb-"SQ2M/*Wp)IHAk4/CuAa!Y&\(GR)grt%t6\QW=;W2OY`ujq(OdG%e5lX`1unM->a_A%"i%!X*C.9Ao_`FPnOL[JPm8I
%U;@4<"Sm&s1G^I/TF6Ya1RksfM=LeV[>8dW4QqqCiN#*^onT#nk7kP"OPpUN!kpOf%9WYd$*m#%;nKK+Yndbej*@n!V49N#Tf'jC
%-\`CkU`q)H+>J\$2AUqV^'S9.'#-?n-47&Nq\JC'E?^;5=g@::%&ulaXM3"]VbBJ=<A;aVZp:hsd`G/_:cJi7NU<s%Mih*q.j*,g
%PZfS-ANrG`^ciGI]4tU&ULFfIK?&?t^]U=[]YSU$,fC&n`B$Fc5<EZV35j-nJ.<8jGr);`BC6ih_:UMZ9Rk^\8,dOjP\&EJ^K;b>
%/"C%(`)OXE6%TK%o-+LHS:PCF:-'\;^`biB,tpF'$B!&^0mFFu@@k"H<2."5p4.SKJ*LZ)9ZTKWL%u(5([Z-L6C'Oeq@:N8Z&kS@
%B%a#O.7G6i8`Dmunjk$Be`O]J,qWfj!S2#2pb?PPq!0",T7iEekmkOmPYm1&#5;W?_+GsUBh<41die$c2p?%L/$AI_BcJM$4UE;Q
%6tA3#,"FfAk+PMR=V&*h14Ae+i;XRE)GH<PNHYEEUl[Q'5[.mWYs9ea_0I(7P7C=*`n&jGnhIbfq*B7l^fSs#RrWp^,/1IoGeXBt
%lIf*';0f#^2VGE\30W+O>pNW2/C-jm%fq.kd7?.:d%gR#jcN''Ro)(.["B!`3H,hj*A_gT&<LOtiTtag"RJ6+&[jMt>u;aM6&%6<
%BWtVOh)J%ib'3WP%)b<+UCS2UHbL,2K_uBT+RNuJOm&M!%aO:HlsO?#L,,5B3lK?p.30hrgdL<h\Ipe7/g;e)!`5)CQ?S:8anh^;
%r)rU5RKue()F;QL6$T2\(nS*C_*W*/VS5ka<[epO.R,<)rF?/:c@JO"cfZh?MTp6`poAdh3".%V5[:WY.tsNr>Us_[:;Fk'G-Ynm
%H!jDs)VN(p&cS=jMt.;=HX>Er!<@Cb9^`]Q;%^T@n('e3^uQ+$3W_[f[fs#bSB0jWD>gT0RepBd-b,[;X`A6.^/5WeS7T-edA6^5
%XJ'o6q(=F;fqFV@<2Q,#/K3oLMOCG8@82Km/Js;s-e[=,.&3BNdNKC<@#q+Mg,[#Y@!]%(D\X@V=BM&MrB]9m4H@*ii^i&4:?Xo@
%4TEh3E1&lCNFJemg^/8,JY&4>7T89723<^LfFL\1eAT!`Ql'i)fji'RKSR*@lDZ4p^g\7M]<M-'`)LN9GrKV3\9>t7IO881d)gF:
%<jCEq?It>r!3cW\.&0k,@0A(NSMPhE]F43CnYca9(6S)Qs-;t"BCRD^+c`.llot'0]9kI-6:4QP4:DNNARu^U&"d?tR"W]+U.O&>
%dk*H9bN#SP*+E[@rhO9_%!3LcU6_&Xj7dQWo<\\"Uo,_<X?,=qB7kGdh0LFf%>(&$'XO+o%kkN1L@jsm:nP;.+lX.#:d$%qlB7^i
%IXQueJ!l3oB4.^f_^r?I1uQ<D.4]ICXKj>-NI"05ZHIlL"ea[41S=L6a(T^hbHjKtd!8-BOST"(-`d7f@($T:<E*KnB8<uMJ)ofh
%;tbEg.4i8'[[JKHLcELVZVE%`Cj+$T_u_gufU3(=3/PbR<rla0;uKu"RLpD%[HI2l_m$9XdqkiX\9NqcINF'5Io>/WUuE!WU&72.
%%7R-GI=ks95P7-cju(\\'O^<i3jDZrAB_3UG#XGr9:Q;)5$2%c3a?3:(P?M"EY6\IN^hE/"8!)k`iMO<^9o8&9*;:CLW"f<*QGbu
%64Wb12EdpEr#":Hg`4$3W_u1Fj`pU'+PoN_21pq=H(sF=/F#i,VDtGUhjMK;E52e\'2`JgV4$R?]de]-om><imRC5e?05q!7UEqY
%C"jQ(^sB<Eda/I(`tf06qB>Us?l51>!LjMBk*>a[HAH4#rSUaGF40,1K[l__o!AK!3q']L:00(kQt*s(84.AX+lA-<B`[]`c5')E
%L?\_u5TqrA!XX::1fNHk[^)Q:Nr/8NFBHZ%hAoZt8#^5I/"E9Z&r&r`gCBKn&\m;k\GhhDVrKiIU5pi8SVJ'#IJ$+AnB[]oF+587
%K$E4.eKGgA%`&Z]C%qW3_^+P+g9,-Y&7?id8?^I9U?+H8aT%"^#9+E@AdhDRTg)7p'6ZD9pk+Ah2qO-PM,t8JE/8$WgHY?u4"/hL
%$Z_Ylb:l!,eG9Yg'34`^?iJ,=e\VH%Omo4:&jQcT#7,(h"W[CK@M4uR%*M>o'V-:SZckU,"H^L)if\Nr69baJOmTD/is3-iB^)O@
%"V^(9?mcG57f&!c*sS2S$SbTJ_FSR+P?&9]Hd2OdCg\JSO;TuR6%[JU9_%NcRH/U!MpL3\m^u2!)M#q)U$9.*^D/4spb3_QLE&FW
%$j$f&%f3tjA$I5*=NDKR.FQ9bddB\I7dKBn((__6%8bB*+AP*EdT5I?`3_rW\8E(i`s/[?@K*R#,Zc_([LOmNr6/2P@E+`1+"InQ
%:+chM-9Ysn@:0e/=)W[UJM7*BA)-N_W)R,*.;&:YKa=PM&!H,eq82E#5X^&8<#,?Tno6O&n-H3^*+h:(Qssg3pR0,sq<K+I'@^H\
%#n"Ven'@Fd@Y.2d8e]fOfao3Bqu^fJ5n4QVK.BTmq(Xh(Z(]0[9i$JL6%Rr]!1_n5@WMP\AieWe>8Gnbb_Y(g)R8kTWN;Edh?Ful
%!_<q?Q#)/q$=uR>/7HNl""TUa6_KUbX<\B[TahZ;Tbb!CBP'`i"dm?^5=QXN0TH6c3;NMuM%2N'@L-H[+.`Q7.QfENSW2f_l]U`K
%T>^$>c#"KY9sND2"H3&j64Vr6gl87](acn_Zb(8Yhhlu_o4[]V-"MOaKlrt2d4kXYk.Z_:Vgndf,%:N[g@r+6JH_%2IB^Ka0t%SY
%*52T6Xs&1F#G![RA0M=J6ao.6KQKAV!/gV_GS/WbC4&"3\U-b4-Bu^5CJ"KG\38VOgp)F2ecRQL]6B^)@EF\b:J$jmnm>R8Y\:?Y
%MN--lGnu^*G,?]i1^jiIrd*9>BJ`13o'7G<(#sIspe/rC<#aDHaOoOZI.OUW:$9'9X5ncE,%lPsTR4?[K/j21h[0F\hM%f9POpU^
%Z1rs-Z!-Bc^TlJ60k@ID4an%:Lj"q]kV4$XJ6KDVSHS9,6&3.Vo'kH'!>1;A](0qm"C%9)p<U9Kc\4Ao7#Xk*[k2u-J7-&3lnlUc
%igs`_B2Sog!=N!k#tVA_P;cVqR`"'U:mtc/BKFp?9*01W'aS8WMcG!iOHSQg0]Ftq[%@\tm#.>PUq1Ldh25GgHBN.jN"(+qg00]n
%m8.27]7"jG[q-:er`b*b0+jLgI7Vr[^(9P`,=D_2MB;Dh[LHoZbuea'5EbVG=FL-XkTG#gpfekfefV:uaU9r,ms9)9l2H]/Rq#cc
%d3]]f\[i?g[k>1D:Zn*.+d;0]B#.[l9np3W.8gq>6:-.UD4QIkrkHY-3Q.(G1`'2L&I/r_H?KZ)$q@N@3,]O[McN4WY;W`+A+tZH
%gLZ3\+agGY"1aXL2jHa9>I]Y[%WDGd794M(dVX[-*Yh=Q(H?D]'ZFG7<X6MZG&^IN>SjK_1Tr*`56."Zn'BD\(+UI8Ur,6'=$dZ-
%9$F+JHSs9LelJl-H6o"n,X!r/;ohA2B)thN_oQ]TgcW)70[p8im>qZ-Ztb9q`Cb'4e<csbF`#?DGr)"I4:]rr@&jVVBnsAJ_7_c'
%/Tk=6StJK5gsU5)`g9hZs2o/V2T;>]8cL3,LnoG"\KD36Xq$Qa+ZA-Z#Wnt##3[6KWjB:P%jDjrBX:R6cut<a'@Fk.HKbQ:o^b0A
%\>iP+fTNLIj-0'\"-&-`'#rD'LYDCOJ^Tj)UHMF6[uHIboNOU/btX]oWQ%8/iM#JA/9*B3_Btt>J'XFHP-R,aE=9/^+03[tT#`uc
%&F^N+iYAAPK6$!lic$0>Q<s9aZ",OR24RgDjOqYQPq/jt<HTht_p"V_;=j1s)+@:fk#_,$;aa2's)bYlr+k^L"(V0EXa3];`8G[#
%Cda4POqD')d<!T0"cfGo6#\jS5BX"ccsU_IgK/K&\r5]TCc1rXZ)p7GHnRC/Os>T(!hp#GSYXE<)P-L[mZLTPdUZT:Y$20>_j^AK
%osoT$4FP8:]+C=V'em536k;sTelMiUC=g<BRs\MYNj<1Q/F=RN;$raCdehe68g)kh`\s=[iV8(-Wam/hS81;f-(1aq=VZrLq^oY'
%,;QmPOo$5[<?8$*]EXeH-F3R:TLo,T:VrLdP=l*TlZtNSZSLoRKc(YehD)ipkEMK_9dYoR\!%IdKj*qK]-eG-(pRJPGskn5?D4=,
%R1F<<=Iu:&gM/Cb]ej8ms!d0g$e:U+c)H1<A+l2TiPOIZihZl`i4*AagSgd`&0PePo@/sjKIH`0`@qjF2e'rQ%lE%A8^LG[aXQ6M
%`-eBiV)r;;;VPYp6njdHf3WYrJ1S6:\^"8^aWok6Q&5R7o<n\d0\'C>)dtLIelo[iqQYFH3,?!?q.iB#>BWO=i@LT@,-oud6(10M
%dp\h,W@SJIaYh9?)#:lC'YX_XS7>^WK>san3QHfU6sN\krU_]WmL;5Zhj(PmQV*S(7F9#*[t.&'_IBj)h3fTOQMN)k(Q&DPp<dM_
%`^kQ'eo/R?8Hdf#A2Z<7%jlJ<r6X*O/j'KeGcF!+XP=qU6;kY&+9&c/<dNS#k24@8<rtEn3+)E^]aDVQPTQ<;8Q\,Z@6[;<aF)Jf
%fuMQdZO*-)>h%!ZF^Vm;SQV'[hpIf\nCER)=S[1&)#mpf,9ibD"52&0T8L%"gkqh]KU+5snQXF&gVIc(A:S1p7!b.M:i_jDKF*s3
%7Vu.W4Ma,m+!OJ:m,O;[YYR?p;pV/Ja.=],\<SpG\kW@G&Cr&BrNRK[c#tS.<Qp>0N\c=p(t[+mi;Ijik`J0s_83J!/@Au%^9\Q"
%$UC3s"nfhbd_+H)n&pO&Kc1k//@HN^;j6<QNanrDpt'CO>hGH!26D?F)'OS@[34XMi)H@`YM&g,569i&12F2DHR_n!i$"d*VVEIR
%RX^AH`5TQCCm;5%_2ZY+;.topbic&X6CT_KVGa\#`d'_9M?MhAB'hMVabh3-c7A5HlZ,FIBme;07(R<UQFI\BmZ@bAD^53[4M05\
%Kj86r'/6U5DK#U4SKm_c1:)9QcBL:sj?[^Gdi3i`@+s5e5FP/An,_!6o9HMur)O4>i+J!&!"f7tKlpf]Ff=%&'W[H"/h[rnf\NI(
%'6J)h]X*RtK-r5?+Q_bL\cAE2Y;J-@\d==B7.ZI_,*4`+=V2CkC^!;C#mt#)q9OHo[$en7r^$(HmSp8@IZ0%p#T(iC';W>IMO*Tm
%pJ'#BA`EWJ5i'*9+G/Q$k(mdCnu47IZ7<hWCeS\,7noH9El->"lhF<XRip8m_EVe(;0/2I.2hn'ot-H^0)e,X6%QPU`iS(c&3mpN
%0%F(CKoiG==Ma<cS'Q/"Qu1/"9:+\Z4s/m6q.#Lqi\<@1KF"/gIE$8KQfh+/A*bm.W<!ar\J%A<IUg37B(#KLHJubQ+M*e-%!%;_
%\AROpMDIqFr1M7/n4K1J8&JSRinX!.KBQ<D00=GZW"-ru`<9(ECoFcL?b$ja+ts.Cma1g00#baRJeSk'g@i$u(./,Qjs.r#IuN%,
%cf&*$kS=WSKjt;#C!1sPB"F2-$,8jB+(O1!p.TZS?mu,M@?<1l?$;TrG#*rsGG"+p7`jE93:jT*UWe3>cM9FsOZZi.9O5sdh(Y,%
%qE`o;BYA,HW(9>8G-CI";5QE@kIJ@/fW"0?L!=gk.nX,N-CN-?1*+M8W@;3_&NdW^E$u#c`(tM<-n&fj5PHbVB+i\QXO[^@*iUIo
%g-qq8ba1O`_`ra/H:MEN%^<?)V*0D\ink?h)82=.p[E%m`7?%:.]k`R=+N&k=rBYUGQN7`[LNL)n.5/N7M+.QX>nPl:Y'!7@<B"6
%</"c1p5brcN<Kr6SE@GJ?n/6Q^_Q+oi(p)blnu2]Eu\Uj!+OF4NjoQ2h'`>dag,kaEEO&p78]A)-&gGSQFK-%_X:9cA`:'Y(rie<
%T8M[?BLRr,*FXOu@YjpT*;t7QEnt%*q/dYl8NJa@K*&t%Uu_>7cmCX:B>4;k`A2onW*u*(p0r!O:Vp..qRZSRiMfdXa2oC"@0p/#
%+6r1Bad1.>!0-Asc':P^F3T92W1M$e=C3ndBu,eAkcU0EC.FAQ7W.1[ofaD:0"%gQE`F#]H86o",+gkM$;OHF4f0u[FqqJc)#J>$
%OR,?$X61%V>]:gP3U!@"ieqtK@=6JN`Q&cHB`l8lCf"gFfPU?"=AJDV%*NTu<5e@0&$?c#G:B`a:\rC&-aVT"^@*sG`n'#ZaK#bm
%R[:Z"35"P@@(Nst`V;iRn_+AFBK_ta&U%d4Y:$nY`YOIunERa1[Dk9'id:Ib[)nGFB?:g'0mbjNqB7e_Mbb#WI$,E2TOjFJ@"QNN
%(*!ltaB]5P4C@c,i`\aKP<I"PA31O0PO45oSSSQFk[[%cY>"=)Kf[n)FYJb_QXD;/lbXB>k4ODtVo05Bh)X22ZJDQX-X0ECDYkU/
%>P6.9nNG7%G0O[6r%ZdE9\I6;og*&EPk)3q3)Iaq4I5Y4<sEiDPhEPPm("SoH_l+I"=2ZU5);/oPSH1_]="3pH]=7FRHio1n/,RM
%kQEREqr2pmh"\1e@^S!H0\"3\)%,4kWssg8a\="9P+S!2&['O'%M?he$Z\;]9uZ@-]:r+L)mX^RC^D'E;R8Nk8iE.Y$tK&X:s"IJ
%@[1c>2GhMMo)kQ]m\E?6\^O*LWSd0WUPrE/Eb5h%2$[C'/HC0tf'cQVQZ1\@$b*rK)cPN^$+HH+o1S\@B4?ql>'?4ZB-34&qhb-A
%:1lK&"kp,k?50^4;Jmc9IFa!Y(f.`+QIJpJ@])OG-,t1/C%`FRSW4p'UL)FiAD@5`l`1><OE&Gn/d'$llgg6ugUI(Tbdd%VO19M1
%V@dIr3`)&\bIMJCN&#:_'MM)e("]4>>EXgOQIamHA_`I&jj5sX8IGk"N*B?*H*p;TJrEnVE#(:@RC)Suf.QmD0]cH$6]F8O\-8WS
%(0c9!lJ#bDa6`O[T=*FDgWh11pqQW.VIP^/gEf-&><cC453E[e:g-4HlL;&=[p?Z4Bg,_s,j3a1_OOj-/Y@*"kNd2,\a3J(9[^u!
%SD,YrCQk&HBi3/mB1Y(!^hREJ'IUAP`RFG_Fe&$N)68id(=u)">I']$>NJG)b"HB+@HCZ5T5dN$l+$>fq%-nJCQD6`TY$^uLPTtg
%*Q[?tE[mR*Er*7$DZh#$Q^<a)0@/s08;r&[C)I3!UY)E)kHX<F)U6q]>rcUWmIc;;mZM5o@Bu&@r%P#\$ng_Oo83'k=2LJ3*WRUR
%o?Q983O_a)\t%Na@eGk)HT&U"J?E4Hn3JJN@Q&:qjfUl)]K.frq-t+rF;PgOAEb7VN7Mua5q)<*Op7-450'?f(=]@Kmc0>X)bnJ,
%>3>Be@YcBN#X-GC-kse79f(gRAaA&YP,(IhR7*`>f$cD+8KWfm.$%k@6r>?F#_jo$l9XN!OU_tW+t[Kcj$V7*$KGApl1U#W_iThH
%_m_m.-k`3DWlob#:aF.Tqks"Y7>aEoVpppeX^i6*AB?Z<-(@^VbAqH(j5e0Nj7S^3,o/RT&a/0PTYQRb`=FoNBgm#4f&USL:h:W%
%A6H&ej42*lSWn)5aEMYm71P^#fT8DT/J!a6iSlZXf/`^T.&ac>6)O&c!H$W\$*(2@7DuU5LS4'9AohU67n^:&?[%Ea9(,Te*VlR?
%((l0X]Tp>Ue_SBrnK"-tdlF13BR[8*='7trXeUs%k:ueunP7op\ZBAYS;b)VMljUVV%l'UF?e]-3OB8.eD9\gE3j9#i]*MZDS?A0
%Um:o&QTmr^[g:]0]W8Y5`-+GPFgnk>RmA+,Kt,)t1VpVU/u^$OT;GkE7gGR&qZSL;jsXC000L35Gpi6:Y]_;%7%`XS?[%E@q;pEl
%j4[]?2=T;lGdP+"hsqu-(>jEk=f)<?e[TW%K?%FZ4rB!WINZ#$-<KFbIuFdWLN*OEOPB,M,ObmJ!:2JIqP)"7ccGIBP#i6g^u-)>
%L#W/oZ0M?+94^p?C1=WcZAf86en1A2OO2ck[A;Kjmmp<0;'Pk[7#u.)<b$\A4X@Eu.POHtn,N6g,q:V6&Ws2*6+[OB+3/]@pZW3^
%gi;6N(+?J.!308=_Upj.OGr712>Hl'%SOuJZbb<Sgsjr@1+4\G`3jH=ZVRA30%a.7_1-X9@e$tQX657HTe^T-C9['L*$FHb4Kcn7
%$?9KOT'H!S1/,,sP//"rmpsH`fkPW;\cR`?_u;(;C7LG?>-D)&3fIT/:m=K355-YU-coC!(F<:rBnZt45eF*STDA&u09WGVl^"T&
%#1iX,H3JRf0HS`+]Ps<&IHrgX5q9;Bgp]O7YFl0.pBhN9+">c@NnF'f+JSABZ9#Tf]n-Ni0<]fp]n2&"B=T-^d\auZ@Im`OAi>@f
%@Ab5<^8Otl"$Kf)IHK338='+ro"BN(;QtiC]P"E@)oEkMao(Po!TY1'&[TF/).]>'_qoU>M_.9*7R8(0V<bJ;9@L=D\"DVB-tMR\
%gsS@,G63);'(sV;K+?-&4\57"8cOf9ePt*!XWTOU8A36+H^55V9h4d8AaG/O%g6Q'ij<[Z+U*W^IFg";.P.@;Yj&lo*tO?6]Jl"0
%h+;0&pUEuGkPp?B#71A5h+^%57*#gYQiqs<?$]pj&^2#f9dqkBZj5OM6[[J.-c!%tHEt4nLa^VngqG#Z\d07Q7YnaJlMQ_I(#"GL
%,/"IbWL1*kY$,]R5J'[Ep0jBN?@3!Kq4TsKMqa-mDiTqs#S>GGLKniqRfK=k-Z.fj?ArOoMP5f(g9]Qs-"`rD'%i<taJk,D)TPM-
%1'FUrVS+ITc(Zdf/S.*-SjBK\CP8d8R)G2!WWs*O[t_Ddc.@cQg&,*>8&-,%/uA/,)eeT7!NHQLcm6Ll[qjCUc&bT(U:^9@fZnl6
%b];+sO2[X&kR6@oNiR3G\:a&(Hb8G+7<8uHmc:mNZnTAa9+6spKpV"s/ZHrP"'r(!.Bsl\cpMCY9XYo8j@HVG>8^Gt^;4IqG*$ia
%h,js(c\VVRip`ot-Q8'SWVolEk4<\W3LQa9qq@flZIj=.rt5MBKk@r^iO#@']?<GaK!.G^$;X-JCiTNJkoISokFQjJq*)"&.eP`)
%`iOFT+r&Dj+\%)tM#OA(#FUB)k\8M/rB?o$68Z6SJM=aQXUeQr<:aZ$kFaIqVXie^QP[R4>]_r@O3T51gp[1p/b\6dqFJ%"cpZqh
%FX0m'7?5u`Vs1Ck@9g:hCjEB&f(_Bc&4E<Nm1S4an`CP'_6\Nt46'^eG!kES':MhI/15,MlsG&?pq2E)&MXWd/t!0VBaJ)ICk1b(
%g>+"I-:%/aec`3,[Bdq0\Elg<5-`3E61@$5dWaZ='5QX/EZ@"S5ViF)D^<t.[A^Yg*#@>SKcO8_jZ:g=HIiZPh41]<Z_is;o-'RL
%XJjiceD<m*(8t>]4H0muX5_4g"F+iblLk)4R=4Y@n\>&2PE5_1#EIl+s7,.L"Map1^Q'E9r>uL@;\Set^kQ.)1+A-WYP]pNmD&Tj
%r(#Z@#QE%PlB^qsAT@#!#l)mKo8eCsDu]U!s7[W8o"Y1a?cJ0,l$r^&J,D6Sm=4)ErSJ!<0=>TpKDupojrYZ>YKq4Nr;R@'=Op?E
%FaWb^59&ZjeNjhlV)+K]*9eANo).DJe&'SA>3Kp%[V`YeQq`anP!,bJnRcC.@GG>^(F")-K)uYrj:?N+GQ=u9I7*j$@_CAMPPdCb
%P1^ONH:fO`,IV/VBpI0LU-Z@2a)+58;Ek/]@_P%u#b4K;Ia7<qn+WJ)$3GG$.7F)5MSp4WWaG-0"SkN.$Z__riq.b(WY>_C*&&3h
%djsW1$Nsc%M=pYn.'afQ&H#A"onD)#8!n`BQ<W)ZjJKf.%IY'351kGpgncH\!EgP>)3u*iF2F-l+efut+Lfa9.ZRZuJg-MeA9!!4
%.I1.:m0S)<Dt1FG,Dh?!7%o/bFdk8D@^rdJWmcS-$U92ZdX(0#[0_G%S=(K,"Dbalm%XhT+:%B]U<LWAF7CWI:bSBT2oGN:kiKf:
%g_!.p6[k'T!RYL?:mK,EA%$8%7;e7?$J['8NFB;f@TKSN^lTl2MtWBHa7&CWDM'M"09M%J+eEKCZFtQ<$l!gBLT^6YlKE[DX9o9?
%GKaU-GWh-1"OY#O,O!7$lg-q2>gK91BcSDO+U>=Mlt56Z`@WKG3(F_([Z7YRp"u>`;n&U?<+ZDPG%<6O,0Y9/KA"M=8$:9UOVpmB
%PO:`O,#J,<I^rh5LYhqKHiatbAE(J+Z*6E3c)!NG/J?9:j_>\N&6%qMfOj#@&,I#kME[EC(LQ]h$@4HCdFTq`#@bP)jaN\*T&0Ud
%236'aZW9gFLrr$T'QDe$C(E(A[A8pn(kh!,!A/Itfm=[)6#fNGS0S0uABO;)e%qr1m:=,F$TgWi32N`,qn6aZF<K55V*M;:;5eS3
%n_^6EkCs8n-O+887WA]_LlN,YF0Mij%7XbV(Q>Z:`koJdot`#lqhi!jMQu]T)E_ge5Ob)d4":U>nVC(AV526QJ5`W#GreGgP:L0I
%D(#JhDI5/]1t1a^3sJZ[INWHW)/J8+L]Eo[hcPaf=p`6g>P`>Z6%&B-c;f#nLcd?/)PJG4Gc\r1<Fo`u(>9B)OMZm8TIg)e?q43k
%)0H,k[uc`8ZS*7LY^=GDNI6"E#<*(WoW\VlqQ^eG,&M<8=c@lebSAq;=,H.HLL[dZ_3)ZqF>2rG9%D#)k0Yd/ndnh(X9@+1e<W;.
%oPhVOc'<pHRJD1B2E5>$8m5SBI`>'$s!_;0THZ,OQg+-HV*cVEb=f*FiZ;9m$H0oo0[E/#'Nl'Idr`f5=YZ8leu"aL9W,YtaNo_p
%e8@Ch#I!75aQ>M>G:uUAE"I.)Lq@k-(?#,KBQfH`j)s]d`=7Ic-YIaL5B]LF=R@63J\<>[!<=')6[B1j%_C;T'"+pL5[@ScOYj99
%PnsKCoN"_49Ff"[n"`.TR7@Abb_)@/N)I2t\XQ3Tn.?LG2J.+?C>tk2$$IVb+U`IXhjJBJqSSN*bP`O*H!TCa%U$_4?b8:@_m$^-
%g#SSN5sXf%",P)UH7jPs#SDXRT.%/plAfrUW*^,M_0AY/[PT3Q:$q4F-LJI*$\!OpYQ"C,VdclW':.I@5<NsR37'nGM\/[Q(#sq'
%IdZ1iK0d67rJ6;5h\5UnSrs'B#JTbtY]+9fNDR^Z%j#eJ$@*=M]dAh<FDoL3i]o&C"]M__rW+415+#r&T3Q-'iGodG+70!<)V%Q#
%#5FU)1$9R#YX^f0=O(bOQ^;n-\o_16e`nm3F>8(EaT;4_bZ-B&VLN1_iCq[!mo!^RabS)>k\=\K%qA0^;e6c`*$RQf4B=fR]oDAh
%@H&;m%E-?#>?K=Z,9l1*8!,QQ+s$@tEX9?31/?KibIo!PY2a@bDCQAnqV?`1D%=9JS%]5*QLZ2["E/dF-`oa(46/YEUYSlhZ^:oM
%/8*)a):t&&1]Q2c[/3QKq"VYXXgA5,I&Hg8n@u39Fh;jj+usk++05fX9Ks[8:NipR3442h?+\pA#1-uo0Vk+&=fWX4&&G-P@aMH'
%IjPU^%\B*ElpUIc`<2jjF<KEJ?B^Z/^6o:D80YX6oJp#Lh%m[$-9GAO`7oAcAI"iXD;T?rbp*.M?0'80h7%_qbfPd&4De-jf$/js
%+Vch:DME*nm#&kSL!*]Zahkn,AC'B,n>(2_BSRSKm^&C>@hlJGJDi%Z4PO&^HIdRmK"Tu/;VQ)="Z&.D^Y)5B#"%T6@FAr+>p9dN
%.g"+\_T.o.V/-%m^'+j-2j6OIQd)Vp[1$a];4S4SMr^p62i>Gu->]jqlbCE;+2gFKc*!8Y`,DkAH>4\Hh10XaYVY=hdZ5*10.e=Q
%p)[c?]7[t'&1:ggY1L%,H_A^CH?K30M#M-QAJB@+`J=,f4$O_hZA48Y3n`.bm/H8s]-5\(mtDLLo.?I!0RQpCW@VO`ei^jk;X&`+
%CAEtJ.s6dqK61srNE*#CB+0%1U1r]U3bIZ6?:AS,;otk/m`mp[bf4!!d^('8\%V4Ql8YEC4n%](k:k*9*t3WcOj@+IEm(Y&Scatq
%Wi5K^>c=m6poN8.cU"R)B+L'o6_gd\:o__`kV#:1(HkK/i`-kHFr-:)QPXO&oTP`#lj1;_?('SQhC1Ytdk=8GFbOteD;5Z96<QJr
%d,_dZE\)Rp28tS5V=s`5hZfC9aU%0Y_EYQuS)iMQj'7Uc^'XE;p=MFXA%oT>A3fh0E^b@OD.A&Rgtl_fVGB<BrKq^A@EUJ[H1fh<
%6WD/6[hFp]m\C4CYaTUQ6e'1RX_ME+C\(tiYe`0/Zu9/^3eCR,2D@%LFD_*bLkF/>Qa>&,Nq=60Y2B@U@>esBb(g,S7U+WP<p%jC
%0ai"]gX.5I?04GS'MV"Am11h;n%ln6$*4FqbZ8=0@a#V[Pmuf1.+?mhMFpHAKJ7+PS0UZJ/n?EnY))kpgjrJlgma&N`58LDkJI;U
%&CX@j4_i/Y'b)sT\<_o=M"<nM1*'TcYfa47lOsEsT7%R*mIo5s6;3/t_FD]>$2'a!C5B/f>k%7uZ^_P?JG%s)[X&e.SjD&FlFbq!
%Er2q[Xcl'B1A!.h]^\d'0j#rab3tl!Pptd>,]@<Kq;reD$-AKp0?61Ib\j*]^eI0?TAnG\%`#M]K0gahmirZH*R#Q:#`f8`MLmRr
%jZ*W_&GfC+R(N>2L)B$).AAd-WhOufJm.3bmn7$j;aYW';f/=<(ao7;<*5gRWPHCd%BK"=@2M#BLEK@eFLqcg%1mu4*6<!&Ru1\i
%\"\]-*+9i)3oW2tIsZ?FB(3Q29DGVN0X8b6/C9M*`fNQ;Scer?h1<t\fdnbCki_BL58`I.m_G3WofY%ElONh'J)JKqWckTKagt\J
%*L5Z8rCN2nj\TNS#J@a$#/_"!kF;+u);&qI@P4ZE,`sT+ZrS@9X(S:W^.U\`.uMjRS3Aui&Qh"c0`mSI'&g8C704`%MA<)X7!-Y-
%[B-_A)Xejk+iN;4+G-Y__?#I@,+-P!KgXCg\5/qUr;nL`h_s-k2.h,E0aK(XGih9XA8-Eb;OJap)'r-_6eOpFf"IQA1U->/7Ec`$
%IcsYMh@;o:F^L6$$6R-t>>Sa.3Q>s6*q<bidc1%%IE%K%,D$qV+Lfa9.ZRZuJg-M%A9!Ro88EMNh#T8[<!JifJ/:VFXUo(O<T2)<
%=.f^O<s[OBHo2;qI-=Fg<UP\]7jjY24D+eY.-&f^f<oeW<aKLJUiG;+_`j88pia+JDf"J+(a_KNS*<4\$9b9PB$qN@X%->6+T-he
%OQ(&3R6e5Z"dj/ST!F@+:7g@":>:Mj.9*C7g2Db3)s3A+VYJ)MHF^#Flqq*WJn!\jGg-Jj/-h[m$a11Rc<'086Wjp*p;_gP2S5A:
%<cRG^36mZ*nu\[gA,Wka-qL%@Knm7pDBs=Zd3O.>q(tEDJa?eR5r63%%eM7S<DDgirl3)=nt5dpaF?t6WF5Xj=6^).bKK#KBll+5
%kjRc,W(!b-aD1qeqXk/NbsROj1YdGYCFp-^DrDa2]sG:\H)2"(+R'O>"e*kIHS-&HbS?_^.3QC8Dh7iG^)?^#n7HjcH++6A9N;>o
%Vd$a[Zrt*gR-<_!mN2l.4\I^\ApmJ!mom=&i=C<Il'?YX<tp4Fp=L)VG$1fD9>gQ?STQ(>q*`9C1@!MODk%&s]tF<5g"\$kC)mD<
%?d4Io$(>fHI75=4]CFFXMO@+r[U>=]@a-6^XKdhSiM'EU!3*fW_L9/FR5VGRZ0?UP"8BbhF!f.*j:+"_Y\&0cjk#]pL2c9fkE6SS
%hPnBc_t\Y9B2S7?GJY[U(tAhl:P`"Bo.g,P&Mrdun(b0N57B(%mcuS`Tl9Y\EaXBgo'UD<6;J:2;8aHoX0oJaX@EEjj$7dSh+Sf`
%f_%Z!k(r#aee-IfrnI%N>IkTo;Ir?_<]ZOM]!00E.l?QWN:,],^S8>.,gpYNWu*,M>hQCk8KXgF6'X-MYZBYss*(DEqQ4YmW?82Q
%n0hoR`:4\`"/='4+BBH6B5;+req0F6$4Q_&!3rYN#/,5d81VX!F<+p+?a;o2j%l.1B[D)_IV7>DIMeps\,6U%\s]f"*R)Yf7NAQ9
%dY"2SeEk;oC?9!PAYXS"H:4u)%V5=ec,?lE>>W+SN[g'+*G$8W^HFm>dZlT<GCZ)cJ]g%a^;c@Kcl3+4`NpTK<sW:#/fu%'\"4$m
%pFVL,gjad;Ff2jAJc7aQ<9QPIe?t)Q&:u%[=8ptHWLlSkH@RA,M=(-FMh!]>`3l1uBi",O=Ik!ufXa%O/Cug"HrF^E=YjE:4X7Xl
%g-gHATEJl'/2ldUmu2Uc%76W'C_@!MQ=[V%;&DX]JlcutT?6a\37Z^,VoJ$?Qu9bplZJOAb95gHJ)1'C/S-0F[R&AlDa=,.(89(V
%[_YpF!;32_Jd&E4#G9>dFso.=B'<.F*!,4RfB$!kUc!oUfH>g6Y;XTggL2)&fSOj-$eF@jee#eV^8:/MoCMQR:7oo[I]er9:GfCk
%-VP]6)J'qtUSLo?9R..UUW1&nF_'EpUYL\0"L*?9L'NWI9%5]mQt8JD+Tg4'W0:O:,e3-u??rZub5lZN20(?OBcCX/TdeAef-*D`
%!!$lJq:])+`?)B`R0>N0h1D2fmC!CHl4/k2<6WT.ZQ9)YX<)=cZ`:f7+=TDT.sINGOu@^:n.W]_L+:37$@(#Bjr%PVcWP,ndLO0]
%5+(aY#BhnSU9*.dj0jF7HJ7md8<l9@mE!-qLlp+9+i=pN"PE)J5\?AYdYH:g9aesf:6C9A4&#d2_l>/;mKWfbD^!,6GPA\;3a:0r
%V!`DVAr'`k]A<tC0YsL\/$4GhEU_<B!%njC^26E%6qiTY?en.!bR#\fa>oa7.,fJ!=k83XRRi(C3/a#8[`cZdM)g'nc"*sk+\nq)
%6I<RDBs-0pSpSPbI-2it*U>]o1OQ\TQuLPq9rs-?,lUaf48i;WJonQ/p0s;?QrujLStNUZTKbf[Xch*oo,HCC,oVLuQ9;6!_oGQ,
%JH?14IN,l7MYO,^k643iVQtSDg^rFD]a't-VAO-6[k!`_Ym]Y9FijUI,iUj;RsT7TC,t,skmT@MrdUu(p'_SG1)B2<Vi9>O6Sh7g
%^Nla'3"T$N3,bZ'BjVMr2E(Wbm^Stbo/e-/s7)J1O_/nEV;f_K;?$t:r^N4e.$pe;DDHf*nMGe!7'N?sW),%:>.X2n0GW0"HZ$B$
%;5`=I,rg$9Q8%t,c>k[?1Ft+tc)i\P,Cd77*n7?8gbA@,P!s"mOe2q<KMplGO*`Q:!ccK5(:@(u#[LKbK[@]Z?c.AR[Lj];Y:[i`
%[%E6;()CQ;Km:CT/98aY/@U\Unh,>f,M`["T)IQ<UAmJ2#to$2A"#3sa5\/O(A,rIYQrXK"iBXp^[SIWIunSpfL'+O#Pe&Vq#B4V
%^@\Y94nKbbdsD%g]MGN23'HWp0m'<U3"UKl:b])[#q:E9;),\T#_L0rGA*VflRUMlFE,dlJb3_NTtB(@.0](YX.=iA$[@spPeISX
%4N@ej&mt<f,i8+(DY/%Un":=a#m+"C#>NWIbZ)mRUE/GrC#(B)V#QA7/;LS8>>DJp/8(laE';U8Yd5M?ad:@#NFQXI<PLm:0n&Ed
%d%0acLT0Wd[OoQqV35]P/;R<;O6`(JiQ4u2D`i@a3RTrVZpPmF2qh!F0oK=6`,^khNc?(R*V7$/6cR;e^f<&Jj\hjkHJ)GbrQ]_.
%+M*bFl+So#A8sjC]l^5TqVoY8YOodD"6XJ'E3*T=IVp/O01I.W+(@O4XU[Gi5s0o/&A`fV&D1HZq3n:QI%-.)[&DjsXQ[=j2,?I6
%:)L5*[VSapPEdDc+7_qI+Jtp)%iauU#<rX?K().:9A*&$A>@:KO1KR)/5Z`#S]Tgs_qL9WWg,"UY!YU(j?[sih,GB+\.qG;k6U+8
%f+HUTJ@F\in?k'YiQg@(X]a-B-o4/7qUu1HXk[f9$i1Ti@"?-c*84*"/iUB;gp]QJF.9A(chF"W@Ig6I"KdHL2.44JA;uh=JaPd$
%d=J,Xeq5Is[U#Vs,dXLQ^83=s#2d):>#+7&H.G-?-859nHDQW<:8P$)'kF;ae[!2NmQY5Jo[R^(G0.H)VGb?;*aK_d6n;aD*-NaC
%[&3gPFg2U7!C@39C44MP!HAS+"aabko4]$(>Lm:(5E%Eh\?o:3lQqojB8'.tCmiWI_A.3Z-[sQ-nq<,>]19[Q:L&qdp*^"0>OA=t
%fu:-Ci&XXNbIjFVp&M`g7o,b(A#i%a%@[BTF1Qq!qnP=8%`=1q&5CT['f=EL3jA)pAX#S)@))KL:#ZJT+VAu_3=m.rBoPY<SS)@t
%,$q)PD@]5^.,XH5JmbG2KrjN%ZdWbJ#.<m.0QGeWJjh($YM.?P!1$m4*+6L?ON!AtY]g>s8R@7oUNdMb+2&%Lr-*ETV-'`%q_Xpe
%&p-)(R0UKHYO;k2fUG[&i>k-G92BT32kj%RF$?Y"&Tke\lhWI(\=StHLe./mnDQ2emdtqWBAk%3_bUqm\koo2[%^;ClV_6(a2mP^
%L5n-\#6]G[Z`9A)qV9DZ7Ee]IUK#g&=[*=T@sSpFEmpk[:r^#9ga($UY<)^45>%MA\&T:tp9+0qVLPs99)oU@B[#;d.R4+<`e4%1
%PODDWS<:H$gdu^pG^AD>H#;Nb'if9jR5MjX',q[hPXW>Ya*@AoEhW3>FF66jAOffOM_<?DZe!b>A;``I7Dm;C^;Ct/)#B#46uU,0
%]pZqLea8.r(E@_`]'Zf:-:sc:B)tkReHulEHLr=8*%oma(tp.&6(mp"dE&Z<44b<Y"A+:B+tF\C+4D.PH;YEcn@7:k'Z]8,DHC.`
%n:9=q\%)iI8Qho:YWO8KNETZD4tGgl@9=H==]gQ;5,Hpe:KSqF2[sK;VhdTVmSrF4frB.\IVLY_Y[WE#IHL'#6+os#Yp;!O2_)*$
%l?ttMKT,uMEbV@A*]k6=)Rb*r?L2=bSE^qc=jR#g<[pPqj70qV=4VeLG19&1hhNm95\n9XT[*2W_W8d2?MNsGl"m&t3j.XXIq:hE
%BV.';XT/,,/UkD$mL5:M?^]SV9Yfh9p$?;:XD5o#@oJc1[$m;:K/3M4Z8')I]&\4]eD>W@f7(OBQ3&spVOGB*I'Tk*.WRH35ej`B
%=#OcN1c*Ask-lmMCKK^RR;Y/h:Ze0FPR&*a3&@JHdfDcR@aK#>9Q:DmJs2DhrD"hdWS+k2LS[LAXe-[8lj`r53^:.650LSC#cP#K
%GOt`m"gS*E?-SVI^!05a]lH9B_0N7+2TFg([$6\2;KQH#[*>-nlGU[C=Y+.;]=)/pZU*U^[lkMr1YQIL$CRNtJMm9R?i9*+W`sNM
%Mtnr?8lE`;rIE^4E]4F;#QUWM10kCoahP5KkBpnpdf#I`;fFsjW=/*teRt:&8g*D*_+\$e-E+98=U5Q>1H5qjMMHE\h..?Y'sV)g
%$GiQH7C;1PR!?(;S6T\4!tb*neif/&!Cp@@Wr3E17*#lS2!*NFRs@;jd508&F$UCXd,WP3m[=<!*U't_p7Ab?8%]FJB1Y_U+dGGk
%>`Z8k-io<M'(0Xi_fY5g,#S-=LF[krKUMIQ<cT-K#O%h@I2(KUg)93?0'pAF=c;kud<Pu,fWVI*CgnopCOX92+KD5><\@e,,*QT=
%MLJ6)O$uqQ_h>TR%5!ah8<KbM4p&focZa-J!8Q:2-2'+^lt87a5\=&UGWJ`ZBO":Jfum><eeXA@]4qL2`*[hl[g'!a(hPXD]BlEC
%9G?&t730=4ehPW[p2oOs(ARD0c-eL8p`8oJ]?`l]h+\ojjDLE^7NBH)qe4HC4lbZOAW/'SnVLEhmfO]WEG'E[jA4,uq2Q^RY+e5P
%0r(QmVaq`9>l(F(/r<SCRX3/!.h*,Yef)I%OM'c1B.4T?*_\O4aIA3-69H[*qq8(fRbWG1<Ms?`;k<8d/Ls1p%t\=T@('cu!6n^b
%L!T1"A1;,ob\g7O9sXCA.[$7!a/IF.HG#rI-E^-gGJXOL>eMAYqe\2bRu-(bq0ml8S2GrWLQ_@`\sr<f@1La=a%[jOeI*RIjl;MC
%7EeHX/I+WZ^3;:IMP4m;n6=s>daXXE0!)$?<kY;Y"suPbm0gCbl+f?:[mMVjl'mp6N(6gD1K#^MUE[C[Ata#!?2Opt65;ZtTX[GK
%9he4feBHMOmAC9*k9'`s8,Daos-S'<@7!=f61n%.idCSU^<q2he^p]_ro#YVs'L6qQsjGjb9=!WodMMGer>Y'%Q71MJ;2+[#jH`W
%OL=)pDoFuc@]*Vu;N;Q=;Sd`8Fl5N6I./V6?AFCg!nbZ^\9ia@RLeJ+dfMm)5Z.5f]k[K6%sj&IUQYU+TK?YKKa*_4NN13Q+X78C
%I4pX]+U7iC6*KRTIrp!iI#%B/0U^Hh//STbkqOu=U_*a-]@*(C1)'O`Nn"/))SiR?)[9]4K67[V>On$$UiIh`l9a![g$&>=&ac+%
%q]o2n`>.j/HArIYp//dU3f8526P-?DEF3g!.ZhUDR8S`caR$7E[_<#VN)aRA.tX,26\Wb2&$_o\bHket@`)@V0CIfFX1KP8iilDN
%1j2d1OVjGA^BFXEkk[R@Ou.@8i,Vo%,31`IZHCnV:q.*hNNP'@L/Qc+RZ'@DUQAh=$\W895Xj00"1^2sN`(FHO`5Tc?EaDG3N^Z^
%IC7am[9hi4`!e<0V%?UEhP)'eO=Fe:/BJ/_A3)>O\K#10a<At:j*Bo8df'@MLp\pTQZ&-tU`4':('G4GRZ,^/69&&r=T%cT2L$cZ
%03tC]+$0)Z)O#57@<\`h;a:bl%]uaSaoS9Lo:/Y`+Kgd[KlsP89TNXr%P^bHgfpq,re"VdHc4kgGOj'JS?1XmBqgFQ,Q?$]A5tod
%&';rAPOI`u]1^]Y$VK.(Z*2k&R?>:;je+Gs2+a-&(8Y"?-4&`?6DA1L=Q)m\.X[-V3SA#Zbhiag=Zpp#Ua2nD8^0,`__PSf<C:To
%+pa(W4/&$tf;7\-6t/.DQniWP68nGR5KU9&"a"-CIAU1JJ:[.eUj#*d$OsZZ_8f79BAkhbNs7<b12jO-k;#+L\7$LL+HjS6>"UF*
%bc\tPWJ)>r;&OD!4I>W/=Vue5X+%o7%">E]oI2@IS"-;HBI"07fZ.M`aQJ<u."@K3/nF4PQgliWo[D\i"=pC%.!bN).$.>f*2g??
%h":M:du%UDVBjs7G"I;<dR/h8[7i2&UcRY`PYR'srR@$s`7S@TT;>TlX!o=.p++:Q7G\]MC=$T*LpWq;]8WCqbkeU"dR@fd\fS%=
%Tdk5*RRaOlIS$Ug%+u'Z-=XB>\iA>N\]>hsU<g@g:9+G)dd*S27un5*s2B:']q$CMmhcTd?!nU5UOJP)[o-)^.Os%eB5hh3lphB8
%Tt0\]n9Nd$!.Lf]`uapf;rL?u/;t&T6*N)H1:JZ#&?;sq$D#>6NXR*oBmuGH*F\JLM$s_XK">.IOlrgm`B$EUbO8[1CRm6sD_>LF
%ch6p3[/<F%m'0_JKUN)Yl]8Mejih>SV1iP"VMr$LoMYkPMM86nUMtI'_oAsk\&j0aL?./GZ#=p2PJe<,NA>I0'0gFEMFQ#H?ntTe
%r4W9U6iYFgHHIi(H2RG!)!PUJ'lW2fT_4?tPs5(l0N1l;m=E&3#AY)jX1Ei(1gIgSH<[QRLgLhuG'#0MW?VRGp7Q(Er!e6/8I>DT
%^'U59BDjYXMhB@-<+"s`=aqA'CW4Rd,!40Ja-K8grB2LuSR.TDgJ\A\FcqY^U&*,Zm<YW"+I6bmrNWpTnC)b:Fg3O,P[pm;oNOU<
%>ZQ?!&&P03cWJ6Sm&c)M+#=0mZ-_,ClLgfBD/*cW28^sZ$NSS].`YhPXaRkY!`:L*emt6"?[:rK_;2-`VH.3Z,@IIBAU=_#J>ALd
%]oPC0WN[g#"K1*4;R@W>P8UD;q-&n($qt@$P.mfTcG5IMAhSd"15MR[@>S?p9Hh]=1BgA#b:`N!dD9j;qE(Ja'-mgP$Ha0<d'QSg
%Y<#+iMrh`T7'eq^+IF1+4dmD!U_?7icM`$RCP@5[Rj;J,$llff*:n4)MFd`s_cm\[[FImO$A-+(]7%.nDgL00-F4>N&m`+nl-X9M
%%M6X=qKqYFA,5EkRgN*\2S4OB)XY9e)-MrMeh=.Q1#dGGeO%ufn48gZ$tJQpR+:R=o+jUN]eTukeNeat;p/q3!5SZJJ<WV<!L7<p
%<?g^J-f(a:#C@lJo:)Ze'9a1=I1h=L4*$.EM%&TL"I^TG.`*\Js,4W^@bC:^!W<K=P6&e6h)B5^qFJK"==W=,&>&7MQ2\gF_B'?1
%]E^!ZK^mG4]sVUi30IVHr.]53:XEd<b.t?ETA*ZNh#eiMA2,pCdOb6%FV(]/^C4`:er83:2'R8s@h_0F.Puob(5jsBR<p;^2)o^J
%R@[u]Stg#BJQV'\/<Y3$_k_0,(+i(ednP=/BF].+q#LS-Kd4BPb<(@.^m&R+q(66i\\,f-LMD+G?02U0B[od?>*3t?ZMa#UbBf`2
%Z?nZE(G7jFXpBn6lY0UnUX3KP2CR%Na)Wacc"9jLK]p#g0L+V`r9=\Hl%`T(,'J:e1U;k9KoIh;D67Q9<sZ@*9IEJG?'rUoEc%RI
%nmM2f9k2V'Ua)5jI8cu%]?)e"JkH,4fHl]caNL=AI?4aoQ")\>+G_CX^0"@cBrh*&aD]9*._K\S#YjCEjm0M=<B3R7/cK_9T-BUl
%2%D\H(!GdAVP7$:TYe?YZ%-1mHh(@;8KlN*b>eo]b^;B_]2hW?$pY%b<B3W6X00nlUYUq?5rb1bQ^l_C@&]QA;[sdm4B.IU19=oP
%Gmrl\M%Xs^a2Au?(O`8iPk>7KNni&nmuHB`F/Uh=_MF45JmuXGK,FM>lU4='T$q56"K4d:!X><C]$iD_dWDj6+<hY!b3-0KGWqY6
%s(u&T2H&:l]Mg-(X:'X3bsMo+FhBN:X)PO1oguh5[1jje[,+fIlFB"uonPnfc-HhaF98r%$R5TVVSY_p(m1$ZUD<;f0M!sZ4!Psm
%bU"$_7SbE+(ue`:ddL%@=MA@'aZgh:k:?GK%eX>MXE1TSB4^R9Ed9%u1bJhVeWeYi1g,T_'NeP-ZfFA<``G`\EH,mq")\5O#*&kN
%HdnDYE+I2KjBiZiW[MO7-S#"U,cr96QDb?nLQjTg7&_]33;Ab=8T#J.h#c)XG43,:7U\L.$N&mt/^S-Sb[e;#/O>8=dT2t>O+=$<
%#D8R%LmVTZa<h%5G"Z,[Z_MlY(^otnJOF.=`>BgMns$@o8U!NX)W]52$Nd=M>Q<W+,ei$5lu,"%-%5qP"n!i.s'R2<_rf;FDPNBs
%apduO+3WAj`,[1TEHlr"pOR>@\bI<R"A>$A3Ubc453G1PY&6lrqth2$$9mD4C`+R+b>0*r(LPO[kL"!X?EjraEKW;"Z^PrC"("?8
%>umD]g44AeU<H:NX;_E5eBYgV(Hq2h:F]9Je9LBJXoL".(#n6<ZZn5;\D6,;<k6&'BV(41M_sK(&E"093U8`h+Z;gS-c1),&0,G/
%V.`$SO@`W-,>2G_+t9OfmV,I#.p:X3)1X""2$Tc'?.6oHIRTpO;N=I8qtjH<Mk<:C[s4"F#5sDrdU7_O:M0O$]*t^S:O0NDDp[aF
%U*K!`K6/;`P121r\7'n*B2MSATF9M%^t'4K5cgU@>Bec[`eNbK^"mENeXTsj6A/ji#kE!N'[:JM'>]+kq$&3KcfsJpSh0ScH.#lk
%`GJFZZb0k)?i+u2:#O[Y@3m?oLl7hfB,*U=++g/:E@rR)<Hh`s5X_G(II<>T'e9Wj="^Rr89lN8A8L0+9<bNR7rn5DpIph_Yh0g-
%]C%baaabM.Ya2t5J]oYM``_asAr/*rN^kTCLQE$Hah;B\jaStZn@^WdE;%;-B#8#l\:5snCESU>=@\r+1&4QVk&39A>?EUd%5[:<
%;R<S<kLJ.n6JG!:2+>08UL&D-IXYoOT2*`fjFXHFb;<efdl[AL#\)O`elqG71C;?d\J]T163m@h+P,4TL;c!X'C/]#16+qlGj!2J
%o.!>lBYAl<IMBn`R=A+uQ0)b33m$d%G834I#1S<<0oVaNQcL,,K;m7?r-Jm=8f/<LSq#ArV`\.,LrlMf)K.,1*t6&^$KA1p3$5RN
%Ht&-IAP'X6/"NNImPdpkc!A<eVlc[cZ6C]&Ejf5c+:hn;@7@88XLdDQ5J6RU`[+)t]1Z?Es,bfaR"E/=*k>0SC5o`An_3uJ^?Q4n
%?Y4puRHg;N0SIV5apQA=S<>eZJo3Aq3O=E?J9XA3e.h<NXqUTWTngsj[r<Q8a6D<Hc@R03L:n6>gYa^a\f[f*he+6.aGT[>#5cis
%/UKUc=$4N6a^,!t$S1KhbcTGAaMb[4Ff)M/D2S-$8X!:tKJ4Hiq2PR-&&,&,Y5&u;AjWcQDNDAO4932KY.=bB#fk^dICUJd>Hm)a
%[9g8NK-Uac?TF=YO@IiJN[AM'q0cF[-`a%T?:!$rI!NZkKsT_XNB7B_%<IE%<:6S5p$Ms\,fu;enH/T[gp3C!&co-8PuJ1XLTZ\>
%XPX?U5TEh5f"I)([0U3:lH<+bF&+t=&%>p#h];]u+?igTg7Tm?*CN;jBek*'hRPuV.)tW.QQFnUL4AHC+GWJ/[h(8S+ZMhuH>(_n
%;e,-Y9Z'P?+IGc'=<1Ya(^;-*WhfMpo"t_e_amfHo_(siE.fBdDWS0_@:<O`K<$)/1rtGSD>RM+0r)%RcdYMb9YN'uD'O"/G6=HW
%+j0eMr25!T#H7`b6NDS9PT#bLTDb=KUh@G(E%/kVq-0L=P3c;.ppYj"A^q0(d5+C_ZWnY?9DVm$eC51*e8-r>QX0b<g9P&M*+M'8
%6L@*T8mVC1P]\lA^7R_!GCYbD@pZ]=jqJ162@A!^<*fgHJ=p0D9)U4/0S\J9?m$):[D#?8U,&@89:ai(&bABF,Uhh1$,[8*XKB(*
%/Gd809![+A=R4?jBAD8oIXXcuW83c-Dq//K>hfUQ_g4Q7pcF#I`C4>KR9nNX8:XiMT3moirDjIs+ar.Wb(,:U4@1*;WURZG+$\uY
%_(#R8rZl'6-,KHnlBuJ+J&Pi.(dm^@5g5$jO^VW9eDBYajpUo@#U"OLPTtjG\^:>JLK=*U5f&RTLICt8XHNKe;#>KZM+pTRpUTaC
%QAhJ@Ks+c#6U^bA^P@HI0lEPR_C6G=!K%#=qqSYGkJo)a<,8K:TSq,V_-KKn\;?k-he,pi61B2K^M"dBEN$>&VFX<!Zc2)HLrE,C
%J[IV(0F6Af=NS#W52*DQmHK[o*"_E)orcF\I_J%)01R.c'u)@gOUWT![POV^e.oId6B17%oR"5gJ0lL>.]4%^qT$b5\!LFP7;^6r
%HWan!V]sZKftA@u]Nm<t[As:iKjlQ>A:;OL&mlU$1IJ]$"B.%A'#1/W.]1=C/7GW&mYP^2I(r1f73P<e08,QrAV0eKk.?RqT'^Fo
%l)2D!nTt*m0;!\^dTKtcKMN1g')TAWT"tZMFbj^l*6<!)Ru1\l]:tDQ/7C[4>2oA\nEq:pI!J*^YaO&!\tNqL"+d.G.NF6MLs;2c
%5;i&"Fn]SNEb1e)g#pUI/^_.]=66jf>$*\^lU))M5tD-<i]Ei%_Ga+XqB)KGF<Eb%`Jk?D:AWV-4'BR@nH]_gafq,NH_UH8d,:,X
%SlKId0n:!<VAigEZ!6@qd.N!QG<8dkD)aLnrk>IFh?Q5$h9*PfS`sqb:nEa>r)D=cSOEnSHYg&5Q?QnYYaJo4&;Jl!Fl!hU'bT%@
%U-3N>'8-dki]+oZ-t5/+(rs+O\=WHP*MK*P+;5P]\hfYc?fLr6ht,jg-S]tNi&]%_f77WAMB(\,&-7C1&h#OW**d.<@=3JMr7UCP
%k%0gq8BI2S\;+\1Q".uSH$N`UlR_@Li7uRW[V-M(GE7ubd*X-3I\"_$N6Rf&G76UDcE\\>UEl8<c"7^lAOrK=^0^4clOgsMeq'^[
%a_kET^!e#es*J9#qCd=+'\m<R&Zi2(V\2;#[on"B9k*9@rCQ]@bO-j(:?NV7h.G?<"b2sfILU2$I!1P)/6e_%q9Q[i+q)hI#sLP6
%^ngj#O2D!(42\:bg@O*;0=.&uOE']g8G3a)ApLIKD&$eeE1(hre)"[7q$uhuDhZ!>bED\:S?N"5X@R2kq#4;*NY_UT?W6N/n_N_u
%T38J*jfNs"jP-DURJ%%PA#kfRfH$4Cq9&$>1I8ZEifpNl_Cf`d4&mG^d5,ibO3lu2+p`CIQ'*,)2Eq\&1>c9bBGd&O9!8Fc_OI`q
%"@Wm+fHAo@Q1PTRW$NOsCdb/*4M]=DWtYbcdnN?qP(rE#DLc,\ipuIpBhIVU;_5012#[&XM!+X+^Y;H&h]\qI<!qVAV.%rl_f^YA
%A:4[dAnt?6(G3ta?7?$>.E1)'b*^]7-/0jnqM9,oCj->$c[h&Z*qETI_'(.\m;?Jk7[<VBg@#GUbTe,Z-[/-K^[V%?"#<[KrmK7^
%DfrZmnR\0u9`usaf)+hK^\j7e4[S'4<[N7>GF(Pe6T\uKDAJ)V/re,)rqCB`*Q[Vo'!6.t?jh,upDM&1Y(?HAaf[GGMm;6QWdriH
%^++k:a`g_c[q!HK@@tpB:c.$O-G>")m?MBsLZ.pQT$r,Jq$M#HR?tT"5jcR(Q6V0`^Iiu%;f!DF0?Hb!WrolhG`N+ghLUt-5_06`
%[n>t6qY*hV].\XA'Nk[-]\T.C+"ac./fWA^f"nSaprGMSX3fs)RjQ'k*Uk6S_;-s3efmt@I,%-mb8DE<Y@`3Q5OBIM9ThFNNP-Ta
%W4VU*j*FhsFfBoVX9\s*hQeDZr2#10%sK+U!)pF[L^U5XYE6%KF5La)T.cfRMgMa80=Z+m/:?_;'.[]['+^O:<N0csHcUYATE!_2
%gAe8t5&@l9p.9![,GD0+/J3iRb5/VkDJp](f!qi!j`cQN#9kJUf:-?'$FSNWV8seR1Q=CrWMGsNE^JWT<;D@//nP[8Y@2??E_fo9
%Uk3$<[%2("<\+jY8*(QhFrk)Qs1CGSlM[K0@50ZN$=E^*f@;CJP-r@@S3PAnGL<Cq!>M9g4S?NYJ4Oe=p"L=U+#9M5o&;4M4\\pO
%L!ebqqW!>l6l>K,*G(@j>gY#&PEnFEHhf<:i[''IQcSd3(QGIuBT/2!'(oB&l[ft@b&u!K"h,?cicS,!*q;&I9EU1*Qi4tN=226%
%T7He'd`6FO3jcMYC"reYjF2=H;Z4W[+Er7Aah9@43#r:;C8Nc0`!_%sh4D`6])r)hMlYsN\>7b58/>iN5J:\4mR-CC>p8O!=!2d5
%!m!(U>RqFkAERR2,?i9OV\FMASQ,&ji>J(lD+,H*.E/V]2A*#]ZC:LdE2fm&og8r5V8gPl1O87L-@&A@=(sec&B1AOefT=*";%ts
%!N1?F"]6_GmSlFrqPS9dL*IDR0h\&,^i9ITU"_'CiDg<J'LcV[`^-`(,/`?'5aLpD<M],[\L['3o$T8!+H.)pajR"emo]2LP<b*p
%#FNB2MZWA/HndumR4[D(nZ'R"OE\;!ksqmu!T?#_Vkr\0A%1u.^[Q1'iC806eQ[5?fnTHsl3(-G3Dibt0*^WU2[rQM"FotWQ<O03
%MC"9T<\Tnq>`>?"];n-A_dYkbM>=qfDbI*/=E.q5)-#0Ca_3k$OqjBq:R9RBbIr0Tk)((8m.SIM'Y^.Xq@6:-_c,@1HDX1cn?Y@c
%aj50Nl_`SPP<ZlT=Y"*`A'5?LJ)Hk1&7c9.jJ8%tX,Hfj1Eq5tT?iA6;a58J4P'KD#]RLu>Hc,E:om$7'4*g@asS+HYhZGN0X#bZ
%Jo+oLC$AN0CVI14mehQ)TP8lFJN5=9P-f&\-\%0EIL]kkI]YA<!?u95r*;lL,5S>$^Fia'U.OusR7`Gfb:M>t[>gZjqDB[5QIb9?
%/"(.eZgi#lD/tn7!CAugT\,)a:Fi^!%?jrK27;TtM#HVZ!XiNGXcOQfnW=@P9mA[*/89$ONS4XfMP]S1_6(EHGslWCF.d)c&'=Tu
%jk-3O0)a\&9:c+R[m7dSY>L%Vike8W8dWYGceTrMEj`<?"6j-fF%=#PXk2)mMu)[G2ZBIH/jSeVH8'IoF/&)70s'R-YTX*3aCjrZ
%9_cc!%+K!$XqZV9]p<]V1s$tXX4EGX'fLAEkrG,R7E&8_HgKS<oe/JQ.GsR3lH'tN"]eO4lS!nsmjb-Zp]%;^?$^VWOYa8UJGp(e
%d;fRc17=K*>Sn=o%PWXXMqJu-j*'10F!O+9nA,(\n\g,l7RZqHg6`aNNE5BBWhM8:A2*HA`5,s]Ad\uN7^*20r\g+5-Uc7>r$=aE
%@N2&0blBO>.[nTS*a*j*o4juT]sLpP'QQn")=AW^GB"\MbjIk(o8.HZj,gq@MLJYg,_ZalEt]BbrWeU+V_rmU`rL)Tg]^G+:$84:
%F[)`H)Cg(/X>,TcXJHlY;B'fiT^\'YXA!c3d!#D='9iK?.$eM''M4lP&s9SPj&%A`O(9[ba<7u,WZq>7/`:at)rhUI@<4dK3Lis4
%M[i5t+62#Xmd['&.<=7a%;IZ]6L\A,mqs*HfQa216gt?3h_;:n^9l_b,Ip+pZZYUb]4Qk>+DE0a;C0(i#]u^OcT6u/\H_A8nfL)l
%rL>RD+nT3pX(\Sj_r:r+XS>)H!?17)ier?so_f8<h4ETc,6qV^bq(I2@pnNVe!Pr&4!!phLWc4+5+(Xh;DI7u9%SkA-VP3q^-&?2
%4D-B.QgN"4Z"Fd(oa4)QVh_*j!%aaC=HInBK[']1BQh)9YVlRLd7`RRqg7>S7Qj1QUgoqo8t6RHWt2rlI8#aB5!9deQda4Dof>8A
%\1.;`@/6SCqo3BY)9r45\!L:blNpWn:WBhB,SH)*q=Zi\eU'U\Fj5((4g59*1QcUYX-bt9lCugD+@rcJ%R`k<\#[d-M5LN9mV64O
%Aj(uJ)tBjH>J)9$Jl2]F@BmB-WG\MIGg5r>A17b\]JmZ9["OM/Xom'@][b7h#i0V<",.FPGSA)9h/uCWSCR?XhJLhLp\G_nmQ12g
%o%l$?dmhSPm&j!;@WrjDG0i_H6T?CJFo28@aC/E:UUq!Mj98le<2Zn2Nd(@#)#n;HW3NrE7&5sQ>![-SSkehW%".]aC+:KDaqKt1
%mNhn#.GU,\-B?p3;=^+F.8edGXS->1_s_LV9ff(=iH\^M*?XQ4CguUcTt(XILuPma:-7Oa>_cf7+7EC5qdOVP,YFNkik'SZ?!ORO
%Y/=nuL*T^3Y.9S3!7?!RK@jGL@K;cnVp<2;>*CAgI;5bFp.`fu_$7g-c-&_Dn+Bg_f[r2JFmjm!6'89=&C!#&fXC8"rpO(W5gVD0
%F<j\jY-fmULoke+O__)ZQ#q-**IX5oXbJgLVqEr7EWF]oa$Qp$I=]%PSTT;lY?C*&($<Vg0]p\.EF%Z.+C&(A.=2Kf*UKjNm=p!:
%.#nZYr)!G6)sb<=UI&Z[>HX\_&VdHtm^5aeHF1(]bhdROZm<a1LbsX5*r<49Ycf'^+6Pl7P)L5Z8J4ddp.CL,QiSW[Etl&IF,Uoi
%cW,Z&=,Slq(jUY`-H#$M6d+X00An9gig&L]`r!dia)i_)c`Cr3;*eH.B4m38Bme,/:b\;\A>8CPA%[m2Uk<Is!$gVCM28=[[XuQ0
%*92<ko>Kf/,=Rc*N'okMLq0cp*S[':lnP.KVTOPo8ofltF0Ou19f@ni`f$=+XZA;\+Q<qO8`cu6o9&#_A]uF?(l=Cq@n-+3TNnFt
%26c;1jVT]TRm\G]r^XUZj;9TV)bB/HP!OKX(r>*;LO6"jHJ";q]VBgBhb-X?E&c1/3@8EWGRPVFZ1K[F:_,1/9cZ-]2l%9FDtU+g
%'.tUK_(_[&<2%B"SdEDPqcmm`6>CN=Fco_BKPf_2!Qc2729aa[M7JcuogqR\r?](V*M^n)aXUbmhge5L2*1QS.Uk/P4/E3aEkbqc
%5VeI\Ctn0o:@o2H"-]0f>(N#'#-bPVoT*K_&L2W1h7u[1>11(CKqHc?eB9bik7saMn[IMC\lnW^(];YW&n-$4P?5C>EN[8=$@,(]
%%bU`sFu9q2"bi$gJnU<KN,7JEMI>g,(",Ur.qTJ=Y8E+D?4lb6n&L#cj7A-FkQr4$<2@,_YBU)O<MuQqho@OV#Tc1U)(CLN6-QdM
%[BE)CF@[ok\2CB&F,U8+3^*][<imZ@V*7$h#YS+S0r5.a9/h6gBM9jEH0nOfOWm@GAjdf=pl]QD9(BoOp-l4Bcab=9'9XUIF<di,
%D?CpE9qnHRe\CG[P/>k];JW(kerspQKbV;:DZ_etM3WZaCZj&m&hJFST_U%?R2'7,NQi4"Oj&e\"[u@&*'AZj=s8f2NraXF4HADO
%h)@igDQ_^2i=5Ig*?mL7Il<`ADuOE2YVL1>fr/1R4"Gj;0VV$GiY&CAQi3$)MPbh6WhsFpoUmJZ:)')%4lueLIkVMF;uVsS322(1
%!:#80ni"bk9qm;jj6PPGE]5K.i(-1YZu,#36FM,\YW.#?beF6n"#.3^IRRks8db'?%3#!e=YmkF>r3H6qdR`rK`'b(]VqSn7]/(Y
%+l1&)-4,PA\j[h],+ou5JPq@+-S\pAL`CdfQ>uu[Bc7'mY[_4efgc)X$=L>5GoS;c`t4_7?\E%F3i=@39=,2,_[0_2cuH+T%;o2#
%&B#K(SVcCG0.NSpN2j.en/-C_[#E2&g-40kMS<IVM^o)F?Mac<B]D.5AY9lgOX;75?JT^/Y<Jk-"h,3\(^3>Hrjo1U(>T*t<B#e(
%OsfhB^L';q[t"7uSEE3\T[e+8_Ng*?;ZU6YW>9*d7gZ5gI0"gq*!@"<]dtejL7WuW9hQb[/T]t6:H"/Bcl#qHH0.]701$Sq[TDJn
%mP2L@2tX3s!=.ak:%Ssp09kn\)RM9N6k>e'bK/7?(oOb\f(gZ+dFUR^7%H?):h5nE+[So?<,#IWa<-]NA-ZI0$:=U6/b&`nXFH*]
%"1X;c\#ctQUCW++fe?N\^3LZgg2?g(.*0Y!l`sOT3JoIuL7>i-Wss:/&cG7W>XRZb3GnCm*?&@F7)+E=_VD0EXltS.,tL<CfBA`K
%Sg,Wp:[K(N(=/6+fd4AOBdX)^Vc+/[eTtC<AeV%%5#Dj)EI[$"Ef/%db1%G-Lto4/?AbGk8oVe06fft)E]P9C'1Q++C!ri`eI<V\
%bpD%2No."9\eh5I@Z8JW&4M^-*/2Pm'=FCKQ&(Je*sW+D&T7mXH/.+ehcLGP$$Dj:D+9n^^n?9mLQU4Y\/)t:S(1!.`.K\p9Z=@h
%b244"Hohsq='l.mWq^]nDN9O1?h^Q>+>6Ic9%Yma$-*J_k"soW(q+ffaL^TuaB?C8UB@hL'&?k&#9k'@9AITG(9J%6cdDLLL:6%T
%lhVF>kVqW>&i\"DddWJA0nLan!D5)Kr_789'%4*@"<]U?RNl$(5cD&]s"Idr'_Ho&]W@fhEu>X\;&l2e\pF31OO[:(OU^Ial2])X
%"IXO&2ZVX?2$an]fU,\sX2B+l/S'!0D,DVs%7DD=Nn?N51tk$n1*1C=$S%5'2LTG#9(8VWjheSAABB\Qb/43n>IDI-YuuAGn?K&K
%fW:#@o%9GMAh='>E8.bmBX=#M7>2s&&oH3Y,,im[jD@qV2gh(?hIZr.b!q8s*o[@!2J[#%)[DiI1Fg^c\Yg^Jcq6Uh@SRY0D:ScD
%N)!bAHJpS,jVl2r/[JUE"%WQS8N+-($IRD$o+Prk"pcu)<Au7$0Tq48"@_^q`4f0>2%h2n.u;OP5qHE$bLrt!n'f::2Cg+HDKBi6
%C9u@VOfrIiN$Y`3bP'WPKXti3iYW%@>[t'9B!DCZ#d*9rb:Pg\'sj5mW?a8QpeI#V3+oN>YujY/Pfmk%Q$A3%;m1VsiR;7q'\QJZ
%Ln5A4QI9[1raH=#hI=H+ndRsE7Opc6YlZnA%f2X!D/ZZl"YIGqat8Ih>**$i1M`7ZXC)3P0h6=8[9+YN@^0CHCu>(%4:Cj4ekDT\
%Y%XV,H^1M)n$BYhg8gT$rA=9_HPM^$0(uuNZeXeZY==iJp1d&/m+"Yfm8Y]k<;[Ts'^\nJ;;::+^sl]0`_8Vr9'fPIj0D];"d"3P
%RZSa+HaRZBW":%<;G"cUC,(!\(&Y@U1N8u@X-e?2&nG4jhM8cO$IgscJ[$`J?D,5B1CkGkeV#:'X3%Do]o(77X-h++lrAEj=Vf17
%kepe]@,3EXBBJ>cI:E*<I5;3K/5;'tXs>YJ*`-=M(;U*aD@8,:a#(e%SOQ=-=>?J=2GTDM])BHQ/V'K,0l-QR:O<gg&34jaXOHe7
%C8=DeeVr^#Y8.O[]-`D,Zr`)n&O%MM<rl\5k+2lFDm.$.K_!W]SA\`^Bns8DciuHt'(u^OPKUW<reAKc/;/LgI/q\YYcg;X6KG0;
%(YTed#(hD^^5&:XB4&McZ6F-$h,KQH@V_r,(l7-eNc!GH9E%3<pk&W$WWg)k8"C&(*`IGp@TWu7U,OZLdu)ZE76JH`7QLDKb50a-
%J8EW8,l&\HN,`npMT6V!M]@kKJWhY(?\eDF(Mn.c:S,";DI]h^`F-!^f/$QmSC&)".EPHaa$b+@98Qo?Hr4G2+=G#0n=0=G*du9_
%>[GqtS866)$d)ItDnU6/o(HYe*Kuk)3eiabFoeNmXkS_I"7Q^I6352g@Ir*ZkQOp'PG+ruS_;g^8TTug23%;7S5oF_-q4;9fO`85
%Tl3(a/U<HA(BR<X>qL`.(Js'ZFrVC%QN_o0H6L#U0u[g.p0L0V##-opD?<s:14ZZCR]][Lg8tiC=UJ!_``1@S^5.U/B?+LCmW2kf
%!6*Z(@-H;"%M[#&AOPiMf:@7hg31c/Y*3HG,I7UAq@1L(UG!$=h9==:N6?0cN.oi(hN+DR>p4XBghV>^UNR:bSN,&N2H.hF?0kI!
%TJ"o(2CXg4lcEQeL;RKtG*<TDO88Aa!'JsX.dn@/fM+k[Mu,E1/sVC4Q*TV3*"aB[GFs04])+)cf6YHoI#t5P>&jqZ?nRfM)H<7i
%%KOl_<+\ZogW9[#j%G,_>H.<@:_N1m)K30+Yk,_bBZoLPNP\!h6SRom*8UGROD#fT[VG2V96LJXc-Lu4^U'%H3M8q(cadF1[7t0\
%)6Z:8T$pET=Uq&u/GYY7r8_+W35GoVeGod@J#S3hd]c+b@^8=kd=gDWZg6slNC8$STd[B+J;J,*]$pq:U)F*FS<Y%;Y+KVlP"!E'
%DMhn#75^[HN\cHEE"=W`YAL4-8!0?S6A1I9(,u)Glej[tVT$H"p,+J.VRO?X$9<5#7u@9uQg)&c^&g=*DQt">9s_b&?VC541j%,^
%1O5NB"V)SF6lo[1Kl58W`S`u)*'HkDo[.Tk@>`NZ&%774-K]*W=H0E>gPd=K`'EBZ3\KO9/,1.uhYS3C&,\mb3jgj,=mYH7YdsI\
%mpBCnB:",cMHFRG/)m1jUAd5#H:B(iA:P@\[@a.m`css_\1[We0ob&17'QQqq?;Kq$*A0[d^^r+dQU!MZM,]bhpZLn7!ZQtBZ`"[
%pG>tT`gnmn>OiUf.6V7iok`T<[TSk+`cIg<U?`WeCER64eH\&/l1*gEZK8h82E4A>:gCK[BU_qL2Gso\6Z+QO9=Y+I!IWt<FPaRD
%qY)`i3$//iP4K*hHOBbSTF!eIaXnOfn\EHT.f)<r1MTA%W%-\g01&ND5rl"qrrd.kn+/ijLVXoTO$UH;8J::F\DqnGDKn5Y&*TT`
%K>^Dn/D_T/DcOj15?_%^ZB?ZC%uUI<1/ZP"$>sK$JY=]L^;pnsrXD\so1T0A,hKG'haj"=YVRhK0+Bo(fu6K`[fS-'ce^M1h(EUm
%.6[f._/)GYL=H&&%EWE>c8\+s+5c_=i<O&FdHP2IPc%>#hF=![;U"(qNqc'($fdbZ1mi'4dFL'',nFo.TfHR\W*NF?JR[faNSCFX
%6[b(AnrYm_j_7qiW.nOQ^ag=-d:tA41gSF>8%l$HaVGRZe2"3*R9UlG5r+FA\p"W-k1[%V^[X%`;cX-47?d-o%,&&j,!WuV&DL_7
%mlK<]J+*8Iq'OOuBQo/XcQh&\)MIJ%DP5_Mb/3),*I+cPeS7e_#5&6f^P+sDDV50UK8<ZtSpm',%MgV=peb:m6DVi1@H0==AfSLC
%'F-8fK\#;+csLMajIoWO..gBg`DImI,SIY:cX\JTZ7fKf=OJkV@^&(7N!&F&Ri>&;-q"]+&mTeas/@Gr@=1bq"+D]_$K#K%>5gr%
%MbnnEb,X?d`d!CeIMG76DJl8k"FVE`7idrUfd2)E_KBj.4S+<P%2[sa4o0I_5*V*me,OOd`!`+9A-cH-@!LXY6I#,G[YEYE[3I%1
%rCD`J3Bkin.&]!acecG)/Y_TSru8]3J&;6`pODt-qXG(<jl8T)iEu!(qun0oU`7u2kSm$\q`<r12ZCJYj$3G^4UF)5O('._>9A%G
%+[a`[^<kp/kUlfUDu"T1?hHocqucm2D.n;CBqbDHh4X^OGi\rCZI:X)9Ac:&$0nR/gS&[1H*8j!@(H\M+*5CKrCW^Cf&YM:7**Du
%rn%$!IsLqD$9iMb5k9%6K9I3mI*KED4<XHuoAY^N#;D^u7j]>Nh$UkVQ[dBjrl^HKePl7LCc%4:,a7%\8>Wh`Sj.PbFZQZM_U'KK
%1g@^SIR&(U)HbE3;A:.>>Ad<Eq#F>;MS>C[U#QC^N7U7u+PLu?pP>p9dtZm,F\iL;nR)]sm*K42?s'/Vj"uj,0!TU7r#u8DaB4^p
%n<lED2+q`X='Q(tV94H+bJ+=2Q9\G5DF(^k)[#$;dVacHc1X%l\0KE<3?g(1/CllZOXp[\_dp;_JqK57&^W>uhome$X`GE`KDep8
%$AZk0H7&T'dqDX"7ZN(-'TP4:-Ep-F9&R;IM`gH_I0o6^p@d#g>107h;&(oRO1#D+EfR)-RX5oN/fMoe)t%n$?M2na>W]LIoD_?_
%o+o`1baC?/$D7D,aOb>7;.#72R)-#UXm3D5U3N1=F4ZC,;Q8"%eJ*>J>11G"<\RuSk7qDDkuuW]F0"Pg=YPIWG3c9J<hYKVB!q^d
%H3+gN=M7_/-P+$![9LNXgb*To/hJAnTHG1F6-l"d86[Dtb'O+CJCr=jaM:e/7mK@I2o#HiUAVOf`@[k+6pr07G]11Wd_:-W,YN./
%-2A`)HCpk&HD0-6!9.`B"\SK36Xfb3'p95N'Ik<^3JYY"<nZ[:[&/N8"<taWXDA=3)cGJ]/Z+CV"oAVp"0lcFF1o<[e$6`:8=Y'A
%3]rOC)hL%-$hCb<6"?%6Vk[FgTR&I-Ugm<gDCsnC_A3Ed-5/$S'?<DDG/iM$$h=aN,PtqV>*A6Y;O;$[&g(i%=HtXfokbBb.!EP.
%28g:[pdOCd4pF,cp)'/T]1(cJ\1o`qgA:N1oa^I'nXY]GitlR)4()A3^-_[!b??/%JkCDZg?Fh&7qut%1g!'FNi"blg1(",mr:a/
%K-[=43\4*_;q%<p_0B\G]0qL;Nj!efk[YaE%(bYhD@h[?:CA%*Ook]22qT2<F!D#$FsiFm-*hVL"4fJtjHtmQ_jjUeZma(RF/n%!
%NZWNq>^1G5/Z=pdQ/j>$mduIon5[@^_EC.HF=E1R"`7Bm!iZb<I`dYOa&S#6KEtH0%='hAZ1NAU$mY/*>^Vc(Q"G*kKr\NOLNP"'
%-9IEOhG<J$H[[s_OrMb#bG_#:4)"N[Q$=7U26o<ug1rrX!fO8-*$fDS.4E(`ipE^q*a\#OD4$El2#W!"@gu=:XW?EoQm&_f,11Io
%LlN;7E#>TZ>RI@&fbc00j;#Cb"T7!Ko2BhXD%-Bn8XmF55]#4[YFsk]-$kRr1<7tBLT"aEl$t3gk$#^"!7p"/XgE#\#Y<LaT;TM`
%KoIOK[mUHS!P+e<DPThK-kc?NN_Ap/'#,jR]!sJdH/n%5rdSpE^=IkfJ_$sf[h,7U&S")pU$,N$XQdM_\hV8FGPpkbIftX$lDV1l
%a\jNJe1mIk<G*D'd=;"/2[:bKBL]l-&,QHhRDTa@R(\d^,S\p?"sWLX@3M!`.8c(1I&s0-<PIY7$rTHu@`+/-B[IF:H4LKp`I7Cu
%4%],HlH!1fN8Nj8hRHL:'T*[W,q%b%pdH!rX^;:2S3;Vs1UfC.+>2cQ)[P\9jco!GOU*+OWuHq6gmH5TWJXEuY%2Su74&]N&Wa8(
%LY[`^3+`KSPAsj[QGC"=CBO1C\jOflP0+L>FfF<E6<KAkLKT_)mTMk"QA,q#+B(^Ef=&:9O8)\W+sC1d3+_MG#TTOeU)muCenUZc
%Hm4G7-8-7IaHS#K/q24<$"%a_:<(>i=X2g.mFH)&*<?hZjD:VnqF)6\g_R!&\1td53GccP]"*A9j3^++=?S4Sa(jTM,nZcZ0g9Oj
%2qJ;,iYa$sXE`7R0nEWI;?GH]?PJkdCeV>=@<5f3UG[iBcRK61H(liXKc/h@l^c=cI>@QQ;Vrh(kq/VTP_E8t)b.l<>Y4l+6Wr>'
%g2M1ZC>o5Ealia!d@Zsi5S^t6oLM=LN"-CK4NQENAQ%AI6-78hfQ?<oVc'3V++1KD>T"T'_m?58(M&Jc(s>6[%tMqaS$eL"Z;=)g
%o-i6$n<#9oC83IUb5"G%4<n!k+qYNOa@EQ66@9b'ISCHqMOWVc=E.]]@3/2lZ1$]jLW9N]nU[d_DFks$Eifj_7F$+.XHsa\BkK&$
%g6te#aB_WXNL&/[M2)M3o'G%+E`a+0TjYj7RB"Z$dXAmKTh([S<&L6=*\geQ(DM!Y`#sib`b$i:UrXB0&:#oX0#`0@nV\$8/T-OA
%qr6IYhMN\FYUDP5q@KOW;];;omo(qJZBZOR$/I0Z_V]`;"[M!+a%"'s6#G4)b0BW<:h3'1Lr)`=V$(ZB?^*9NfU0IdIW%CD^UQV2
%!ubke#F*%+81I9C@ci2]T.L80<X,Qrm!,[76ouM-o6fR.i7n"_m>QZnJPHajCgsCE:DaQOBV`_p1(\`cL-Zp(BXUV4/:7s>gi%@0
%^2ZD`P1SC!G"O)f+1;q"K\)pX"G>kS:FL3JJNF;`X%UIVA<.o2ZN@UV[:,\#62``Q6TM%&(qp:$(9,NlEuB830g%I*PV6R:)^r!J
%$:N_OND"98'##aR\?IQ9EPp?3k'qN/>S.mojjISd$T:^-TMK]]R/!6"ONt%M&hm13#mm/3T4>*^"sm?GS.G3^8Ve)OdC$D'*aQ[:
%[jI5`*kY6Si#E8gCe_ODSm6q/B!9ZYdg;cem#8@m:MFYGN"t!"`4=sFlauhJ-7'B(,.a//oVs5*fji`KOX:PG*'\L;4-'WWl("7&
%n2YQ\?NWi[VBG7EkH^Jc$mXp*2);0N:j,6k5LMkI7GV_1.A5]aNX4%OXdnQ0NH`.XKEb#u*b=(Jer;5%[RjgDE'!0J<mXZk&K,HK
%XA25W'oa0!#5rfcDme;'Gn3A9/i2G55=_"iq''qTKEAJ*#7^uZ#oHqUo3=Z=Huh$HAtU:20QbNm1_^ZO3aiX2r8[b69@oYA(ni]P
%HEq'`2"Jf]25e\0T\jZ<P/pGXI[Dl+ojg((,'Rg6;]$ss+j!Rk;n&QP!<=BZQn+p3$4\f*NCi+G"X5)Dh/csO04cAt9CdmB_*Z16
%Z:^huTHO!%0B$!POIhZnoU:p&hffrbVFZ.)a\P@<j`0-=JBBhoO;\$Z'Gj`VBZ/[c"#J;Q!i8.V`UF^R.(\5Hh$?I$B](<uK_E+,
%a]B@Zll?LGbDe]!Q3$kf,nF6.pIH;R:&UD5Z[:<_mdq]4"doq8!Pdr:V[_0c^'mET$FJd[@l!@!"u;#J@MnK]k4R/B"'fF<6p>u5
%^98(d1KRPI[>]8J8^834=*,4A"7U:OS0P9K@MmO>R>$QT*?^De70h'Y_c,1N8lV@/NMW/@dl2,$kNU[XGHHR[hlN@$#AB[*[h($p
%8II:C*kU.9Hfdq*k_t*73/@FrMZV:[i(dQ!1SuqXT"+>&58uap_EXc@C`*k#)@_'Am<^#qFsKMYZQ)&N5`qSg21u4jcBIs*RXt6i
%E*X!BA^(o*2X&ScI&0mR%JAn*T]aV<*u&$V>f8rI@a*b=`[l(4<Y%WOWB1Wk4LK.gMW4?-n3/nUFrNIjnDHrB*[o0a6dVPNI$Y:a
%814s);3GF`d/eYm+F:%gbW%s=KqLE2Ju47VkX1nL^Q$eQ1!.LIl'G+'coZso5I1RqZ+FM#bG(ikS>;];&oImQMM2+X^W9Y'+(1>,
%pkPM6nMJHJIENj(O.3K#$(`4^@&MfDbVU,lA5a"@Cl6lh'P2utHYHE-\ac"'APH60qk1m1_!I?6d.CP!LdUU\-odoYXE0A6\!%61
%FV$C%2eGGBr@:Q-Ahe;fD@nIZmK?Y914]SW[fm7HRRfec&dESj*7bPWGq6OK<VbiCbaiOn)rHKCcQdcF0sF@TpgtroXoC)ZIn>5W
%B@na[H-sVJDQD4A./U:l3\R%Z_=CF)5)6s`Dbm2/o`-\JrPfp0qK"cnYBS93SU]<SgIr!Vjc0s[&rS6!IXa_ld6A%A+e9m.@jA&I
%F*jWgZ3_K.;KcIb(4P=88E5mB6f2iu4!65R3tFpaJ^(&="7LEB!EE<YTX[?i84,n%Yf\:;/4AB=b^s[igok5ai\^o^-15cV*)eR[
%N82T'-D[h\!Y(f<EK=i##O2.3NEHj3gk+4#o6$_L7"<MmF)F88SIIl!+ZhG@K['i=oJX+@[q.TI-.0I;KF_u6IE>>J,1ON\DK?ZU
%'Z7O@W2g5-S#dD;drfhBnQ1q.ShmTY$$P$s9a<GB&0NJuB6^G!He_99Eed?GD"_Z\SEq)>8H5VPE,P[g4-3`ba-,,j*L8YB!#[t'
%QL]u0mc_9uoju]JG_$#[d#8=m5;ld\$UD=j#"KLB(ECUr'E^qnRB97uXb:0H_L1tKlpZr5@m8?s_$Nbce/GHU+k_H#WXq)n`0+\J
%+P5hVRi7A11%BnN89Yrcj![NH-qt!4^($I+<:b8Si'_?@'Os!_"9oEcmqcu`feQB3%P$V(Bgj_%[E0[Q\<ih6!?b]<0;b)tM)5?A
%!84/+_s4X+I:bH<r;rP0&E@O=Vu3(uq+qu,gn[V6Lb@h0qu)@kM?^j-%<LB\)a_!sCeTs`c`H\gEV<HqFZ`mfC(SAOdIi.4Eg4o'
%o%DI3</rhsa@3BK=Nbi/CZf%m6oVn+#EX)\(lU(;guoeKQf$RhOi/[nOfr>P9C_ZdnV`R9MRYCT3[8OFO.O<H8qM$PW;U3M]D/3j
%Y"QJW19]T&GQIa)^:ZsO&OJT1(EE@D&HQ4+4Od#WO44scBI17P>Ml-r$FSoOhBI"&^b99odFqQ`7-qa`/J@652H,B9/i\epU9V7C
%9)-1-F8F0C@LbT.9GGS?N2^,\],j(GD*amfPr(35`oWIL;qOi:?Yk?-X6;OPODcKR>5kkW1o0O9$%Km.b"EAYkg1=4<;nW9&1J5h
%&W(lm6X5LMdd`5N,onlj.-[tH:;=dnMFooN[!tX)'jn'U=Y;.LM4EmIB-QsEqO<gQ5?$!CL%F/=!>e;\Ujf40?B8J.2]4Boj<(R`
%:<\@YL4W]PPt"/'l3$<[/P]V.T('Qg]*EFFd&oc&I_#tt9mSDe730?$lR7MW(^)C?/iAA*KV]YrbDG8IIh@F$PIk/A_1mq00Sjh2
%),3"J:a@tQ&pZVQQf<-br1ZTU`JsDV0lF/GY47G`,or%-4=7:*=A%M_m#(r:L5cKU+DgJHHaG9eGZKZa%Rc]d4opX7/)^,3`m9'g
%.+>tO9lCUiC79qgZJGd6:f,Ug$MBG`5:3>n'?0Jd.eHHs((lZ:]acplCANU56rp:;?+!)8&d90bJ]=NVT;ZJ.fhU-cP42UM,rk*J
%a!@BI9bR]t`OOI/RQ`H$nL?;YnOUlQ:m?#-^.'t#.5G<DLqK1:9CZaXISli:j2Q=$*B2SafQ]e]9uhn[%gfo.eT>?46qp1sokHNC
%^K8l;0>FP'`,'SmXGIq^YIG)//s(Bhc;c1r!mu/n(]75D?mYBIH]':th;>+@F&DsZm9,Eh,YH!RI,/!pnTF0shrU%Y=kUj*(Eb--
%P<48l7+n&D-]&53[>_gk"M@GaQ8PSd,5))ZGdICDUplcu<'RiJCX0XH<,K$X"m)_6]`<t'q0[8P*Wl$r57_:#"r;*<N'sr$]shJh
%2])\a7Fu;@Vj;/1`up2GOUPp0*-e[=S;RCT=uTS)_dUSGmlKB&@q!t!i+RH#82=X:U.%t*$oE]jhJE<p+r3DX2uFGr=HXU!JbB^H
%"?::USEWC3>EWqD<XZq?P)Qla5(!_mI*qSt\69.5.9`>i&bHG4X7gk!3'9g#NX=p)D'f!i&mNd;,c2!=p#a`6)]>ARFVQ@>;N>ie
%3SV+`SmNoY)-SG1-jn0#$G$V?c0lkk[.,!uh@1r@/@m_9Wf0TS]^:<,>mUAN;hrs[CX5&RQm/;b!D]dmUAUmI'ti?K:9VR'_dc4V
%coDS!'`7W]Jpb/\\2ioei_oHJT+]=]$kSL/U!M>d':6hCF*tcFUG&uH*s,^M16kWQ:\,lkqkQ5,`-BQAr$>"0djnu!l/9ud\dQ6b
%%L%TkZurDOYF*(m/GQ["&Dd"Ia&&0(jf@rYm/gf-\;Uh7q`<E3[9Q^2qN+Gt-(CU:AX:6Q&F/Z1P4F"A9p0NqkZhtI/Tc*1^amT<
%bWJDQ/fh_cg1U7C4Upkr<-gSKh+VgjkS`Kjp4Yngpri2*'<P9\(VXB<fO?9p;g%S6G]uh3*'m$dG/1N(P#[ZR2%rfjK?30mA$8`"
%!DR/=g]Z,j&MW-\R8XBKj!'3sZOYpiG.J_AjqEW`T_IYS!X2E'(&hDTOq`]&6:sMYoRpu&!u2j>/f=!h<&j)nWQAD(+a;q0^"H(^
%Uc#VY8LM,:[c0<oV.3>QG.k#'pEVL[kI/dhRQ6Noj?a9fBL#[jYX^;_gAcUsTdBRSW"N!Epet^CVn]UDN(a@1jAMK*,E^QUm3bV:
%ZU5?4=2^K,O25Npr]6\NE&GTnL:WJp3=a$nLCcQ@OdBMka:2W$:;q01Yd;BKAN"[kWj.&aY9uYTP1^XA'%Lo3@-.5WPFjTMR.t6m
%rZK1Ici0A7_HTdI]d/kqJDr(F([o(T4EG`QmCAGbR'Gi>B"7L*4P/?r#q-o+l6VSe?j7N(o.3FdjYj1SYmjO$U_]XL&g-e^$&'nG
%rK?-TN[S)I>\?OCZZH:hIZFaZ^6UL"^V1jX/apAgS[0$\]"$CfgQF)MqGM4NN+X;B4euf,Aed0I\!Ga1KIm5jZE6K+*JH6h8Zf96
%&\4g((c6Sm`43/TkRRbI)Eg3]jAc20Gn1eN`80KPkhmn[2(AKF$mXFZeWn)"AlBRDenmZ*(1hM#..+^4PM9Y9m2]'`'A]nUej5\l
%&OgS.M&tFP$C#66d.+m\TP/bEZ0Jh""PYeg5aTP$ki[X*T@98-3J)j)^bd>nDP1&D?QOu^8B;k$j/mc"88iT?OJ=N<eK[/+#h&j`
%HYJ@eYX?)qI#J[i[Jq?8OAJ>g8;OR87LR0P\aiHa0bPd0L%r6gL_>*6)m]XKThYF)T(l,@-6GA2NfP4.EPbd`0HcPj'[D(OH.3m`
%7^?n7Qq6#U&BWQDa5,h=-"_k+`l!R!np<R]@ScAP%"@!45>^/4M:tS&;SJg''J<biDJjRKQT=PdPqhE#F,MD4Si7)I>;7c_U&XVU
%?J5Rh0GGa.:V)<"*/WtQ[uQb$D7,VY30d\t1@bf,^3>/_V3?j,EuK'A*ZbQDi93'1'jN[D.#>.m68r]QE?1GR71Ao;7'8a2=c+`+
%9>2g_W[8\FC<D^QFePDfKOVlU+b=XhRV't,@k_,Xb`!a2lUc@@hlaORH6pE5TqI9$H]HkgqZ;<e,4^f.N>0JH73[60E@IJ`_?VAL
%(UqAiDVSFAr@b>#ie8_dZ1jPs)rJQ@8d_29S?k0-+"`F6A"!=&d<q+mOaVV`3po^aqpJ6]e!rqU[PeCRH>aISlmr7$bNSL`OD'p4
%^mZl_>>4j>aIs<Sa;E6GWq*UF1#7%(_^0^f]^jXFFRpm@TI\tp:+-m'nlTSR@Ul9Mneg-iqXHI5>)/rIS`)8PF3hT,d"S97QU4'S
%0`WPJ\iY@^,=Npl"-Mo_9pY?\QM<TLa2MocN#T7W1]PW[jEb`i@+r<Di<M=.G=n*E=LEMX+mV)uX'L45-um-[U8Jr"'Z[ojZe4br
%%#ZKjf%2qId.8XWeU>`"TEW]'L"pm!Oa"bo*2$`g-WW#OJCeo`r>WBFVbH`P8;Cj?d:'=,#p_*V888EUg+?o;QL_`ZNF@r[AhV'B
%K.huT^5*B.Oc&hG=JSK8Yt1+LFs/IcF%p^Ghsa>cMKX.5]!mKin]aF_n"g,;NGesgn(XWBD0-lIDG_Nu;+^]<0K'mdREa?4/B7ER
%8&5b2)Y:e5,AjP0X;JW)<d!+=%te,5Kjmjs]_.Y`RtQ0>`JGapc)-&GB4*9qL6ZKhn\OSId>=N-Z6Ng<kE[>r8K4grf_j#A,3!"k
%=m[t<.:U*U0oV\i`6'k+/h&_PLqJPIL\D*[<>B+nD,jBd6D1J>M^P"A-"!r)Y/H5GruE>SR<5'1<7B7l<q#JaaaWM?5%:`OKjT)K
%%ERC9J_Tij_&/j*>it]k?N_(AIV>uT9/+\:hU"%uk4^c3,jI/u\Upbj.B]U!q4^u\Q#)DGTlG-ZR94K!Z.^`hlL:1V/n$3#l*:g,
%XR#U,ZG5;OQa^WW2G9&[(7RaeUnE?q@QbpED\6RW+g1&]U0)6OF2UU]=6mitPn;/N(1Xn\=pS^pP+-NABi5<>,+Htk'bud-#bK7C
%p:;N!]LN<66TUca%-3JfZ)uqF]<5;M">`kWkK3U)1Jj14[EPFBC<]pN&,E)>]ik"X-q^Iood,'?>-il+&J^GLeX@dWEVCgUU0)2s
%ClGDP9/bBPeo4$6Fq+cE+6$GB"m?SRMfHIaDdBk,@=;3lpA4&McN,gUBD*NMBjoNO!rTOjef+$*k,8;P`YON(gsdog,49DLe;'3J
%=)$kk^L$tB2F[oq<a2m]nT?3O+fn?4]-lF55[%c/VaU#"0%qPQo)2$m0mJ?1l>O^%/e`(&''rejU_!TU3290!F:dui4b=m2F#H85
%/<ciYj^]_mIR@0r&tDDQ';ou-XYZW(NoD[:SREd98dOJChBL,.%$QGm*#t<1S8ffHFu6r$/Y^!`B.3Inn"7OKAH?aGm,LXtD7Ilq
%'lBQVWOs6B'_M-1\W"I'@SV)G&XAj`?n79-<[mlnTQQ9W?1aG"kAhI;UV%TL7!,5&/n:GXmP3q6UOUrei[ubcF.LDDXI%K"-=:k2
%T;ZGgLGjY&N?O1&!.b*Xq?t'KOWr2!OiSJ]E@K`UN*hh%PAt*F<>mgJ>IO'\&d(-8Fa-SfQ`u^iFkIQ7jp`7C/qDj7QhP1$OQ0Ii
%(31P?,Tk`=qhj_1(/ZDAigS^J8h=Ksg.%ESM<u/(B!gHVM&];!)*EX1k/?d\/7`k`@3G+,XnO/_#;kr+FbFXEgCfPJ@9aIkGrl6*
%j$Gbm->Kj,@!WD&,!%J70p0it:Eoe>)Q-,#A@0s,#!J?5aofU[*Y;B/7#ht<Y_Y^(7#jq1-?B$Y`'fV)j%\UE\^%dG7he\YGgQF5
%JQKLD**Fo!OX'%8)`][g[uk$(rl%>jOM[pOXdd>`$LuYY80Ud8F!/WLMuumOpI6Mh_2d@p3dI6YU?AI3$*S]6L`?&W2X0$A-k`80
%n7%9K!Na.T>]9K+KpgX%F2bm_K';?MX-E:cK4K6H5V%_?0TrTs5b_rd^c2t%@l4%f?Ukh)oL'=LYB9@U;80r9PRXg;7(RZ^1%ip+
%rZD82h2,>=1,<S*DTDa%d>'AhLCKW;!oR*q"*`8F$Ndb2=a<Oj:lmEF<-L;eQAjb<$t&Ro-V_T\W7JWlX2'1N.-#FL[Pqmth+RQ+
%+bIIJP4U#g@li45L+Er`b].f"'WeoW@)(+<OXS>5AOOiQ),VqMUfiE\IC1?T8B+gB@?Mcq!SX4)HraD>b`JOif&d,FMt)q`6J!:0
%0D-IFAB7Nq4<EekNprG$B%mQKnLU;624W4f9nj)$M?l,CQibSBfa7R-CKYOXL+H4J)6uetabq*);&%]-W#1XFZP:=ChBL)tA1(!f
%)_m1[NBUg+$lb3%L!?DjaH2r@XRDO1C)0:%+iB_3r'+e,g1SK%<0>d8EUb^kka*[-+ii;CiiS+PfL)u%-@#m.@G8+S/Go>^RQX6'
%#roL7%R*+3?;IpYTGZ0j/j8f9;*apSfLn57D?r_0A,f-oe!2,c+:IOG_d3>9*LKid(<cm>2]`G.+9([=IoAT2Jc=murZOt)k8(DG
%?;3nlb:rSX45ur`D_oc?h_!fJpp5ICJ#4NR.HZpmiY%:NK'5]sF@N#"3_/fm-&SnL#1rljrKb4rIm-?G]dL(d%$Gui\nn\0rE+Q9
%I+rmXnk%`Pn!d8O(UUi[d3!k(^#Nhi99`SJdjg5sMP+ML!:rI/^rCmg(C4YEL^2"j1rnI'/<l>'ph_+dERK&!VWTgf;W2+LJ25K`
%6pbS>;lI>th[%n6K%c,LgC#V[H'i,VELemt8JB8ZKue.KB-^ch8ZP^Y=s#0f7Fb*>NfPVC'M-(3B34o'?/(XSGT91j=fQeXWJ``_
%dqQ,Y,,@:]]kBnf<OY0GCCWBjmt8cuNWSEq<'#KU0]_jGL$ne>q&KdgEm51ganlDRphA_8bD*9NP$+fm8,W;Sog#J2/K.GLOrZsg
%V/*t@9+Sm:n;G//L;sFgJ<+^gb]h64$WuNbW4Xt<EZ@[QBN-.L2EZ"?\N0rn.oXO,ALXE92k[_&@=DcHMCpIb,7KOXoL9G?Gu^j.
%'^j\ck5;[(FeBlI\PHptcTZlZ=Cl4T./F*lC!AL!r]XOI6+#$0NUCiT"Fkr85cg^kcbM:R5'H7&G+Lf!.8VG5^nNdB/:5V7m)K7J
%KkBl8iiiVcOBkh'`OD,-*dr*=bn\ab'/RjR"96d]Cf2[,I"7q8StrmQ\0Q$$#)l"sLc6m5OQfK_*'FeR3mdeBn--44T0kqW43'$[
%gUD$CQO5c>,71+\D;bj14u&ibVE"*/7K!b2C&"%?5eC*nYaYiUC^jidNsRb)<"LVD]4n`m]P/bQ"kR]<ns`*:gN4s5q-0s'`0`db
%RPPDZMrn!jf.oH-pR&Zc-?nhH]6KW[6%YVkaKk<ua.l@Z7#$Q.j;cN`5_lP&9eBEtBNdB>bC&[1H9R:4r-g"th)_foYKl+uP`-fK
%s,i,Mei?N=s%!oWoG,&QT^p%ife@$V)N8g9[GR9hBuAMVM]Y\BPogQUm4p%MP99"P)pko;P94Hr3+W(UmJ.!(gh<Jl>OH$/\F"jS
%pj!4FDqs)<Of@P0jA.fhjiK%3F#$,&Db:]cIUaVg^Uc^H%t>jJX84D9"VBb,c?Vt).oJ`V\F&^qb\1=VH\/[Fj&EYH,kUhL$\U`.
%++kN7!M7Q:JJJKc"-!i?DJ<Qm("+EAYp^JYG+*sf8_T#$^aj-7G*MS3_s8YuCs9l7#LQ[5.hu^92,P`j>m!-hUY5F7BR$5!Js>US
%F$Yi)@Z![?(ga02^M%=:Fo9H)K0B<o^u\4?%7n?%6>(ZE7Hdks=$V*BZ]3qX#8stFfEZ;4,=*Xh!tcP1fg;H`/6RgBQM<`Pcc(>&
%X;gobZiA3QjSC5X=Vm8ml2X/cTE4bh=jp:Rq0F6'1\,'^F?P_"3JLeO70EUaUX[\uq^WtE<NGLQ153*>Fl.:?QsaS!ZX,\MJ193R
%OAl1c'bZYl0m!No-cdU9"0W-Ij$me.VNYM-qE_\db6::7&f9/Vb_#g#,Vc;G&H`1Y/c$j_]a^(nn/.DNQWi\T=U^<CpJ6ldXE>`b
%c&)`j3a'iM!9b]O3&-*2kg\_;GN,b+iP^ghSGejRcpj1_QQS=N,Cq7)D!m7lC*c)K2X`4A=EUBdq+(.]2^hKR7l9?4rK=iC,gE1$
%7/_?#L[!WmaU?$fd7DNqCAa["R'XmXiSQ\:IqfLTfr>8=K<m1PkF.Cin[9ts/f7`M31)-ioM(D[X#_4S27q6qZ""Ia,7>OF;p[Nj
%5(\f"?j[MTjKHYQL]X[lj;so1?p9Aa%`K^&(SQ'43[t>BYf#Z`2j#7#)7OB&VPFo$b(s0:gu]n3-r(/S&2.n&POYK#k^Z6NND0+#
%+dtiTC?/@"R?W\BhDrSAOX2<k4ScUnH`[RH$Re%r_Bb_7lBFA%-b/%\k]qMGq]\5](*"l!R519bS)B=#::H`XA9'coPSB\j:\p->
%`dkfD"ht=_48NnJ.*<TP@NHSYC^d?f)ae5#c?=_-O\+#W8O</aOuOE(^G<f+G9EiS98&0R]Ijj?R'Qc+6(71C9rM>*2FKeX'UT"b
%d\Zf75ZE'9+BIUEcon&p(*-*NfIkm\0l.+0YZ#7cl.-.6f81'aMKrD\7hao8-/TpcS-5Rp.M`oNX[CVQ<QO\XNbFHb<">dXR&*65
%MF7Rn0Q@XH3oML>S>T`20YJmi:/dniI<ASE_:-R^*/aZ>)>XRFm")n<Ar8c(!I4kVE<dQA:UpQ$RONpcKA*jj*em)4kJ/Ps)YTq;
%p!LXE:`r7W88A;0,U;#^:BXAhjRpAV&eWPLA4P6`o]fIpOFaJGNQ)YOAs&Y]aQ?stk\I1DpPX^?&:`J'!$?S^(QuY%Tu@1RO,j&T
%V3GW=SOW)NWMm]QHIBi!e"3"e9B'=:?/"XDb+hTN7ROFF;J<\&,`C'[MDRPg`N@Ze*76iaj<tC;,hSGM!"KDMpPrDkAkc(^h:#^t
%"L-JKd,@oNOQu=8\^_WMg+KE<b8oMT@p1QM\r;<=7RKc,dY6aT547G;&M>eiNu3-Oq[X$[^dn\$0d:fko.c7rnPem$&e=<i]R9Di
%bcH?;X4"l++^S((F'r#02Fp1b.e0!f0ekkkZ!>_:,MRVHnq5piH,HKOoH?8e;NRuP1NE%UNi3#5lkg2G]G0l0TnA:`9"F[V3!U/e
%[*2H[M@TGgC0eT1I)bR'=hIErCi(r,o%"gk8ra5hqKLXq4+!LF2>Y<#9;rA,e:QYG*&[5^[NQiK0qmmT4s?C=mlG_n"t\!"#sCbL
%;\@9/&ThNS_(?Jf#4lR_99?bMjT[QcJ5k;inP?SR-Pb6h:>.%9M7s!HD)OF8;U?Y,\cMG#/9UVCN[Ui.?r%P*lnePU>6A1"C@gH<
%9H>7@l@j<2*,R/A3f+m-%FdnNEj-:1q+)EbSj8718i!e@J^7Ccg8:_sgIGjcZP+:0^JKa]T$oG-T\(rn9P_J0+.]gJ3WX'b_0-X@
%[j8EM9@M<_clJ9u.u`)@pH[MsK5)WaIqLUp+lP0:'/]83$C">N2Lr/`AFFf!VNRJX@oB3/rQ8dRZV6.MV4o%SkenR#jXmd9O:aRs
%j?R_9Ac)O$3*NpR[-E)u@!%R*EX<ekaN@s)JaJ<>foL1.F.j\3k9gleVQVYoT98+`h*"8mDK4ffL=^\ph*2NV<csr]l*dpAX]b]O
%+_8AU);%5lQmB0Z5d%&Jfb\;u#H:0L)L"jh,>lh4+ru-:aY%=ueoFpZ<'oO\i_*V=Lbd8U8B)>3+'b01/lCR!n?1@Wm`qYV*bd0H
%K.4oXN@14SAD`Tn'[Wr=),\Bo(gqighGg#U2i5?CA<)fn-uQgR+[XHhBW"kI*:WJOQ%BR37'U//*SI9.^;L)-"tL&R`C%4.e4T,1
%k&t[nB4g`$gld'/0YOqVH,/pX5l*q(G2G!pM[UJL=%S?XILeJc(>uUqPQjA8*iXP?4&Z"ZB+Yj4^<\Mupu5c5^;ILkfEpFn)aN_1
%\"IE%hHlVNc:iI/'K;0m=./(u,8!1\2B+A'O*SN?_1ELJ#OA8u6;=!0U^@-sI^e/tGn5,;P#W]`<D3f8$lk/q?+JE]b^1jLX/bnR
%9!b:?&Q-=W-;TU8?R]&;U7?@sqtqrjl6pN*-c@7,@c+[,>V.U;a%(BDV`3(*h?m+%%3FV:Z5q/X&:jqU[VQQaiu<O'5WaF#f9$6P
%pVQTcpHJMr,e8X)o!J4:)ch'*bk?^tNWhe[!+6V4"WA/WB8mLof/4NZ(N0<Xk+CMW*k/e[S>.1g@&CgiE4Y3f@%5'Ji-uWS>t(=i
%U@WFqZHNZK=(1^&W@b">^m^WJXR:dE;'_;W)paGGVL-^'4;l"`1dTldD;sH1<6QM<?ZgIBHm;uMN"njfIp]:fVqHmoC8/BEGlQ!i
%:G<1a82fj[8KQ>EkP,Xc5i0s4ARoa>bflQOH5Zmfc+rLAg0k1I#.5J8*KZWE,bT:-,W[;XP#kh$c%][K3]].C":jkDDdh[\$CcI'
%'0U`7*U*qcqJc+t`7hcnT%oEZ^1qor$,A1A<[UI,[_P_oe"T)D1Ci@='Qf."kFj1lB2=#:Us$Q*esAL5cmqJp?q^dB?!>GK=j/+G
%1.UYJIT-:rZ3C,(Gr+#n+c]X2$6'\TqWLS[5r8cTYjW+pcRecT-]!NN;-B&E"uUQpb210p4^e-!Jo$9KL%de3U"J)2a3\&\,p@ZX
%Fdb$=`!pU$mUl\9"ZRF88M]b(NO992/tSGG'ZY)UhI0Y"FP_61LaEGL5a9r1*E*'^a]02H2i4gCA0g^P8=hKk[P=R'-6RS_^"I"d
%J-ZJ&?Fc@h+oa`8rfIH@09&pcEQA7M+TW+c_+FV<o</\cOp-@iGmjnmPHT#lc2WUq`uXjn#,*hhJLVk1J)'#LA&s)-aI^^B@W"'?
%!@mb+@fA*W#l2M+PT&[tFJ,Jug3NK8;/f=jJmMA$q+$1q(r3J@7sjA?Z,9-%=9DVu5ghYr)4f>&,RI!]2G2c),kaE2!g4sLHKpGa
%#/,kUl5dMe%3<"Um>*=MM\q;3BcNBOI.;Y2@2V`C#N,U8a2<iC.7bYo&M?-sg)!YK;2Y,_j@_M.nXg:Fki3YUZ"X1d&p]d&&<JU8
%eXA3eUe';,pnG6ROr."@nj+B@,G;-WTV\D*Kk[s4pcEgD"@>I4M#_BO]9=?K5T7_N*XK50#_W[!ZKh]eDAiY8)jgbZ!`>s3r9LX2
%&3c["mhi5GUHf[j47]_HWd.'bLk;eP0Nmuq&>1<\c56,\,DcJEF?4:erFOH0=s!p*'M/ue&nT:@M)&g:]_oJ+nb@jj'M7ZSjdd*\
%K)?o?&^.j'*7!1+1iW:W-Ps*]_e4-EDq:gRU2m!JL-pnKUO]=L^kh#\cp7B-d1-j9e1cnW].UjD&LJ8)Hd1iMn//Yc,f-Rc-D<\^
%!bM(k?d>eS3Ycj:)qG%W',<_ikP-%9;)TH^!(&j=n#j/?l&uSfTUukqe`0m9IO>>(?$+85Y5736<=dd&;kQ#Q[$\#*-i/r;?.ZF)
%i^`^R[tp4!rI+Mrca.Ucre(ABH?fEXD\6PbrYVYpP"AR'F2kPiU&:Go\Ot'Rj0D3n<ZD$q3WnU7m5DD-[nM-"FVEaBL%Z_YF_\t1
%'P]jZEA0ECg+9=('!D`8k:eK*+0!8u\`6f<76e+NMYJ$I4O_Agad7VAK\bq!^Zh):7<LM*?aolikJ!IYpM#g'bFNHd+@qAp,E_F5
%M^ng74IL6=gC><ioW?)\nU<s_>@6P-O!lHDMC0Dcj-_3p,d:PI6%O*p^'*R/Hi*(</I5+n;7W(Rmu/Y0G3"dIAMi,kh]p:^7X3`n
%7)"iDQSLZgSSXffb`dk+Zcs@V+\r.\e#==%nV&e+>;GgaKA)<!&olMR.M3q&(_RfddRLfE)sbs8#oANG(8^d;@\7rrNi/0f4`*[<
%6WDd^ZYR+^2[B.9Q(2p>!B$\mb"F@AT/ah)K3/p&.5F1$Lrb(L[$<P;,?]o929?ZFP"E8eO,^udPI5Jt8Al%R[DDYIkEG_GiL&Y8
%4KJ8J"OD!Aq!b^"C%Be//\1TPAjFW;hC%>ndM>EHOf*POnRl]'-:1^MO0o;9_1d"GhP@[/1.:FK_::Im'(<WLjY]Kd\N1)d[aM>u
%rPLB2ft4@F,,E8L]9Kn/R%^qBQjG?)Hb-=<g)-0$Sp+@V'N%skC]C8P+mrOnZj*6uS;,X,:+L`-)5c/sgYC*4[,*5"-FI`ZU*tPJ
%JsNkkN&.AsL^InS%)XVWXZ,aULh*;TK$tVe&uRT"AP@ddp,4:Z]L`f>4M9u;7H2&\ouj9f:"t]=X>b!aQ!;3eGU,lu!t\PdYCV2p
%*`3OT:P`6qS0:<m+<0Uq7u2dRYSqdV.R/\tIDir>bF#ehB'"C_S>Xj\1L_T]63NdU6/DuO?PWo[GbV$;1(ri%[<'ol#IEnhrT(LG
%[O6WFU*5T1l*+s.$D2n=)b?eMA1Zm,1D$-TKKsc)8k$]*r)bc4^M1q"7%#nL?M>44((S*iCN4LbI5i5DI.r2Tr"6j*2h7aMM,KRl
%_thCJrLB8n*tAMZqIiD(C8\5D!>p#UUZFjMH;fENR\'D0^.KH!!dmSe&"D\n%d3)WopCr=Z>_daH)4dc+Eq7D'4Kn;iNL5F'<MT2
%*HF3gIW3`5@:C^QCE3iq+SSD%5j?R"M<,-3.C*po\V&Q69`jG1Go#C*5PsbS:'V,<3phuOfW8IUrc_-lVuM?!>d9m[$FdO^!.Dd>
%MU/+g<$P0A+J+q'qZ\b<?f3^>nmC^!(r0i>7Im"(Js:\T+WY-$p"_F=g%56`9DFE5h4A"J5RY,!2/&kgKO<tOFNU;-0p+n`nt7=]
%1(sOVM69XA2U*pNIgC@WHehmonTB>RdN&=gfl^X"q9@V6;7^oTh<jL][VqK)(/aW`F0Z-eQEu^F'D,Xt:h9JD$K&N9AAOHXGq6Jt
%aW<b^r6\BErsfKE7Tr.ZGQcSUd_Me#ATiZJJP)92D,NJ#$G(;jToCf2=tQW+""`&>[%ZB3=o`BYq^,%R"b-LsmC2e5Fof3?$,pT8
%!l[S`UQ*b\!&@,GP*lGpQ@sisKYfiL8>PNaqg8#RFAUM:lYKC#$7[38r#%b,%R_)R9PrRTF.iD^[e?d1%RXkCelsV1G[F4o\P8">
%paO!Af`VfKA;Yt2G=1@b-rA4FCUHo%7<*VdV+9?HWRG'>l,<pDHAe_cCJ!Z?\U_GJ#aga`[b:58OIMZk:80^<h-?)3g+]ICPZH17
%4`bBDJ;^<#BLi'#E[D\[aK=adB#Z"^X]lOMFV1EkSul3Q+V68A)m.AI_N6_!XGG+BK-$ttc1irX3s4C@5WOqcis@d;25R%O<%G5&
%b4S9mH!j$o]hP:.YoYBUFKSA.iT,r`/ele_GIm_'h+J-EcG.AI+qZf,o^ecO8[VWkBT@MJEkui?4s)c`gi<oZ>D;?8Y$F&5J",@V
%bPao.R_e(.p)jcEZpV7drO26.K$aUR"i[?8&"kn/Sa\K?^>_.U3`,=(3pK[]fLa=/ZZAu;lR3+,pRng_,a>lc^d\Ch7+\pi-oUC)
%[atKpNK!PU9m\(8afD-\Y[i2K^&TL>\[lmMjI@&l5g(Pm?fY*QJDFPmLk*NI/Y"!J-Z1AHdquLQ3VMuqi69RlgY?R5KR.MDk(OFl
%)QIT.g!4(N@C'ZU3?4-Yi:m"fNfW_CdU?1@_pD-kQL!afV),Oth9'buF6SU+dZ7GpQuG8mXMbJ=4uC1p0@>M7=B4B&MNQkSqYddd
%d[Sf"3?Z$U!X%aOnPM5H&k?NKT8f]uBhfJ86LURSX"/*IXfSX`SIqGaa==hC:&k`dbs6H>U5ZhcRjj/!BtpM6+]@MuZYDlkK^bA"
%ES=SZ[&Y;+4F&r>7)Ml'\g1<-@1Zo;[0L"?f_;W"2;][>4^ABu/XN8#o,F?G6BU*35ibpp>Y7MbK(dW]*5`T_"G']YY?)/uc#"-t
%*sbUR0D)-l.L#?$i"/G&1!s.ci0q;Jf$Iht.B#Gc21T5RL"l1="M'J:2mfuEn!r2kYG_!(`c!1n[E:l+s+*gP#S5:eL+:GqqGOAn
%p-Zme3gG4Qm7F1U:7i+DUQ/L6eIXGK_\K;aX^*h)1TE%4k@h1/!"H>u(_l2gdLkZjYI^KjU+0*"d>8R(ji@0O(jUSdep/*3?U\JO
%4X>-Fi"qM-E(o>DlnJRUEilA1Yq^cR3RM+qC_CD>@KcO6nJ`/IVP,H.pnJO'D$R2JNHUjr)$bc->&cGW@^D+6pl'gSlf]aZNc7dY
%=hf)(JO#!"PO@9Pb,jL1VRM?o',`lR[06V`#CnX`L=)"#ZmU^KM1nW)fk.t@=e0t*LJa&s5elXmBK(qkJ2\_EKW@&.cd&%Z^lBYI
%&hZ0='CC.pU6UN7AR^g"obIo`1Qg^'5k-&#_Ic-p5/CD]9TDYPrU=SC4GQC\(6Mhcm]DgGnbN@RL('>Yd`6,@n`)XIRG1q;>MGAk
%Alt#Mfr[@"pE,P>=LoA*Sm/d50U(SQaoH4nlkAr9"A5O!b/saTKJn3.bYK[>D4qW35ZBi7bcNZPLb?'E@q^7t89_:XJLj0)%?,/g
%jN1),+C<EQX&Pg[j=upT^"^p/P"F%/0$@gg#Pk*3@o$)d?jnb=)1#9rkV$brKPM;*M*o<aSFV$6LXo`iT77C0ME^Zj4.`X"cLAkP
%?.0]IHlLm@M%,!&V#P&CFZJqV"9]/Hd8o8r6b\ShB[1?&7)+B\(_&AgMCfMrI@C4,!d%=!lU"$RE*t!WC!]9i)-J[`064&2O?X/P
%i?HaQ#Z+&,Wu(Ac#(.e+)!]3'm>1iRO9Io215=MJS+/c?+V2LFjKk`uL6jNZ:=<P)%]hArSm10:<]]h%\Blqi8QtaV;];2VYdnRh
%)h63\h3ko-6uX?Od$fQo_29UAW#$HUO(/;VP1_Nu5W0AI0[d=.r^hcW?),i/?M$l+o6aV0,L!]kG)#*F?gX;2@=o+u]c$C(L*s0]
%.bRK$5RHaiDDCfU,En7uCF^nFJ<WFKPYkn=iu!nYUNN+IGg!15iWeuBaR&!MNoVY-:uhl0*T/uk1GRlDJXEm+>j,+\0H%V*0F5m,
%2R7GDOm7ZC_/LPc!4`Wi#_CQX%::Sj"s'e/:uF0$%<HUb0eeA&d8"#?iOgQs)IUnV5Y,q`4[Z(HJRCFO$Z`L(]nMP\6n0=>&h`J$
%/Bej9Tl$22+8'=M'@Z3:ef:9\A`.Eb)R>M;JHER#I``_V#k6k/gY":.CQ="K#"Cn-%@sm5@kY\40o1+)(n>E=3%q,mf;#(-457lE
%+9cs^rtn)$l66,OI\0bkkhRkYQ)sSGhBP&u>50"YZbM0,:)c5?ic%/1TYs.-Zahs%c)Mr^pr>W%fEY.i?Ot(8X29'1j8aUcI*8Ci
%o##GP"_?k6nVt$R"QJ_q5"I>J6d[Ie.g8ar8+mX]P$+WR[eecr5l+c<b<k3Hm.=!pM]`7]]*Hn8^SlYAjN6/d"esiMm@Z^RjaKTm
%E/@=*YX_065$sJ:Eq+="OWso;(7iCZUEBn_+t4FO=5]j;&flrE%?OF`L(^d+jr=BHVIg<=d'o$pPh7L\73ft2i!@dRO?O<aer]A`
%e/6sE2M*d\BIFB*?R\3#U7>ppP1HXnoIIqgJZ-n?I0*[S-#sCUS/>m+Si1H<7V)PMg1R9rf;PbfD;j<4$b35Z0((Wl'uIY*^6M:6
%Va3rC5LA@Y_eWkGdLMHu=srfhI*B\Zd(N#T2K==g"i)ge>gtE-&"B.?gVQVppOK?,IFQn,K_R-NL7n;Y!Qe^ZS[#aP^oDlk_>`R/
%IL5=$U&u(bp25_C?a:=8RC>0p,D:ZaR*](?GRSJ*];sN,<o+O@V;D=Y,;2AcW*AggpD+%)GHn.sk`R^,,!/!n&:(%k-daghJP'BL
%Z\mWgXd^IaafRYCl3NFO>GAHP-3Q(&mZbSiU1a]hmD@GU:*'m'3<Zr/LF]l)LHV>KWuTRlge5P8Lfu.\OM@NF<gX'lI+]kg$,VHG
%GI18Bh]h1*<-^&.@>b0>F"7l<-EBnM[VgpR<,j6UVi`>MAbd[RSh*ad5Xd&GC3ZEQ(9T:*VoTeKF$UMd-n:IDTn_ch*"`6(oV,4u
%VuSd@`c\?9E"4T5F/t\OfFIUj-E%%]0\s-fJ?@U0kq*QZ"eItn$]KL$q_ksj0RA`rRFf0gA7PM1SnH'n;5bg2F$/i[i8qqUT]hGp
%q)!'Kh'Z;+#B3Kb8LBbi/g>'e=?[Q9Ugl?O@!_>1U*2rGJ&2,(dMjTrf>N9$"SG^$?niYTN97rr5Mk@)O4:DkT*FO@+tT;OR:cC:
%^Jc?)*411IKcIPJ<qoSeARZ22lkjqg#u&-+r](kR;rfV$4,#+S'U#YnZ^=jfn$N!FomsF+-b%Nq6RJr_4+<(fhg&F\&&2C^?IA5X
%3O@$!q0RPk@aQG`b?COB5,)OF&U?>o:F1[FM#tM)5sn4C%_m_kn=]6MRmdXR3X,a7>m[g?<c'rC\-W<mD2<hHFB;f`M!4jXkMQ1S
%^hV2X3lm#R[j&D.7q@jU.aTb!)CbNW'0/LL2PF1#(m)Nu&]!_hQaR6noEGI'/=[q=O15[je8C!*?buj2>3d/bLfeDPF'sI0cpH+T
%*f/[.mkZ\X"dFV72i6EZi7mJ$gi_-6*t7!+?Q%BQWW\sg;W0@O'/mXK(!ss-_Y4JVTlIgohX3tMmEJ*7A/&usG:VJ"(HEZR_02;(
%/SH1qV9]`].a?\-#uX2u7/$``m4+c80_kN5"9'_g8+.HsVSm>MgG7%Wn/A5DRB?GEp"5u"M]ji_\H`4S0U(`p]GtN39F2@t\sfER
%_7Ar4%*'r>[M7q^/gcEfMq*Pml])o]k.##Hm!s%:C<uU.^iR$rK8iATLs1ch3#N(#o-En3VdH`u#3SRXW0.E%QFdfghR?8Ao0G'X
%oJX]L[60\.]n6J:2G-[VlXB\(HGguT1,&#AbE_E(`)XCQf-XU4nL<YabQ;ULp:UHJDI)KgL,]n=94HDsR$+W-8L47t811:\<1@S3
%!`\WP,1)WF?h]X[gaHa>*ROO?U@Pj:o#P;@s0X-Ad(D4$YaL*-E1c>W\F2J=AGI9%l,l0T>;3RH=CmGXf`BPk6@"OB3Im=&.DF@Z
%de(=D,pq+kRejS%?5DKkGKL.dXZ?6\_4"`J.jXrf7"dW58/gf*N[/I]G/]IM[P%!o"dZQ65VHpG)O?81jf!^>ba9Hu-2;TQ-+gFd
%X"Np)\m8@NOAjNVR3T:mau+9/6*p!d4KD^=i_J8S=;8hN/g2[s2A*E\eN3t]e35^)7r;j8k]F=Ma(8GPAu7n6OFWfq>1N2fWLj?#
%kgn7*AMHXk7GEV7KgZiD@B1Uaq@U#kb*1+7F%K<=n_1q@s)>qu09+)W$1H6Wn+>*Ib"6?<4/RVTY\5<YOV5Y(jlCQ&&Z%A1$!gHh
%*1)qdTEA%,edSa/Ms.@o3-3M_4'OFYd]CGK&7od6,>!+%ii-i/AQ@$<aHnp)-6cSoa6\LVjpYLf&\?A7:agC>?D*cSdbA*ho:/WA
%#MmBSE%09aUS!,h7>9e!VT]pt$>e%>XrSSd76t+S0(m`?HHUbX-sFj&+tc,/F7(EfZ,9.jFj<AUNRYu;_bf\6.?ZaT5a4$5B+(;a
%WUAVI7-We=CO1me.H9P=7lBJTLH9'aoGCE+=e',qF25o?lC;kVq\\q#EqWAoN*HE)(9&(U&\TT*$d*k_r_9d:n`YP9H0BL.p_Xi#
%`,%l+?!^PV845d39F&fhKgKF^138h!Mjp2l&msl#;V3Nm!E_bAW4&\Q<rAL$!DT"`ITc]g=a8WK,/a4dn=tPY"7,3uoXnd<B_sX5
%4Q6>gVU^W>)*8KpP@_Op,&`EXS]WAM2>u*2WXiK9+hDA_>,:(n5$;glA$f#)R-cA7eeEZ:QH!+dK],]'BojXJ=?F`(aUIYbE][ms
%)aoaC!_;2Wh+S3;F9J_L]aeia6sf<gl-'j/!_*SM@,?tZOm%1I\pk$KHe7L3Vm,#4'V*uM]'\)-\nQ`T;%7W-%h_<kf/4hNIeHJt
%djN]bD<Gg+>5V5Fl5,>OOU45`6d4pC$5g9odYOgZ(VtG`+1)bH`lHl54?3(d5E7Cc8/l#ZO?a\O&>h]_rL/rTB8utqB(j='U-hbE
%0i65JR8&/WY&gDSMb,GVWaEO%78G,rGQ#t?%(&MV"b.j)nP(80\dk#<"faF-H2s>*:&in)ThOGN"ok.bCCW>ukM6B7=`Dgj6+1Q7
%]A+\#lJikHILpIZ,a#/:6b\Mts(m2@A"Z)urFCE=LcL1='f838D57+f_^",A^o,n;?)aKb$u3:*j!9c&fF=),b/-W1U1-1ATp8Qq
%?K?o=7sNVHc!`'8coHPP/9D@`'!b_M=/4(3LQe`%J&_"5Skh[)ARN!K,VsCVW9aq_O%jj)Q?[sc-oetQM4kU4hHNBSJc8aa?1G=_
%I=A(^m;i\8@"&Gt11]5OKLi3J?3Al7m")TZQ<AFD+["*^"a#;MgsEu:m&r$"N3pA`LA'm+`1Y)4MuNINBnmXU`lL@8aT+WAZS`^B
%r@qUKc)2\:8W5Ib%<4o-?CNaTT?46*MX54.6lRSHIDDJnV7>#^njOg[L7>R[%I,hUrSG0>"em(\4,]KeeW7[7or$h!oPQmS3'J[n
%8Q\RB[cE&be,"L7DT?g:?f%D.QY\`:DJNN50hL0Y`'fC(#(1kuh[U4qa4p^j"/ngVFMJe.0jqb*gQlchXFWT&MM^Dr<HD_>8AgS;
%-"C3*DdLID*<ic(L0Ta7\mWaHV(3]63o$6]b_608i.21Km2I(j7-)=Mpc`>aD9!iW>;V8\7"otOV.08Tf53WJiYmtC,C4XN$bkk"
%>DW)Q"2u\sJ,tO@41G]@ql]6K+\H3JnTAa^jT2SVQS<Gb<cZ]@.,3>B]!mL0%tMo*J/`S-ath]![u1,ZM1F3'=9+6rk!mAlZ,R2Y
%'kE_nl!<39f3#D%_h&/"RJ5\0j?aO?%52il+nd29!l1FT*SR"ED!oK_5K:a:).;@I0gn&TL&7g8=j6+Hh5D0q@`p:V(R,H&b<4Oh
%[t,afk)2XA!B2WB7nM+VQl!Lc[K=KtnI`C;\'Dnt#8E/^E6A.lJPX-,4LZVD&m.'Y7pu4uVlt!af@#<aO2tJ@^JgjTJ.r^a5TECc
%B&4\'AVP]j>=:),WPDRU&S-a<Pbb5pcrd/.lscF$Gf)H^O)0)In]gPCZYq1T'bb6-c7`[G6U%%hLo#2?VoCP\<Z^$bcMJTN*?RWR
%8#s6k3BrgVPHGo<bBs6lO'eZVb9rqX76?AW[XO\!%2iB#1X[=HL$(s"[76$I3!:H%!BJ*+gLROu'\=ZC5012>KKTWi!b#GggDZ)"
%o7"S+a2^//$-mHs\'4XWr#2*__"5D<I<jqPJ_YcW6Ghe%NTtVb;7T32X@+@`VaOD&[gf"2D;bB*9*G0,@e*e/2$m-)h-38NZ-Ufs
%,+sjFBR>Uf:_5:&_[$,G2>!Q7UY?6\<'26JY(Z*TF:jl]4RdK,A]tDJ2H(Ir(U:hk%7n=QC)\oMY);F/nWiL6-V?<X&[0=B*0KYr
%46I)C,%0:?f1D+6[:ZKq#m@cmZS7J,dE^Hi"b?@s."!uPcSatf]\ihp\O,C9('r/Z$&)lF06r[)b#k^mrMcQ6jB\L=h8AR8,'$a=
%BD4q"kgRsWKL*''E84r`3>,m3;Gc@mTdXmF[F[f<N]A8'3G)+S2sK+eQ!FHf"UYZ;IKY1KNk#1fV:%4B%F[M]$jqrk4.DLoqW'>E
%(4(&:[>?n8+7kCeCIkr#1t7N[(c]",&DPF%fu$np"gPU<6Ab:)3Ta@#oQ0;f.lA+b3G))-]qb2n)F:PsN]Eeh3T`ksap_6$hW98@
%+V)^X7%'G[fCThUbV=b6mcW'nJ)m!%d8iZ38Iq.t"pLPr2^dZ2b;&&$l!2A!C\Ki$:`RZK`FpKHr<B?">#=iiY02RnlE[5Ggg^>?
%E=.;X4_EiDEP9DS5dMV]NYt7GFtOY1^U]1LEB315_WGV;5!8q0>0p3!dA\Lg;Dq3jh,0KK*G?5@pntVY$X.-4PJ<-*M@$gam+R-J
%(&?AZmX]c^?Z_-S(&E#:iXu>u.-BO#[79(O:R#=GqU`CgIJX!D1B6oPm;O-!VqHhD\7kSa#"k>4ep#GfJURCPBF0/k!c_!9<"]e8
%MN"BcKb_.N)pM6!@K]'Jdic#>US(S?oS.*7EpLjX;6DL6[t.VtF906,.65AfP'3IGQ6cj3+OHr=dAq!E"'TL`"34qj`]5F2]GW7)
%7\I4nfYA1<.lQ-u4U&TV#9"<$>.!WNkde2td%AuhG4\("K-^KZMfq#e2ss=_UU9(<"q#Q@r1ZH0acTfVb++N'-%Na8lVkY*TmFH4
%!q#k%pC[*&ou[N4gb54[*;4P''5+MHe<X@]#rr'9NBcUq&C2hG*KK+,Y6f"a2T9aOhprUQB8t'Q1ICg:q=)r]q)]l(&dDWPgMmE;
%4lDoTX$V)q#`X4I[EFWtFmfp)\Ha1@KSEGCD(nkS\nH0g*Wp+nBE!3PNc"h.]`=kZ"l]n2+disaF?i3#&Y6K_$bO%7KAEo,SV]81
%M0?14\6WMF,h?OdfP%uN"rT)L[j,a3_rABSJ]XV-.lDY\0b/I:jRaXT,E$6`Mks:P%66!9&DACtp'VIb_PgCaBmpCk10XBfTN@@$
%TE+$W#q(:__/O6(;S0>W7tN-/+q99*PAb&=P]7`CZGb)BJPt-;jMWpYdplI&"@,e+CXp+,B=VRTF`N5fkg.9_-k"64N_f-Q!e%T+
%KpHo-Rd_3G8[`h%3M;Q'af];66ugOids=0tF0?,dh@/iGjb<_,dU[<T2tEDoRA>afLV1R--H?q9*5@15o42sgTH%[DGPBkOJ\XUb
%Au?9VHc(5G>n&#.?DSV'VF\dV/`";s'V;4qrH5#W`a'"sLLFO?AiCNP[mo6uWkhu(m+@^-P1sS671+K@5qcq*dQs3_"W]uUb7^.m
%DILcM0LY:Ke#dH+Lt8!q9XrGBc<:>X'R__FS>.+,)k`EVM+^L0mgQuu*3:_n)i%QldRD@qnT;M%3PlLbMg[?b&c>I!J?RU#/N<X!
%&u!S7KVL*p:BAa\rNm3<73Y/[^E>NnCbHET:444=5sZ>$B"*Jkcucs\i.2jOP](9e/k'6-mPcR(ai)k`DR7/]PX`@M\)l1c+2T<_
%$:$/h#SBYkBfS9;*1ZGM-hA%pU0Fhd39t>7@iuA@\a^l%l#]KZa=%n>/\%eA>c^C[1[]u>nPbMABPdfuGr<ZF^Ei-F!`h!D7g\J"
%\Z(bn8Ep-$V<`m7J9:9Y5Q)n+m>+S]:$^N?&EfC]`k;`hh%OusXqjG3G_k$PLn'TGD[;T%q[4nH/p(<VqbKhZT]hkb1n\^O%$o$6
%^L._IgADeP,uO#b"=l/sY&b0m)o_Y*Hch**\l8-PA0jW>Vc1RZ!Gh-Pm%l?HHQqL9N>"'kfsG$)qbQ\6a4)4UfO4ktW1V`b*QH%,
%MDH/"(n_GJkL,<kmr:b_ZV$^d!Ule5@H8FBH^d6U[Y'7:[AtWH<rpa+Bf<LH60[AUc=5-V;43,X0$6R#bHu/<eNd#L^uWJTm-'mC
%=r=nYXW5:5$L3GT@hfIEd"nb7'knO;K_o%Eg<GQH6l][a,$M8h=1MiU:9%(>$TLtM!O/3:%\?DBcYSDV,XN!Uoko1L^P'Z\JkBF<
%#j?WE@1WDmm@Z-]T&@'`#jQ/K!$_&iqEV4S0J$AiL&iS77ZP<I<o>*P6:GooW'k&(Q'_uJ>->r*NFn_Ee'#6d(slgf+(%EOZEIjI
%B[jX4OCRF1Q&@LQ>o;tIL+>`k^VIlsT;`2VI\+'gj*-#k+*s`1,d5+EJ-2!5e\DWpcM[S/nPBP5:37P[!;J^lJO)AOF3):#36q:9
%cP#*nLn"W+\9@!_B0@+h"?lmN"53n`c6]OY,@6XiD?i9jVBcM3C`q_DmkT4\e,.(&<u8lZC+G;E!n0*aE]JaOb$U-r),3T9#CfTp
%(HUn(Ki"Ec6b[bY^>MA1>+IJ8Jps_RM`W<G<3#&1V[o/K!S&(;gk@BC"kk9$\H8ZG@l"O+&I4:bBZ"9=(Lb<5an.;>)r-?);LgsN
%*tOrS>q3.sn$D?ABh1ZT\r=K](m+h>j"-Qjnhgt4#_6&B[;O`"#"jV"Q:G9`2YN[.F,=qS28^QIEAKBkLMI)=8MdI$@tNbfmh3XR
%:@?=/3#]Q):@=+$_"=(HBS1NN#t79'Dh^O1e<pO@OU=1[lhI=5&fo#;V&6'hTJ@X`kJSGKnH.C2KLsX<Xbhf:B[*Y%%R8;1TpU@U
%H;-p53@7FZI/p-E#QspeU*-t=5upa8$8d2=N$eB%?)FB-\ddb+,d^<&I6@bKk<c+u[TC\/lnQ"sgPY7Tp;J/12;Kn=](HN##[TX.
%k="jcd<7T2+Hm447"J3Rg/;C7,*o9*7jSia!srn`+V9LpM6]r`m;<-I>=;j_/7($]PUNWt/L&n8p^gK_U_qA&&KNS%khM9<&S)lS
%32:`!8ATcgCB7Tk#!7j=p0#J6!_m="q;`Cg!@f`LWQa:B\DK77UWIRg5b1:E-kFeSm2@K8o#J8@E1d?(,aNsa0ZB$[0-.P@.=TFA
%gjg)-DOt_Siu6A)m>Ak'n#_pHnbNn&R!>//r),ue@!;fF/17PgU\IEJ$E/<%`u@;b+/K$p*VpDX&Q\O$.KJFER/UXiE>GB[<69"A
%?&c]/_h`%lAl-D"Ymo.J\cFE1cuPO7g_cFXShhAGA(i;E^AD_)@l5lm*'l>:-5]l$WG;*i4rND''m.blWec0nb^&V=*4<dW<J/mt
%$FgQTP=2EWT&Kk+SQ%HQA?Gd@o12k,8g78;gTDA]'#[Kg<VXFJ<#-HFUe4J$cT.R@7&mKC$?0XfX<CD/1q;fBFtmfBTW00h9)lhV
%;NA]jD@Go+Vp<P:27MNF>e96khjTu&`5_G!$RB)8;ZWST0$ZIR\?e.0%X%-\FsM&WJ3GlM"[r=QQ%Z,Es3cp5ejZ'_W?P1PV@'MQ
%7]GBNI?Y)2r9+tiU/\Z&ki:(uW?b)iq[\C]2+*5Z%7K8mVeaB[:.a_AH0#5Qk9e$1lnQ;`6`9USTp/s"'*TTOB2cJ'PZ8($;ukY)
%Fq'l80NCKb4e67dV^k07!^RHp$8aq9KlrKY3]5*C`2N/_oTQTuoP,/:Ji'79dl-0R`2IV]cURrB8N/r169`lmdifoY<-#qd8Er7q
%4p_g:*8I_4f'XEN!gkN@AO+[S0e+m0GqW/o+\!1MToW'aPc%jugmp1@.[g%l2&mgfETD]nI7X>s&7l%g10"EY5Ss;%&W6MMcn7ee
%D$FVW:p.M]k\Nri+p<YD5FPqGg(t$'FB95i8CG5VWlb4oVq:7_^<F3scEL6WR_2oB7\jh;G':cS>R^QsO3l*gGRQTqU_rrAIUdb7
%A6o[;*Hr)tg:,%MJRAt2Ve^IBM.B7d9G^9u$[OHI'\N6\#c$<i%=$ktYlc6g/a7ik@4uXh5hRC:\er/m_O6T`DB95'+iMQXrHA"0
%],WjI7q6Borag\&(?k&bT><qINTrkuoS$A!=n@LS+H@#!U=brU8*Go/3TV^(1</rS.JJEY(5S8`hp>VI48Ng^IqRq>>GO,G^R;'o
%58`&GS%=C\.dSaRc<J2RQ^`ZTMAWT(]QM=39=`?%$W%a/N[BK,4qa:Rh4R(jq\1Rka-*TfE)h9ZKgeCb/_/4)>DsL$L)H!=I^+4O
%`;@H.qZs0<k*bO=0ZC7Nf;Np1CQ1IS]cX/GA-1K3H<RIe5VYK[TZQ/I2QhLoK-WT<c20#J%gf31-Iq=LM#A8%j^%6dn2r6)1S<Xn
%_BdqIe9k?Ph7^01HPl@!8TXNdfd<#_J"'I,62uHE8RO1JPc-<Q"I+>f'LalCVXl>R"\;OajJm8G,b%2+?r.P<SM6>@$DE)\s,#Qk
%),T^YnD$&&9rE'L'mZX@^(qOo\9Bmf-`ts4iW9F\RT!0&!rV6"o++5?8.[R!K+aos.PScap><j,J;+_rloHECP:81(L[LM'pkl/C
%/1Wq5A^$/r1()sdP(.e%;,h^C4:qcBlbIXgb^SKueX:rZZ*g``'L^u35"F6GGn:!\lc,W/I+L!6:,C]2/:58["V4tud%UV_6Ko`'
%+8Y@]r5u*m'%n/hmg.mja$<O?or-GW'\k1Sr?TZs4AH2[e",\`j3qC#$V%a"$_8'!P-%=l`&7Z_:5D:,N#:'0;&!DLT48!qY#HCi
%rHO*G4lgtI)0hZ0`I-<ua_sW,67#5:M0=Om-NY1'l8:u`\dcH<h8:Vg.HtqZFQ(RQ*;;;nme)):_'H0DD+=a+MM6con!10CO@VSe
%_XXkn6%L)8:0(c79hDLqR2mGk1b"PV(6&q74F9A$2)2;[qi)+0B:g$mJC-SjS@G?RkI(k\Uq2H@ZS;U@#`/fZ$jtMEp1h+t0#j@l
%TR;\V5_hq`HNMSL3f9@g##bWGqrA%n9S&(W5/q^V`VpS1:Qn6)F0)W.^9+0TMVEV(TjY'ARgcOWdG0D"LHu`#%-La:CC^1\Yb0F>
%r=V;E&PNCo7Pl7=O/5?=R?FXBqV\)spWgbV$gK'Rbik[ZJR2T4G#*]bieegcr]7-ARU".1E^MlUa)3Te&=4c_YRQ!H46,;oh:um=
%!IRg#:uRA-&SmJQ''O"Wd?=iuO]rZ*_Kd0\7hW;,g#UX*pu'lloEG6VH_sdh"Fo@To0>1PY&*;@T"/D*+eGWLJ9"oVC%+JN[+?PB
%Ogm1f*^9O!i$M(iQjr6$8@J)C+npgTZiM`&#&#A%<$:f$"">D:_sU(L9E7S>oKWX&2Y.'=aC(U?lb"76KQk(!Rr2A(#9jtPdeO`&
%5.Mp>/tF71iRK02Ol=$WG%MY-_rf3X.P46'`rkgg''InC'',CRG\6f\UCdr?<qfICm2eXhF%NKkl@8_^.#;Ysc3ie*S!>e%Gb.$A
%#^Q<Z9+HY(p*Ge4$R6i!SD?)NMJb'S7*(1YDGhf.U>BRpSKFR!)&1icEl&?#!(Ur@@fZoGJkuHqeUOc7Si+ns37VMS<@("`SZdZT
%]?!s_\U@6*KV8Z*0QX8/ZE$G_#LZkb8TO0al6B\F*E>UNEkK4b`OH813-1';-.Xa/0Pc6!PIa!?RQP"<iL+NOf[!2H/Jfl423PH?
%ad]c$r"_$(Y"0u7&kD#J.qW1N-$'b>PRbIiEUS&VfXoIL=n(kkVplS$G0S2+1\T+M"XY?^1`*gF"Kf.CVU?lK:)kpk![;S/Mm^2V
%49iA0k=;_^`;MLL#,V+%gg([n\_e9?0"VHZZQ\9`gMqc(9O$*Wa7H-Iq6`K'UMmO]Z`Vf&N3FIO1$&75D'2O'<YC87BAq-soQ>'a
%`Rk':9'>mt?[Is=%RaIT1VE--U?$G!!hSBI,d1l9R"n-(4!Vo)MOr\,>RIV29lN$&iT_MN<,.9q*/MClA=-Yg_;^TSL,>Q[9LsE6
%27+ug)sunP%d5nI/YmB0Ke#%57,gXu&*$)B+,[N,.9hMR[tdKSF9(\7R43PP59:O:+rK,&RS\\-0m#-/agTMu)ir]GN/\b\\.,L4
%l`UIc"/oE9.+P(X))ZST^^F-8'(9FGi1V\O;?/ll(t>!Urf["<M:0;]ZsqbD2Ppqt6^6Dd\>H`kP'RX\pgWIB5`(0@a)G:OX=hkf
%A:GeCE/gY*m)$J0hH\?`4O+7u#haAd&/VU`mE"N[A^%PSg..tSj!"o=nrfi70[p47IiRl@^F9OXS,C"NAb&uKbe_3Tc2hu#Uc$m!
%mn*dYSK;]2-_.o`kkqf&WR5VTf\])a+><e>Fj+rT-#OL+E+0A%4aD_&][?L9,s#a;E)oTm>5]*<-#MEh8[8eL%?f]:.%a`ofo`On
%V'gD-MR:(gYW9,d%Sk,0F)!)LV7(H*AOb,AJ]*!]HuU][hk#F,<*=3Yh7+XmVI6oYj'#j$HPf/.hP!;W?]=u"!EpB'$mr_#"6c)*
%j,&SNom7Wa*Tm7%Z%WiVe0I;U**tgB8+9JI&tDYc*%c\8\`[rLW3IR.T(-`Q%X7A&>`fbe9BRe%c$!mm9cZY19S'EC)'I.jA;S0+
%9?ZR$?fYaZ/(eupn)52FkQ$pJUaUS?FZk$Y:Ms]E2"K'="i$mBk,4U5P+E)C6+!fNF7pXjH]B6l9L,3(^"kT)%mt6D!?$+mY!fq-
%(fh_jjXuhubhQcs@@H/&HI*N5mOYJtCY8Fk"-%B7I`Z'%M-YKV=[RScNa8u*,P7uLK'6Td7_Y>"QL8sb1U?lrYLD;jacnXCZG]s3
%0m:]]>.G<-+3->JH*>0?;J%)!UM5!T@a]dF00n<2\"X7b"L<U]f5pJT.iNsaOf3"6I[.jC[C-)a>37pshWkZMM>Pk,aruKR.EFHc
%6#OoJp)Z`QcjA3^9kVAaQ%Ymqn3L2SFP)qAoEopae5eQ'9`'O-NfW_c&dg8odq/3AJTjI!B]/p;EuV8ZdW:lh-+6QFHZ'LA"o84M
%&$LDecgR)&4V/lV2Si/cLh\]@jKO]_R&jc:@d5+%&kDj'-UO=J'l,j4NYk2TaFZ!>9PQLf]dGO\igq+Z]J59r$1pU7e#Tt*4q\og
%8IHpA#;urMY+oqYW)\bTV4U,!Fl1Dbb&[=)Ij>_c+N(*=)^s_=N\l:YRd%tUA0iiQR!]HW)bBU;PZ*6`6,%8Zi#a.MT3KJPM'::u
%'cRY(;s<n'*cl^fB9fuk^iA$D"i^uj':;"#mY`UfjUuN6jbB8%E^#O)>c?p.87:?)_d=[nB&6M4"6gnKD%2i&/j:/RUZ4Rc&n5o_
%\Qce14pnPX!C!jAh3FIAlZl1G*1qn`^3<eM(c!;rT4N>X)A\/OH'-+b/G&u!PS.EOg*eo.JsaLh+/ndJN!]CLFb!71O(+,3c\PmJ
%n-T7.^s;P=WK&M8Fs!YN>\Cu%6*NnE`4+alhBL*p@$*'MjLD;XW'+"dXl4D@&Ub`()iXs\*e0o#5We`R32>@[O[DP=`K#Mnf-hJY
%a@`*BOJFbM<r"2ceT?AD9I<&q!l]G&g2:?tRqq!eTV-D,a"cLKPPbmZ5#F<s>DqKNco>D8%(4m=/Hntnf":M?(NJ2Z>nY(a?g']%
%4-kc3Yd]0-pAQ@+cbA1F,n=0/ISeH0*;@EBmGct`'-j)FZr>sELPL+TM<f*hQ[VY:gTW,Xp&2V=\j0W/B-TF5LcL_372Z4^>5ApR
%3<)^[4q]/N,JNS/U51hK35Z8'Hs_<G/4TM"lT`&RaS]&?LI!5WY<E.&3HNXpFW#-&"t",'f)>D$4"*oX8PH'cTd3hQ*[=$fW=t2N
%+oWX.PVFuZ;a5i2D?b@=-E_%a4D"+#Q<"or_n@^&1"7ge),dU4be?Q(UdI*S3UE`TPgEkN^*m\ML`>AY%-$Dq2`@7)iXNr'NfS2(
%igo&LEeuRl3S-@1Oo)gJr;-,:/YMSlVSf@uc&3c5DAH5ROVE?pC4&;+icV0]Ghsa@6_tG;Erg`cYBu05/fHS'_)6fg.2&A1oO<]I
%/Eq4A7sL9Q"*Ku);&/hOZT9'sWJb2'$:M!FL$Im1f$c@hnP,N<-3AF9Ma=(]qF2ob9)Q9(D#ZUp]#gA9NN[CkMRZ?sBULpMM6MI:
%mlj/#6SO&kdIs!I6Y$hsH>$3h\sb8gn?oi&5>+g(5_3[UCH0YS2(DLKLA6oJ3MMJ?0Fj=p[5M9f[tkZ?O0<ngaBcWPh'3Lsi@FC;
%@&])m>0K#tU6Ir?4@PU4)'7+.6qPri+`^^u:r&?E'X9j-cCih87p/[43k#/K.cjbUKH=9/:co?5ICcqR'=E@%?_MCceepm13De=j
%XE,n2Fk8?p_/:gf?9YJb>ClQSesW5DM:I[1`io6G1FRbX2@"R)Zu\PGe'=((4ma8bFdJWm>==mu(t\Bq;+s'(#S$NKa43k.Un)e+
%Y;I]ne'=U/IXG0:qm8/Oq.Q$XP-d"nH@;#9H5iQNJ$>;9OpBi0"E]%Y/kJ[$E#FZJRD4ol1N)u$\2Q4\Vk$-'cUUWqgYYDf\?tjC
%GpBc;O8nVYJ+L.!pHS<Mjkp'ts8(c:s7`/bq;;)hqSD(gO+7*!TDn#'ro=%KlVIQYLVNZV?iKhMrTW@'s7hZToUl-XTDnJ4d]Yk6
%r6KlhbCBAdJ,[p;?iKeLqTnpCrb25Ghu<#XrHIo#rs'O$KQ-~>
%AI9_PrivateDataEnd
