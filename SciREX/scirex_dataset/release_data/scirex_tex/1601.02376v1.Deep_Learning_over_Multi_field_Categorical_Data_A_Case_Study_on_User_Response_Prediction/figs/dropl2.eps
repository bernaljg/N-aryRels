%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Simplified Chinese
%%Title: dropl2.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: weinan
%%CreationDate: 12/31/2015
%%BoundingBox: 0 0 360 288
%%HiResBoundingBox: 0 0 360 288
%%CropBox: 0 0 360 288
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 104 8
%%BeginData: 15078 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD9EFFA8FD0BFFA8FD74FFA87DA8FD06FFA8A8FD17FFA8FD
%13FFA8FD06FFA8FD06FFA8FFA8FD39FF7D5252A7A87DFF7D7D27A87DA8CF
%7D7DA87D7D7DFF7DA8FFA852FFA87DA8FF7DFFFFA827A8A8A8FFA8FFFF7C
%A8A87DFFA852A8A8FFA87D7DA87DFF7D7D7DA87DA8A87DA852527DA8A87D
%FF7D7DA8FD32FF7D52527D27527D527D527D7D527D4BA8277D527D7D7D27
%A852FD047DFF525252FFA8527D7D527D52FFA8527D52277D527D527DA87D
%52A87D517D527DA77D51A8A8277D52A87D7D527D7D52527DFD32FF7D52FF
%7D277D7D52FF52A7527D527DA952A8A87DFD04527DA85252A8A852527DFF
%FF277D52A8F8A8FFA852FF277D7D527D52527D277D5252277D7DFF52A8FD
%0452277D7D7D527D7D7C7DFF27FD1DFFA8A8FFFFA8A1FF7DA8FD0CFFA8FF
%FFFF7D7DA8A8FFA8FF7D7DFFA8FFA8FFA8FFA8A87DA8A8FFA8FF52A8A87D
%A8FFFF7D7DFFA852FFFFA8A8FFA87DFF7D277DFF52A8A8CF7D7DA8CFFFFF
%A87DA8A87DA8A8A87DFF7D7DFFA8FFA8FD1CFFA85252A8FF5252527D52FF
%A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8527DFFA8FFA8A8A8FFA87D
%52A8A8FFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8A8A8FFA8A8A8FFA8FD12FF7D7D7DA8FF7D2752FD057DA87DA87D7D7DA8
%7DA87DA87DA87DA87DA87DA87D7D52A87DA87DA87DA87DA87DA87DA87DA8
%7D7D7DA87DA87DA87DA87DA87DA87DA87DA87D7DA8A87DA87DA87DA87DA8
%7DA87DA87DA8527D7DA87DA87DA87DA87DA87DA87DA87D7D52A87DA87D7D
%7DFD12FF527DA8A87D7DA8527DA8A7FD05FFA8FD0FFFCACAFD10FFA8FD11
%FFA8FD27FFA87DFD1BFFA8A8FD39FFA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FFFF7DFD1BFF
%A87DFD05FFA8FD21FFCFFD11FF59FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8
%FFA8FFA8FFA8AEA8FFA8AEA8FFA8AEA8FFA8FFA8FF7DFFA8A8FD1BFFA8A8
%FD38FFA8A8FFFFA8CFA8FFA8CFA8FFA8FD05FFA8A8FD13FFA8A8FF7DFD1B
%FFA87DFD05FFA8FD21FFA8FD11FF7DFF040B0A0A040B0A0A040A52FFFFFF
%A8527C52A8A8A8CA7DFF7DA1FFFF7DFFA8FFA87D52FF7DFFA87DFD1BFFA8
%A8FD38FFA8A8FF2D10110A1111110A110A58FD04FF52FF7D5227A8527D7D
%5252FD057DA87D5252FFA8A8FF7DFD1BFFA87DFD05FFCFFD21FFA8FD11FF
%7DFF04110A110A110A110A0A52FFFFFFA852A852527DA87D7D5252A85252
%A87D527D527D52FF7DFFA87DFD13FFA8FFFFFFA8FFA8FFA8A8FD38FFA8A8
%FF2D0B2D0B2D0B2D0B2D047DFD04FF52527DCF7DFF7D7DA85252FFA8527D
%FF5252A87DA8A8A8FF7DFD12FF5252A8FF52527D277DA87DFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA87DFFCAFFA8FFA8FFA8
%FFA8FFA8FD0DFF7DFD0BFF7DA8A87DFD11FFA87D7DA8FF7D52A87D7DA87D
%A8FD37FFA8A8FD25FFA8A8A87DFD12FF5252A8A852527D7D52A8A8FD05FF
%A8FD33FF7DFFFFFFCFFFCFFFCFFFCFFD09FFA8FD11FF7DFFA8A8FD13FFA8
%FFCFFFA8FFA8FFA8A8FD38FFA8A8FF532929292A2929292A297DFD04FF7D
%FFA85252FD10FFA8A8FF7DFD1BFFA87DFD05FFA8FD21FFA8FD11FF7DFF02
%F9F9F903FD05F929FFFFFFA852FFFFFF527DFD0FFF7DFFA87DFD1BFFA8A8
%FD38FFA8A8FF2AF9F9F909F9F9F909F954FD04FF52FFFFA77DFD10FFA8A8
%FF7DFD1BFFA87DFD27FFA8FD11FF7DFF01FD090353FFFFFFA827527DF87C
%A8FD0FFF7DFFA87DFD1BFFA8A8FD38FFA8A8FFA87DA87EA87EA87EA87DFD
%05FFA8A8A8FFA8FD10FFA8A8FF7DFD1BFFA87DFD05FFA8FD0FFFA8FD11FF
%A8FD10FFAF52A8A8CAA8CFA8A8A8CFA8CAFD04A8A7FD07A8A7A8A8A8A7A8
%A8A8A7A8A8A8A7A876FFA87DFD1BFFA8A8FD39FFA8A8A8A1A8A8A8A1A8A8
%A8A1A8A8A8A1A8A1A8A1A8A8A8A1A8A8A8A1A8A8A8A1A8A8A87DA8A7A8FF
%FF7DFD12FF527CFFFF527DA8527DA8A7FD05FFA8FD5BFFA8A8FD11FF7D7D
%7DA8FF52527CFD047DA8FD15FFA8FD2DFFFD07A8FD11FFCFFD04FFA87DFD
%11FFA852527DA8FD0552A87DFFFFFFCFFFA8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFCAFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FD04FF58040A040B042DFD08FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFA87DFD12FFA8A8FFA8A87DFFA7FFA8A8FD
%44FF58110A111111057E7D7E7D7E7DFD11FF7DFD1BFFA87DFD27FFA8FD1C
%FF580A110A11100503F903030302A8FD0FFFA87DFD1BFFA8A8FD44FF5211
%0B110A1105F9F909F9F902FD11FF7DFD1BFFA87DFD05FFA8FD0FFFA8FD11
%FFA8FD11FFA8FD0AFF580A110A110A0503F903F9F907A8FD0FFFA87DFD1B
%FFA8A8FD44FF581111110B1105F9F909F9F902FD11FF7DFD1BFFA87DFD05
%FFA8FD33FFA8FD0AFF580A110A110A0BFD05F907A8FD0FFFA8A8FD1BFFA8
%A8FD44FF580B0A110B1105FD05F902FD11FF7DFD12FF7D7DA8FF7D527D7D
%A8A87DFD05FFCAFD21FFA8FD11FFA8FD0AFF580A110A110A0503FD04F929
%A8FD09FFA8FD05FFA87DFD11FFA87D7DA8FFFF52A827A8A87DA8FD15FFCA
%FD2DFF580B0A110B1105FD05F902FD0BFFCFFD04FFA87DFD12FF527D7DFF
%7D7DFFA852A87DFD05FFCAFD21FFA8FD11FFCFFD0AFF580A110A110A0503
%FD04F929A8FD09FFA8FD05FFA87DFD12FFA87DFFA8A8A8FF52A8A8A8FD44
%FF52110B110A1105F9F909F9F902FD11FF7DFD1BFFA87DFD05FFA8FD0FFF
%A8FD11FFA8FD11FFA8FD0AFF580A110A110A0503F903F9F907A8FD0FFFA8
%7DFD1BFFA8A8FD44FF581111110B1105F9F909F9F902FD11FF7DFD1BFFA8
%7DFD05FFA8FD33FFA8FD0AFF580A110A110A0BFD05F907A8FD0FFFA8A8FD
%0DFFA8FFA8FD0BFFA8A8FD44FF580B0A110B1105FD05F902FD11FF7DFD0C
%FF7CA8FF7CA8FD0AFFA87DFD05FFA8FD21FFA8FD11FFA8FD0AFF580A110A
%110A0503FD04F929A8FD09FFA8FD05FFA87DFD0CFFA8527D52FD0BFFA8A8
%FD44FF58110B110B1105FD05F902FD11FF7DFD0CFFA87D27A8FFFF7DA8FF
%FF7D7DA87DA8A87DFFA8FFA8FFCFFD21FFCAFD1CFF580A110A110A0503FD
%04F92ACFFD0FFFA87DFD0DFF7DA87CFFA87D52A8FFFF527D527DA8270A2D
%0B2D04A8FD3EFF52110B110A1105F9F909F9F902FD0BFFCAFD04FFA87DFD
%0CFFA8A87D7DFFA8527D7DFFFD047D52A8040A0A110A0A7DFFA8FFA8FFA8
%FFA8FFCFFFA8FFA8FFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFA8FFA8FFA8FFA8FFA8FFFF580A110A
%0B0A0503F903F9F907A8FFA8FFA8FD07FFA8FFCAFF7D7DFD0DFF7D7D7DFF
%FF7D7DFD04A8FF52A8A80B11110B110AA8FD3EFF581111110B1105F9F909
%F9F902FD05FF7DA87DA87DA8A8FD05FF7DFD0CFFA87D527DFD0BFFA80411
%0A110A0A7DFD33FFA8FD0AFF580A110A110A0BFD05F907A8FFFFFFA8FD04
%0A0B047DFD04FFA8A8FD0CFFA851527DFD0BFFA80B11110A110A83FD0AFF
%7D58525858587DFD2DFF580B0A110B1105FD05F902FD04FFA80A110B110A
%0B7DFD05FF7DFD0EFF7D7DA8FD0AFFA804110A110A0A7DFD09FFCA2DFD05
%0A27777D537D53A8FD0AFFA8FD11FFA8FD0AFF580A110A110A0503FD04F9
%29A8FFFFFFA80A0A110A1104A7FD04FFA87DFD1BFFA82D11110B110AA8FD
%0AFF2D110B11111101F903F903F929FD27FF58110B110B1105FD05F902FD
%04FFCA0A110B110B0B52A87DA87E7D7DFD1BFFA804110A110A0A7DFD09FF
%CB2D0A110A110A01FD05F929CFFD09FFA8FD1CFF580A110A110A0503FD04
%F92ACFFFFFFFA80B0A110A110402FD0403027DFD1BFFA80B0A110B110A7D
%7EA87DA87DFD05FF2D110B110A1101F9F909F9F929FD27FF52110B110A11
%05F9F909F9F902FD04FFCF0A110A11110B02FD05F97DFD12FFA8A8FFFFFD
%06A804110A110A0A01FD050353FD04FF2D0A110A110A06FD05F929CFFD09
%FFA8FD11FFA8FD0AFF580A110A110A0503FD04F907A8FFFFFFA80B0A110A
%110A02FD04F9037DFD12FF7D52FFFF7C52A827FFA80B0A110B110A03F9F9
%F909037EFD04FF2D110B110B1101F9F909F9F929FD27FF52110B110A1105
%F9F909F9F902FD05FF0A110A11110B0209F9F9F9037DFD11FFA87DA87DFF
%277D7D7D52A8040B0A110A0A02F903F9030353FFA8FFCB2D0A110A110A06
%F9F903F90329A8FFCFFFA8FFCFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFCFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFF580A110A0B0A0503F903F9F907A8FF
%CFFFA80B0A0B0A110A02FD04F9027DFD12FF7D52A8A87D52A87D7DA82D11
%110A110A03F909F9F9037EFD04FF2D110A110B1101FD05F929FD27FF580B
%0A110B1105FD05F902FD04FFCA0A110B110A0B02F9F909F9F97DFD12FFA8
%FFFFFFFD04A8FFA804110A110A0A02F903F9F90353FFFFFFCA2D0A110A11
%0A01FD04F90329CFFFFFFFFD06A8A7FD11FFA8FD0AFF580A110A110A0503
%FD04F929A8FFFFFFA80A0A110A110403F9F903F9037DFD1BFFA82D11110B
%110A03F909F9F9037EFD04FF2D110B11111101FD05F929FD04FF7D042D0A
%0B0A2DA8FD1BFF58110B110B1105FD05F902FD04FFCA0A110B11110B02F9
%F909F9F97DFD1BFFA804110A110A0A02FD04F90353FFFFFFCB2D0A110A11
%0A06FD05F929CFFFFFFF590A0A110A1104A8FD10FFCFFD0AFF580A110A11
%0A0503FD04F92ACFFFFFFFA80B0A110A110403FD04F9037DFD1BFFA80B0A
%110B110A03FD04F9037EFD04FF2D110B110A1101F9F909F9F929FD04FF7D
%0A110A110B0BA8FD1BFF52110B110A1105F9F909F9F902FD04FFCF0A110A
%11110B02FD05F97DFD1BFFA804110A110A0A02FD05F953FD04FF2D0A110A
%110A06F9F903F9F929CFFFFFFF580A0A110A110AA8FD10FFA8FD0AFF580A
%110A110A0503F903F9F907A8FFFFFFA80B0A110A110A02FD04F9037DFD1B
%FFA80B0A110B110A08F9F9F909037EFD04FF2D110B110B1101F9F909F9F9
%29FD04FF830A110B11110BA8FD1BFF581111110B1105F9F909F9F902FD05
%FF0A110B11110B0209FD04F97DFD12FFA8FD08FFCA04110A110A0A02FD05
%F97DFD04FF2D0A110A110A06FD05F929CFFFFFFF580A0A110A110453537E
%537D53FD05FF5258525852527DFD0AFF580A110A110A0B03FD04F907A8FF
%FFFFA80B0A110A110A02FD04F9037DFD12FF7D52FFFF7D52FF527DA82D11
%110A110A03F909F9F9037EFD04FF2D110A110B1101FD05F929FD04FF7D0A
%110B11100B03F903F9F902A8FFFFFFCB0B0A0B0A110A7DFD0AFF580B0A11
%0B1105FD05F902FD04FFCA0A110B110A0B02F9F909F9F97DFD11FFA87D7D
%7DFF277D52A87CA8040B0A0B0A0A02F903F9030353FFA8FFA82D0A0B0A11
%0A0103F903F90329CFFFA8FF580A0A110A110403F9F903F902A8CFFFFFCB
%04110A0B0A0A58FD07FFA8FFFF580A0B0A110A0503F903F9F929A8FFA8FF
%A80A0A110A110402F9F903F9027DFD11FFA87C52A8A87D527D527DA82D0B
%110B110A03F909F9F9037EFD04FF2D110B110B1101FD05F929FD04FF7D0A
%110B11100B03F9F909F903A8FFFFFFCB2D11110A110A527EA87DA87DA9FD
%04FF580B0B110B1105FD05F902FD04FFCA0A110B110A0B02F9F909F9037D
%FD12FFA8A8A8FFA8A8FFA8A8A804110A110A0A02FD04F90353FFFFFFCB2D
%0A110A110A06FD05F929CFFFFFFF7D0A0A110A110403FD04F902A8FD04FF
%04110A110A1101FD050328FD04FF580A110A110A0503FD04F92ACFFFFFFF
%A80B0A110A110403FD04F9037DFD1BFFA80B0A110B110A03FD04F9037EFD
%04FF2D110B110A1101F9F909F9F929FD04FF7D0A110A11110B0309F9F9F9
%08A8FD04FF2D0A110B110A07FD05F953FD04FF52110B110A1105F9F909F9
%F902FD04FFCF0A110A11110B02FD05F97DFD1BFFA804110A110A0A02FD05
%F953FD04FF2D0A110A110A06F9F903F9F929CFFFFFFF580A0A110A110403
%FD04F902A8FD04FF0A110A110A0A01FD05F953FD04FF580A110A110A0503
%F903F9F907A8FFFFFFA80B0A110A110A02FD04F9037DFD1BFFA80B0A110B
%110A08F9F9F909037EFD04FF2D110B110B1101F9F909F9F929FD04FF830A
%110B11110B0309F9F9F92AA8FD04FF2D0A110B110A07F9F9F909F954FD04
%FF581111110B1105F9F909F9F902FD05FF0A110B11110B0209FD04F97DFD
%1BFFA804110A110A0A02FD05F97DFD04FF2D0A110A110A06FD05F929CFFF
%FFFF580A0A110A110403FD04F902A8FD04FF0B110A110A0A01FD05F953FD
%04FF580A110A110A0B03FD04F907A8FFFFFFA80B0A110A110A02FD04F903
%7DFD1BFFA80B11110A110A03F909F9F9037EFD04FF2D110A110B1101FD05
%F929FD04FF7D0A110B110A0B03F9F909F903A8FFFFFFCB2D0A110A110A07
%F909F9F90354FD04FF580B0A110B1105FD05F902FD04FFA80A110B110A0B
%02F9F909F9F97DFD1BFFA804110A110A0A02F903F9F90353FFFFFFCA2D0A
%110A110A01FD04F90329CFFFFFFF590A0A110A110403F9F903F902A8FD04
%FF04110A110A1001F903F9F9F929FD04FF580A110A110A0503FD04F929A8
%FFFFFFA80A0A110A110403F9F903F9037DFD12FF7D52FFFF7D7DFF52CFA8
%2D11110B110A03F909F9F9037EFD04FF2D110B11111101FD05F929FD04FF
%7D0A110B11100B03F9F909F903A8FFFFFFCB2D11110B110A07F909F9F9F9
%54FD04FF58110B110B1105FD05F902FD04FFCF0A110B11110B02F9F909F9
%F97DFD12FF527D7DFF527DA8527DA8040B0A0B0A0A02F903F9F90353FFFF
%FFCA2D0A110A110A01FD04F90329CFFFA8FF580A0A110A110403F9F903F9
%02A8FFFFFFCB04110A0B0A1001F903F9F9F953FD04FF580A110A110A0503
%F903F9F929A8FFA8FFA80A0A110A110402F9F903F9027DFD11FFA87D52A1
%CAFF52A8A852A80B0A110B110A03FD04F9037EFD04FF2D110B110A1101F9
%F909F9F929FD04FF7D0A110A11110B03FD04F908A8FFFFFFCB2D0A110B11
%0A07F9F9F909F953FD04FF52110B110A1105F9F909F9F902FD04FFCA0A11
%0A11110B02FD04F9037DFD12FF7D7DA8A87D7DA87D7DA804110A110A0A02
%FD05F953FD04FF2D0A110A110A06FD05F929CFFFFFFF580A0A110A110403
%FD04F902A8FD04FF0A110A110A0A01FD05F953FD04FF580A110A110A0503
%FD04F907A8FFFFFFA80B0A110A110A02FD04F9037DFD1BFFA80B0A110B11
%0A08F9F9F909037EFD04FF2D110B110B1101F9F909F9F929FD04FF830A11
%0B11110B0309F9F9F92AA8FD04FF2D0A110B110A07F9F9F909F954FD04FF
%581111110B1105F9F909F9F902FD05FF0A110B11110B0209FD04F97DFD1B
%FFA804110A110A0A02FD05F97DFD04FF2D0A110A110A06FD05F929CFFFFF
%FF580A0A110A110403FD04F902A8FD04FF0B110A110A0A01FD05F953FD04
%FF580A110A110A0B03FD04F907A8FFFFFFA80B0A110A110A02FD04F9037D
%FD1BFFA80B11110A110A03F909F9F9037EFD04FF2D110A110B1101FD05F9
%29FD04FF7D0A110B110A0B03F9F909F903A8FFFFFFCB2D0A110A110A07F9
%09F9F90354FD04FF580B0A110B1105FD05F902FD04FFA80A110B110A0B02
%F9F909F9F97DFD1BFFA804110A110A0A02F903F9F90353FFFFFFCA2D0A11
%0A110A01FD04F90329CFFFFFFF590A0A110A110403F9F903F902A8FD04FF
%04110A110A1001F903F9F9F929FD04FF580A110A110A0503FD04F929A8FF
%FFFFA80A0A110A110403F9F903F9037DFD1BFFA82D11110B110A03F909F9
%F9037EFD04FF2D110B11111101FD05F929FD04FF7D0A110B11100B03F9F9
%09F903A8FFFFFFCB2D11110B110A07F909F9F90354FD04FF58110B110B11
%05FD05F902FD04FFCA0A110B11110B02F9F909F9F97DFD1BFFA804110A11
%0A0B02FD04F90353FFFFFFCB2D0A110A110A06FD05F929CFFFFFFF7D0A0A
%110A110403FD04F902A8FD04FF04110A110A1002FD05F953FD04FF580A11
%0A110A0503FD04F92ACFFFFFFFA80B0A110A110403FD04F9037DFD12FFA8
%7DFFFF7D7DFF7DCAA80B0A110B110A03FD04F9037EFD04FF2D110B110A11
%01FD05F929FD04FF7D0A110A11110B03FD04F908A8FD04FF2D0A110B110A
%07FD05F953FD04FF521111110A1105FD05F902FD05FF0A110A11110A02FD
%05F97DFD11FFA85252A8FF27A77D5252A804FD040A0401F9FD040352FFA8
%FFA82D040A0A0A0401030303F90329A8FFA8FF52FD050A040303F903F902
%FD05A804FD050A01F9FD040328CFA8FFA82E04FD040A0503F903F90302A7
%FFA8FF7DFD050A040203F90303027DFD11FF7D7D7DA8FFFF527C7D7DA87D
%7DA87D7D7D7E7E7E7DA87D7D7DA87DA87D837D837DA87D7E7D7E7E7E7DA8
%7DA87DA87D837D837D7D7DA87D7E7D7E7DA87DA87D7D7DA87D837D7E7E7E
%7DA87E7D7DA87DA87D837D837DA87D7E7E7E7D847DA87DA87DA8FD077DA8
%7D7E7D7DA8FD12FF527DA8A87D7DA8527DFFFFCA7DFFFFA8FFA8A8FF7DFD
%07FFA87DFFA87DFFA8A8FFA8A8FD07FF7DA8CA7DA8FF7DFFA8A8FD07FFCA
%7DFFA8A8FFA8A8FF7DA8FD07FFA8A8FF7DFFA8A7FFFF7DFD0DFFA8FD22FF
%A852FF7D27A827FF7D2776FD07FF7D7CFFFD047DA85252FD08FF52A8A87C
%7D27A8A852FD08FF7D527D5252527CA8A852FD07FF7D52CF7D527D277D27
%7DFD0AFF7D7DA77D7DFD22FF52A82727A8A8527D277DFD07FF767DFF52A8
%A8527D7D27FD07FF7D7CFF7D7D7D277DA87DFD08FF52A87D277C7D27FF52
%A8FD07FFA827FF7DFD0652A8FD09FF7D277C7D7DFD21FFA87CA8FF7CA87C
%A8A17D7DFD06FFA852FF7D7DA8A87DFF76A8FD07FF7D7DA852A8A87D7DA8
%52FD07FF7D52CAA852FF7D7DFF7DFD08FF7D7DA87D7DA852A87D7DA8FD09
%FF52527DA87DFD2AFFCFFD09FFA8FFFFFFA8FD0FFFA8FFFFFFA8FD0BFFA8
%FD11FFA8FD11FFA8FDFCFFFDFCFFFDFCFFFD1EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2015-12-31T17:28:39+08:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;Ul88XVxaeS9furaRobm3027lgmQ8WR0gdlZSOhBFRiryXTPNX5heVdBj1Se3v7mw1gaVZaRDrU0N&#xA;/cC9uRK9zc1tJXb0GXgI43k5FqD4K4Esj0zz1+ZOraro+ix6fY6RqNzbajd6g+oQ3DD0rC7ht42h&#xA;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&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2015-12-31T17:28:39+08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-12-31T17:28:39+08:00</xmp:ModifyDate>
         <pdf:Producer>matplotlib pdf backend</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>360.000000</stDim:w>
            <stDim:h>288.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:fd1e3238-12c7-d744-a1c8-b202f505772a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:fd1e3238-12c7-d744-a1c8-b202f505772a</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:fd1e3238-12c7-d744-a1c8-b202f505772a</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fd1e3238-12c7-d744-a1c8-b202f505772a</stEvt:instanceID>
                  <stEvt:when>2015-12-31T17:28:39+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -288 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 288 li
360 288 li
360 0 li
cp
clp
0 288 mo
360 288 li
360 0 li
0 0 li
0 288 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
45 547.2 mo
62.1316 547.2 li
62.1316 141.159 li
45 141.159 li
45 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
45 547.2 mo
62.1316 547.2 li
62.1316 141.159 li
45 141.159 li
45 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
93.9474 547.2 mo
111.079 547.2 li
111.079 153.544 li
93.9474 153.544 li
93.9474 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
93.9474 547.2 mo
111.079 547.2 li
111.079 153.544 li
93.9474 153.544 li
93.9474 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
142.895 547.2 mo
160.026 547.2 li
160.026 180.165 li
142.895 180.165 li
142.895 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
142.895 547.2 mo
160.026 547.2 li
160.026 180.165 li
142.895 180.165 li
142.895 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
191.842 547.2 mo
208.974 547.2 li
208.974 195.645 li
191.842 195.645 li
191.842 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
191.842 547.2 mo
208.974 547.2 li
208.974 195.645 li
191.842 195.645 li
191.842 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
240.789 547.2 mo
257.921 547.2 li
257.921 87.4316 li
240.789 87.4316 li
240.789 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
240.789 547.2 mo
257.921 547.2 li
257.921 87.4316 li
240.789 87.4316 li
240.789 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
289.737 547.2 mo
306.868 547.2 li
306.868 148.906 li
289.737 148.906 li
289.737 547.2 li
cp
.873045 .242161 1 .129244 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
289.737 547.2 mo
306.868 547.2 li
306.868 148.906 li
289.737 148.906 li
289.737 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
62.1316 547.2 mo
79.2632 547.2 li
79.2632 165.866 li
62.1316 165.866 li
62.1316 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
62.1316 547.2 mo
79.2632 547.2 li
79.2632 165.866 li
62.1316 165.866 li
62.1316 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
111.079 547.2 mo
128.211 547.2 li
128.211 157.055 li
111.079 157.055 li
111.079 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
111.079 547.2 mo
128.211 547.2 li
128.211 157.055 li
111.079 157.055 li
111.079 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
160.026 547.2 mo
177.158 547.2 li
177.158 195.931 li
160.026 195.931 li
160.026 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
160.026 547.2 mo
177.158 547.2 li
177.158 195.931 li
160.026 195.931 li
160.026 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
208.974 547.2 mo
226.105 547.2 li
226.105 204.993 li
208.974 204.993 li
208.974 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
208.974 547.2 mo
226.105 547.2 li
226.105 204.993 li
208.974 204.993 li
208.974 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
257.921 547.2 mo
275.053 547.2 li
275.053 92.0373 li
257.921 92.0373 li
257.921 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
257.921 547.2 mo
275.053 547.2 li
275.053 92.0373 li
257.921 92.0373 li
257.921 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
306.868 547.2 mo
324 547.2 li
324 160.191 li
306.868 160.191 li
306.868 547.2 li
cp
.883665 .769161 0 0 cmyk
f
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
306.868 547.2 mo
324 547.2 li
324 160.191 li
306.868 160.191 li
306.868 547.2 li
cp
0 0 0 1 cmyk
@
grestore
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
.5 lw
0 lc
1 lj
10 ml
[1 3 ] 0 dsh
true sadj
62.1316 259.2 mo
62.1316 28.8 li
0 0 0 1 cmyk
@
grestore
62.1316 259.2 mo
62.1316 255.2 li
0 0 0 1 cmyk
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
62.1316 259.2 mo
62.1316 255.2 li
@
62.1316 28.8 mo
62.1316 32.8 li
f
62.1316 28.8 mo
62.1316 32.8 li
@
49.4086 271.11 mo
51.3406 271.11 li
51.3406 264.438 li
49.2406 264.858 li
49.2406 263.778 li
51.3286 263.358 li
52.5166 263.358 li
52.5166 271.11 li
54.4486 271.11 li
54.4486 272.106 li
49.4086 272.106 li
49.4086 271.11 li
f
60.0887 264.39 mo
57.1007 269.058 li
60.0887 269.058 li
60.0887 264.39 li
59.7767 263.358 mo
61.2647 263.358 li
61.2647 269.058 li
62.5127 269.058 li
62.5127 270.042 li
61.2647 270.042 li
61.2647 272.106 li
60.0887 272.106 li
60.0887 270.042 li
56.1407 270.042 li
56.1407 268.902 li
59.7767 263.358 li
f
64.4807 263.358 mo
69.1247 263.358 li
69.1247 264.354 li
65.5607 264.354 li
65.5607 266.502 li
65.7287 266.442 65.9087 266.394 66.0767 266.37 cv
66.2447 266.346 66.4247 266.322 66.5927 266.322 cv
67.5647 266.322 68.3327 266.598 68.9087 267.126 cv
69.4847 267.666 69.7727 268.386 69.7727 269.298 cv
69.7727 270.246 69.4727 270.978 68.8847 271.494 cv
68.2967 272.01 67.4687 272.262 66.4127 272.262 cv
66.0407 272.262 65.6687 272.226 65.2847 272.178 cv
64.9007 272.118 64.5167 272.034 64.1087 271.902 cv
64.1087 270.714 li
64.4567 270.906 64.8167 271.05 65.2007 271.146 cv
65.5727 271.242 65.9687 271.278 66.3887 271.278 cv
67.0607 271.278 67.6007 271.11 67.9967 270.75 cv
68.3807 270.39 68.5847 269.91 68.5847 269.298 cv
68.5847 268.698 68.3807 268.218 67.9967 267.858 cv
67.6007 267.498 67.0607 267.318 66.3887 267.318 cv
66.0767 267.318 65.7527 267.354 65.4407 267.426 cv
65.1287 267.498 64.8047 267.606 64.4807 267.75 cv
64.4807 263.358 li
f
74.6327 267.954 mo
74.0687 267.954 73.6247 268.11 73.3007 268.41 cv
72.9767 268.71 72.8207 269.118 72.8207 269.646 cv
72.8207 270.174 72.9767 270.594 73.3007 270.894 cv
73.6247 271.194 74.0687 271.338 74.6327 271.338 cv
75.1847 271.338 75.6287 271.194 75.9527 270.882 cv
76.2767 270.582 76.4447 270.174 76.4447 269.646 cv
76.4447 269.118 76.2767 268.71 75.9647 268.41 cv
75.6407 268.11 75.1967 267.954 74.6327 267.954 cv
73.4447 267.45 mo
72.9407 267.33 72.5447 267.09 72.2567 266.742 cv
71.9687 266.394 71.8367 265.974 71.8367 265.47 cv
71.8367 264.774 72.0767 264.222 72.5807 263.814 cv
73.0727 263.406 73.7567 263.202 74.6327 263.202 cv
75.4967 263.202 76.1807 263.406 76.6847 263.814 cv
77.1767 264.222 77.4287 264.774 77.4287 265.47 cv
77.4287 265.974 77.2847 266.394 76.9967 266.742 cv
76.7087 267.09 76.3247 267.33 75.8207 267.45 cv
76.3847 267.582 76.8287 267.846 77.1527 268.23 cv
77.4647 268.614 77.6327 269.094 77.6327 269.646 cv
77.6327 270.498 77.3687 271.146 76.8527 271.59 cv
76.3247 272.046 75.5927 272.262 74.6327 272.262 cv
73.6607 272.262 72.9167 272.046 72.4007 271.59 cv
71.8847 271.146 71.6327 270.498 71.6327 269.646 cv
71.6327 269.094 71.7887 268.614 72.1127 268.23 cv
72.4247 267.846 72.8687 267.582 73.4447 267.45 cv
73.0127 265.578 mo
73.0127 266.034 73.1447 266.394 73.4327 266.646 cv
73.7207 266.898 74.1167 267.018 74.6327 267.018 cv
75.1367 267.018 75.5327 266.898 75.8207 266.646 cv
76.1087 266.394 76.2527 266.034 76.2527 265.578 cv
76.2527 265.122 76.1087 264.774 75.8207 264.522 cv
75.5327 264.27 75.1367 264.138 74.6327 264.138 cv
74.1167 264.138 73.7207 264.27 73.4327 264.522 cv
73.1447 264.774 73.0127 265.122 73.0127 265.578 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
111.079 259.2 mo
111.079 28.8 li
@
grestore
111.079 259.2 mo
111.079 255.2 li
f
111.079 259.2 mo
111.079 255.2 li
@
111.079 28.8 mo
111.079 32.8 li
f
111.079 28.8 mo
111.079 32.8 li
@
98.9611 271.11 mo
103.089 271.11 li
103.089 272.106 li
97.5331 272.106 li
97.5331 271.11 li
97.9771 270.654 98.5891 270.03 99.3691 269.238 cv
100.137 268.458 100.629 267.954 100.833 267.726 cv
101.217 267.306 101.481 266.946 101.625 266.646 cv
101.769 266.358 101.853 266.058 101.853 265.77 cv
101.853 265.314 101.685 264.93 101.361 264.642 cv
101.037 264.354 100.617 264.198 100.089 264.198 cv
99.7171 264.198 99.3211 264.27 98.9131 264.39 cv
98.5051 264.522 98.0611 264.714 97.5931 264.978 cv
97.5931 263.778 li
98.0731 263.586 98.5171 263.442 98.9251 263.346 cv
99.3331 263.25 99.7171 263.202 100.065 263.202 cv
100.965 263.202 101.685 263.43 102.225 263.886 cv
102.765 264.342 103.041 264.942 103.041 265.698 cv
103.041 266.058 102.969 266.406 102.837 266.718 cv
102.705 267.042 102.465 267.426 102.105 267.858 cv
102.009 267.978 101.697 268.302 101.169 268.842 cv
100.641 269.382 99.9091 270.138 98.9611 271.11 cv
f
106.593 271.11 mo
110.721 271.11 li
110.721 272.106 li
105.165 272.106 li
105.165 271.11 li
105.609 270.654 106.221 270.03 107.001 269.238 cv
107.769 268.458 108.261 267.954 108.465 267.726 cv
108.849 267.306 109.113 266.946 109.257 266.646 cv
109.401 266.358 109.485 266.058 109.485 265.77 cv
109.485 265.314 109.317 264.93 108.993 264.642 cv
108.669 264.354 108.249 264.198 107.721 264.198 cv
107.349 264.198 106.953 264.27 106.545 264.39 cv
106.137 264.522 105.693 264.714 105.225 264.978 cv
105.225 263.778 li
105.705 263.586 106.149 263.442 106.557 263.346 cv
106.965 263.25 107.349 263.202 107.697 263.202 cv
108.597 263.202 109.317 263.43 109.857 263.886 cv
110.397 264.342 110.673 264.942 110.673 265.698 cv
110.673 266.058 110.601 266.406 110.469 266.718 cv
110.337 267.042 110.097 267.426 109.737 267.858 cv
109.641 267.978 109.329 268.302 108.801 268.842 cv
108.273 269.382 107.541 270.138 106.593 271.11 cv
f
113.217 263.358 mo
117.861 263.358 li
117.861 264.354 li
114.297 264.354 li
114.297 266.502 li
114.465 266.442 114.645 266.394 114.813 266.37 cv
114.981 266.346 115.161 266.322 115.329 266.322 cv
116.301 266.322 117.069 266.598 117.645 267.126 cv
118.221 267.666 118.509 268.386 118.509 269.298 cv
118.509 270.246 118.209 270.978 117.621 271.494 cv
117.033 272.01 116.205 272.262 115.149 272.262 cv
114.777 272.262 114.405 272.226 114.021 272.178 cv
113.637 272.118 113.253 272.034 112.845 271.902 cv
112.845 270.714 li
113.193 270.906 113.553 271.05 113.937 271.146 cv
114.309 271.242 114.705 271.278 115.125 271.278 cv
115.797 271.278 116.337 271.11 116.733 270.75 cv
117.117 270.39 117.321 269.91 117.321 269.298 cv
117.321 268.698 117.117 268.218 116.733 267.858 cv
116.337 267.498 115.797 267.318 115.125 267.318 cv
114.813 267.318 114.489 267.354 114.177 267.426 cv
113.865 267.498 113.541 267.606 113.217 267.75 cv
113.217 263.358 li
f
120.873 271.926 mo
120.873 270.846 li
121.161 270.99 121.461 271.098 121.773 271.17 cv
122.073 271.242 122.373 271.278 122.673 271.278 cv
123.441 271.278 124.041 271.026 124.449 270.498 cv
124.857 269.97 125.097 269.178 125.169 268.098 cv
124.929 268.434 124.641 268.698 124.305 268.878 cv
123.957 269.058 123.573 269.142 123.153 269.142 cv
122.265 269.142 121.569 268.878 121.065 268.35 cv
120.561 267.822 120.309 267.102 120.309 266.178 cv
120.309 265.29 120.573 264.57 121.101 264.018 cv
121.629 263.478 122.337 263.202 123.225 263.202 cv
124.233 263.202 125.013 263.598 125.541 264.366 cv
126.069 265.146 126.345 266.274 126.345 267.738 cv
126.345 269.13 126.009 270.222 125.361 271.038 cv
124.701 271.854 123.825 272.262 122.721 272.262 cv
122.421 272.262 122.121 272.226 121.821 272.178 cv
121.509 272.13 121.197 272.046 120.873 271.926 cv
123.225 268.218 mo
123.753 268.218 124.173 268.038 124.485 267.678 cv
124.797 267.318 124.953 266.814 124.953 266.178 cv
124.953 265.554 124.797 265.05 124.485 264.69 cv
124.173 264.33 123.753 264.138 123.225 264.138 cv
122.697 264.138 122.277 264.33 121.965 264.69 cv
121.653 265.05 121.497 265.554 121.497 266.178 cv
121.497 266.814 121.653 267.318 121.965 267.678 cv
122.277 268.038 122.697 268.218 123.225 268.218 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
160.026 259.2 mo
160.026 28.8 li
@
grestore
160.026 259.2 mo
160.026 255.2 li
f
160.026 259.2 mo
160.026 255.2 li
@
160.026 28.8 mo
160.026 32.8 li
f
160.026 28.8 mo
160.026 32.8 li
@
148.041 271.11 mo
152.169 271.11 li
152.169 272.106 li
146.613 272.106 li
146.613 271.11 li
147.057 270.654 147.669 270.03 148.449 269.238 cv
149.217 268.458 149.709 267.954 149.913 267.726 cv
150.297 267.306 150.561 266.946 150.705 266.646 cv
150.849 266.358 150.933 266.058 150.933 265.77 cv
150.933 265.314 150.765 264.93 150.441 264.642 cv
150.117 264.354 149.697 264.198 149.169 264.198 cv
148.797 264.198 148.401 264.27 147.993 264.39 cv
147.585 264.522 147.141 264.714 146.673 264.978 cv
146.673 263.778 li
147.153 263.586 147.597 263.442 148.005 263.346 cv
148.413 263.25 148.797 263.202 149.145 263.202 cv
150.045 263.202 150.765 263.43 151.305 263.886 cv
151.845 264.342 152.121 264.942 152.121 265.698 cv
152.121 266.058 152.049 266.406 151.917 266.718 cv
151.785 267.042 151.545 267.426 151.185 267.858 cv
151.089 267.978 150.777 268.302 150.249 268.842 cv
149.721 269.382 148.989 270.138 148.041 271.11 cv
f
155.673 271.11 mo
159.801 271.11 li
159.801 272.106 li
154.245 272.106 li
154.245 271.11 li
154.689 270.654 155.301 270.03 156.081 269.238 cv
156.849 268.458 157.341 267.954 157.545 267.726 cv
157.929 267.306 158.193 266.946 158.337 266.646 cv
158.481 266.358 158.565 266.058 158.565 265.77 cv
158.565 265.314 158.397 264.93 158.073 264.642 cv
157.749 264.354 157.329 264.198 156.801 264.198 cv
156.429 264.198 156.033 264.27 155.625 264.39 cv
155.217 264.522 154.773 264.714 154.305 264.978 cv
154.305 263.778 li
154.785 263.586 155.229 263.442 155.637 263.346 cv
156.045 263.25 156.429 263.202 156.777 263.202 cv
157.677 263.202 158.397 263.43 158.937 263.886 cv
159.477 264.342 159.753 264.942 159.753 265.698 cv
159.753 266.058 159.681 266.406 159.549 266.718 cv
159.417 267.042 159.177 267.426 158.817 267.858 cv
158.721 267.978 158.409 268.302 157.881 268.842 cv
157.353 269.382 156.621 270.138 155.673 271.11 cv
f
164.961 267.258 mo
164.433 267.258 164.013 267.45 163.701 267.81 cv
163.389 268.17 163.233 268.674 163.233 269.298 cv
163.233 269.934 163.389 270.438 163.701 270.798 cv
164.013 271.158 164.433 271.338 164.961 271.338 cv
165.489 271.338 165.909 271.158 166.221 270.798 cv
166.533 270.438 166.689 269.934 166.689 269.298 cv
166.689 268.674 166.533 268.17 166.221 267.81 cv
165.909 267.45 165.489 267.258 164.961 267.258 cv
167.313 263.55 mo
167.313 264.63 li
167.013 264.486 166.713 264.378 166.413 264.306 cv
166.101 264.234 165.801 264.198 165.513 264.198 cv
164.721 264.198 164.121 264.462 163.713 264.99 cv
163.305 265.518 163.065 266.322 163.017 267.378 cv
163.245 267.042 163.533 266.778 163.881 266.598 cv
164.229 266.418 164.613 266.322 165.033 266.322 cv
165.909 266.322 166.605 266.598 167.109 267.126 cv
167.613 267.654 167.877 268.386 167.877 269.298 cv
167.877 270.198 167.601 270.918 167.073 271.458 cv
166.545 271.998 165.837 272.262 164.961 272.262 cv
163.953 272.262 163.173 271.878 162.645 271.11 cv
162.105 270.342 161.841 269.214 161.841 267.738 cv
161.841 266.358 162.165 265.254 162.825 264.438 cv
163.473 263.622 164.361 263.202 165.465 263.202 cv
165.753 263.202 166.053 263.238 166.365 263.286 cv
166.665 263.346 166.977 263.43 167.313 263.55 cv
f
170.121 271.11 mo
172.053 271.11 li
172.053 264.438 li
169.953 264.858 li
169.953 263.778 li
172.041 263.358 li
173.229 263.358 li
173.229 271.11 li
175.161 271.11 li
175.161 272.106 li
170.121 272.106 li
170.121 271.11 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
208.974 259.2 mo
208.974 28.8 li
@
grestore
208.974 259.2 mo
208.974 255.2 li
f
208.974 259.2 mo
208.974 255.2 li
@
208.974 28.8 mo
208.974 32.8 li
f
208.974 28.8 mo
208.974 32.8 li
@
196.95 271.11 mo
201.078 271.11 li
201.078 272.106 li
195.522 272.106 li
195.522 271.11 li
195.966 270.654 196.578 270.03 197.358 269.238 cv
198.126 268.458 198.618 267.954 198.822 267.726 cv
199.206 267.306 199.47 266.946 199.614 266.646 cv
199.758 266.358 199.842 266.058 199.842 265.77 cv
199.842 265.314 199.674 264.93 199.35 264.642 cv
199.026 264.354 198.606 264.198 198.078 264.198 cv
197.706 264.198 197.31 264.27 196.902 264.39 cv
196.494 264.522 196.05 264.714 195.582 264.978 cv
195.582 263.778 li
196.062 263.586 196.506 263.442 196.914 263.346 cv
197.322 263.25 197.706 263.202 198.054 263.202 cv
198.954 263.202 199.674 263.43 200.214 263.886 cv
200.754 264.342 201.03 264.942 201.03 265.698 cv
201.03 266.058 200.958 266.406 200.826 266.718 cv
200.694 267.042 200.454 267.426 200.094 267.858 cv
199.998 267.978 199.686 268.302 199.158 268.842 cv
198.63 269.382 197.898 270.138 196.95 271.11 cv
f
203.598 271.926 mo
203.598 270.846 li
203.886 270.99 204.186 271.098 204.498 271.17 cv
204.798 271.242 205.098 271.278 205.398 271.278 cv
206.166 271.278 206.766 271.026 207.174 270.498 cv
207.582 269.97 207.822 269.178 207.894 268.098 cv
207.654 268.434 207.366 268.698 207.03 268.878 cv
206.682 269.058 206.298 269.142 205.878 269.142 cv
204.99 269.142 204.294 268.878 203.79 268.35 cv
203.286 267.822 203.034 267.102 203.034 266.178 cv
203.034 265.29 203.298 264.57 203.826 264.018 cv
204.354 263.478 205.062 263.202 205.95 263.202 cv
206.958 263.202 207.738 263.598 208.266 264.366 cv
208.794 265.146 209.07 266.274 209.07 267.738 cv
209.07 269.13 208.734 270.222 208.086 271.038 cv
207.426 271.854 206.55 272.262 205.446 272.262 cv
205.146 272.262 204.846 272.226 204.546 272.178 cv
204.234 272.13 203.922 272.046 203.598 271.926 cv
205.95 268.218 mo
206.478 268.218 206.898 268.038 207.21 267.678 cv
207.522 267.318 207.678 266.814 207.678 266.178 cv
207.678 265.554 207.522 265.05 207.21 264.69 cv
206.898 264.33 206.478 264.138 205.95 264.138 cv
205.422 264.138 205.002 264.33 204.69 264.69 cv
204.378 265.05 204.222 265.554 204.222 266.178 cv
204.222 266.814 204.378 267.318 204.69 267.678 cv
205.002 268.038 205.422 268.218 205.95 268.218 cv
f
211.23 271.926 mo
211.23 270.846 li
211.518 270.99 211.818 271.098 212.13 271.17 cv
212.43 271.242 212.73 271.278 213.03 271.278 cv
213.798 271.278 214.398 271.026 214.806 270.498 cv
215.214 269.97 215.454 269.178 215.526 268.098 cv
215.286 268.434 214.998 268.698 214.662 268.878 cv
214.314 269.058 213.93 269.142 213.51 269.142 cv
212.622 269.142 211.926 268.878 211.422 268.35 cv
210.918 267.822 210.666 267.102 210.666 266.178 cv
210.666 265.29 210.93 264.57 211.458 264.018 cv
211.986 263.478 212.694 263.202 213.582 263.202 cv
214.59 263.202 215.37 263.598 215.898 264.366 cv
216.426 265.146 216.702 266.274 216.702 267.738 cv
216.702 269.13 216.366 270.222 215.718 271.038 cv
215.058 271.854 214.182 272.262 213.078 272.262 cv
212.778 272.262 212.478 272.226 212.178 272.178 cv
211.866 272.13 211.554 272.046 211.23 271.926 cv
213.582 268.218 mo
214.11 268.218 214.53 268.038 214.842 267.678 cv
215.154 267.318 215.31 266.814 215.31 266.178 cv
215.31 265.554 215.154 265.05 214.842 264.69 cv
214.53 264.33 214.11 264.138 213.582 264.138 cv
213.054 264.138 212.634 264.33 212.322 264.69 cv
212.01 265.05 211.854 265.554 211.854 266.178 cv
211.854 266.814 212.01 267.318 212.322 267.678 cv
212.634 268.038 213.054 268.218 213.582 268.218 cv
f
218.526 263.358 mo
224.154 263.358 li
224.154 263.862 li
220.974 272.106 li
219.738 272.106 li
222.726 264.354 li
218.526 264.354 li
218.526 263.358 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
257.921 259.2 mo
257.921 28.8 li
@
grestore
257.921 259.2 mo
257.921 255.2 li
f
257.921 259.2 mo
257.921 255.2 li
@
257.921 28.8 mo
257.921 32.8 li
f
257.921 28.8 mo
257.921 32.8 li
@
248.356 267.39 mo
248.92 267.51 249.364 267.762 249.676 268.146 cv
249.988 268.53 250.156 269.01 250.156 269.562 cv
250.156 270.426 249.856 271.098 249.268 271.566 cv
248.668 272.034 247.828 272.262 246.736 272.262 cv
246.364 272.262 245.98 272.226 245.596 272.154 cv
245.212 272.094 244.804 271.986 244.396 271.842 cv
244.396 270.702 li
244.72 270.894 245.08 271.038 245.476 271.134 cv
245.86 271.23 246.268 271.278 246.7 271.278 cv
247.444 271.278 248.008 271.134 248.392 270.846 cv
248.776 270.558 248.98 270.126 248.98 269.562 cv
248.98 269.058 248.8 268.65 248.44 268.362 cv
248.08 268.074 247.576 267.918 246.928 267.918 cv
245.908 267.918 li
245.908 266.946 li
246.976 266.946 li
247.552 266.946 247.996 266.838 248.308 266.598 cv
248.62 266.37 248.776 266.034 248.776 265.59 cv
248.776 265.146 248.608 264.798 248.296 264.558 cv
247.972 264.318 247.516 264.198 246.928 264.198 cv
246.604 264.198 246.256 264.234 245.884 264.306 cv
245.512 264.378 245.104 264.486 244.66 264.63 cv
244.66 263.574 li
245.104 263.454 245.524 263.358 245.92 263.298 cv
246.304 263.238 246.676 263.202 247.036 263.202 cv
247.924 263.202 248.632 263.406 249.16 263.814 cv
249.688 264.222 249.952 264.774 249.952 265.47 cv
249.952 265.95 249.808 266.358 249.532 266.694 cv
249.256 267.03 248.86 267.27 248.356 267.39 cv
f
255.988 267.39 mo
256.552 267.51 256.996 267.762 257.308 268.146 cv
257.62 268.53 257.788 269.01 257.788 269.562 cv
257.788 270.426 257.488 271.098 256.9 271.566 cv
256.3 272.034 255.46 272.262 254.368 272.262 cv
253.996 272.262 253.612 272.226 253.228 272.154 cv
252.844 272.094 252.436 271.986 252.028 271.842 cv
252.028 270.702 li
252.352 270.894 252.712 271.038 253.108 271.134 cv
253.492 271.23 253.9 271.278 254.332 271.278 cv
255.076 271.278 255.64 271.134 256.024 270.846 cv
256.408 270.558 256.612 270.126 256.612 269.562 cv
256.612 269.058 256.432 268.65 256.072 268.362 cv
255.712 268.074 255.208 267.918 254.56 267.918 cv
253.54 267.918 li
253.54 266.946 li
254.608 266.946 li
255.184 266.946 255.628 266.838 255.94 266.598 cv
256.252 266.37 256.408 266.034 256.408 265.59 cv
256.408 265.146 256.24 264.798 255.928 264.558 cv
255.604 264.318 255.148 264.198 254.56 264.198 cv
254.236 264.198 253.888 264.234 253.516 264.306 cv
253.144 264.378 252.736 264.486 252.292 264.63 cv
252.292 263.574 li
252.736 263.454 253.156 263.358 253.552 263.298 cv
253.936 263.238 254.308 263.202 254.668 263.202 cv
255.556 263.202 256.264 263.406 256.792 263.814 cv
257.32 264.222 257.584 264.774 257.584 265.47 cv
257.584 265.95 257.44 266.358 257.164 266.694 cv
256.888 267.03 256.492 267.27 255.988 267.39 cv
f
262.564 267.954 mo
262 267.954 261.556 268.11 261.232 268.41 cv
260.908 268.71 260.752 269.118 260.752 269.646 cv
260.752 270.174 260.908 270.594 261.232 270.894 cv
261.556 271.194 262 271.338 262.564 271.338 cv
263.116 271.338 263.56 271.194 263.884 270.882 cv
264.208 270.582 264.376 270.174 264.376 269.646 cv
264.376 269.118 264.208 268.71 263.896 268.41 cv
263.572 268.11 263.128 267.954 262.564 267.954 cv
261.376 267.45 mo
260.872 267.33 260.476 267.09 260.188 266.742 cv
259.9 266.394 259.768 265.974 259.768 265.47 cv
259.768 264.774 260.008 264.222 260.512 263.814 cv
261.004 263.406 261.688 263.202 262.564 263.202 cv
263.428 263.202 264.112 263.406 264.616 263.814 cv
265.108 264.222 265.36 264.774 265.36 265.47 cv
265.36 265.974 265.216 266.394 264.928 266.742 cv
264.64 267.09 264.256 267.33 263.752 267.45 cv
264.316 267.582 264.76 267.846 265.084 268.23 cv
265.396 268.614 265.564 269.094 265.564 269.646 cv
265.564 270.498 265.3 271.146 264.784 271.59 cv
264.256 272.046 263.524 272.262 262.564 272.262 cv
261.592 272.262 260.848 272.046 260.332 271.59 cv
259.816 271.146 259.564 270.498 259.564 269.646 cv
259.564 269.094 259.72 268.614 260.044 268.23 cv
260.356 267.846 260.8 267.582 261.376 267.45 cv
260.944 265.578 mo
260.944 266.034 261.076 266.394 261.364 266.646 cv
261.652 266.898 262.048 267.018 262.564 267.018 cv
263.068 267.018 263.464 266.898 263.752 266.646 cv
264.04 266.394 264.184 266.034 264.184 265.578 cv
264.184 265.122 264.04 264.774 263.752 264.522 cv
263.464 264.27 263.068 264.138 262.564 264.138 cv
262.048 264.138 261.652 264.27 261.364 264.522 cv
261.076 264.774 260.944 265.122 260.944 265.578 cv
f
270.34 267.258 mo
269.812 267.258 269.392 267.45 269.08 267.81 cv
268.768 268.17 268.612 268.674 268.612 269.298 cv
268.612 269.934 268.768 270.438 269.08 270.798 cv
269.392 271.158 269.812 271.338 270.34 271.338 cv
270.868 271.338 271.288 271.158 271.6 270.798 cv
271.912 270.438 272.068 269.934 272.068 269.298 cv
272.068 268.674 271.912 268.17 271.6 267.81 cv
271.288 267.45 270.868 267.258 270.34 267.258 cv
272.692 263.55 mo
272.692 264.63 li
272.392 264.486 272.092 264.378 271.792 264.306 cv
271.48 264.234 271.18 264.198 270.892 264.198 cv
270.1 264.198 269.5 264.462 269.092 264.99 cv
268.684 265.518 268.444 266.322 268.396 267.378 cv
268.624 267.042 268.912 266.778 269.26 266.598 cv
269.608 266.418 269.992 266.322 270.412 266.322 cv
271.288 266.322 271.984 266.598 272.488 267.126 cv
272.992 267.654 273.256 268.386 273.256 269.298 cv
273.256 270.198 272.98 270.918 272.452 271.458 cv
271.924 271.998 271.216 272.262 270.34 272.262 cv
269.332 272.262 268.552 271.878 268.024 271.11 cv
267.484 270.342 267.22 269.214 267.22 267.738 cv
267.22 266.358 267.544 265.254 268.204 264.438 cv
268.852 263.622 269.74 263.202 270.844 263.202 cv
271.132 263.202 271.432 263.238 271.744 263.286 cv
272.044 263.346 272.356 263.43 272.692 263.55 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
306.868 259.2 mo
306.868 28.8 li
@
grestore
306.868 259.2 mo
306.868 255.2 li
f
306.868 259.2 mo
306.868 255.2 li
@
306.868 28.8 mo
306.868 32.8 li
f
306.868 28.8 mo
306.868 32.8 li
@
304.898 269.025 mo
304.022 269.025 303.422 269.133 303.086 269.325 cv
302.75 269.529 302.582 269.865 302.582 270.345 cv
302.582 270.729 302.702 271.041 302.954 271.257 cv
303.206 271.485 303.554 271.593 303.986 271.593 cv
304.586 271.593 305.066 271.389 305.426 270.957 cv
305.786 270.537 305.966 269.973 305.966 269.265 cv
305.966 269.025 li
304.898 269.025 li
307.046 268.581 mo
307.046 272.325 li
305.966 272.325 li
305.966 271.329 li
305.714 271.737 305.402 272.025 305.042 272.205 cv
304.682 272.385 304.226 272.481 303.698 272.481 cv
303.026 272.481 302.486 272.301 302.09 271.929 cv
301.694 271.557 301.502 271.053 301.502 270.417 cv
301.502 269.685 301.742 269.133 302.246 268.749 cv
302.738 268.377 303.47 268.185 304.454 268.185 cv
305.966 268.185 li
305.966 268.077 li
305.966 267.585 305.798 267.201 305.474 266.925 cv
305.15 266.661 304.694 266.517 304.106 266.517 cv
303.722 266.517 303.362 266.565 303.002 266.661 cv
302.642 266.757 302.306 266.889 301.982 267.057 cv
301.982 266.061 li
302.366 265.917 302.75 265.797 303.122 265.725 cv
303.494 265.653 303.854 265.605 304.214 265.605 cv
305.162 265.605 305.87 265.857 306.338 266.349 cv
306.806 266.841 307.046 267.585 307.046 268.581 cv
f
309.267 263.205 mo
310.347 263.205 li
310.347 272.325 li
309.267 272.325 li
309.267 263.205 li
f
312.603 263.205 mo
313.683 263.205 li
313.683 272.325 li
312.603 272.325 li
312.603 263.205 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 259.2 mo
324 259.2 li
@
grestore
45 259.2 mo
49 259.2 li
f
45 259.2 mo
49 259.2 li
@
324 259.2 mo
320 259.2 li
f
324 259.2 mo
320 259.2 li
@
19.6754 255.599 mo
19.0634 255.599 18.6074 255.899 18.2954 256.499 cv
17.9834 257.099 17.8394 257.999 17.8394 259.199 cv
17.8394 260.399 17.9834 261.299 18.2954 261.899 cv
18.6074 262.499 19.0634 262.799 19.6754 262.799 cv
20.2874 262.799 20.7434 262.499 21.0554 261.899 cv
21.3554 261.299 21.5114 260.399 21.5114 259.199 cv
21.5114 257.999 21.3554 257.099 21.0554 256.499 cv
20.7434 255.899 20.2874 255.599 19.6754 255.599 cv
19.6754 254.663 mo
20.6474 254.663 21.3914 255.059 21.9194 255.827 cv
22.4354 256.607 22.6994 257.735 22.6994 259.199 cv
22.6994 260.675 22.4354 261.803 21.9194 262.571 cv
21.3914 263.339 20.6474 263.723 19.6754 263.723 cv
18.6914 263.723 17.9354 263.339 17.4194 262.571 cv
16.9034 261.803 16.6514 260.675 16.6514 259.199 cv
16.6514 257.735 16.9034 256.607 17.4194 255.827 cv
17.9354 255.059 18.6914 254.663 19.6754 254.663 cv
f
24.7754 262.079 mo
26.0114 262.079 li
26.0114 263.567 li
24.7754 263.567 li
24.7754 262.079 li
f
28.6033 254.819 mo
33.2473 254.819 li
33.2473 255.815 li
29.6833 255.815 li
29.6833 257.963 li
29.8513 257.903 30.0313 257.855 30.1993 257.831 cv
30.3673 257.807 30.5473 257.783 30.7153 257.783 cv
31.6873 257.783 32.4553 258.059 33.0313 258.587 cv
33.6073 259.127 33.8953 259.847 33.8953 260.759 cv
33.8953 261.707 33.5953 262.439 33.0073 262.955 cv
32.4193 263.471 31.5913 263.723 30.5353 263.723 cv
30.1633 263.723 29.7913 263.687 29.4073 263.639 cv
29.0233 263.579 28.6393 263.495 28.2313 263.363 cv
28.2313 262.175 li
28.5793 262.367 28.9393 262.511 29.3233 262.607 cv
29.6953 262.703 30.0913 262.739 30.5113 262.739 cv
31.1833 262.739 31.7233 262.571 32.1193 262.211 cv
32.5033 261.851 32.7073 261.371 32.7073 260.759 cv
32.7073 260.159 32.5033 259.679 32.1193 259.319 cv
31.7233 258.959 31.1833 258.779 30.5113 258.779 cv
30.1993 258.779 29.8753 258.815 29.5633 258.887 cv
29.2513 258.959 28.9273 259.067 28.6033 259.211 cv
28.6033 254.819 li
f
38.7553 255.599 mo
38.1433 255.599 37.6873 255.899 37.3753 256.499 cv
37.0633 257.099 36.9193 257.999 36.9193 259.199 cv
36.9193 260.399 37.0633 261.299 37.3753 261.899 cv
37.6873 262.499 38.1433 262.799 38.7553 262.799 cv
39.3673 262.799 39.8233 262.499 40.1353 261.899 cv
40.4353 261.299 40.5913 260.399 40.5913 259.199 cv
40.5913 257.999 40.4353 257.099 40.1353 256.499 cv
39.8233 255.899 39.3673 255.599 38.7553 255.599 cv
38.7553 254.663 mo
39.7273 254.663 40.4713 255.059 40.9993 255.827 cv
41.5153 256.607 41.7793 257.735 41.7793 259.199 cv
41.7793 260.675 41.5153 261.803 40.9993 262.571 cv
40.4713 263.339 39.7273 263.723 38.7553 263.723 cv
37.7713 263.723 37.0153 263.339 36.4993 262.571 cv
35.9833 261.803 35.7313 260.675 35.7313 259.199 cv
35.7313 257.735 35.9833 256.607 36.4993 255.827 cv
37.0153 255.059 37.7713 254.663 38.7553 254.663 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 230.4 mo
324 230.4 li
@
grestore
45 230.4 mo
49 230.4 li
f
45 230.4 mo
49 230.4 li
@
324 230.4 mo
320 230.4 li
f
324 230.4 mo
320 230.4 li
@
19.9254 226.799 mo
19.3134 226.799 18.8574 227.099 18.5454 227.699 cv
18.2334 228.299 18.0894 229.199 18.0894 230.399 cv
18.0894 231.599 18.2334 232.499 18.5454 233.099 cv
18.8574 233.699 19.3134 233.999 19.9254 233.999 cv
20.5374 233.999 20.9934 233.699 21.3054 233.099 cv
21.6054 232.499 21.7614 231.599 21.7614 230.399 cv
21.7614 229.199 21.6054 228.299 21.3054 227.699 cv
20.9934 227.099 20.5374 226.799 19.9254 226.799 cv
19.9254 225.863 mo
20.8974 225.863 21.6414 226.259 22.1694 227.027 cv
22.6854 227.807 22.9494 228.935 22.9494 230.399 cv
22.9494 231.875 22.6854 233.003 22.1694 233.771 cv
21.6414 234.539 20.8974 234.923 19.9254 234.923 cv
18.9414 234.923 18.1854 234.539 17.6694 233.771 cv
17.1534 233.003 16.9014 231.875 16.9014 230.399 cv
16.9014 228.935 17.1534 227.807 17.6694 227.027 cv
18.1854 226.259 18.9414 225.863 19.9254 225.863 cv
f
25.0254 233.279 mo
26.2614 233.279 li
26.2614 234.767 li
25.0254 234.767 li
25.0254 233.279 li
f
28.8533 226.019 mo
33.4973 226.019 li
33.4973 227.015 li
29.9333 227.015 li
29.9333 229.163 li
30.1013 229.103 30.2813 229.055 30.4493 229.031 cv
30.6173 229.007 30.7973 228.983 30.9653 228.983 cv
31.9373 228.983 32.7053 229.259 33.2813 229.787 cv
33.8573 230.327 34.1453 231.047 34.1453 231.959 cv
34.1453 232.907 33.8453 233.639 33.2573 234.155 cv
32.6693 234.671 31.8413 234.923 30.7853 234.923 cv
30.4133 234.923 30.0413 234.887 29.6573 234.839 cv
29.2733 234.779 28.8893 234.695 28.4813 234.563 cv
28.4813 233.375 li
28.8293 233.567 29.1893 233.711 29.5733 233.807 cv
29.9453 233.903 30.3413 233.939 30.7613 233.939 cv
31.4333 233.939 31.9733 233.771 32.3693 233.411 cv
32.7533 233.051 32.9573 232.571 32.9573 231.959 cv
32.9573 231.359 32.7533 230.879 32.3693 230.519 cv
31.9733 230.159 31.4333 229.979 30.7613 229.979 cv
30.4493 229.979 30.1253 230.015 29.8133 230.087 cv
29.5013 230.159 29.1773 230.267 28.8533 230.411 cv
28.8533 226.019 li
f
36.4853 226.019 mo
41.1293 226.019 li
41.1293 227.015 li
37.5653 227.015 li
37.5653 229.163 li
37.7333 229.103 37.9133 229.055 38.0813 229.031 cv
38.2493 229.007 38.4293 228.983 38.5973 228.983 cv
39.5693 228.983 40.3373 229.259 40.9133 229.787 cv
41.4893 230.327 41.7773 231.047 41.7773 231.959 cv
41.7773 232.907 41.4773 233.639 40.8893 234.155 cv
40.3013 234.671 39.4733 234.923 38.4173 234.923 cv
38.0453 234.923 37.6733 234.887 37.2893 234.839 cv
36.9053 234.779 36.5213 234.695 36.1133 234.563 cv
36.1133 233.375 li
36.4613 233.567 36.8213 233.711 37.2053 233.807 cv
37.5773 233.903 37.9733 233.939 38.3933 233.939 cv
39.0653 233.939 39.6053 233.771 40.0013 233.411 cv
40.3853 233.051 40.5893 232.571 40.5893 231.959 cv
40.5893 231.359 40.3853 230.879 40.0013 230.519 cv
39.6053 230.159 39.0653 229.979 38.3933 229.979 cv
38.0813 229.979 37.7573 230.015 37.4453 230.087 cv
37.1333 230.159 36.8093 230.267 36.4853 230.411 cv
36.4853 226.019 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 201.6 mo
324 201.6 li
@
grestore
45 201.6 mo
49 201.6 li
f
45 201.6 mo
49 201.6 li
@
324 201.6 mo
320 201.6 li
f
324 201.6 mo
320 201.6 li
@
19.6754 197.999 mo
19.0634 197.999 18.6074 198.299 18.2954 198.899 cv
17.9834 199.499 17.8394 200.399 17.8394 201.599 cv
17.8394 202.799 17.9834 203.699 18.2954 204.299 cv
18.6074 204.899 19.0634 205.199 19.6754 205.199 cv
20.2874 205.199 20.7434 204.899 21.0554 204.299 cv
21.3554 203.699 21.5114 202.799 21.5114 201.599 cv
21.5114 200.399 21.3554 199.499 21.0554 198.899 cv
20.7434 198.299 20.2874 197.999 19.6754 197.999 cv
19.6754 197.063 mo
20.6474 197.063 21.3914 197.459 21.9194 198.227 cv
22.4354 199.007 22.6994 200.135 22.6994 201.599 cv
22.6994 203.075 22.4354 204.203 21.9194 204.971 cv
21.3914 205.739 20.6474 206.123 19.6754 206.123 cv
18.6914 206.123 17.9354 205.739 17.4194 204.971 cv
16.9034 204.203 16.6514 203.075 16.6514 201.599 cv
16.6514 200.135 16.9034 199.007 17.4194 198.227 cv
17.9354 197.459 18.6914 197.063 19.6754 197.063 cv
f
24.7754 204.479 mo
26.0114 204.479 li
26.0114 205.967 li
24.7754 205.967 li
24.7754 204.479 li
f
31.2673 201.119 mo
30.7393 201.119 30.3193 201.311 30.0073 201.671 cv
29.6953 202.031 29.5393 202.535 29.5393 203.159 cv
29.5393 203.795 29.6953 204.299 30.0073 204.659 cv
30.3193 205.019 30.7393 205.199 31.2673 205.199 cv
31.7953 205.199 32.2153 205.019 32.5273 204.659 cv
32.8393 204.299 32.9953 203.795 32.9953 203.159 cv
32.9953 202.535 32.8393 202.031 32.5273 201.671 cv
32.2153 201.311 31.7953 201.119 31.2673 201.119 cv
33.6193 197.411 mo
33.6193 198.491 li
33.3193 198.347 33.0193 198.239 32.7193 198.167 cv
32.4073 198.095 32.1073 198.059 31.8193 198.059 cv
31.0273 198.059 30.4273 198.323 30.0193 198.851 cv
29.6113 199.379 29.3713 200.183 29.3233 201.239 cv
29.5513 200.903 29.8393 200.639 30.1873 200.459 cv
30.5353 200.279 30.9193 200.183 31.3393 200.183 cv
32.2153 200.183 32.9113 200.459 33.4153 200.987 cv
33.9193 201.515 34.1833 202.247 34.1833 203.159 cv
34.1833 204.059 33.9073 204.779 33.3793 205.319 cv
32.8513 205.859 32.1433 206.123 31.2673 206.123 cv
30.2593 206.123 29.4793 205.739 28.9513 204.971 cv
28.4113 204.203 28.1473 203.075 28.1473 201.599 cv
28.1473 200.219 28.4713 199.115 29.1313 198.299 cv
29.7793 197.483 30.6673 197.063 31.7713 197.063 cv
32.0593 197.063 32.3593 197.099 32.6713 197.147 cv
32.9713 197.207 33.2833 197.291 33.6193 197.411 cv
f
38.7553 197.999 mo
38.1433 197.999 37.6873 198.299 37.3753 198.899 cv
37.0633 199.499 36.9193 200.399 36.9193 201.599 cv
36.9193 202.799 37.0633 203.699 37.3753 204.299 cv
37.6873 204.899 38.1433 205.199 38.7553 205.199 cv
39.3673 205.199 39.8233 204.899 40.1353 204.299 cv
40.4353 203.699 40.5913 202.799 40.5913 201.599 cv
40.5913 200.399 40.4353 199.499 40.1353 198.899 cv
39.8233 198.299 39.3673 197.999 38.7553 197.999 cv
38.7553 197.063 mo
39.7273 197.063 40.4713 197.459 40.9993 198.227 cv
41.5153 199.007 41.7793 200.135 41.7793 201.599 cv
41.7793 203.075 41.5153 204.203 40.9993 204.971 cv
40.4713 205.739 39.7273 206.123 38.7553 206.123 cv
37.7713 206.123 37.0153 205.739 36.4993 204.971 cv
35.9833 204.203 35.7313 203.075 35.7313 201.599 cv
35.7313 200.135 35.9833 199.007 36.4993 198.227 cv
37.0153 197.459 37.7713 197.063 38.7553 197.063 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 172.8 mo
324 172.8 li
@
grestore
45 172.8 mo
49 172.8 li
f
45 172.8 mo
49 172.8 li
@
324 172.8 mo
320 172.8 li
f
324 172.8 mo
320 172.8 li
@
19.9254 169.199 mo
19.3134 169.199 18.8574 169.499 18.5454 170.099 cv
18.2334 170.699 18.0894 171.599 18.0894 172.799 cv
18.0894 173.999 18.2334 174.899 18.5454 175.499 cv
18.8574 176.099 19.3134 176.399 19.9254 176.399 cv
20.5374 176.399 20.9934 176.099 21.3054 175.499 cv
21.6054 174.899 21.7614 173.999 21.7614 172.799 cv
21.7614 171.599 21.6054 170.699 21.3054 170.099 cv
20.9934 169.499 20.5374 169.199 19.9254 169.199 cv
19.9254 168.263 mo
20.8974 168.263 21.6414 168.659 22.1694 169.427 cv
22.6854 170.207 22.9494 171.335 22.9494 172.799 cv
22.9494 174.275 22.6854 175.403 22.1694 176.171 cv
21.6414 176.939 20.8974 177.323 19.9254 177.323 cv
18.9414 177.323 18.1854 176.939 17.6694 176.171 cv
17.1534 175.403 16.9014 174.275 16.9014 172.799 cv
16.9014 171.335 17.1534 170.207 17.6694 169.427 cv
18.1854 168.659 18.9414 168.263 19.9254 168.263 cv
f
25.0254 175.679 mo
26.2614 175.679 li
26.2614 177.167 li
25.0254 177.167 li
25.0254 175.679 li
f
31.5173 172.319 mo
30.9893 172.319 30.5693 172.511 30.2573 172.871 cv
29.9453 173.231 29.7893 173.735 29.7893 174.359 cv
29.7893 174.995 29.9453 175.499 30.2573 175.859 cv
30.5693 176.219 30.9893 176.399 31.5173 176.399 cv
32.0453 176.399 32.4653 176.219 32.7773 175.859 cv
33.0893 175.499 33.2453 174.995 33.2453 174.359 cv
33.2453 173.735 33.0893 173.231 32.7773 172.871 cv
32.4653 172.511 32.0453 172.319 31.5173 172.319 cv
33.8693 168.611 mo
33.8693 169.691 li
33.5693 169.547 33.2693 169.439 32.9693 169.367 cv
32.6573 169.295 32.3573 169.259 32.0693 169.259 cv
31.2773 169.259 30.6773 169.523 30.2693 170.051 cv
29.8613 170.579 29.6213 171.383 29.5733 172.439 cv
29.8013 172.103 30.0893 171.839 30.4373 171.659 cv
30.7853 171.479 31.1693 171.383 31.5893 171.383 cv
32.4653 171.383 33.1613 171.659 33.6653 172.187 cv
34.1693 172.715 34.4333 173.447 34.4333 174.359 cv
34.4333 175.259 34.1573 175.979 33.6293 176.519 cv
33.1013 177.059 32.3933 177.323 31.5173 177.323 cv
30.5093 177.323 29.7293 176.939 29.2013 176.171 cv
28.6613 175.403 28.3973 174.275 28.3973 172.799 cv
28.3973 171.419 28.7213 170.315 29.3813 169.499 cv
30.0293 168.683 30.9173 168.263 32.0213 168.263 cv
32.3093 168.263 32.6093 168.299 32.9213 168.347 cv
33.2213 168.407 33.5333 168.491 33.8693 168.611 cv
f
36.4853 168.419 mo
41.1293 168.419 li
41.1293 169.415 li
37.5653 169.415 li
37.5653 171.563 li
37.7333 171.503 37.9133 171.455 38.0813 171.431 cv
38.2493 171.407 38.4293 171.383 38.5973 171.383 cv
39.5693 171.383 40.3373 171.659 40.9133 172.187 cv
41.4893 172.727 41.7773 173.447 41.7773 174.359 cv
41.7773 175.307 41.4773 176.039 40.8893 176.555 cv
40.3013 177.071 39.4733 177.323 38.4173 177.323 cv
38.0453 177.323 37.6733 177.287 37.2893 177.239 cv
36.9053 177.179 36.5213 177.095 36.1133 176.963 cv
36.1133 175.775 li
36.4613 175.967 36.8213 176.111 37.2053 176.207 cv
37.5773 176.303 37.9733 176.339 38.3933 176.339 cv
39.0653 176.339 39.6053 176.171 40.0013 175.811 cv
40.3853 175.451 40.5893 174.971 40.5893 174.359 cv
40.5893 173.759 40.3853 173.279 40.0013 172.919 cv
39.6053 172.559 39.0653 172.379 38.3933 172.379 cv
38.0813 172.379 37.7573 172.415 37.4453 172.487 cv
37.1333 172.559 36.8093 172.667 36.4853 172.811 cv
36.4853 168.419 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 144 mo
324 144 li
@
grestore
45 144 mo
49 144 li
f
45 144 mo
49 144 li
@
324 144 mo
320 144 li
f
324 144 mo
320 144 li
@
19.6754 140.399 mo
19.0634 140.399 18.6074 140.699 18.2954 141.299 cv
17.9834 141.899 17.8394 142.799 17.8394 143.999 cv
17.8394 145.199 17.9834 146.099 18.2954 146.699 cv
18.6074 147.299 19.0634 147.599 19.6754 147.599 cv
20.2874 147.599 20.7434 147.299 21.0554 146.699 cv
21.3554 146.099 21.5114 145.199 21.5114 143.999 cv
21.5114 142.799 21.3554 141.899 21.0554 141.299 cv
20.7434 140.699 20.2874 140.399 19.6754 140.399 cv
19.6754 139.463 mo
20.6474 139.463 21.3914 139.859 21.9194 140.627 cv
22.4354 141.407 22.6994 142.535 22.6994 143.999 cv
22.6994 145.475 22.4354 146.603 21.9194 147.371 cv
21.3914 148.139 20.6474 148.523 19.6754 148.523 cv
18.6914 148.523 17.9354 148.139 17.4194 147.371 cv
16.9034 146.603 16.6514 145.475 16.6514 143.999 cv
16.6514 142.535 16.9034 141.407 17.4194 140.627 cv
17.9354 139.859 18.6914 139.463 19.6754 139.463 cv
f
24.7754 146.879 mo
26.0114 146.879 li
26.0114 148.367 li
24.7754 148.367 li
24.7754 146.879 li
f
28.2913 139.619 mo
33.9193 139.619 li
33.9193 140.123 li
30.7393 148.367 li
29.5033 148.367 li
32.4913 140.615 li
28.2913 140.615 li
28.2913 139.619 li
f
38.7553 140.399 mo
38.1433 140.399 37.6873 140.699 37.3753 141.299 cv
37.0633 141.899 36.9193 142.799 36.9193 143.999 cv
36.9193 145.199 37.0633 146.099 37.3753 146.699 cv
37.6873 147.299 38.1433 147.599 38.7553 147.599 cv
39.3673 147.599 39.8233 147.299 40.1353 146.699 cv
40.4353 146.099 40.5913 145.199 40.5913 143.999 cv
40.5913 142.799 40.4353 141.899 40.1353 141.299 cv
39.8233 140.699 39.3673 140.399 38.7553 140.399 cv
38.7553 139.463 mo
39.7273 139.463 40.4713 139.859 40.9993 140.627 cv
41.5153 141.407 41.7793 142.535 41.7793 143.999 cv
41.7793 145.475 41.5153 146.603 40.9993 147.371 cv
40.4713 148.139 39.7273 148.523 38.7553 148.523 cv
37.7713 148.523 37.0153 148.139 36.4993 147.371 cv
35.9833 146.603 35.7313 145.475 35.7313 143.999 cv
35.7313 142.535 35.9833 141.407 36.4993 140.627 cv
37.0153 139.859 37.7713 139.463 38.7553 139.463 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 115.2 mo
324 115.2 li
@
grestore
45 115.2 mo
49 115.2 li
f
45 115.2 mo
49 115.2 li
@
324 115.2 mo
320 115.2 li
f
324 115.2 mo
320 115.2 li
@
19.9254 111.599 mo
19.3134 111.599 18.8574 111.899 18.5454 112.499 cv
18.2334 113.099 18.0894 113.999 18.0894 115.199 cv
18.0894 116.399 18.2334 117.299 18.5454 117.899 cv
18.8574 118.499 19.3134 118.799 19.9254 118.799 cv
20.5374 118.799 20.9934 118.499 21.3054 117.899 cv
21.6054 117.299 21.7614 116.399 21.7614 115.199 cv
21.7614 113.999 21.6054 113.099 21.3054 112.499 cv
20.9934 111.899 20.5374 111.599 19.9254 111.599 cv
19.9254 110.663 mo
20.8974 110.663 21.6414 111.059 22.1694 111.827 cv
22.6854 112.607 22.9494 113.735 22.9494 115.199 cv
22.9494 116.675 22.6854 117.803 22.1694 118.571 cv
21.6414 119.339 20.8974 119.723 19.9254 119.723 cv
18.9414 119.723 18.1854 119.339 17.6694 118.571 cv
17.1534 117.803 16.9014 116.675 16.9014 115.199 cv
16.9014 113.735 17.1534 112.607 17.6694 111.827 cv
18.1854 111.059 18.9414 110.663 19.9254 110.663 cv
f
25.0254 118.079 mo
26.2614 118.079 li
26.2614 119.567 li
25.0254 119.567 li
25.0254 118.079 li
f
28.5413 110.819 mo
34.1693 110.819 li
34.1693 111.323 li
30.9893 119.567 li
29.7533 119.567 li
32.7413 111.815 li
28.5413 111.815 li
28.5413 110.819 li
f
36.4853 110.819 mo
41.1293 110.819 li
41.1293 111.815 li
37.5653 111.815 li
37.5653 113.963 li
37.7333 113.903 37.9133 113.855 38.0813 113.831 cv
38.2493 113.807 38.4293 113.783 38.5973 113.783 cv
39.5693 113.783 40.3373 114.059 40.9133 114.587 cv
41.4893 115.127 41.7773 115.847 41.7773 116.759 cv
41.7773 117.707 41.4773 118.439 40.8893 118.955 cv
40.3013 119.471 39.4733 119.723 38.4173 119.723 cv
38.0453 119.723 37.6733 119.687 37.2893 119.639 cv
36.9053 119.579 36.5213 119.495 36.1133 119.363 cv
36.1133 118.175 li
36.4613 118.367 36.8213 118.511 37.2053 118.607 cv
37.5773 118.703 37.9733 118.739 38.3933 118.739 cv
39.0653 118.739 39.6053 118.571 40.0013 118.211 cv
40.3853 117.851 40.5893 117.371 40.5893 116.759 cv
40.5893 116.159 40.3853 115.679 40.0013 115.319 cv
39.6053 114.959 39.0653 114.779 38.3933 114.779 cv
38.0813 114.779 37.7573 114.815 37.4453 114.887 cv
37.1333 114.959 36.8093 115.067 36.4853 115.211 cv
36.4853 110.819 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 86.4 mo
324 86.4 li
@
grestore
45 86.4 mo
49 86.4 li
f
45 86.4 mo
49 86.4 li
@
324 86.4 mo
320 86.4 li
f
324 86.4 mo
320 86.4 li
@
19.6754 82.7992 mo
19.0634 82.7992 18.6074 83.0992 18.2954 83.6992 cv
17.9834 84.2992 17.8394 85.1992 17.8394 86.3992 cv
17.8394 87.5992 17.9834 88.4992 18.2954 89.0992 cv
18.6074 89.6992 19.0634 89.9992 19.6754 89.9992 cv
20.2874 89.9992 20.7434 89.6992 21.0554 89.0992 cv
21.3554 88.4992 21.5114 87.5992 21.5114 86.3992 cv
21.5114 85.1992 21.3554 84.2992 21.0554 83.6992 cv
20.7434 83.0992 20.2874 82.7992 19.6754 82.7992 cv
19.6754 81.8632 mo
20.6474 81.8632 21.3914 82.2592 21.9194 83.0272 cv
22.4354 83.8072 22.6994 84.9352 22.6994 86.3992 cv
22.6994 87.8752 22.4354 89.0032 21.9194 89.7712 cv
21.3914 90.5392 20.6474 90.9232 19.6754 90.9232 cv
18.6914 90.9232 17.9354 90.5392 17.4194 89.7712 cv
16.9034 89.0032 16.6514 87.8752 16.6514 86.3992 cv
16.6514 84.9352 16.9034 83.8072 17.4194 83.0272 cv
17.9354 82.2592 18.6914 81.8632 19.6754 81.8632 cv
f
24.7754 89.2792 mo
26.0114 89.2792 li
26.0114 90.7672 li
24.7754 90.7672 li
24.7754 89.2792 li
f
31.1233 86.6152 mo
30.5593 86.6152 30.1153 86.7712 29.7913 87.0712 cv
29.4673 87.3712 29.3113 87.7792 29.3113 88.3072 cv
29.3113 88.8352 29.4673 89.2552 29.7913 89.5552 cv
30.1153 89.8552 30.5593 89.9992 31.1233 89.9992 cv
31.6753 89.9992 32.1193 89.8552 32.4433 89.5432 cv
32.7673 89.2432 32.9353 88.8352 32.9353 88.3072 cv
32.9353 87.7792 32.7673 87.3712 32.4553 87.0712 cv
32.1313 86.7712 31.6873 86.6152 31.1233 86.6152 cv
29.9353 86.1112 mo
29.4313 85.9912 29.0353 85.7512 28.7473 85.4032 cv
28.4593 85.0552 28.3273 84.6352 28.3273 84.1312 cv
28.3273 83.4352 28.5673 82.8832 29.0713 82.4752 cv
29.5633 82.0672 30.2473 81.8632 31.1233 81.8632 cv
31.9873 81.8632 32.6713 82.0672 33.1753 82.4752 cv
33.6673 82.8832 33.9193 83.4352 33.9193 84.1312 cv
33.9193 84.6352 33.7753 85.0552 33.4873 85.4032 cv
33.1993 85.7512 32.8153 85.9912 32.3113 86.1112 cv
32.8753 86.2432 33.3193 86.5072 33.6433 86.8912 cv
33.9553 87.2752 34.1233 87.7552 34.1233 88.3072 cv
34.1233 89.1592 33.8593 89.8072 33.3433 90.2512 cv
32.8153 90.7072 32.0833 90.9232 31.1233 90.9232 cv
30.1513 90.9232 29.4073 90.7072 28.8913 90.2512 cv
28.3753 89.8072 28.1233 89.1592 28.1233 88.3072 cv
28.1233 87.7552 28.2793 87.2752 28.6033 86.8912 cv
28.9153 86.5072 29.3593 86.2432 29.9353 86.1112 cv
29.5033 84.2392 mo
29.5033 84.6952 29.6353 85.0552 29.9233 85.3072 cv
30.2113 85.5592 30.6073 85.6792 31.1233 85.6792 cv
31.6273 85.6792 32.0233 85.5592 32.3113 85.3072 cv
32.5993 85.0552 32.7433 84.6952 32.7433 84.2392 cv
32.7433 83.7832 32.5993 83.4352 32.3113 83.1832 cv
32.0233 82.9312 31.6273 82.7992 31.1233 82.7992 cv
30.6073 82.7992 30.2113 82.9312 29.9233 83.1832 cv
29.6353 83.4352 29.5033 83.7832 29.5033 84.2392 cv
f
38.7553 82.7992 mo
38.1433 82.7992 37.6873 83.0992 37.3753 83.6992 cv
37.0633 84.2992 36.9193 85.1992 36.9193 86.3992 cv
36.9193 87.5992 37.0633 88.4992 37.3753 89.0992 cv
37.6873 89.6992 38.1433 89.9992 38.7553 89.9992 cv
39.3673 89.9992 39.8233 89.6992 40.1353 89.0992 cv
40.4353 88.4992 40.5913 87.5992 40.5913 86.3992 cv
40.5913 85.1992 40.4353 84.2992 40.1353 83.6992 cv
39.8233 83.0992 39.3673 82.7992 38.7553 82.7992 cv
38.7553 81.8632 mo
39.7273 81.8632 40.4713 82.2592 40.9993 83.0272 cv
41.5153 83.8072 41.7793 84.9352 41.7793 86.3992 cv
41.7793 87.8752 41.5153 89.0032 40.9993 89.7712 cv
40.4713 90.5392 39.7273 90.9232 38.7553 90.9232 cv
37.7713 90.9232 37.0153 90.5392 36.4993 89.7712 cv
35.9833 89.0032 35.7313 87.8752 35.7313 86.3992 cv
35.7313 84.9352 35.9833 83.8072 36.4993 83.0272 cv
37.0153 82.2592 37.7713 81.8632 38.7553 81.8632 cv
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 57.6 mo
324 57.6 li
@
grestore
45 57.6 mo
49 57.6 li
f
45 57.6 mo
49 57.6 li
@
324 57.6 mo
320 57.6 li
f
324 57.6 mo
320 57.6 li
@
19.9254 53.9992 mo
19.3134 53.9992 18.8574 54.2992 18.5454 54.8992 cv
18.2334 55.4992 18.0894 56.3992 18.0894 57.5992 cv
18.0894 58.7992 18.2334 59.6992 18.5454 60.2992 cv
18.8574 60.8992 19.3134 61.1992 19.9254 61.1992 cv
20.5374 61.1992 20.9934 60.8992 21.3054 60.2992 cv
21.6054 59.6992 21.7614 58.7992 21.7614 57.5992 cv
21.7614 56.3992 21.6054 55.4992 21.3054 54.8992 cv
20.9934 54.2992 20.5374 53.9992 19.9254 53.9992 cv
19.9254 53.0632 mo
20.8974 53.0632 21.6414 53.4592 22.1694 54.2272 cv
22.6854 55.0072 22.9494 56.1352 22.9494 57.5992 cv
22.9494 59.0752 22.6854 60.2032 22.1694 60.9712 cv
21.6414 61.7392 20.8974 62.1232 19.9254 62.1232 cv
18.9414 62.1232 18.1854 61.7392 17.6694 60.9712 cv
17.1534 60.2032 16.9014 59.0752 16.9014 57.5992 cv
16.9014 56.1352 17.1534 55.0072 17.6694 54.2272 cv
18.1854 53.4592 18.9414 53.0632 19.9254 53.0632 cv
f
25.0254 60.4792 mo
26.2614 60.4792 li
26.2614 61.9672 li
25.0254 61.9672 li
25.0254 60.4792 li
f
31.3733 57.8152 mo
30.8093 57.8152 30.3653 57.9712 30.0413 58.2712 cv
29.7173 58.5712 29.5613 58.9792 29.5613 59.5072 cv
29.5613 60.0352 29.7173 60.4552 30.0413 60.7552 cv
30.3653 61.0552 30.8093 61.1992 31.3733 61.1992 cv
31.9253 61.1992 32.3693 61.0552 32.6933 60.7432 cv
33.0173 60.4432 33.1853 60.0352 33.1853 59.5072 cv
33.1853 58.9792 33.0173 58.5712 32.7053 58.2712 cv
32.3813 57.9712 31.9373 57.8152 31.3733 57.8152 cv
30.1853 57.3112 mo
29.6813 57.1912 29.2853 56.9512 28.9973 56.6032 cv
28.7093 56.2552 28.5773 55.8352 28.5773 55.3312 cv
28.5773 54.6352 28.8173 54.0832 29.3213 53.6752 cv
29.8133 53.2672 30.4973 53.0632 31.3733 53.0632 cv
32.2373 53.0632 32.9213 53.2672 33.4253 53.6752 cv
33.9173 54.0832 34.1693 54.6352 34.1693 55.3312 cv
34.1693 55.8352 34.0253 56.2552 33.7373 56.6032 cv
33.4493 56.9512 33.0653 57.1912 32.5613 57.3112 cv
33.1253 57.4432 33.5693 57.7072 33.8933 58.0912 cv
34.2053 58.4752 34.3733 58.9552 34.3733 59.5072 cv
34.3733 60.3592 34.1093 61.0072 33.5933 61.4512 cv
33.0653 61.9072 32.3333 62.1232 31.3733 62.1232 cv
30.4013 62.1232 29.6573 61.9072 29.1413 61.4512 cv
28.6253 61.0072 28.3733 60.3592 28.3733 59.5072 cv
28.3733 58.9552 28.5293 58.4752 28.8533 58.0912 cv
29.1653 57.7072 29.6093 57.4432 30.1853 57.3112 cv
29.7533 55.4392 mo
29.7533 55.8952 29.8853 56.2552 30.1733 56.5072 cv
30.4613 56.7592 30.8573 56.8792 31.3733 56.8792 cv
31.8773 56.8792 32.2733 56.7592 32.5613 56.5072 cv
32.8493 56.2552 32.9933 55.8952 32.9933 55.4392 cv
32.9933 54.9832 32.8493 54.6352 32.5613 54.3832 cv
32.2733 54.1312 31.8773 53.9992 31.3733 53.9992 cv
30.8573 53.9992 30.4613 54.1312 30.1733 54.3832 cv
29.8853 54.6352 29.7533 54.9832 29.7533 55.4392 cv
f
36.4853 53.2192 mo
41.1293 53.2192 li
41.1293 54.2152 li
37.5653 54.2152 li
37.5653 56.3632 li
37.7333 56.3032 37.9133 56.2552 38.0813 56.2312 cv
38.2493 56.2072 38.4293 56.1832 38.5973 56.1832 cv
39.5693 56.1832 40.3373 56.4592 40.9133 56.9872 cv
41.4893 57.5272 41.7773 58.2472 41.7773 59.1592 cv
41.7773 60.1072 41.4773 60.8392 40.8893 61.3552 cv
40.3013 61.8712 39.4733 62.1232 38.4173 62.1232 cv
38.0453 62.1232 37.6733 62.0872 37.2893 62.0392 cv
36.9053 61.9792 36.5213 61.8952 36.1133 61.7632 cv
36.1133 60.5752 li
36.4613 60.7672 36.8213 60.9112 37.2053 61.0072 cv
37.5773 61.1032 37.9733 61.1392 38.3933 61.1392 cv
39.0653 61.1392 39.6053 60.9712 40.0013 60.6112 cv
40.3853 60.2512 40.5893 59.7712 40.5893 59.1592 cv
40.5893 58.5592 40.3853 58.0792 40.0013 57.7192 cv
39.6053 57.3592 39.0653 57.1792 38.3933 57.1792 cv
38.0813 57.1792 37.7573 57.2152 37.4453 57.2872 cv
37.1333 57.3592 36.8093 57.4672 36.4853 57.6112 cv
36.4853 53.2192 li
f
gsave
45 259.2 mo
324 259.2 li
324 28.8 li
45 28.8 li
45 259.2 li
cp
clp
[1 3 ] 0 dsh
45 28.8 mo
324 28.8 li
@
grestore
45 28.8 mo
49 28.8 li
f
45 28.8 mo
49 28.8 li
@
324 28.8 mo
320 28.8 li
f
324 28.8 mo
320 28.8 li
@
19.6754 25.1992 mo
19.0634 25.1992 18.6074 25.4992 18.2954 26.0992 cv
17.9834 26.6992 17.8394 27.5992 17.8394 28.7992 cv
17.8394 29.9992 17.9834 30.8992 18.2954 31.4992 cv
18.6074 32.0992 19.0634 32.3992 19.6754 32.3992 cv
20.2874 32.3992 20.7434 32.0992 21.0554 31.4992 cv
21.3554 30.8992 21.5114 29.9992 21.5114 28.7992 cv
21.5114 27.5992 21.3554 26.6992 21.0554 26.0992 cv
20.7434 25.4992 20.2874 25.1992 19.6754 25.1992 cv
19.6754 24.2632 mo
20.6474 24.2632 21.3914 24.6592 21.9194 25.4272 cv
22.4354 26.2072 22.6994 27.3352 22.6994 28.7992 cv
22.6994 30.2752 22.4354 31.4032 21.9194 32.1712 cv
21.3914 32.9392 20.6474 33.3232 19.6754 33.3232 cv
18.6914 33.3232 17.9354 32.9392 17.4194 32.1712 cv
16.9034 31.4032 16.6514 30.2752 16.6514 28.7992 cv
16.6514 27.3352 16.9034 26.2072 17.4194 25.4272 cv
17.9354 24.6592 18.6914 24.2632 19.6754 24.2632 cv
f
24.7754 31.6792 mo
26.0114 31.6792 li
26.0114 33.1672 li
24.7754 33.1672 li
24.7754 31.6792 li
f
28.6273 32.9872 mo
28.6273 31.9072 li
28.9153 32.0512 29.2153 32.1592 29.5273 32.2312 cv
29.8273 32.3032 30.1273 32.3392 30.4273 32.3392 cv
31.1953 32.3392 31.7953 32.0872 32.2033 31.5592 cv
32.6113 31.0312 32.8513 30.2392 32.9233 29.1592 cv
32.6833 29.4952 32.3953 29.7592 32.0593 29.9392 cv
31.7113 30.1192 31.3273 30.2032 30.9073 30.2032 cv
30.0193 30.2032 29.3233 29.9392 28.8193 29.4112 cv
28.3153 28.8832 28.0633 28.1632 28.0633 27.2392 cv
28.0633 26.3512 28.3273 25.6312 28.8553 25.0792 cv
29.3833 24.5392 30.0913 24.2632 30.9793 24.2632 cv
31.9873 24.2632 32.7673 24.6592 33.2953 25.4272 cv
33.8233 26.2072 34.0993 27.3352 34.0993 28.7992 cv
34.0993 30.1912 33.7633 31.2832 33.1153 32.0992 cv
32.4553 32.9152 31.5793 33.3232 30.4753 33.3232 cv
30.1753 33.3232 29.8753 33.2872 29.5753 33.2392 cv
29.2633 33.1912 28.9513 33.1072 28.6273 32.9872 cv
30.9793 29.2792 mo
31.5073 29.2792 31.9273 29.0992 32.2393 28.7392 cv
32.5513 28.3792 32.7073 27.8752 32.7073 27.2392 cv
32.7073 26.6152 32.5513 26.1112 32.2393 25.7512 cv
31.9273 25.3912 31.5073 25.1992 30.9793 25.1992 cv
30.4513 25.1992 30.0313 25.3912 29.7193 25.7512 cv
29.4073 26.1112 29.2513 26.6152 29.2513 27.2392 cv
29.2513 27.8752 29.4073 28.3792 29.7193 28.7392 cv
30.0313 29.0992 30.4513 29.2792 30.9793 29.2792 cv
f
38.7553 25.1992 mo
38.1433 25.1992 37.6873 25.4992 37.3753 26.0992 cv
37.0633 26.6992 36.9193 27.5992 36.9193 28.7992 cv
36.9193 29.9992 37.0633 30.8992 37.3753 31.4992 cv
37.6873 32.0992 38.1433 32.3992 38.7553 32.3992 cv
39.3673 32.3992 39.8233 32.0992 40.1353 31.4992 cv
40.4353 30.8992 40.5913 29.9992 40.5913 28.7992 cv
40.5913 27.5992 40.4353 26.6992 40.1353 26.0992 cv
39.8233 25.4992 39.3673 25.1992 38.7553 25.1992 cv
38.7553 24.2632 mo
39.7273 24.2632 40.4713 24.6592 40.9993 25.4272 cv
41.5153 26.2072 41.7793 27.3352 41.7793 28.7992 cv
41.7793 30.2752 41.5153 31.4032 40.9993 32.1712 cv
40.4713 32.9392 39.7273 33.3232 38.7553 33.3232 cv
37.7713 33.3232 37.0153 32.9392 36.4993 32.1712 cv
35.9833 31.4032 35.7313 30.2752 35.7313 28.7992 cv
35.7313 27.3352 35.9833 26.2072 36.4993 25.4272 cv
37.0153 24.6592 37.7713 24.2632 38.7553 24.2632 cv
f
3.1035 152.208 mo
7.4595 153.816 li
7.4595 150.6 li
3.1035 152.208 li
1.9395 152.88 mo
1.9395 151.536 li
10.6875 148.201 li
10.6875 149.436 li
8.4435 150.229 li
8.4435 154.176 li
10.6875 154.969 li
10.6875 156.217 li
1.9395 152.88 li
f
1.9395 147.06 mo
1.9395 145.872 li
7.2555 145.872 li
8.1915 145.872 8.8755 145.704 9.2835 145.368 cv
9.6915 145.032 9.8955 144.48 9.8955 143.712 cv
9.8955 142.956 9.6915 142.404 9.2835 142.068 cv
8.8755 141.732 8.1915 141.552 7.2555 141.552 cv
1.9395 141.552 li
1.9395 140.364 li
7.3995 140.364 li
8.5515 140.364 9.4035 140.652 9.9795 141.216 cv
10.5555 141.78 10.8435 142.608 10.8435 143.712 cv
10.8435 144.816 10.5555 145.656 9.9795 146.22 cv
9.4035 146.784 8.5515 147.06 7.3995 147.06 cv
1.9395 147.06 li
f
2.6115 131.592 mo
3.8595 131.592 li
3.4995 132 3.2235 132.421 3.0315 132.876 cv
2.8515 133.332 2.7555 133.8 2.7555 134.304 cv
2.7555 135.313 3.0675 136.08 3.6795 136.608 cv
4.2915 137.136 5.1675 137.4 6.3195 137.4 cv
7.4715 137.4 8.3595 137.136 8.9715 136.608 cv
9.5835 136.08 9.8835 135.313 9.8835 134.304 cv
9.8835 133.8 9.7995 133.332 9.6075 132.876 cv
9.4275 132.421 9.1515 132 8.7795 131.592 cv
10.0155 131.592 li
10.3035 132.012 10.5075 132.456 10.6395 132.912 cv
10.7715 133.368 10.8435 133.86 10.8435 134.376 cv
10.8435 135.697 10.4475 136.74 9.6435 137.508 cv
8.8395 138.276 7.7355 138.648 6.3195 138.648 cv
4.9155 138.648 3.8115 138.276 2.9955 137.508 cv
2.1915 136.74 1.7835 135.697 1.7835 134.376 cv
1.7835 133.848 1.8555 133.356 1.9875 132.9 cv
2.1315 132.444 2.3355 132 2.6115 131.592 cv
f
1 lw
2 lc
45 28.8 mo
324 28.8 li
@
324 259.2 mo
324 28.8 li
@
45 259.2 mo
324 259.2 li
@
45 259.2 mo
45 28.8 li
@
79.4071 14.4688 mo
79.4071 18.4144 li
81.1927 18.4144 li
81.8551 18.4144 82.3591 18.256 82.7191 17.9104 cv
83.0791 17.5648 83.2663 17.0752 83.2663 16.4416 cv
83.2663 15.808 83.0791 15.3328 82.7191 14.9872 cv
82.3591 14.6416 81.8551 14.4688 81.1927 14.4688 cv
79.4071 14.4688 li
77.9815 13.3024 mo
81.1927 13.3024 li
82.3591 13.3024 83.2519 13.576 83.8567 14.1088 cv
84.4615 14.6416 84.7639 15.4192 84.7639 16.4416 cv
84.7639 17.4784 84.4615 18.2704 83.8567 18.7888 cv
83.2519 19.3216 82.3591 19.5808 81.1927 19.5808 cv
79.4071 19.5808 li
79.4071 23.8 li
77.9815 23.8 li
77.9815 13.3024 li
f
93.3463 19.5376 mo
93.3463 20.1712 li
87.3991 20.1712 li
87.4567 21.064 87.7159 21.7552 88.2055 22.216 cv
88.6807 22.6768 89.3431 22.9072 90.2071 22.9072 cv
90.6967 22.9072 91.1863 22.8496 91.6471 22.7344 cv
92.1079 22.6192 92.5831 22.432 93.0439 22.1728 cv
93.0439 23.3968 li
92.5831 23.5984 92.1079 23.7568 91.6183 23.8432 cv
91.1287 23.9296 90.6247 23.9872 90.1351 23.9872 cv
88.8679 23.9872 87.8743 23.6272 87.1399 22.9072 cv
86.4055 22.1872 86.0455 21.1936 86.0455 19.9408 cv
86.0455 18.6592 86.3911 17.6368 87.0823 16.8736 cv
87.7735 16.1248 88.7239 15.736 89.9047 15.736 cv
90.9703 15.736 91.8055 16.0816 92.4247 16.7584 cv
93.0295 17.4496 93.3463 18.3712 93.3463 19.5376 cv
92.0503 19.1632 mo
92.0359 18.4576 91.8343 17.896 91.4599 17.464 cv
91.0711 17.0464 90.5527 16.8304 89.9191 16.8304 cv
89.1991 16.8304 88.6231 17.0464 88.1911 17.4496 cv
87.7591 17.8528 87.4999 18.4288 87.4423 19.1632 cv
92.0503 19.1632 li
f
100.028 17.1328 mo
99.8839 17.0464 99.7255 16.9888 99.5527 16.9456 cv
99.3799 16.9168 99.1927 16.888 98.9911 16.888 cv
98.2567 16.888 97.6951 17.1328 97.3063 17.608 cv
96.9031 18.0832 96.7159 18.76 96.7159 19.6528 cv
96.7159 23.8 li
95.4199 23.8 li
95.4199 15.9232 li
96.7159 15.9232 li
96.7159 17.1472 li
96.9751 16.672 97.3351 16.312 97.7671 16.0816 cv
98.1991 15.8512 98.7319 15.736 99.3655 15.736 cv
99.4519 15.736 99.5527 15.7504 99.6679 15.7504 cv
99.7687 15.7648 99.8839 15.7792 100.028 15.808 cv
100.028 17.1328 li
f
105.37 12.856 mo
105.37 13.936 li
104.132 13.936 li
103.671 13.936 103.34 14.0368 103.167 14.224 cv
102.98 14.4112 102.893 14.7424 102.893 15.232 cv
102.893 15.9232 li
105.025 15.9232 li
105.025 16.9312 li
102.893 16.9312 li
102.893 23.8 li
101.597 23.8 li
101.597 16.9312 li
100.359 16.9312 li
100.359 15.9232 li
101.597 15.9232 li
101.597 15.376 li
101.597 14.512 101.799 13.864 102.202 13.4608 cv
102.605 13.0576 103.253 12.856 104.146 12.856 cv
105.37 12.856 li
f
109.503 16.8304 mo
108.812 16.8304 108.265 17.104 107.862 17.6512 cv
107.458 18.1984 107.257 18.9328 107.257 19.8688 cv
107.257 20.8192 107.444 21.5536 107.847 22.1008 cv
108.25 22.648 108.798 22.9072 109.503 22.9072 cv
110.194 22.9072 110.742 22.648 111.145 22.1008 cv
111.548 21.5536 111.75 20.8192 111.75 19.8688 cv
111.75 18.9472 111.548 18.1984 111.145 17.6512 cv
110.742 17.104 110.194 16.8304 109.503 16.8304 cv
109.503 15.736 mo
110.626 15.736 111.505 16.1104 112.153 16.8304 cv
112.786 17.5648 113.118 18.5728 113.118 19.8688 cv
113.118 21.1648 112.786 22.1728 112.153 22.8928 cv
111.505 23.6272 110.626 23.9872 109.503 23.9872 cv
108.366 23.9872 107.473 23.6272 106.839 22.8928 cv
106.206 22.1728 105.889 21.1648 105.889 19.8688 cv
105.889 18.5728 106.206 17.5648 106.839 16.8304 cv
107.473 16.1104 108.366 15.736 109.503 15.736 cv
f
119.828 17.1328 mo
119.684 17.0464 119.526 16.9888 119.353 16.9456 cv
119.18 16.9168 118.993 16.888 118.791 16.888 cv
118.057 16.888 117.495 17.1328 117.106 17.608 cv
116.703 18.0832 116.516 18.76 116.516 19.6528 cv
116.516 23.8 li
115.22 23.8 li
115.22 15.9232 li
116.516 15.9232 li
116.516 17.1472 li
116.775 16.672 117.135 16.312 117.567 16.0816 cv
117.999 15.8512 118.532 15.736 119.166 15.736 cv
119.252 15.736 119.353 15.7504 119.468 15.7504 cv
119.569 15.7648 119.684 15.7792 119.828 15.808 cv
119.828 17.1328 li
f
127.316 17.4352 mo
127.633 16.8592 128.021 16.4416 128.468 16.1536 cv
128.914 15.88 129.447 15.736 130.066 15.736 cv
130.873 15.736 131.506 16.024 131.953 16.6 cv
132.399 17.176 132.629 17.9968 132.629 19.048 cv
132.629 23.8 li
131.333 23.8 li
131.333 19.0912 li
131.333 18.3424 131.189 17.7808 130.93 17.4064 cv
130.657 17.0464 130.253 16.8592 129.706 16.8592 cv
129.029 16.8592 128.497 17.0896 128.108 17.536 cv
127.719 17.9824 127.532 18.5872 127.532 19.3504 cv
127.532 23.8 li
126.236 23.8 li
126.236 19.0912 li
126.236 18.3424 126.092 17.7808 125.833 17.4064 cv
125.559 17.0464 125.141 16.8592 124.594 16.8592 cv
123.932 16.8592 123.399 17.0896 123.01 17.536 cv
122.621 17.9824 122.434 18.5872 122.434 19.3504 cv
122.434 23.8 li
121.138 23.8 li
121.138 15.9232 li
122.434 15.9232 li
122.434 17.1472 li
122.722 16.672 123.082 16.312 123.5 16.0816 cv
123.903 15.8512 124.393 15.736 124.969 15.736 cv
125.545 15.736 126.02 15.88 126.423 16.168 cv
126.826 16.456 127.114 16.888 127.316 17.4352 cv
f
138.793 19.84 mo
137.741 19.84 137.021 19.9696 136.618 20.2 cv
136.215 20.4448 136.013 20.848 136.013 21.424 cv
136.013 21.8848 136.157 22.2592 136.46 22.5184 cv
136.762 22.792 137.18 22.9216 137.698 22.9216 cv
138.418 22.9216 138.994 22.6768 139.426 22.1584 cv
139.858 21.6544 140.074 20.9776 140.074 20.128 cv
140.074 19.84 li
138.793 19.84 li
141.37 19.3072 mo
141.37 23.8 li
140.074 23.8 li
140.074 22.6048 li
139.772 23.0944 139.397 23.44 138.965 23.656 cv
138.533 23.872 137.986 23.9872 137.353 23.9872 cv
136.546 23.9872 135.898 23.7712 135.423 23.3248 cv
134.948 22.8784 134.717 22.2736 134.717 21.5104 cv
134.717 20.632 135.005 19.9696 135.61 19.5088 cv
136.201 19.0624 137.079 18.832 138.26 18.832 cv
140.074 18.832 li
140.074 18.7024 li
140.074 18.112 139.873 17.6512 139.484 17.32 cv
139.095 17.0032 138.548 16.8304 137.842 16.8304 cv
137.381 16.8304 136.949 16.888 136.517 17.0032 cv
136.085 17.1184 135.682 17.2768 135.293 17.4784 cv
135.293 16.2832 li
135.754 16.1104 136.215 15.9664 136.661 15.88 cv
137.108 15.7936 137.54 15.736 137.972 15.736 cv
139.109 15.736 139.959 16.0384 140.521 16.6288 cv
141.082 17.2192 141.37 18.112 141.37 19.3072 cv
f
150.586 19.048 mo
150.586 23.8 li
149.29 23.8 li
149.29 19.0912 li
149.29 18.3424 149.132 17.7952 148.844 17.4208 cv
148.556 17.0464 148.124 16.8592 147.548 16.8592 cv
146.842 16.8592 146.295 17.0896 145.892 17.536 cv
145.489 17.9824 145.287 18.5872 145.287 19.3504 cv
145.287 23.8 li
143.991 23.8 li
143.991 15.9232 li
145.287 15.9232 li
145.287 17.1472 li
145.59 16.6864 145.95 16.3264 146.382 16.096 cv
146.799 15.8656 147.289 15.736 147.836 15.736 cv
148.729 15.736 149.42 16.024 149.881 16.5856 cv
150.342 17.1472 150.586 17.968 150.586 19.048 cv
f
158.838 16.2256 mo
158.838 17.4352 li
158.463 17.2336 158.103 17.0896 157.729 16.9888 cv
157.354 16.888 156.994 16.8304 156.62 16.8304 cv
155.785 16.8304 155.122 17.104 154.662 17.6368 cv
154.201 18.1696 153.97 18.9184 153.97 19.8688 cv
153.97 20.8336 154.201 21.5824 154.662 22.1152 cv
155.122 22.648 155.785 22.9072 156.62 22.9072 cv
156.994 22.9072 157.354 22.864 157.729 22.7632 cv
158.103 22.6624 158.463 22.504 158.838 22.3024 cv
158.838 23.4976 li
158.463 23.6704 158.089 23.8 157.714 23.872 cv
157.326 23.944 156.908 23.9872 156.476 23.9872 cv
155.295 23.9872 154.345 23.6272 153.654 22.8784 cv
152.948 22.144 152.602 21.136 152.602 19.8688 cv
152.602 18.5872 152.948 17.5792 153.654 16.8448 cv
154.359 16.1104 155.324 15.736 156.562 15.736 cv
156.966 15.736 157.354 15.7792 157.729 15.8656 cv
158.103 15.952 158.478 16.0672 158.838 16.2256 cv
f
167.823 19.5376 mo
167.823 20.1712 li
161.876 20.1712 li
161.934 21.064 162.193 21.7552 162.682 22.216 cv
163.158 22.6768 163.82 22.9072 164.684 22.9072 cv
165.174 22.9072 165.663 22.8496 166.124 22.7344 cv
166.585 22.6192 167.06 22.432 167.521 22.1728 cv
167.521 23.3968 li
167.06 23.5984 166.585 23.7568 166.095 23.8432 cv
165.606 23.9296 165.102 23.9872 164.612 23.9872 cv
163.345 23.9872 162.351 23.6272 161.617 22.9072 cv
160.882 22.1872 160.522 21.1936 160.522 19.9408 cv
160.522 18.6592 160.868 17.6368 161.559 16.8736 cv
162.25 16.1248 163.201 15.736 164.382 15.736 cv
165.447 15.736 166.282 16.0816 166.902 16.7584 cv
167.506 17.4496 167.823 18.3712 167.823 19.5376 cv
166.527 19.1632 mo
166.513 18.4576 166.311 17.896 165.937 17.464 cv
165.548 17.0464 165.03 16.8304 164.396 16.8304 cv
163.676 16.8304 163.1 17.0464 162.668 17.4496 cv
162.236 17.8528 161.977 18.4288 161.919 19.1632 cv
166.527 19.1632 li
f
180.178 19.8688 mo
180.178 18.9184 179.977 18.184 179.588 17.6368 cv
179.185 17.0896 178.652 16.816 177.975 16.816 cv
177.284 16.816 176.751 17.0896 176.362 17.6368 cv
175.959 18.184 175.772 18.9184 175.772 19.8688 cv
175.772 20.8192 175.959 21.568 176.362 22.1152 cv
176.751 22.6624 177.284 22.9216 177.975 22.9216 cv
178.652 22.9216 179.185 22.6624 179.588 22.1152 cv
179.977 21.568 180.178 20.8192 180.178 19.8688 cv
175.772 17.1184 mo
176.031 16.6576 176.377 16.312 176.794 16.0816 cv
177.212 15.8512 177.716 15.736 178.292 15.736 cv
179.242 15.736 180.02 16.1248 180.625 16.8736 cv
181.215 17.6368 181.518 18.6304 181.518 19.8688 cv
181.518 21.1072 181.215 22.1152 180.625 22.864 cv
180.02 23.6128 179.242 23.9872 178.292 23.9872 cv
177.716 23.9872 177.212 23.872 176.794 23.656 cv
176.377 23.44 176.031 23.0944 175.772 22.6192 cv
175.772 23.8 li
174.476 23.8 li
174.476 12.856 li
175.772 12.856 li
175.772 17.1184 li
f
186.946 24.52 mo
186.572 25.4416 186.212 26.0608 185.866 26.3488 cv
185.521 26.6368 185.06 26.7808 184.484 26.7808 cv
183.447 26.7808 li
183.447 25.7008 li
184.21 25.7008 li
184.556 25.7008 184.83 25.6144 185.031 25.4416 cv
185.233 25.2688 185.449 24.88 185.694 24.2464 cv
185.924 23.6704 li
182.742 15.9232 li
184.11 15.9232 li
186.572 22.0864 li
189.034 15.9232 li
190.402 15.9232 li
186.946 24.52 li
f
201.332 17.1328 mo
201.188 17.0464 201.029 16.9888 200.857 16.9456 cv
200.684 16.9168 200.497 16.888 200.295 16.888 cv
199.561 16.888 198.999 17.1328 198.61 17.608 cv
198.207 18.0832 198.02 18.76 198.02 19.6528 cv
198.02 23.8 li
196.724 23.8 li
196.724 15.9232 li
198.02 15.9232 li
198.02 17.1472 li
198.279 16.672 198.639 16.312 199.071 16.0816 cv
199.503 15.8512 200.036 15.736 200.669 15.736 cv
200.756 15.736 200.857 15.7504 200.972 15.7504 cv
201.073 15.7648 201.188 15.7792 201.332 15.808 cv
201.332 17.1328 li
f
209.425 19.5376 mo
209.425 20.1712 li
203.477 20.1712 li
203.535 21.064 203.794 21.7552 204.284 22.216 cv
204.759 22.6768 205.421 22.9072 206.285 22.9072 cv
206.775 22.9072 207.265 22.8496 207.725 22.7344 cv
208.186 22.6192 208.661 22.432 209.122 22.1728 cv
209.122 23.3968 li
208.661 23.5984 208.186 23.7568 207.697 23.8432 cv
207.207 23.9296 206.703 23.9872 206.213 23.9872 cv
204.946 23.9872 203.953 23.6272 203.218 22.9072 cv
202.484 22.1872 202.124 21.1936 202.124 19.9408 cv
202.124 18.6592 202.469 17.6368 203.161 16.8736 cv
203.852 16.1248 204.802 15.736 205.983 15.736 cv
207.049 15.736 207.884 16.0816 208.503 16.7584 cv
209.108 17.4496 209.425 18.3712 209.425 19.5376 cv
208.129 19.1632 mo
208.114 18.4576 207.913 17.896 207.538 17.464 cv
207.149 17.0464 206.631 16.8304 205.997 16.8304 cv
205.277 16.8304 204.701 17.0464 204.269 17.4496 cv
203.837 17.8528 203.578 18.4288 203.521 19.1632 cv
208.129 19.1632 li
f
216.725 19.768 mo
216.725 18.8464 216.524 18.112 216.149 17.5936 cv
215.761 17.0752 215.213 16.816 214.522 16.816 cv
213.831 16.816 213.284 17.0752 212.895 17.5936 cv
212.506 18.112 212.319 18.8464 212.319 19.768 cv
212.319 20.704 212.506 21.424 212.895 21.9424 cv
213.284 22.4608 213.831 22.72 214.522 22.72 cv
215.213 22.72 215.761 22.4608 216.149 21.9424 cv
216.524 21.424 216.725 20.704 216.725 19.768 cv
218.021 22.8208 mo
218.021 24.1456 217.719 25.1392 217.129 25.8016 cv
216.524 26.4496 215.617 26.7808 214.393 26.7808 cv
213.932 26.7808 213.514 26.7376 213.111 26.68 cv
212.708 26.608 212.305 26.5072 211.93 26.3632 cv
211.93 25.1104 li
212.305 25.312 212.679 25.456 213.053 25.5568 cv
213.428 25.6576 213.802 25.7152 214.191 25.7152 cv
215.026 25.7152 215.66 25.4848 216.092 25.0528 cv
216.509 24.6064 216.725 23.944 216.725 23.0512 cv
216.725 22.4176 li
216.452 22.8784 216.106 23.224 215.689 23.4544 cv
215.271 23.6848 214.781 23.8 214.205 23.8 cv
213.226 23.8 212.449 23.44 211.858 22.7056 cv
211.268 21.9712 210.98 20.992 210.98 19.768 cv
210.98 18.5584 211.268 17.5792 211.858 16.8448 cv
212.449 16.1104 213.226 15.736 214.205 15.736 cv
214.781 15.736 215.271 15.8512 215.689 16.0816 cv
216.106 16.312 216.452 16.6576 216.725 17.1184 cv
216.725 15.9232 li
218.021 15.9232 li
218.021 22.8208 li
f
220.556 20.6896 mo
220.556 15.9232 li
221.852 15.9232 li
221.852 20.6464 li
221.852 21.3952 221.996 21.9424 222.284 22.3168 cv
222.572 22.6912 223.004 22.8784 223.594 22.8784 cv
224.285 22.8784 224.847 22.6624 225.25 22.216 cv
225.653 21.7696 225.855 21.1648 225.855 20.3872 cv
225.855 15.9232 li
227.151 15.9232 li
227.151 23.8 li
225.855 23.8 li
225.855 22.5904 li
225.538 23.08 225.164 23.4256 224.761 23.656 cv
224.343 23.872 223.868 23.9872 223.321 23.9872 cv
222.413 23.9872 221.722 23.7136 221.261 23.152 cv
220.786 22.6048 220.556 21.784 220.556 20.6896 cv
f
229.815 12.856 mo
231.111 12.856 li
231.111 23.8 li
229.815 23.8 li
229.815 12.856 li
f
237.404 19.84 mo
236.353 19.84 235.633 19.9696 235.229 20.2 cv
234.826 20.4448 234.625 20.848 234.625 21.424 cv
234.625 21.8848 234.769 22.2592 235.071 22.5184 cv
235.373 22.792 235.791 22.9216 236.309 22.9216 cv
237.029 22.9216 237.605 22.6768 238.037 22.1584 cv
238.469 21.6544 238.685 20.9776 238.685 20.128 cv
238.685 19.84 li
237.404 19.84 li
239.981 19.3072 mo
239.981 23.8 li
238.685 23.8 li
238.685 22.6048 li
238.383 23.0944 238.009 23.44 237.577 23.656 cv
237.145 23.872 236.597 23.9872 235.964 23.9872 cv
235.157 23.9872 234.509 23.7712 234.034 23.3248 cv
233.559 22.8784 233.329 22.2736 233.329 21.5104 cv
233.329 20.632 233.617 19.9696 234.221 19.5088 cv
234.812 19.0624 235.69 18.832 236.871 18.832 cv
238.685 18.832 li
238.685 18.7024 li
238.685 18.112 238.484 17.6512 238.095 17.32 cv
237.706 17.0032 237.159 16.8304 236.453 16.8304 cv
235.993 16.8304 235.561 16.888 235.129 17.0032 cv
234.697 17.1184 234.293 17.2768 233.905 17.4784 cv
233.905 16.2832 li
234.365 16.1104 234.826 15.9664 235.273 15.88 cv
235.719 15.7936 236.151 15.736 236.583 15.736 cv
237.721 15.736 238.57 16.0384 239.132 16.6288 cv
239.693 17.2192 239.981 18.112 239.981 19.3072 cv
f
247.21 17.1328 mo
247.066 17.0464 246.908 16.9888 246.735 16.9456 cv
246.562 16.9168 246.375 16.888 246.173 16.888 cv
245.439 16.888 244.877 17.1328 244.489 17.608 cv
244.085 18.0832 243.898 18.76 243.898 19.6528 cv
243.898 23.8 li
242.602 23.8 li
242.602 15.9232 li
243.898 15.9232 li
243.898 17.1472 li
244.157 16.672 244.517 16.312 244.949 16.0816 cv
245.381 15.8512 245.914 15.736 246.548 15.736 cv
246.634 15.736 246.735 15.7504 246.85 15.7504 cv
246.951 15.7648 247.066 15.7792 247.21 15.808 cv
247.21 17.1328 li
f
248.564 15.9232 mo
249.86 15.9232 li
249.86 23.8 li
248.564 23.8 li
248.564 15.9232 li
248.564 12.856 mo
249.86 12.856 li
249.86 14.4976 li
248.564 14.4976 li
248.564 12.856 li
f
257.593 16.1536 mo
257.593 17.3776 li
257.218 17.2048 256.844 17.0608 256.455 16.96 cv
256.052 16.8736 255.649 16.816 255.231 16.816 cv
254.583 16.816 254.093 16.9168 253.777 17.1184 cv
253.46 17.32 253.301 17.608 253.301 17.9968 cv
253.301 18.2992 253.417 18.5296 253.647 18.7024 cv
253.877 18.8752 254.338 19.048 255.029 19.192 cv
255.476 19.2928 li
256.397 19.4944 257.045 19.7824 257.434 20.128 cv
257.809 20.488 258.01 20.992 258.01 21.6256 cv
258.01 22.36 257.722 22.936 257.146 23.3536 cv
256.57 23.7856 255.764 23.9872 254.756 23.9872 cv
254.324 23.9872 253.892 23.944 253.431 23.872 cv
252.97 23.8 252.495 23.6848 251.991 23.512 cv
251.991 22.1728 li
252.466 22.432 252.941 22.6192 253.402 22.7344 cv
253.863 22.864 254.324 22.9216 254.785 22.9216 cv
255.389 22.9216 255.865 22.8208 256.196 22.6192 cv
256.513 22.4176 256.685 22.1152 256.685 21.7264 cv
256.685 21.3808 256.556 21.1072 256.325 20.92 cv
256.095 20.7328 255.577 20.5456 254.77 20.3728 cv
254.324 20.272 li
253.517 20.0992 252.927 19.84 252.581 19.4944 cv
252.221 19.1488 252.049 18.6736 252.049 18.0544 cv
252.049 17.32 252.308 16.744 252.826 16.3408 cv
253.345 15.9376 254.093 15.736 255.073 15.736 cv
255.548 15.736 255.994 15.7792 256.426 15.8512 cv
256.844 15.9232 257.233 16.024 257.593 16.1536 cv
f
263.655 19.84 mo
262.604 19.84 261.884 19.9696 261.48 20.2 cv
261.077 20.4448 260.876 20.848 260.876 21.424 cv
260.876 21.8848 261.02 22.2592 261.322 22.5184 cv
261.625 22.792 262.042 22.9216 262.56 22.9216 cv
263.28 22.9216 263.857 22.6768 264.289 22.1584 cv
264.72 21.6544 264.936 20.9776 264.936 20.128 cv
264.936 19.84 li
263.655 19.84 li
266.233 19.3072 mo
266.233 23.8 li
264.936 23.8 li
264.936 22.6048 li
264.634 23.0944 264.26 23.44 263.828 23.656 cv
263.396 23.872 262.849 23.9872 262.215 23.9872 cv
261.409 23.9872 260.76 23.7712 260.285 23.3248 cv
259.81 22.8784 259.58 22.2736 259.58 21.5104 cv
259.58 20.632 259.868 19.9696 260.473 19.5088 cv
261.063 19.0624 261.941 18.832 263.122 18.832 cv
264.936 18.832 li
264.936 18.7024 li
264.936 18.112 264.735 17.6512 264.346 17.32 cv
263.957 17.0032 263.41 16.8304 262.704 16.8304 cv
262.244 16.8304 261.812 16.888 261.38 17.0032 cv
260.948 17.1184 260.544 17.2768 260.156 17.4784 cv
260.156 16.2832 li
260.616 16.1104 261.077 15.9664 261.524 15.88 cv
261.97 15.7936 262.402 15.736 262.834 15.736 cv
263.972 15.736 264.821 16.0384 265.383 16.6288 cv
265.944 17.2192 266.233 18.112 266.233 19.3072 cv
f
270.178 13.6912 mo
270.178 15.9232 li
272.842 15.9232 li
272.842 16.9312 li
270.178 16.9312 li
270.178 21.208 li
270.178 21.856 270.265 22.2736 270.437 22.4464 cv
270.61 22.6336 270.97 22.72 271.517 22.72 cv
272.842 22.72 li
272.842 23.8 li
271.517 23.8 li
270.509 23.8 269.818 23.6128 269.444 23.2384 cv
269.069 22.864 268.882 22.1872 268.882 21.208 cv
268.882 16.9312 li
267.932 16.9312 li
267.932 15.9232 li
268.882 15.9232 li
268.882 13.6912 li
270.178 13.6912 li
f
274.541 15.9232 mo
275.837 15.9232 li
275.837 23.8 li
274.541 23.8 li
274.541 15.9232 li
274.541 12.856 mo
275.837 12.856 li
275.837 14.4976 li
274.541 14.4976 li
274.541 12.856 li
f
281.597 16.8304 mo
280.906 16.8304 280.359 17.104 279.956 17.6512 cv
279.553 18.1984 279.351 18.9328 279.351 19.8688 cv
279.351 20.8192 279.538 21.5536 279.941 22.1008 cv
280.345 22.648 280.892 22.9072 281.597 22.9072 cv
282.289 22.9072 282.836 22.648 283.239 22.1008 cv
283.642 21.5536 283.844 20.8192 283.844 19.8688 cv
283.844 18.9472 283.642 18.1984 283.239 17.6512 cv
282.836 17.104 282.289 16.8304 281.597 16.8304 cv
281.597 15.736 mo
282.721 15.736 283.599 16.1104 284.247 16.8304 cv
284.881 17.5648 285.212 18.5728 285.212 19.8688 cv
285.212 21.1648 284.881 22.1728 284.247 22.8928 cv
283.599 23.6272 282.721 23.9872 281.597 23.9872 cv
280.46 23.9872 279.567 23.6272 278.933 22.8928 cv
278.3 22.1728 277.983 21.1648 277.983 19.8688 cv
277.983 18.5728 278.3 17.5648 278.933 16.8304 cv
279.567 16.1104 280.46 15.736 281.597 15.736 cv
f
293.909 19.048 mo
293.909 23.8 li
292.613 23.8 li
292.613 19.0912 li
292.613 18.3424 292.455 17.7952 292.167 17.4208 cv
291.879 17.0464 291.447 16.8592 290.871 16.8592 cv
290.165 16.8592 289.618 17.0896 289.215 17.536 cv
288.812 17.9824 288.61 18.5872 288.61 19.3504 cv
288.61 23.8 li
287.314 23.8 li
287.314 15.9232 li
288.61 15.9232 li
288.61 17.1472 li
288.913 16.6864 289.273 16.3264 289.705 16.096 cv
290.122 15.8656 290.612 15.736 291.159 15.736 cv
292.052 15.736 292.743 16.024 293.204 16.5856 cv
293.665 17.1472 293.909 17.968 293.909 19.048 cv
f
208.648 78.9075 mo
316.8 78.9075 li
316.8 36 li
208.648 36 li
208.648 78.9075 li
cp
0 0 0 0 cmyk
f
208.648 78.9075 mo
316.8 78.9075 li
316.8 36 li
208.648 36 li
208.648 78.9075 li
cp
0 0 0 1 cmyk
@
214.408 52.4006 mo
243.208 52.4006 li
243.208 42.3206 li
214.408 42.3206 li
214.408 52.4006 li
cp
.873045 .242161 1 .129244 cmyk
f
214.408 52.4006 mo
243.208 52.4006 li
243.208 42.3206 li
214.408 42.3206 li
214.408 52.4006 li
cp
0 0 0 1 cmyk
@
257.564 43.0694 mo
257.564 51.2342 li
259.278 51.2342 li
260.718 51.2342 261.784 50.9174 262.46 50.255 cv
263.123 49.5926 263.468 48.5558 263.468 47.1446 cv
263.468 45.7334 263.123 44.711 262.46 44.0486 cv
261.784 43.4006 260.718 43.0694 259.278 43.0694 cv
257.564 43.0694 li
256.139 41.903 mo
259.062 41.903 li
261.092 41.903 262.59 42.335 263.54 43.1702 cv
264.491 44.0198 264.966 45.3446 264.966 47.1446 cv
264.966 48.959 264.476 50.2838 263.526 51.1334 cv
262.576 51.983 261.078 52.4006 259.062 52.4006 cv
256.139 52.4006 li
256.139 41.903 li
f
271.734 45.7334 mo
271.59 45.647 271.432 45.5894 271.259 45.5462 cv
271.086 45.5174 270.899 45.4886 270.697 45.4886 cv
269.963 45.4886 269.401 45.7334 269.012 46.2086 cv
268.609 46.6838 268.422 47.3606 268.422 48.2534 cv
268.422 52.4006 li
267.126 52.4006 li
267.126 44.5238 li
268.422 44.5238 li
268.422 45.7478 li
268.681 45.2726 269.041 44.9126 269.473 44.6822 cv
269.905 44.4518 270.438 44.3366 271.072 44.3366 cv
271.158 44.3366 271.259 44.351 271.374 44.351 cv
271.475 44.3654 271.59 44.3798 271.734 44.4086 cv
271.734 45.7334 li
f
276.14 45.431 mo
275.449 45.431 274.902 45.7046 274.499 46.2518 cv
274.095 46.799 273.894 47.5334 273.894 48.4694 cv
273.894 49.4198 274.081 50.1542 274.484 50.7014 cv
274.887 51.2486 275.435 51.5078 276.14 51.5078 cv
276.831 51.5078 277.379 51.2486 277.782 50.7014 cv
278.185 50.1542 278.387 49.4198 278.387 48.4694 cv
278.387 47.5478 278.185 46.799 277.782 46.2518 cv
277.379 45.7046 276.831 45.431 276.14 45.431 cv
276.14 44.3366 mo
277.263 44.3366 278.142 44.711 278.79 45.431 cv
279.423 46.1654 279.755 47.1734 279.755 48.4694 cv
279.755 49.7654 279.423 50.7734 278.79 51.4934 cv
278.142 52.2278 277.263 52.5878 276.14 52.5878 cv
275.003 52.5878 274.11 52.2278 273.476 51.4934 cv
272.843 50.7734 272.526 49.7654 272.526 48.4694 cv
272.526 47.1734 272.843 46.1654 273.476 45.431 cv
274.11 44.711 275.003 44.3366 276.14 44.3366 cv
f
283.153 51.2198 mo
283.153 55.3814 li
281.857 55.3814 li
281.857 44.5238 li
283.153 44.5238 li
283.153 45.719 li
283.412 45.2582 283.758 44.9126 284.176 44.6822 cv
284.593 44.4518 285.097 44.3366 285.673 44.3366 cv
286.624 44.3366 287.401 44.7254 288.006 45.4742 cv
288.596 46.2374 288.899 47.231 288.899 48.4694 cv
288.899 49.7078 288.596 50.7158 288.006 51.4646 cv
287.401 52.2134 286.624 52.5878 285.673 52.5878 cv
285.097 52.5878 284.593 52.4726 284.176 52.2566 cv
283.758 52.0406 283.412 51.695 283.153 51.2198 cv
287.559 48.4694 mo
287.559 47.519 287.358 46.7846 286.969 46.2374 cv
286.566 45.6902 286.033 45.4166 285.356 45.4166 cv
284.665 45.4166 284.132 45.6902 283.743 46.2374 cv
283.34 46.7846 283.153 47.519 283.153 48.4694 cv
283.153 49.4198 283.34 50.1686 283.743 50.7158 cv
284.132 51.263 284.665 51.5222 285.356 51.5222 cv
286.033 51.5222 286.566 51.263 286.969 50.7158 cv
287.358 50.1686 287.559 49.4198 287.559 48.4694 cv
f
294.097 45.431 mo
293.406 45.431 292.859 45.7046 292.455 46.2518 cv
292.052 46.799 291.851 47.5334 291.851 48.4694 cv
291.851 49.4198 292.038 50.1542 292.441 50.7014 cv
292.844 51.2486 293.391 51.5078 294.097 51.5078 cv
294.788 51.5078 295.335 51.2486 295.739 50.7014 cv
296.142 50.1542 296.343 49.4198 296.343 48.4694 cv
296.343 47.5478 296.142 46.799 295.739 46.2518 cv
295.335 45.7046 294.788 45.431 294.097 45.431 cv
294.097 44.3366 mo
295.22 44.3366 296.099 44.711 296.747 45.431 cv
297.38 46.1654 297.711 47.1734 297.711 48.4694 cv
297.711 49.7654 297.38 50.7734 296.747 51.4934 cv
296.099 52.2278 295.22 52.5878 294.097 52.5878 cv
292.959 52.5878 292.067 52.2278 291.433 51.4934 cv
290.799 50.7734 290.483 49.7654 290.483 48.4694 cv
290.483 47.1734 290.799 46.1654 291.433 45.431 cv
292.067 44.711 292.959 44.3366 294.097 44.3366 cv
f
299.727 49.2902 mo
299.727 44.5238 li
301.023 44.5238 li
301.023 49.247 li
301.023 49.9958 301.167 50.543 301.455 50.9174 cv
301.743 51.2918 302.175 51.479 302.766 51.479 cv
303.457 51.479 304.019 51.263 304.422 50.8166 cv
304.825 50.3702 305.027 49.7654 305.027 48.9878 cv
305.027 44.5238 li
306.323 44.5238 li
306.323 52.4006 li
305.027 52.4006 li
305.027 51.191 li
304.71 51.6806 304.335 52.0262 303.932 52.2566 cv
303.515 52.4726 303.039 52.5878 302.492 52.5878 cv
301.585 52.5878 300.894 52.3142 300.433 51.7526 cv
299.958 51.2054 299.727 50.3846 299.727 49.2902 cv
f
310.268 42.2918 mo
310.268 44.5238 li
312.932 44.5238 li
312.932 45.5318 li
310.268 45.5318 li
310.268 49.8086 li
310.268 50.4566 310.355 50.8742 310.527 51.047 cv
310.7 51.2342 311.06 51.3206 311.607 51.3206 cv
312.932 51.3206 li
312.932 52.4006 li
311.607 52.4006 li
310.599 52.4006 309.908 52.2134 309.534 51.839 cv
309.159 51.4646 308.972 50.7878 308.972 49.8086 cv
308.972 45.5318 li
308.022 45.5318 li
308.022 44.5238 li
308.972 44.5238 li
308.972 42.2918 li
310.268 42.2918 li
f
214.408 73.1475 mo
243.208 73.1475 li
243.208 63.0675 li
214.408 63.0675 li
214.408 73.1475 li
cp
.883665 .769161 0 0 cmyk
f
214.408 73.1475 mo
243.208 73.1475 li
243.208 63.0675 li
214.408 63.0675 li
214.408 73.1475 li
cp
0 0 0 1 cmyk
@
256.139 62.6499 mo
257.564 62.6499 li
257.564 71.9523 li
262.676 71.9523 li
262.676 73.1475 li
256.139 73.1475 li
256.139 62.6499 li
f
265.513 71.9523 mo
270.467 71.9523 li
270.467 73.1475 li
263.8 73.1475 li
263.8 71.9523 li
264.332 71.4051 265.067 70.6563 266.003 69.7059 cv
266.924 68.7699 267.515 68.1651 267.76 67.8915 cv
268.22 67.3875 268.537 66.9555 268.71 66.5955 cv
268.883 66.2499 268.984 65.8899 268.984 65.5443 cv
268.984 64.9971 268.782 64.5363 268.393 64.1907 cv
268.004 63.8451 267.5 63.6579 266.867 63.6579 cv
266.42 63.6579 265.945 63.7443 265.456 63.8883 cv
264.966 64.0467 264.433 64.2771 263.872 64.5939 cv
263.872 63.1539 li
264.448 62.9235 264.98 62.7507 265.47 62.6355 cv
265.96 62.5203 266.42 62.4627 266.838 62.4627 cv
267.918 62.4627 268.782 62.7363 269.43 63.2835 cv
270.078 63.8307 270.409 64.5507 270.409 65.4579 cv
270.409 65.8899 270.323 66.3075 270.164 66.6819 cv
270.006 67.0707 269.718 67.5315 269.286 68.0499 cv
269.171 68.1939 268.796 68.5827 268.163 69.2307 cv
267.529 69.8787 266.651 70.7859 265.513 71.9523 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 17.0.0
%%For: (weinan) ()
%%Title: (dropl2.eps)
%%CreationDate: 12/31/2015 5:28 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.B3QT@ZN,;9n+6#jCbcjoc2i[X8Bs5V!<XC%D&d`V4Wj*1^K"14UH1BY\\%<=ScQH-Xcc;A9@]K!.CArrf6[&%d/)'\8q;Ds
%-DVp)R.t0'B"NLqlUE`[[9i]:[:\m;dsA!9]>[gGe`j64MLS]sWIsItgo7/gC5k^KY>h2mIJJP/niQ,8V;A.N>+Mj30."bDJQrqd
%VaA/TGWkDC4kD_F.7r(2FnpmdHI7H7TP+0rY3SkF?Z>82f'C01!%<"H;`qSCEt8I-B6@49"Odnj=YVeMKI`L/C5/OaOs)<4To^dV
%,`/ClaG-Q?Gf:@b9bAXL2%<..`74_@C$iUjm<,GBHE6kG^]rD)[D/`4c`S?KGk8TAeS\?521dkd2m[6+!9.q[1M[=G+jH<!"b7Ph
%BaU$)aL[gD(0*Aq$1O^HJuji5$GL$[%@X5iW/HCm;A:jdM""]59hEkQHtR_>J(ACbXe^u8'V"8IQ&;sbq+gC[r]bp:(l]Zbhq"pY
%I\YK)B\%Ma3Jgusl/N#Nf3/9JE4Vu)Wp^]1TF^4pe`+6qH*?mkQs,J5U2M>hfMGtlpT&eqOD[GoaAKS#4E"Mg+YP?tSl0Y4qLco4
%.8>q'P"$V16A_FK6P]"GXDdG2]3t\]Ulf.0S"iaW^#!!s(87d?8X1iig?R0p*K&:APX0e]5-ou/IRMQdHBQLJ=%r1[CSD0s-7-33
%T`L8/ld_F40>JaM!uJWYfn2(rgufcp29fkV(I`r7$;-3FB)tQ3=fV1qE*X1YM;,H<U^DVGC0e?-j-4+A=+n/8io$_:A63=[s2m+R
%Q"@TYbOdD1*qktu@5CWqDjlF*1_#pg>,B(s2,.msRb.fl8ffocChB-g$pW]hCfW)rZXOLg/JdkOZ&!6H'tdbMBGu0/;S`R&$@R^?
%RLYaGLr,s3nPOI:QJli]K?\@Ap`#^]]\%&b4e*5c`\oe*r(Z>!cp8bnH/W]>L6KL3fG-gjm2@@+^WG:$"(&um+]O=t3Wa,P;o@MF
%VGb6GCmE*".AeOH.B;krI?`$K:4NhHNfLt(K4dirRa<-mL3(;jfG.[_3cfVn=ucG1c#A\ZV($0C_`10aNSe],PRd2l20cce^Te[%
%&V&9KUuXk)91OLd)(grd1J2+L7u'WTO3K*D(iJR(klf)cl-Lhhg,E4og4]E4)k8%G;4JbSSBdY]`]<$sCdr+Zk=G,0+3*3j"t'\;
%1Fd%-7+"M5:eGB]b_V#$*>psc)+kU%8_D`pm*kK%gf)9.H"?D\@G(MAn?Ej`:V3MFd/3IU)E_S19%e=R.=u4L(%O^`g#7DV$p;hF
%fASN?/;F`aV)'03.$6X[:_Vl:B=/V[S^kM10m&T!*L*eeZ6;$FZt&s2-o*eXoG%6pIjBm-ErOK/<1NaDr1uXI\>mtMc<pFClh%g\
%Qi7hf(,64:\mbQuoCS@?Qi7[+oXj^]rkRQj'#!B(V*F&srU0T[5D&iDaa%,Yr(Ye0IV7R%?_!me'G\#RWZY>8B":g])jQR_TRV(f
%s6:nN9uG<P8_!!1G[-K8#;jb6nl^]9d7Ysfl+E%Ii&A=pl*S>P6H9K/('!60qPYms:b-c2^YrZ*3p@]g,B;]HCk.SNS#f6iNIIbl
%Ya$]CDhP]8!uS&VL5H)Ohs<T+XV>^WljC0Ecs`Rn5s\WJ-lobfORlbCfY\CeJW<*P$_hbU)i-I1g6>?cFbYC:;-#+1YT`t&(q+cM
%.5()j6)!eh)Am;ijRGir_5S7]ele=L0'F[/SH,DMN]kjL2H#Fb5gk3G8f"+^L!,D*_Noj!>s&1ZiL[/"m@Sg%s4PiJmqc/1o;i$P
%E!DH,4H>Ca;RA\()9ocbJru-"IRu*=Nlc[N`O.GH#3Ys.s%c/Ir3mc/H\=#9(PGL@_8l,/?$`.K#$qogLKQ%r#[scmH.Y8HFmP:k
%59nnOrt`@>2.9dqeHnA+I&0dYh2O37Ji[EKOg#4G^cI'c3mQ@j@]2rj`B:LC/.@AgB^qjn>?"W9$VV\;Ue<E9\9WH$;\H!9/>@9A
%-imBMNP`J=3bHmAj$,GHG,`^cb;dn8o@='7nWI^u\[lH3B7JUUaC?u@8V_4MpCEnUQ,41KTciFTTCY!;g"MlV/5hU.5/>BHb!NI3
%<+5-e9'j0r5*Y)4_j=b2_*5q=ZN1",/=_6BPX-THC)]cQK]CkS^uW-a5PO5X:#(r-<!W#)OP#%qIT1SIe\pN3]je+UUQ@V0PBeq'
%4]s8t6(@cN.o\N*aekD^'d`r1<$m+9j)ctK<*F@/fQGaKb$1a$fn_1>mi>s0^HSBOC.]WO_n+R6+"mpH3cMHA)"5oW@T%`Z]44#Y
%ZI'Ob-'`J6(B\L<ki7U8f]+`n?jLJVs-El;b6)YETr)bl\cQ\N1<I;Do9V&/[;a]#=u)%4Y$>:$WiMN^:QS.(khdO`qM?+967']k
%!HB:EXj0W'YGsS[#46O'\DSQ7mnb=d2ae8*-ci=3`^PlqMIDp,@7,*sbEB5DfDcJkD=!OrTZ/*NW-J*nIY=+2Gq(/?.>$GsmZtjY
%X4FRmnLmhfY"Q>AVJjO?dJ]Cqm_0tCRfrahm?_I?R7g*efh1k#UhYsFY)9&aD37YjVD2f#-k/1fbaCX_\3OKO6Z5;%A8>>,.V22,
%J\kuLc0qHBISbm='imM3P[k5&:..r.&lO8mqRFu`6`OXC&_aUG$TtSR^0QUfe]WJClb?0k4Kb?+3Xj6\0&ZZ-^q.<(jIbKEWL&PL
%8;YtW6GZPnWl(ig`.Ju(HJ:7h/P./Ih4k!]=ed.2lMf15O4salXSEZqNQ-]*b9>4?</A(.44]D1YS8i2+#[[+O;k314,ap:of,\p
%<W@?J4:T76OqNRN-EJau5]I`B:"5B#0!N5k`B99iaAlY97t'R^11pPiDP6#WKhm;B^mP=V:?N3E$&PWn-;Ks8LBtAj$Z")kdiO^[
%8[-I54m!4gL8-otEAjIUBb*5Lj_bF>;+/m,5l"\=&je-)\D^WI5;FEs]nFI65f%JnM</H4P,u8IXpS#.V&`-RhXY8`>/hSNE?m-B
%T8E/>j=q,N5/<9OKIgt#,$=@[h1A4X;bH@TSOg>RQcS4*"=D;mNi#(Y5'`c`U9gT<aj?e]c)+=I6pXpU^,N'#/#f7=_g$%MYl=`f
%f[E9CJ).I!`4b`JKL:O+1E&"t$a$kIYV.L:2^@l1$>lSZ(s0'5$!pVIZ"t=df,UNi/5/BOkW[t`*LnJ:31&VOO/(!4<jDmo;RkqA
%<cB$G6`(t3^T2%:)#0/jh^H$.!8)KDjr&N/^L\ef8=A(L&a9F\)iJuukr>>A$o+)J)?2dZ-.+O<38nfa*K2u:^HsJ47lc\,K7iMn
%:]d3_bp#Rcr"UX]iI>eVLa`r`%4K-2>\nKrKRt54.8tg2$Xl$1'F$=o1G=kN,p"^s.kJcQ>Jc!:^>R5,/esgGXt_mDR\r&\R1UoS
%5)'<j9QUDlN<be8U#(H(VB@K@[],#6TH%BdNC4I/ppfHT$_9G#I7RE\b\1>,,W!XMM7D5m@>Llha_E"]7M,7IBLmlHTl.57d6]OJ
%?CG246Ziu3%-"3kk=$BKhMX;HUQjR]'3-GOo6,MMLua/I6AZ:-ocT+0o9,K\TT`uPH'j!Pb?;Tf?aPfV#a^1G!acunc.bm"&"KbS
%jB`(kM4DY@6k+0`-F/UtmlKOsF^Q9)`Pb)o8Qq-JF"q[+&?`]5%e88U&5s6+!g`2`gAX1V3JMr3W's0sKU,bb)Ke?@aOt?nE[2]Y
%D3KrLjtW;86^o>#Cp_TO$T`pKL6YBT_$C^3?=[5;J?b&mc[\i6GgSud_2gXd&0O3;l&kaAGTphOe&NK(0MH0&*dM-$9o:tY!*Bn!
%mrO/Z*OE%[J:b!;(hK;L6n*[.OJ[C._HjqOAF$BQip\);9gEuY5W8kX3A/+l!>PB!.W^/(1=T^ZZ?QCBoK-o!aDRGe;dl&#@sQF-
%;A<eg0!;(&%NsF)1'u>`X"%'h"VI`45f@sd"73t'Tb<r!=S+g8aTD1,=(PO_-5+(2Q"B&M7hh4(cT<s:$=mO\h'KMt`I_<I]-^Kb
%*&kBl[6k$sEktKf(R^l$Osh;5LU1UQYp:n?2NtPeZ4@V:&keu8M4.7W*C`sU\m)r&MT`sN<%;)[k7c(&"3!.DU8-ab:ThV=FWkea
%$3Mh!m6Zo*KsO_[bn!C+'pppsS!L-cXE=1h,17`6;U!Y6]->\AT8Jp.DGeO717TFV>gkC"68s\0o21fB.6.E(?ED<##'Af:-j77B
%YYZ.>&3RCmb\TFiggDqCU^`$PHR1a\EDR)`Dha#q%e=k#koHZ]'UNh!/;C25gU"/_^p._\e1C$q?oi0*c/MbS%a0)47*::dL+h4i
%`MfOG;3Vh_kb6]m?Mdi>+s>M8X&7fYL;WJRMC<3k4MaL2GTiL#Tg#QE0adUk\>%/($Jf8nJfIX(g.E'iT^I>;"n>V;`2\#s=H6DM
%2,:iR`[2Xk\.Vp-_+gM0iH7q&-IN4iQj>b+3`MohN&qq5W*;O<h59Er9k,u>9@c,Hj^M'$VX^pN8(RKGrpFkLcWG-%OQN5-J^B<j
%!M`<l68gGPa>OdG9:.uq3As5KK)og4Zu%LQaV+5C$Ak[?>V$PcOK:'n!7qsQA`X\YO\3`61g'V1<_>PKf"H?crq:@VeM8*lLMngC
%"soO2/Fq!gMRjs2P\j8.VkWC0fV)<0j2VV*U+D<D<^k[[FuU5UN7&kLPfF(N>X_M00slhD\#^"9U>3kE+]O]`U)m-"\UE,KE@U_*
%=J@QZS1:1k/Bl-b,koG@]LYEF0nHIrQ!ns+aM:idQfD0a4B?I*M(e?cf>Cbc6,R"[e4DTsYl3mtf-e,+60S4Mib=g2!5li;:63Z2
%mT&escLWS?UUif"Ce(+nkB43>;'7AAi-lK,\KkCR3al@SMj%s)D*iH:<:#u4bn:Zh1/AN7/CqV$PQa?!S7hLJft0kQZ45]O+cm-b
%\t'/(=W,Z"AFFfKblMHY1YpF=g>1q.Ct?ejT512XrGTdL5Ik*D\!q@*k%2eRKktVZEOHoMm:[=&nT"ah!m+8$)hL_7md-]$Zh,Dj
%7l-EJ\lCo0+q-#Vc1WjG^[3?nL4c&T_q$'84(QZomh*"A?["f8O@Xf==s'1801h>?S!S"KVo^0hHW4L:af_r_h)]08]X:\_A9T,D
%cmlc6\)LM:oS`D`S_bf!pG#3.W]!rfNhD8q23<C:<#4fRWZ[tjBY%2:?k&].J@Gj.W^?&7Tf$A$Xf,IgXU/dP%m^o#3IK:h;2&C]
%Qmc-JZGKsoCQeuRGS.%d]LH&TD%P]'SL(';FJo7X)`M6scK!JH$tioOHe?V@dq#2Z9,Rr$pZuCt6tV-i%!0.h%5YiF3je+lrECgW
%L<rW)q2,okf#M7c$S.sVrfpO)*d:eIf"6(Vq*OM?eU%2f">(oH(S2+@n3F[D-+FV<*7B2RdrD,n2n(iMIXA!gescAD56'>_Y,*ad
%0>1Dar]dgBeC!k@pp-!M-WTK3o1nr^qLJ$XRr#Lh?ARjMd\q>(.=)f%-"#X")u`S&I&Zhjl?kT4d&Z9jT=%.hmHW?<;Jj.FY,\%9
%P0T+-eRl4Q+uel&pZm=GSLU;Vl.rn9W7tLRgBJpcLI`@+Lkl8<>DYUFHQT4RUXjh[g:bt=^;89V8\.%]qs1fCW-?#C%c(4QcO!+n
%X*'k$9fgKn^\a-SDm^Jn,%q)EQF"Z'*e!/m"2o*$!rt:[\XaP;NCNl[;f.$6?[2Njmb<7YSkVUA0*LT'Lu)>oYi$2p,WLa=b-,q!
%IN`MJg#hY)C@C6d`635"g8W\5GS-;:XknGZJY)Q#]pc96XfjXsh^!@<;/P?)CftbcFS]"05XDmp_")NIC,"m8I)e_FmfpLK+h-'>
%rRE1N;CaH,3tTNaI\ZYAONJSE^M9_oBQI5SC,]mN,9_2_^RWn\LoK\i?9*^H@sYfpmJK#+h:gcc`c&KYkndV%.jYP%K@J_0OF!IJ
%RfJt;j:qkm"oRZ(+/p7(#="<l"2\;AO2p4![8DQFVis8m*r#%!YAbZ;]`'!X"ol2?NaL^o_&9RBZG@<(+$0'GEY't4acQ-@$M5[q
%,M:QH_lc@>ri9H=X?j2%`E:^>;iY-K)T8iP(IV',o=&l$qI'?-oi_a6]pbDicW?kJ%@2R/48%ccY6J`aM)<M%3n=8\DT2gueaDOo
%hK\G;RT:pfQ.l==fsgKQmr+F>jS&LfZhsB-[F8Cb7R$t\c$+*\5HBdXh&('P6Q.jK8m(J^d<*'/s7N=*[[OTL=DG3L5&7?Yd);A*
%r?EZa>UOI>&sH!%BEm7R6Sb,6'6Q5U-W,h_'JULTa\Yj<4u[553$ZO;s8Ph"K+!Bu5Eh!/D#;O$Gb!qi^Y<OPr<(!qD^EerDA@"I
%e=j[5aXQn4K5Y-_s0V=oGHl2_mB;!>IK'[#H+-Y#q<npUpsR4<Bs$*FR.4PVfA9#l-+@(W,6[bHUmbG63>K:$8f)"mG+O12RcE<*
%OSPl551oKkCA%=^6rMNPqN%"W4G!JZR6:>$bQh1KctZ"okIK+FF(;uYet_^19JjH@6iS"HJr%XW<kn6(,B)ZAB:'I-nbs-\po="e
%Y@)F2@5-ibK:.%n![ih<cIJAg.Y3Y!(=%,=eN?E1nFXAclO8kb.76o?b3[0NHF$+r4AXhplQKsHV,Zol)qD\6WgupDr-YF:go>O(
%;s9i[2!ZeKA2Xm`@qc=oj8>lL&IL/KVmXNil]f8_"$(7AlSrKs>I)9n)+O2;7)'/_l*;I:EOJ6kEjIY,K0I/qn!L((S+[6(in,W5
%YX,HkD0FZ6TTkeX;t$:RCT:V=+'Xq"MI_D6QBG.l%Y4n%i7P8>D:^hqdoX:MU5r=o9iYa^]KZu4:obm[gp(?2Yt\NaN1H0]D/</F
%E(*JZA@jRS1)?q85HETr#Gn/I-;dGWGA>r;kKd>s]_7s=8IAFhl]$4O/`lod61)):s%5:iR=5Fi0BpW>CQeU5b'M;fX9*t#9=]ma
%[5B=,l_)i-8=`en]iq?55@h<0i#!+5Sk"h;]lq.,pQ/dX,<3F9C@f-"8`Si3)fm*M)M0?(#YBG&>;)U#JG2h1,YMB.Tej!'D:c*P
%n$5g"X08^U-stNmVuKr.;=F@JWnVDG3Mon4J-%cl[*.p6o)2n<`Wq8Hh".KISuTIB:h>W>bSWIYKeO\CB!5TtFM%Gu8ZJ\[X,Ulc
%Kh"r,BA/<M>(>*aD%)C/VWE0aV,;.5AYZ%#+(0\E^hq\pa0I0#!<MOZ7,pAKT0U=pnOo_+C3;/0c$K*dAk*p3;+0>6Zmmf\?G!:_
%l]_RuHIX(+V'2:*8iIJ6ILLBqkH2032!MkR#3qpJ/144HRP&0R(Wf:DWhr=rM0e5,6oS+#CV?=m0I8_jaJ'a1+51aGJAk]e;>s?E
%W+Q2WE-12:o<n:aZeA'Qq)[G$Q$T?D,=7N07#:UNp-]",:n)^jKU<rS,O@E08#&tHh9jRPAbQb3-X@PUp"'X!+['7h>]Q8LorO5i
%>UJ0;I](V41mmpKKV!_!i@^=UP-4%H>e/tEEKTTlE-/0c+*62.3]bjC/)5kLmHTV)%KSdkN@WPG>/'ghW5UYb"9r$KTgQZF(''h3
%<q]dm2`Um]iA!^GQGR,/@kZA%*1>hY((?I_i"8[\W:I0!_?UZeT'$g<d$6#fFjj)"Tom>IqMB'YKRQHZ0E"G1,_caFBBL>>C7'_m
%dFLhU&M91TQ?_SaZ,Y#RmB'U!Bdn/G:s'QiZ">TLcsEuRb=n2<LUrHaqc_6]G9f]dRJs`E=C[g@R`k&r2LG*2=C'H0VkMj/!<]Q'
%Dq7hB?DmI!9A6r^L:(ls_2M](S_)RGa+R.J%U2*bICB(N@"0n$CT#+W5<08##OV/R'5,GcC-?3t563Ch]:[FJD*'VZj17)Nd"uHD
%[V<WVFCIck@M;e9V)='H_Y,_/\tAZh1[$l3=?Ds"cllNkm[:944qV\Efkin42Q%6u3?cD[nF9cPI9"Z9p3J+!)78;95-nX_f3V["
%DqTTK#(!V+?Q"$'Ij4@r3A1]2U>\!p(PbBJ[-%n`jX\NUq3S;"5CG*GCC.MO\a4m*lrc5h<I7IU><ih)WVcLtX/"_PL")_m1jp"0
%Xg`U$MN4@W(H`eMe3MmH/5;<\,iT7'5df9]3NA6p6dgjsHaas1'!u5bq%D;Vf#7J,PL[c[Dg*T/BkL^;0])XkMf-:hMqS'pUY`&Z
%g(@hH`i\rM5H[F68og"/0<OFR."R3TG.F@FQJaQL'^AO%*8RUEe0TQ8e:H6D4i!Ml&CRqLLl2j-33s2!FKnfGpL-]oR3rWYf`oN(
%-MMVI&('X-o3`368"iuh\X$J_FBiQ=61^[B;[GkB5`OS%iF2\efuq)f>k3E#"PTg1H#%[,&ffPg]46()>%,>N)(HJH$8cSma<%F]
%7UT1A"5Boj='[!9OB0\Me5jt6)BqqMlM#r0=R5[Q]0/*&E,jJ-W.KTY[Z9>QV?)uq*7]4;)bK)DP1\u>[53?QF:H'mFZ;uVJW3SQ
%epo](*uIqcf>t\S/r9aAo6Q?2_WS!*>XCTq6g[t9JOVHk\D"..];M+IH%`d>m>b9.E_RQfA.='7-`3>t3-f$6;smo)TnliM2bcY9
%1db?^*q?%cq*YOkl<$L9,KQgLNqgJb$[>XH5rM[mdEf?L),@tD@03I1MQ/!n5O#H'k(-LJ`HY*?s.(W^5SeI9QOg]J;$D/a07F%Z
%[u/3TmB#Dm'mWi:D;@E\.G.1,R^@/UL62qG?#"dXl/G/[ldZoDR<2cA(s$SogY"gO1#nZW(FD$bWNTEDeql63E+$A*_m,`KAnZtY
%TCL"TQlb/#HMM5sr[4R=Ara9'N\9F/#4/^Td3L[E\=gGemDd?,8UL>j&2:KA9=#R3UU[V#pM;\">E.:nGr?MJBj2HTAueL3ZYXdL
%G`8h-T1+qa)di`^hTOtbk'4"NlgN(d$J"I.KJr.*h*kQnU@hZaXMgIWfFTkAL/6Tf-t_K"0pl.JhJ4B9Q^#=BU2n?hD]BnGR_'dF
%m\#X+A/:6ls/@l9CRqrg$cc/^ZY!/3S^]iXKs5(tb<SYU23>??,Y2>ljl<\s<i>eO6pi#j.FZ?`WV'?pBH`tE-bG:B7AY+>R7;"@
%A-Kco>ooAs?6kmtMFn?+(02eqSsYua$7rh1l)ogk`hJ`-4S>Ke?":4PN#8(QC:9YNAua]5GtV[sL(@S_c'>/<F0mV]<=$jC;W&,h
%ou8^@o8<Xn][qZ,2SpM\Xk\Q)E2,lOKIr4"L#Ya]4ILG8!,\<XoNd)2X8Z6`!3<C8aNFg@MmQV0e^:H&2?<s7I'in,Y.m#<+rCB'
%e`cf9^C\Ak+q2l<DGL+l_]/#:(g>.U'mFg0[8]N87=*7\X$?:$`oV8:aCPjI1E.E!)*^^8O-:=3^2[V3+u`QaNUpJMoO_uhDGQh+
%<D.8Ic+8=)b,h.K+6g?0q0./Lj4?2>8S;A83W*ohcLb2VoQ"8%9$c#*EdC<WCo*I62UA]"^<t9.h^gY(`V`nD9c"U@Pcd->(c6d%
%5tB9Xl(t<04+qaBT&8rgiR]"KBVmTOC[DuI$qss[3;U0<D#`;H5f=M-F_u,u<9k7pjikR?<G?A!NJDbb#,TX^Y,cHDp>7NgdSt't
%VqeiO)#8$NFgek)?5fZ>f7(9;Z+-^7hX2C@Ia$leM_M],Q>:N[ji(/p/+%+9>U((=6?0Ze_%kYlFul\[o?R=%dZ0DfcK<prH)_Uk
%7\t;X4gmOeL"BJ4M4fp":'"&O60S<PYeQHpKu%jAf]7uC`V<d<"^e_WnG#`"$h_7*E,^<DLUs<HW[g/l=TT>Rp],LZV[rMhTka86
%XVj=P+6iSr=.JOETE:L`E@frsPL@StDn=c8V1[k@W9VENFmc-NLT9-7$Pd+?J3ZQ;nP+55nu>FMV[J8BW']VDWY>M7S!l?$bNF.I
%EGY^F:LS&(p4A4`afX[L\XhpM2%OHbr`<++TH;G(q(OA'p):+;.Y%PoHnKc4p87F(m2dJ$L#CBkn!(54@KrJT/O.a?`uc$;;uf8c
%X,Wmr*WaK9>4"Gtc<Q)hXh8>l3DJX&mH,L$!gUj6^i[&Nf%j&Y&,"!(I!8>XmI6clqEMreL&$_?#9QnJ6^Q@TYD46'S!lOQm&]cO
%.Q7l)j^J%N44hSHGBN%(G=dGsB=bt2;ZAEbl<N_)o-e.PkoAoYj(X1XkWgFLN?J%mZFHTHV@N[,hY'=mf*aN29J=`hTPA-:T9g7,
%q>R_[RHs7;Y^]_$#F]l<>LVF-mcpEC-Q3fd_.';`$?bt3WL3EGV4s.R^0;/o<bbo(e@ju@^":t9NskXIBk'"7lJ_^8DLlOuhK84D
%_WBR\_2#TdeN\D1IPnW30DEGO%k7`m!P[4/D)K2'mKo4sGr#Tg`kpite^$>olIEoG,-kk6FJ#/q]rM^CpPSHZFM>PGH?f)]lal^u
%d=LR[d_\@)HP-\YlSp\I*<rnq4Ipm"i'TZ]`6/&(?+sP(::L.:=UTdqCo=HHKma<93n`9Y1=&FfIs%Y3e-pncZZ/R8UT)dta8X[(
%5[E^NU&J:ZS[P2?RYsAS1FjFbWW]=Y[m%RoKpp!6FPh;?&Fa^:<pXJJpJY6!TPeoTEq-kT;Q(Q+jWu"'e+q/6*/479>M1<;c%Y54
%Mp1J[g+G_:"m+`t\?,/FrW9$`^)q*f^9M'3>rg#QkDJE[7:Bg%#6?Ao>jUp+VE8qP<M/`?&ZQDh!Jfh(jE9p%#G=Zi=l%1a2_QpB
%ndfb"W2)MGJh_IjZ%'O3ICro]rt'AA1VJm^F6d;CHT^E%CQ$K[8nBG7;j]1G"-/1aDJFK/>/\%@i8'GPdqub0bmo9ONuka[O9WCi
%+g0_fr4>%sl-6!(nk$pYhWitCmSoP.j]OKg_S^gLU\=MEmqGRQS*U$`OLojXa".#JZL=rkD[p\SVI$*qT[XUOm0*q3rk::;;8"K`
%LYViZG1pNta44cmK>QWuFJiFN\\#QI<7K4^q0*A?Q!\;7ncHAF6e^M`a04o03Q$@EnG:b'gs&D6GJCjrbF^Z0GLrOqRtkM@[(77J
%pqu*^:#s.&:Z%L4132e`YL0XYRp=Alr!'Rp_b+k<W5cUL-9Q\"rS!\#hOV2<H+f_D+)Z`SXj^F"3fu?sk3'!82L&:Qll;Q1^@6#*
%*d.$L?et@l>fh2V+UnS*b5C8CO7Z69j8GTc$]CKUMcJs.H@+U@Rs[QeegAg[h;"V$73ib\JB(+5H.-&ne*eekroi@uWgI*BSR/.Z
%/g&Ed!Bj6)h_"KjdkSA+T>gHnhNKGMY!7(*f_Se;'8CS:8H9CMbSJ8?(sP&a[s$RTrXan>[i[NXWEal=Gl^URaYGhC3Nj"]9M0AA
%a30c)1u31&a7Ul![DD8I2:]MbHCd>!FJQAbWj6Rc%X#)J\/YiUW"cT`Y:X,aVFGW*?@<03HLhsSFXsTbT\?:>elLtRT!%F2C2?[o
%C]/SaFfXK?n:M[[E]3=)nB'glf+rV%SXjeuRosT5*/6^Y5EP$]I&P34%1ar]ed.Grh+R'f8mI8cW8MZIC[iAK[7[)Q"RVcJjHd"_
%$C)GWThs--\aVm2VRhKBV/R\U<d&)'9.MWG!CG_.:Y&tpp0W+4W#Oi8H8JVpdcKQ;=uns]:B0R"L<28%3cO)MG`p%a<.;L*0$S#9
%XmR?D!VfV^_f1ChL*>12rN2hn5kDf)q#t0%\IH@imBPYBb0m8YSW@DL<mKM9X[,o^$RGMShO]3[pWFt8?c[ZF8i-6XMKJ=Wegq)c
%.:GVg-#p3ZX+F&Vg4pmQf@S2%Y$W:u*D>0(e2s?6qs67WA^/mG['6UVb`H1&&KX0T)VC08LJha_=l+>\cpg0KJO*W__j+A($2qj,
%@H!Tbd::>LVcK,)08`Ydm@Y0_7h[?2p\XK:-biF4Xug9N)rf^<o0!3JjiihaWa;$df21>64?j*W6NVunj3iKI2q2Euc>[oGa>NTZ
%#O+!]SM^Yi=#`Wb?.-!iQ#o"=8)m6eS,9p[7QiUhP0d9'XA7)Ya)Oo]l5ed2_L?B-*45CoF\qOd6RT^::C>o/2>pFOHs^^%(Dl4P
%gB%J[aCA@(5BOAN*6NXKDXG[]@kEX&bP+Lihh\q_+ejDlJ).Y&[/oobdEg\@ZDUoeF4kUXFE6sElJ@!Rj;dl(o*^uArD_k=#d.eh
%06'HJ7H\/`W)]HB@ct-Q9BO3kq4"4h=)5l@71`_0O=?I#*ceacd6m=gm5R2n2<9hRPZ@uBpYVb(L*GbsAcC89(hTeCmQRn4B?;La
%9LNg<ls5tri:"fdd[:@FI$Rrb#-:Sf-^_<"qj:q.*,i5o[gHQZV=G8tAZZbC<!6pq=e8#8$!%dj=X&tr^GuEpSNIHN])j[sO&fjE
%34>+@OKhC7;W63^j\Krs0^i+Vc3jH1k$+-IU[;8$Gl49LWV!\ua:6-$6sGJ:8r0?b>EaG5d^?rq>=?D5PSU!mOtQ='d>q=,\2G>=
%MRUY\r9&/Y^2SfehO(qc3uHh<Tu1o*PAEo7;\@`)e)B2/A[4a@]a/E6WBV3d&U9Trg=Ap$L=U1^13RL$2)7UBJ.JYkV^pZY%,+pU
%>Jdsl$(ImM4QaV]8;f;!#+28hm#Hr[YB1^'BiZM'+ucK?IC&;5DRYa>b&L/a1RkA]*bIG,emjAhbLYc2_tu>pM.i=>=Pk/%_EB3K
%_`eES^2HXTrPICkm^1CLV6o+!bfC%sPnlPF/K-oZa'VEu%H4Wrn+n<J0MBBt5i5+O2XuE>7M7'Z6:TtC3k#2lk5]187cG']5,@`H
%a(K[KX0W/b:WbrJ,6f<*G17"_]6@&QOG*M14!Hjql4)mI@ebRog$G@V]TlHZn/-k=WBBDX2T^`n+&f6h+As>=_=_SV'N*d]7Eh*2
%#=gn#L)VWj#L3`@gY`9)I&Rop4YY#Ih_W^/QQE^[ilEp_U]@LSekJ4TB1BH"^NP8hEUq+>&MBu#5^`*h4d=Ed4]$NRW?^?E`T`Ti
%ep7@/(O,`_gpm,]e1T_P,f,_DTEEine'Z&VG!0n/U@!;QH3GN#ENXA-+P3_$G5_.5:m7C39oc;LCb3MaBqM7t('l)R1`+hpm0^8h
%kLGAeg?nchH9C4G2Fo)hS)6g>3ckqNf/JMTVp6FDP-ERK?jC1'#mf62'KdNFYF1AST`qWf^#td9Y(U=BKFfpYjS`$ZoHC&"Ok*i<
%>0Cb/8*`S^KP^+&<F\S02p+b$-T;OLg%/psUu^rBdOQ\ZY<n0S@rob?j'kLO:!&SD83A35%ZD,+<rU*3m-QsN"rorD!+HqmB8OnF
%gr,YlL`ehu6+^)pKUKG+TCHe+JU(Onq>K)&mW3[%@=BhbjFOTU]NGpAX?J3`d!uGP+*NoBa>`Wd>3ns#K7kiY<]Bn#L@NC.=ZXpC
%qdI!p]Zt+[0-h#Je'W]IaQnQDS'ggIA2k0Yd$dZq>tB9_-Q82K<Cb^:!pX!&9tr!3f7lsp313*ODrX\ZA?_FY)DG),MTta+CqA6<
%D4=!d[mc=!]82bje0@Mo^B/Xj8Eo8:CLD+%7FEm<Xo%AR-%276#+'5`:MC4A'UF]K9odB/(K:_MA*!MJMO&-t8rN.OB^+[MUe+(O
%9=Kh0FE?%J@d6F]oe(8#/b/31n"QokTmjEtrTK8^G\e1S,-8W)JXa<dkh@o5gIj9fNiq\@Iq3DP$pQ;B45;u.:)J9bQ+4OfF:t9o
%duN9]_36jmNQT>RDfZ"AQ<XJ?hj6))KhZAR1$5%U$_aq`NeZ@iiU%qX0TdI3;)eg6U=0oN$KXeAD88-)h3DPlq"3SZ7mC<+[JkHo
%d21mER5VADO"QfL+%4I)9WT>02nt7gWZ5Ln\(KI!Cd_26[HUQ-s&HFH9WlsLP$7m*C@,aef)HI\3V%CK`HN$CO3u*)O=##>@s.?-
%8u`u.Q(sW:_C3k&P#":Hp=.#uFUFW<2-HDfrTN+,j_X;iSNdPLOmB;VW<a#$*R5(MD4iNo@r(qPU?5i#T<HHdillWl(tSt<;\Seh
%5_oNjRPPOH)^H8II@\_)G,8WX:>o,!.crn@k!(Vuqeo\\#)AJZ#kb0r/4WFj&2c=I*'2T/HgXA%WMRJEPP=_9NXJ4jNIM=c67*'H
%%7u9>cY2Jjl.02-l?bR$D$J_7O1k5'],EAjEg%m]*R$!P$2V3%BW&&a>DV*4biYFT=M2_WHdcNN2_=Ba,,30p=eNJ8k;+VnjB*"9
%,<?(&]5DQdFBZ`ZaIH[uhL9e(=FL<*j!j077+Up3C2NT`^?Ab7$1aCE0pM85Tt5%8Qt8'o3F?k[hZSANaQV`5N6(e%Ho=9O>0[pi
%b;WkEARr`"5!DqHb;[6j>o^MI0=mHf_C8b1Xdh&UQB0VSN1lcfAS,stq+*hm*9DRq[=#E^5#aP7G6;r3,uWLdYk+Dq\%rke#IYMa
%\'7fd8VbiQ/&5A9T''8ErbVscV7?I[8HVl2Z[I>I-6?/q71+tKj!=NR'4_H2kJHts8#+5!@D=>gQ%*a'gLA$G^^P-Td@%k-hNeA7
%@<fa`HkB`V).mCS-3<,.0mRPj]ORC<220/,'b`K`k*r(0pBD6lc7[Y:V9Z"OTQ7!$SZkb9PAN#teQ7ANpmd#5^Y!CKEqIK,G('"+
%T%L?\V#*e9JdsBE9,qZ+=>-*f(dlt^m/@WdOGq(O7(+;-Qf9@UG/?R#IW+'P?JsIRAK8%nMK2\UK$4N)7<S/^.KVJhF'Kl2YCiXV
%(W%J?[DJuC*%oT=Tn0B9gj"uIRl:qG#t@m#8U4Q7O[AVZSF@=*9Xr:+P1?>`oqH;^JSGNZhQAQ2S:046-R?V!FjP/<>i@P\lb/;6
%O>0mMG2f(e0Wac7p\+03Xe@Cto4^t?WStd2k`0saE%CLC1?qnf:!StbQkJ:\b_mBK#3JZLCkYpS$oLb'nmlj<`Dl14LpZYFatQBX
%9"+hJo>Z^]NjFRW_HhaN%Q!j-Ro_d2i@S6=ffld(\0=Oo#Hlk9qf]&*GV7EO0s\C"iFh_c4h't\?m$X5iQd4la[.K49[5!P,HM_5
%)scKEb8l2#pl[ed.WKYD^Miu_/)cLlGhHF*.1hQ&n4Y,=*PA=s8ASW2^'h8[[N0O8l^Pu*:P=EN4`m=&hS@[%cb,e+<-n?kbj\f2
%B&Wmj$.l5<_e\oX$D?moXMEtoU$XZR;n2;BG,?PIrJ06W;SI9jET0e5$u9`CW,_r*N_CCX%cV6qaI(au'3/-n;"Q(o-5M0L@EE"G
%'dn=fdPlfP.],>S2^Y.9jc/,5Lq?r"oL>E1gX1B0\^;?;V29OD#<6mTd@1Gd/af9<`Rf"Uk`%*/(FF.?]t'7Q8(M:N![5l\G5K\7
%)eUO/>Wl>TrQ([2ZJkqtj4K]OV/RU*RgJPQqI4FX\(<I43[hMA'+q%"YYiAT88n3Y+mjCZZ(NO`RnaS`]"L%g$H\880ffa+pDbT.
%EkRpT_';4=P63LkDq#4kDJ^Pc9!)o/,b_[@7Xj`m,mD_jDa#,9`%QLFQIk2R/+FR)_n8XE@>S?9S1_7;e]S`BY\>LOa)2,-HN=0>
%e=808$eOP>qn3%m+d8`L#Hc2Xn^b]cR?qmIor+.$aXM)&auoE1fX$7#onKEh)eLnm&=%NG(RK5#f#g+1DhbAl:K3bF,k<1g>)cjV
%7n=aoS]GK0H2aB/<cQt=at-+q?JO7nWA6+`;j]*hKL(qM=h]^qF_d7U1.i1/[B.Y_i"aDPDnQQq]GONR>RYN*F#R?1[`7fO<RM6_
%Q]7.Z`f>F!G$$EIPE,!Ce5lWX0@hK@YjE$TD6^e\NL06[hC%#dbt/1M/R:o1f"EXY&O4-A$rN<JiI@hMEI;[b`i^rC"3\&JIOsC6
%`"]^.1"?<fUH7-d=a\[>#<uZN+a!g<\@A?0K_u\_Q4_iukkp7MGaOU0ZUnj*e)%b+3t?V<R*3"!#\`6,1VSqe?Ag\IRG0k:;^?]I
%NZqV(j"[tdg&(5X(<PE_O/GNLS4liR'4X@.-P'JZrk&srK6EJ]Le^>Qa[/KPY8^"l*$M#b(>D^]MloVhSS^a7^ESFe9#Rc<U\6@o
%QAqLY=6>hNr4"L(ZP\P.p0u.nD^`cgX0o2Kj\7"Mg[us`Gs(fu%7PPPn3)sLj`u7"&0WrdU-*YpiB#C]+/p[7%H_7b48VjL7TOpJ
%q"B%cnal+X#_2`b>HL>Zpl5&@3%r_"'mRa$4>14bag-3[H=*?cSsbu(^])-_TXdHPGU#+6@"o]r15*^@&l`06`l')0B0/o;mB0L"
%k_'qPa/<[uJa<0eh&@EG=1YM=So*V9L&H&TEU@K-]_!Wg$b>)odSt)XXL+*M4'ue%b\6K[lPS@#'e@o1Puh[;IBl8+'8[@6im=$C
%3j]2U;Z(LO>nlEO]:6CE3Hdp)4NGUHY8$GC_N*!TN[jb?'+;cUW8oZ'&?+:sSj`Ph?L2kL=mXb+_kH']jIoE?,k?-qHhrZ;(*^oh
%N`F1)eQ[eu:?T'Z#)`B/%m3.b&Q/V<&5hdQ=fH"#TaI'u+33g*G(Hq\jfnA5XR,@(WpFV,j$B6?cRCuE]&cYQ&Cep$rLb&5oeZ`f
%LO5@=0#4#q\U79E0'tKDT`Y+%'a=:If5_2O+f4knU6)%In8iRqT:fJ%V:@(XaqSH9UY'"e+;<(@U,']dXo8q0HUE`r5cqWUbqbRD
%c8g\Yi>s9SSZa>a(Nm#>co`XqJfS.U`C7b5SZD`1?"6$(0B<i]j$$e1[sWg_m/h3C93.S)$P4E+[Y1%BV0hqH7\&jXmFI<M4#k1#
%HD*.%G2=Spok_SgZk>)\GOW>2@'=b%0dShi,q7j6p1Pi:Ro\>7!5&cf_5]\&YqjnI5$h7HcnV$Z_EOQX@"n!f=kFN/+<GH0+)c05
%p5:cJ<nPII<PioGNj5fAdG&q90C2=CmN+l,+0V\_@]5W]6l,LdWquKP+\+$Kj5kP'H]GA8O128kH]GM<O1.cuXU)pGfZ1%&n5l]M
%Ts0SZeMe*1NijN5qfq3n"O))uqfp9*8O\T?Y`C^imQR,f$Mur$BN=_NfQ0U,2=NX_XoUEJ_EM:-JRn<7KmfPqi_Nr'[]j[lUa7MW
%98p7*$Muqk,q/@&ZETBke]1"V6g[D+(\[B8;I?uO3"#PQ%K^93N3f`AC_,$_$i<7qgi4/(nYS/5a4LdsGcO4jNfCNP0@';3;dgaY
%*J$WXk_4Gt.8B<gS.oS=@^4m25,),UD9S>-r^2Pb]'h@s#Hps`[j?L;S5+t?kj#3F\Ii:kN,je_@Zt</;uGG@9Ql(r[)nF=<O$0:
%PAF2B<5i#[d<&dNd!33/m$YNnQS0a$@Q+!O*4_D<)d2FUW+!YJ"\Ha&'LBr7]h)($$YSLMYW3/6R5f,OrS$pZ#gUF:QRra`2VT7#
%Wtc]T(VA!?WP'@$ptnK\)(Qk'0^RbJhC(nHq0rLt?j?@1%'^n#R)Aq`iGQs:Iffk^lrlSa$phtN%f`keO>5qu`??Z'n3:Nb8"]f?
%apo&0j!$9:1%IE;g3_k\n^pr(8Q:cjAr_4YCG<Mgq2m&FgY^rt%4/%=$fAadI!>>A.)ufW;tB<4%c%*uHYd'-L7uQIEJU)]$?Ei4
%H1!"'k_(6Va'ZZGVW0>(q'K?b[0fuaOdZgHk-?_BR:o7kfiY^eSW.QgeQL>&<\Z\8O1u=pZ:[rL\M-W&`T`)DZI'qZYbQF`8-?f8
%*=]lC+lN[Sd?'Xe]J8q_P/n<-$*/J7Y@!$"CL"jGc:0*4G_$gQkh6ohh&##^?uJr;h<6J&(4o8d2SX!b&T=6$3h&tm'O\m3ptU<K
%As8'-UltohYllSqXrj`!k-?jT#mG72"njjW_]:C7UkE2f.FA#eEno)2JjR]3`DO=%+sgp[CRBmW=b'hqZct%sR]rPq%kMf!2l%[:
%;9+3B&U>0E'1`ldY+jj@:s=>@#"g<+^>fT2'(TPlF8mS]lTK0\'(,j48gg\i]WpuOs4k@T:%][Ur<o"XrhKLJAL$Z@NM0Y5_9W"K
%LcI_>%(/rWm[l^UPPhXK:2f+[*qKZ,KXDadSGP7-r:THepLRGHH=beQ]0N*M+6`"3[?].AeqU0tX\M&U-#cg2@SXtX)ZA2i<[$Tb
%WdX?NUOuoFGB@7`_c?U1A/a]GoP.b"-1]l8K2pf97:s+.KiE5G3/SfE3W++b:`.F1e/,u_/+X&tB&X/sW*4Q5,d!n8<%SpYmTjTa
%d+06$D%Q0mOoh<ercOt1G&/<:6X%oAWq_b$/C2WQofY[,'VP(R>YKoVN+(ZM**,D387F=5Cu1'&jab`\bf1]hT#bBR+Vpj)j;=`]
%[W)3(Ij'^p'SqD`W:%*]NU`K_)5#9`.:s5.Z6smt(3HClAtp!jh>2>KKP$tl*?[?2@@5hO9]4TTj#RV?`n?mDJ/PBTemW&3=*\!3
%!He$&5LkX^cA";G$O4p9oUF9GjlX3t>OH=i\$bh`@NkVH//E8Q\6nm0bnSQ!_`Kn0(?I.*R_!/kmO$^Hm+rYk]C<s*j(.9(9i.G(
%]ZfZaOhVs!Z6q`&DWXI#'iKj4Eue6kpmMSE.TF\$-XQhm=!Qn2<qA]W)0P`3ZKZsuV.t*6O*rk@8u?Akp".86f,smj+\1!UcA0ul
%Fo">A/DHf:X-(U'=T&RkL+hQ-6077S#M%O=@3bRu]_kX*[*HubU!E)X5$l."ec8BC8`7^537RNXh,YqYST>fSXO@RP,d=YkUDA7J
%aWgJEK^Df341DF#Br]tW-gFT432Z'o`OW2B[u<!fY4NZ^AJu=k-Ba4`rd;=6]p,u(1D>.-hXPDtO<%5]a1B6,Z1/&t_X!8sH"1<[
%,Qh-\0W%.EfT9@+Hi'b>^1sU+>J)\QTTe!H*B*>-4;Y??c*Q@a)H@)%DC$or)ee846lh_7-`G?,(m(b$8b[bSm2@H#fGg8eL'.np
%CLA%i)&%K1QmWi<\1Vco4^aD"'<r!_P7Au(#C.?ZCs.rFNZ3,Ie/jCCnQ=qM5mND)%f,6K517S`97fBoa,q^#ak`"$T(Z8-6Pp54
%SYV*3I*m(gLpS25N@RR?mHqJaHX]QUZF[GGY6MTGmK"7TT'"dbngq3HFhH8HII=0A(H0T;Ir(^`08r"[%(S^CBuG1d_-YWF02W+,
%;&A2\pb8=!!^kjPiRs?t(&__M.n>]2c7VFh-@1l0X8SsD)pbQ%GjeEIV$&9nW*?'E#OMe$ponM,Y@:%1Wr((Go83L#Fc!agoO]EF
%mh\N"QPb&\0j@#7D^+[n\NDW90TQ3\M^^b,JA*Z7H$[fNc@L>#4XkY!Ur=Bq1_A)ECQjoWdsoThBLl&g#Ni'r%O?r;.nNG"nT*r6
%P*[GKY\0UMOis?<9+jSr&ZA3i#WkgC=\3)NH:4D!*5%dq=Ztb4`-Kc;8eR?=,=Xc]Z)a+r*\h-u6^!VNV"KP8c*2h1,\]Cc5J<Mq
%,Va!r+or?_P%]h'0JB%q'mWoT,L_,-@>1l^c0mcrO?+GtG(0$kKq>MS@ehbJ@>/,FD9RbMqY!2QY/:SK@CtE<=J85Vs1ZAX-Up,R
%1\kI51&D,n=Sp6hQsG-&jK2I-g>PHXX]@e1GfZj0FE.!#]C#M$*_$rV9LQYG.f"XN$-KNnET#eXhJ*dTi*iq#>)dpf+Y*O4a'5Yi
%%Qk`4hK.l_%t2[f47+_ZTEdOIcop%>BnngkA#KJ?LFVm5r4p4Shul410RNuHJ-R,bT=?S;m!R.S!tUU63lc3t@J"8hc>5s4n1aZM
%fT?Y+FB457"SV5k)udXjBJuHTn)t\g^r'j1([?>WHJi46iRbBm^DXU"T,`*C0Lq44CKBMILBDA)*p(1)7S*I+%OVIaaQFXi(u5QY
%Qnlm:LEX?!mcYSK^r,C'C(j1a,=lk5@<?4fD\(@e#9HA3Ej"6SUE+UC)d(MjSH_7H0KRNi-R<32GfLeK(qmoCM;4,9i*hf>\1ntJ
%a=>X5V]>uCc=%5G*(C8DESr"D379N8CiaRJNfq(oA0V#C_Vn-?S6j:FlZ!nh(k(,sK^8;c,9;"G]nb1PqdH9&&#8#EinFZ=*W!Q=
%5L"QLI!>b3KCbjdi8Ge6D1i!%PF1WF3:JU8H.q5qT]["!r;If+-M!i@4:LlA@E*8o2W0.ATgog.N8$',GaRhD5U.@q(g6&gEs1M_
%n1`SkRJ8"P/3EF<_eA(c\,0U4!tPJXbB)Crd*Y/ZJVVXd6tE%s47Fs#[)6Dh.gZ\J*5ddhc@L`QQKifA:a6s)a=l(VV]GWL%"I2D
%oP')0R5X\gLXDTi-EM7qj/_KT!j9r-I/n!!*dGaD=@2^$keP(jpmt%e4QI5`q;Q,K3:P9NVEhZ8*I\ji^dB%LpU!:p4Djiq%mu#%
%V-RPpFRfMEUTnOdBqlbpkX$2#pG"<,3RiV8d7(XO8/k?emKBXu*W<dkkgL%?q`9Krn1\$IGXJK[Fg8,\"1Hsu&lEUCeO4?qM.6pt
%Lp0!YIcc"iiQ,8;b^P%^NHo;A8*LP9GsboE*W[tpjc5B60l<P:6>@iL*L>XnFSQnWX@u:5h_"KLbIP09XLrIHZR5S*:.OU3du3[c
%PMG`Qb,fu5T]T6+e,@q@[JJFam@%H9DVRtD:8W5]$gE'#'Z!K"4DHCqB:#aub\-N`J$/Lm?ImEq^Rt/EfDYHgc_#t7HaPZY4M9SN
%^-!(`HZ*O=-hYKu<plW1q6[O`s7B:7/H!(VIiWqXB3*pDRG5tmBBF#ZY1&N2e!$n;$c1$mdiYUu\,.hF))H=f^]$Cp[4f2<1eXCb
%`l`:InR:`+/JX9aRFN*b;lBs@lU'_2WZl7R[17nmUVi-fVnTFkl$oe\Fm#&#T5j.1X7C?1]:<"[%ds\O.SjbVJ1$R7oqtRZI<S<)
%*S%[:a]]W]n%.BCQ#8,JrQ8;mmDV(.P9-ne=84s*p`dc\0Q)7q7-3dq@f!^Cg!gM\=,2-jn@A7BAu?GXB<I;nNR^L,k4ib.GOFYI
%cC/4f*bZG'<Y^qc*d;]Xlhe$'J35TPmUTmA3SgZ!jKPBN'NE=Sa3.IO2]M^cBm@M"BOb.K"U`Q94NHp%Og1V+Xj"4!V0l;<^>-s*
%(/#NDH-R/Ide5"m44rA:]/W%!DehQJ1T%al;)+tE?],H,;qkic;W/s$VYj/O1@&.Go/-,'24l<Lc1EOXgH.K+q/PLdZ!P\3\3S=0
%bNH>`jK:_6V5N_4,p?@g?:MUmNLMJbnQA\^CTUBXj'jc:qIO\rC6#er6;CMr/22-q[*9@k=ilc/^t>RBn9&f?IXUG2QH1G!qT"Yh
%Q)B>J4lPdJo6k\&5M^mQn%$KL,W(#)2\sLE!+Xh8c90kUQJ<!VLp-N3XS^$7g7*LXE8=WfhYCP<%N!2k1!m>95?YBIB3ai5*j[Nn
%NFhjDp54[XEgDGV%g=MQq@^9FI0mY\UiZ)%EJF0\8`1j]><TGaI&"d)Z7UF#JRmp5FI\OGD=XD9Z(ht`]HCR/ffgTeXaXVpmmQ0Q
%#e?Es-?jG&.Dst_qOUo)+>%7W2K$gH'TB7MD$X&"Co4jU/j+$S$CB4ZZ39tpV(;(&K.a='#b\r&*D@>TQ\)8&0fRY]Oh"R_UhT-2
%b$eV+Gb(ak[;^JY[`J7+:<J'op:L.6X/hj&O\#rZf2"<t.i5liV<p,s&[*UF9;UA`O\e9rd&!'RQ*N`UE?SJWqKJ!RmA9A?ou[%U
%]rTe@9)EkEh8CpaZ_TuYH>7tc:S*""T@2#]T*s6m/eY[Z>U0*UqYH*ZoiB2!0<_j)2UAPZr4GW<;8fQqMjR9JNU6OOrqPSl^U1J6
%5'+S%!dd"?EPhCkelc)DSdFS34O`2e0rPUCb42gdKgNd0c`Z-(eu)ERDRYh3G*cQ]1)p;S)UVFPr1R#'9YTR`cgU&>cc_eZW+^[R
%@*)9d-eE-LQ*PL>,gbc)1g!g4^HLGB09eoNBjTD'MLA;O[Hl8jCVO,%fK-]PGrTQ`'-UO]BQW`CAo5.V(:*,(\,4GCXiBJq4UBX2
%F2i[:!gRKlm0[oFp>TQ<+:7K?`o>#jCEhB&)7m2/lc6/iqjbmmlBB8p@/#'A"CXLK[0TaVc9[Y`AJ,njU6?S[lA/1IeAF=h^:e'\
%r]NAc.H!(h%s8OEd:>i<$fqtT#e+jul'ZC>:BIFnhQHV(^\smmL_C?)D/7MaRm_#;>N1$Y-RYk=HQ)ttgFhL_dn75:=ou&l&oCZs
%U^KR"\?3/-2FA%W\B'=+E?`S*V@r+ti\Y;);uLaKq"$:K"3PlmjDLNG!647C<)^@]jGl/8]n,X\chE&X*#EIEDp>sIJn+1"Ptj'u
%Ka-FC3cdBtREdXR8p]adFVheFUmH;MRrmd=H^J-&.`M%s@UU_!Cb.fJ([@"QoQ'Qa*q'GMnA.#]`TX>f#7L\@89=J2bgq+N%[oos
%b:^maF>%F!Q[<L0Q)EJa])5JgqPZM.D,98ShLFnTcV)E&l0Y9n8kb%YqI-O;R<NGU;a0)l.09`n'\$$eE-/`!*3?/)oB30hk"@d[
%g2?nk5<l^SA##3pg$P9%R4qt8A#>)<%;>Q2nU!_s5t`k,MjpdA+&Aa"l-E,pD6<WXS+)+(c4p;KYtGee)dZ$SQKD=ba(lPT^tF#A
%7esdhNQeHXicMM/YKV/J0B]LQ2d>%-)`0R<U)QDAq+eLX3+ts,Ss8)DgJ]VCZ1M;(rd8u0#k;#YCIVh4[nteu$@D/pB.'K$3p51c
%5B>gUD/.3IA,)sa=kBO^j\5XH,Cb/feQK#BSPPVgqEt;>52@knX)ltbmH`g<@7gN0oI5,>^3=;\I^J33JoG>%qf'8un[)Cfa!^%<
%TH$1(n>QMWJS%+l\QSI0`3YMp\cb3P\7=ddq:?Q5Y3O<7q8I*99GPuKhsDpD;_oebX!g`(dW=f6BtSG=P&qUrm9+`q0<aE>=-V')
%#M7_pKhc80]p/LVLQf@jRI,EUO(p80m739uJGSj"B(J+Y'>VBp:2^>Eqps3B_Brm?,KmWS5Ea5NI_n?fQdZe547./O;K"1gC_u4R
%crSA&9IoMSRRB[dSjQ*hJaJWk*0S+9;EfY88$t7ZAfk9[H_&%DR50Do[@p;4+0P!16umAsT<L\#3#bB1O1Nc5ZZ`B,%ZBG`7\V`o
%MF5c/BuhS40uVBj>ZZ9GTgSk_(jsq:*f^b)nDlERBAS\9iTK1L+o,l=NP;crp;JiW!mgSV!Sl>NDl`+tnR8nK7Ug2\jCP=GH!GW:
%4,)sjYaOgc5DWrC&h>SiJqVgu$i+t\XB1NmJD,/jjanWpg=4:El/kUK<\JjGc_$H2O6bffG<V?Hm<mHri$4-`/!-isl=:LJCo$JB
%q@/XVNRd])ho(_2DAS4bcai1d.BCd;I0Kn+$+DX$=qARqTs!fXQgRLN>AKk8bjtKNQ461R=VaSg.SA'_R?S#R44-"/o_CbpS/>69
%_X2b0_r3`BXN.0g"u2cuRWUa^$._t#Nl@rQ##.Wr:cDj&@JcN6p?hO<inZ5.hUYGi)`9DEUJ^L12r5^:0iekIY[`RPfYqit2=Vl^
%7Mq]JWU[i``BmV@[/iF2F-p<L$_-sYPJ^",,GX\hQWb1lWF,V6,&*Lj\+B<.\b#<<[(7De)C-;*g/ooLjSc6r9A^.1$>boYM;L&`
%["IY5&OB2gK9lJM#;F5V^kKbJqZPW=WEOKOj*sAP,ZJnC5TD`G6k]c5ZeSeD)SEkF'35&AJK#0jmHKS;o0,!a0IZiLWKb[,\,t^e
%6/5`$rB,5"Nqt)?\OX!-#a6F!JQ;-rPWhCj#s!aE=X7ZrYBjYA)j8<j47@Z#S1l)77\I,E$1fPsMU.$I2.erTiNj\qN([jsHo<+2
%Oka:9>B&2=Ya6cJ[aXlUoYTRhM35SJr)LP2h]_s0YZR"8bP1*SN$@\"9Q1M\ACF0n^Wu=a-,&g.E$`2>q'_?gTI4&*Q=-EDg*:Ah
%hEX6Mj?`JZF$sNr?qS;s9Lt2Z9ah^'QdPhN:O9)S%GoS@#t0IXa5c4\Qm'A6"2U%Sg^]l1#hn"M`7'GaI'fS-d)V]BoXhUfT#P].
%g]m[,IQ["=EqjmJ-8-o_M\!G>&U]!g:>j=b*17-!XGChUh`+oSc_"SBH;(,Va="P8ET*<8?#.W>[5VJYNltLq4r]EFI&$NgJXcfr
%j9sd*QsRCA=aM3ihq=]fs4i",T"\DG^l>'d(-aAY)qSf86]+<-#GX</2r\)E=8^DeC'g<qRrj=U^95qegc=f0=Rg7@oa1L%q[eP?
%[JFFuh$M3\Zhi_rh>Qh)=._$,P/-NlIBrLDDgq0?PGPa3&HBc#+!soG`9NP_-W8m3Y!-!7k26*NeL+"^gpi>IIEV,H68rQ)/L/;)
%ViJQFZqSq3#?$Rln)L=;XS#]8rK8(NIntK`70;&#"TS!A6ufElIQ<9iW(j9P#8Xj.UE#Rp=K\ZfEK?<*n71Kp_Q*7&II,`BA\EM>
%=ItrB-s_)CNhI0k;_HgAp/]mic(CSkoAdo<q^Cjl,hPWEe&V1K[Sp-k2Dl*O[.Z:.*D/T0lTc%TgDTpR[BG^p^$N$)T?_saHLi/g
%4&D<jhYIAUIIP]]G.u@mACJQ=r:BRF4Y3&-71MNPmi!D)K*aUm4LhC#n-C;/]5R2YPZ<Ib\2a-1Gg(V>CK"?fbHS\YgCMuZ?PeYa
%Yoj&@)BQA$Tu$ZH?,KSXZG&kl-L40of#^'Q?Zc($*.*D:k9nr%>Y"fF\cZ4[Mg$3;RGi_`&@_/5:qV4)A9c0JHcTLg[ZU(C7Y:8]
%@O'it+G!+8^d25=p$ZQVFSaN0LCOsX]7t"ohg&s(V+E=dK$cqP4CfHJ5^?2'8E^b*mQucH*uZ?lFsHY8:HNel/)@g?)\:O4`3=CN
%:t*,,!J9hQ<+I*3V)j/k&p3(,2u%9MiVHq&gpBH%_Gu(!aVf?#l3N$0@.g+d:#ri(c/6J0Lm^f92rYrDqC^/U,\]-a#s+Fr#GHjo
%Wlo!P53F`tnP.2`EX^^CI=#L5F8Q^rY`c01nZtSaNu$/gIG@<b;<u6)aPsSU!>.6/n!9l4NtFtLpp9GT^d_Mu5$I2qD#,#[_YYge
%j3Aq9j6"PL6eFT4H1@8"pU4VDED9Q64D]@>Hb"E:-_duHH/1S1(-iA+q>7+57UqjU%i:LU-nRIJhg>o',rhAZ+3je@'C#8qOIbo4
%5*>j*i.LMrg?mBh*8='@H`)qsguZSE]7]9ZXoKY<3[lhUCYqJh_GSb-+!Zs"o4L"H/DNiYC.4_`]n(j(:P'0)rVZ&L5m[]+3b@'Q
%-4!sa@=!g'(DY`(I>qI9pT8;a8'K05Fqm>Q+aM@R1=g=WYM5JM$E8pBW`=[TH$Wqr8&m2b%#.UZEU!FMS[q[bhc<l)<`P831fdVA
%,@Bsu;Y/J;?T#4)[qQj1^<Hso$JQHalcT,\*A%-rj(-,X_V<%%O4@q2#^148K<SYKRFY3do`aN5HOf@W):sl5FE*;r-n[S?!/sme
%^"?`eG&kkkH$]-HcYiM-V_DM_[C5:(F+`=!0"GjBBTaU5pNEk+en:eqofXbF>l^r)=.`GgOfqOAPhjBD<LJ#8+Z3Vbi%!4``$<'J
%KgA>m8Js?.ki8EX6<F9php_)fK(QZG(FXKT-ei42YQRlhVXSI-+Cr;>^Y*gMo94_KOcS8Y;Qfk+G3-CtLTf:4r$X)1HnHb[7,fK]
%p*XS3KX!Cm]T/_5RIIqi%m':"@MX-H'@YU6CsLSV909=mBoB]DY!kgckO'P>KuVRU.nQimp,&faN(m-p8#.hb$#lhq-2;kMZRGeJ
%=qI>#G8B,cSS49*5!M[*k)KR[o3@R6VcSRo?nLI&.Hq@AGiTkVE93OR>(5<7m*h^s?dI0U`r<P,SBk9iFlP2.5?[ZV#N%>gCd,Tj
%-U(&oFZqFj'gK(J;5%Dl)8+T/SW`T&^,F#gch+BH2UiP$2L:F9\0Z%<_l"t"qlqfX:3l;d<K5Z.V78Epd,Cq:bKAh]qPo"T4F'd!
%Gq`aV.bE@OXtK'YA[#G66*mRAY6DMn33WGGpCr#g^/:/Lhd#e66/U9sr67[&\2II`q4!:+$.;(R72:5os'O+hL*0);6^G,Zm^1lM
%FcJNUpNeX'2"AWO`#lPfN[S3j?X&djX`e%J:Tr8ol$q6P^!oY(QTm"glkjK:p<n8hV3\4-?+MUBQE?QW"R^^BMl4jWKT6G:2fn;+
%Hg5^T>'^j"f)8TFF7&R;gou=>8_h"@__:3;9RfLLD$ietR@76tXUA@tV1m/M)TH!r=i)l[)Xj2P(so^Rj+WMdB2GYdd;9NfgYF1R
%H:*[HosM6oFnVm:gHKmH=FG%)mc"pgCPTm\aj")Za6mQBqmorcV`p0b=.AbjYQ4RkgD;@V1S6]LnpU,nWgZ.c3_ITXR@iF51rt"n
%QE1l2W&G_iW:o@.,5'Hl\/2Z<I1k^7Xh5s7<IKuT.?M!=P<30BWb_77'u5oT?mD\j/:4[cA+G-(rDJKK\I[GpfirFQ0RNM/-2'+.
%QWi`glo.T(\_esCoVgN`q0P,?`O5=*%+5#+MS_=+6&1A):>NLK[pPVEk^IBgf"5D+)WK+igVigX-@Klb\@l-5*I]D?DWTH'7+AkR
%PoUYs`"J`2<^c!<c8(<8pD5FD3Sr([HXUgZ)C4J8WIStXd44KH^8Ci1))nOk-S8#)(YDA4G/tk<M"TdF3B'I]JGbI08,g!-3U5hj
%1cLqZMs0^uE$_nEelI\(MqQXQ`=IC#SNkFZYNT:0YW3&7MiZF..pfCG(G20#%XlM>QgFi1+8-`0YA.dsk>P"OGa.RsrD]?#Uh0fL
%TQ=m]KY#!1]9TisdAHQ_s04pT=a&Qk]1U9QMZH$qZI$XXBPYIrkWD(*5Ila/cRRJjQn]d#KZi$HHrh/[go@ND>&7GC[c=Kt\U_rF
%9K)UQ1#$UCi?l_(?&lS6#"G1kUn>g(],CIe2=fV99WkWZkdZBM@'n[lm7->WVL-&QA)ga$-GoqQ&R-XSer)9J1UBJj`kNRnD'oMs
%q]/do[Y4A@K:BinC^TTP]>UggV=\lOpjo&\a_M(L`\+BQKc:u6*H$em;]RrhBtI_4$Y`Q2ba(8&>*A6N[R`F(-4iN$j=NX<Z@_`b
%TW<*u^:+?;Y,p_;@`kOurER4CMsLm6pkm7b<*I#Z&G^$ua^t%;0-WgS"bG9kR,6P$YRYsZREC#O*;F)-&g6r"Q$G3kZGPr*r!N%j
%<ld\k`U`'T*>p\kfOZO<WO_W7Q=H4R-0t9Ebg/bP1"iXif)oG]M=ZHEQgq@GRC-Y:[@+j"5!Tb1/ZWciZAd4+YUl`TIG9?7UtEUE
%"$,fkZHGE#%7/0ohh]-@E^j\$8H`rO8^?N.-gnPa99M(l_au(t@n:W0B/kOU7ts]X7V=]EVK-.0SC&3L\k-HA8^?N.-\*(1Ou#/:
%8I0V^8^?N.V^jJZ>*:[&_`;rQ2^HK_*U]ETSK'CW8r]J%*%]PWOlVI5$Wj3JZm9:+L,3NT2`Abqc/1A,3eenmF<oN`kg>Tad2>\,
%dlLs$1V*ZqVKMYZB68llQi@sRaVgZ.%*a82RcKFQE(4AA#>9(IT)T]YaVgZ.A4RY"aVgZ.N6^YuOQ;AGE/p+1pEVboq)1@a3ae+,
%3lC3W[,I4=d/o,nBcSPB)4faI.I!OhS-*>+LJMq[B/g.>Zpl<$PAZ-o1!(<(iJ^^`M3FIW),@V?D<)sTFG=jg^:/+S,\M4Rdtsu^
%R,j4OE4WiDQK4"ME3aQdHLIT<]lAqgb7dr2<.'/@T]LX.AA('K>$nPcE9X#a^&+/X2=tHTEn8EX2g0/f:.4E)P7*euThf3#C309O
%1Lij+QPEb\o4<,LE+<t>%b)kOENAtQ-[1<cIW;EqY[.&ZGaH)B/7AWdT'WX@kleD<4C-]f\2E.7BDq(@q=aIuF&M1q'9eY%qN%*s
%*;_/=),\BOU>6:W`>-&#>..bIHW%e8cW,uol`ZuQkD'6=,dJQC'a^#1n<7[<;J6<seLu<&pT<!'dgHI^hpO[2o^Q/%rZo'^Zn";n
%&_:1>IA?Epc-i/t<'+oqnQp--6:9.=3-KcHhf/MO8u0S8$V-$)#P`F_234@tq\/K*>YPac'tgVe7W_Q(H$N=>AW2=8V0m5rYU&P$
%.b(%k1_SrX?R:(m_Gs?=K5Fi%@Y/AS<8uQhhF31?ZaSD[qRt*N/BYVh@^2\VF&^G:aN@U/$[@Lr#9Bdde&kj4$f=WB=>'h2Ahcep
%]L65X\b^G%966KnV3MHL7f^J!H'`^lMnF%T\AsUYEmi6XmfL;gSUcM@fa<gYCs[Np:ft:?ZS^^ZP*)phl*`7,GTK;B5Q.;W#JD5,
%*"8;[k'ZXh/0e>'U=ZE/:Qn20;>F5%^A12bO5%hmOeuDHBd-';fuMBGjqCZ;R,<9@2dbCO9t3:fQd0?ZI[`/kT*i"#H?6jtG7Bp:
%9[S=kr57F'R1^ej-)iAA;=WrNo>DaBUif:78F<0:pQWjFHDUI2YMO"p4+F//aL1>drJR4EC*c;Q5=+Vce3&[]G_5'sCOr9]T5^T%
%'7U:e4T;qk$\'8W8D`kM*=?'O)o(dWVdFE1YEUH2%T7K]6L&[pDP#i^+U+YeCLiP!K4GhoOa^uj2XpZ^iX\J3CK]K3+%b#e:!gu1
%OqPFADd?GhX<\('-qT"Ca<Fs2DZ#h?r8&mXD\tmnct,L?9Yh8S9p_Z?OHgMOKLVC]#_lsNUpHe+8r@GBd&!P;1*RmB$DOL+\tR3>
%X@jJ+V+RC4#=\`XdA3ilMlIrAWh^T>`+cX*BdG64ekeb'<##EdajrQVQQ%*0ksU4>=d,tE59s>g1%f>AT/Xus9i;WldXqgl%8eoT
%7?q0Ni40h&%q'*Y:&G#3F>EBAR@7JRiAl,>(B';b9M@H^._;]1L7eWES,CeJ75512RYkP=MC.grm;lHfZBA3e<RYMNe9/>@!J#_j
%NC9NK,H-+`K`5nPSu>1_(m-G=)LPMDOHn7IX<;5-9*LVKQ:"]qhb"UTX<B*_Th2gER6#'C#8h.(82R>#debt!kl2LaR3Lhs8JEF9
%Kps99V'NmuR_Z;ATc/ZZl$U\Y>+&8h<`KHl5h0C6V^pj6(hhDi1oaC#q\N&lrtaijMNC8lU+6TE*+Jn<Wh)'KE@TmAKmlBib23OE
%A6$m9%F[#i-F%Uo!!A3!M+/4LHN3+6r?!7I_or0h)i=i00Vf9Y,R\!16R0F/YfdU%"^6bgR2&D`.NXS\=93r'7ZBg2$73B8nV$o+
%Uh@c;VFlFa.#+\c5Z>7+MI8_`k\(j.@X6nqM^*'bnCM&?3aC*DTO;%*"'JRtW!Th_S'\bUg.5+L!%-Uro/CD0ocgrRol$GKIi3)L
%E7WC=L68.oOAlqtTc(`0JQAKrJ8;$4ENCWtnOOgPT<D*:W=-hWf)EW%qJW.2G]+"W6J&Qj)^*."^ci&4(\h3c9e=)59F9VZ9)4KQ
%TMZr5O3"6$J+83kb@iDW]7lQUUh,[<iObfK8r-"KZng^D+@,+QXJoSHl<MXed&<)V$09iFs5F@`\'\6h5D;b(X'*6CVFZFE#hMD/
%_V[sBeZ>a$2M#cJXpr]7$T)TDp%%mboe2o`Ii3)LE1!^UnNA<-%9u&3J;YnHYRJ=9Hk4EXW0,S4j&45gJ(Xd+3aoN$4C\(.oiLER
%9Z\`H8IbG7]R^;,ETVb*:hZ_l->EK?=J2aIg#_1i.n`/n'eX*R`$Z)2R=!^)Ai\Zp8[!aC5k&E$@/il!67*cRYQ22n=3N5"Of!pW
%X$f;Yi=2lB/d\hQWTu$WYDQIc&MuoWd7,o6r^QdT7Zs9A2,REY0LALOapu>AZ&o0L&;kmP"@ajtP%@WLAVK#4a\!1(K"9(%WA&9(
%$s_@XE7k[4)eo;C<%4l*)Dk><7FY!e=X3A$PUt#e`h^eF;bYn9bo3I\@t5-W.)iQ*kJMP=7N?A40oLI1C1_Toe%g_Q:!is51b_Ls
%&2=P2=p#'<9%PcmkR'-Z_:F6.!*'7U0=/_+qRusT&0sip&iKg9Y3H9&1o%-cHuOo\ER9F=%N(rZ&=REC3[@iQ%QG3iA-G?7TW_(W
%:VoR<Qdc$>\gRggU%J+[TdqOg8t;RU>JQHL=9fTq"J'KT\;(,NPpCm<6C3W*^a,+#$@oI]lN.4nNXlEM!&kReTe+!Lq'6/*!L?nJ
%<D?II*Qf\55U-92W6e(chmu8rW?=2$S,t)T"]7qF8B`Po&Pt*Qf@qF-FSKIhMCns,*?1tg3HZSV78?,V;ns0qYG%sG[a5/-,mln%
%csKDoZ3%,'J_:&-hd_3h,ihB#W#P5pH3$97(?:."+]/k?OT<g/kWo?98O0`25`r8OLd]Y;.3'@`X3%Ybck\+@nV1_mRV8]:Ck6PI
%Qo0$hP[MS4am$gdb-H\a<=BUQ)Sq>^bFfIf9%_!>AWltA()da<!Z,1a67E*=_C'InPd->Z+:uMd-lUGA;E0V:!qHO.;ih@emjR[F
%O^t$3!d(Vr`!G16ZA#hS,<ZEfMN&<U&LA%$;08=j#j*pV(Mk6cfF?%C3"k@`i(ul+)]2=:@B&6!$@kRL+&)gVa@`=ajJ'JZBLG7U
%7%s`8'Euu"TGDVE0NVCW?u`FT?j3N)"jI5i%G+Fp'iKU3%FY`oTTfGb5E+0X71DG"\l#df&Fc>=R#HkXL)'pl1:TM/D'@ksA;Te,
%'m`7MC8_n!;G^a=@EAXP!ECe8nJVTi'&fi=W[VV4RS=#o?)&#7I4c8d&-`?b@LEc>6-pnm,oEB%,KYfGNj"EPUVgD'AHGSi1^lt^
%'kS`l@i,31X:\'4"9E*YgbGe=NZ_`g@$iWo5c."_CQUD:J>s)>#8Dpoo:\\YAk*K\@6K/PaZ+i(;68_A<0?[TGP.V_a(U!WOYL<R
%!eJLkU'=gurXq=k-.n3K7FWJs6';s/W1'E6M51?_96cUBN6IXq"%nV0MGu*eC1&9i%#,NI&:k='!77Z4\486W"mA6Nj>R@M=.k\D
%Q&.I#<WZ?,9a+#g*,/e>Yi%:(+MeA8/FZh['Q[Tn80g!Kl`=ce=A8s<$S@HU_,=*d2&fep5RWLd]^e&/%IfR=e,i_R]g]R'kRV@#
%.**]Z<A[8T<C`_b'J7FqC_<3Db!X5A,-\AoR1[e(ArFL<Kpbe0.\#'"oc"20q_Y5/UP3.ip$,Y+`*UgPX?c=e`;>fF:bB1`U.Ek&
%Urp>%6m(=PBQaJ';h0"uoV,FQ5mmkG#QQf^[/hji5?gH!>nR,Ei/Q#h"Be#9Z\5VDV1\,b^EB,Hc4`J*&sn.$ln[GL&.0s$MMGRA
%"9Qah6Q[dkF^,/H0-D:>(MEjg5qmr/5k,0@PYJO:1lX^;NQ=+Y2%;m**1VPB7jaQk>pJ$p+C5.%r+eY#"WA7>Yq\r^bS;uM*/Y.G
%&-B-W3mN[l]gs4fmD7VA/BmqZK'S,batgb16/9UcpkUMPN>59\JJI`75WHJX%eL>UPJB-ZeAdtQJ7o$enahGFXjLr`[%)*X?j_K`
%<,*^'k9JT14:lWQoHLT."F:JgV1E>0_eKc4UCm;Q@a$q<%92[^U8@pQ+#%jX0/[UNK`kT.1c3ReE"NCKnu+F9[R`4o&/pWd_@G"j
%R)P_n$%i=)"%OPdJV6/del<PNYCS1^:dO5Orm?>XCD9%;6mODs-$VeE&&<<5(`#LS1l"AoC`lJ<Z_1k<JkRGe!n][j-dc*e0I78?
%fGNOs?mD]IO\WRQ:pN-^<1kEQ=B,f.UV?i+H6=aU!uR#lAoKd3m_V7>0N>>Tc5D.uF`roZ)W?Ytr%Q%jRbb7n)]UDZ,q1#7K%e1(
%E\JAE_-7IG,O_r'`(U;-)1WHl#Y/?l*aJ3u$S3832N!2!%[hoPQB:XPO'iHMQdPuaaNlLRNf9`eIfcn%TFiS4FHJh*X5M/d$Nhab
%_EoF>2;/pc-]2G*@JLWY+G5#-9GK;oTJcg!MP3a3XFU.;hBs'L=[XcFM;<ET#^p7C01^V='eXGD"P&4@NUAS4TRi&LCJ^'g$6$?4
%?_!,_4posZ!%elqjt3rcOH2jnkm!MK7T18F]SX(p#R7i>kWt9IcSdo#"dfgj-g1^nJU"E8?9mGBQj;t]];,NR!Kek)TVm_po-Ydr
%GKlh6+C;uGeG:-RegK+i\&]b\\HWKn#o]ZZ!d#W;?:1gtf!?][,+mX9in2-M,0Nj;pCaT]aU/h)"R/*FgD$2T&]\?IUD>/I+q#:q
%B1!V[j\;"$<D'J-/iF3."G]Euf_f&'#$T*XPV<?%3n5R5G*hqhViEQf`J&RMB?::-KEE#i$%5Q(GE6,C%A/^(CCsgp5U.:%i*sj5
%%]VoRWGa1-"h`#!Qk79dgqqKK!\[l12?cD\TYh4kBHSsGTnPtQgqYn"iukQ$mTUI/8'M25:gk1@7+/$A_ANQ`*aL65W)k=P6)&tA
%lfddl6PGR`>"Jjo-&sBO*n\F5W&1&9Fq<[<n`k&.>Ff.@h\la>&YKg0hL..@5])#c['sQYUCqf.Mb+EgX[qG[EgS);H]!")o@l#(
%UXO@:D-XaG;R"Q`2-i/rF9b@gN=Q"Jh%d[;r8gP@XrAG_meBLQ@\@O[`>3NbF<(WD$ks"/L^INSM46U72WCN+9MiC-N*jD02<A@c
%r4j5H%=H*r6ngop7W;oOO>-klD8EY70hg\fL.$SifRp+HP#b5DTUdrR+kgN1:^1nq-&mSV;+?*!!Y-eIdUcQL',fm;8UjinSJ8NZ
%,j7`a0@C+u!,Q'$KYV3N"dO=LOs`:`i.)t&!Z]SZZ6U!HXV&e8%M'D#$<r$:$S<@I>9I?k&oO"K$SXXB&>5!c]/W(_CnthLgVh)Z
%-GCiaKIsue6Ia\V#B.U0fE0i'O8Ebpni+u*>Tt:MnFs$S)DGJOP&PaXH8Pb,,"%Y-&#=o<jJg7/^C\FV-JerOGp(u2#mn+.^^u5C
%E=tNIKb1`!/*,WF=CMXKm06_o+J9P,[6e?,&Q4hrUK'meOgab6-'6qjnfUjN8'W'L76h&h)dk?LessmQfEJWI',bK3nXD7b%Mk]]
%TbEh\-8H0p/)Z%/%a^P-;&EOd;GQgAo&mt2A2K*&?'4CF(i6"(89[b9i-5hgMB*F0HoWpO2A2m#7lD'"15hl.G.9r5DRLps)-d0V
%,>Qfe6U4DV+Q1OT,82$TVLB3^S8S7X#nukA-;ls123%5OH;[`G&82XYUb\tg(7UC=\GLecUeFl*"mHs785UZF'#B42?jk'mD1AfY
%YGY6Z@jR@gd&fY$6-NN\g^)[hOF-sklJ<ggOr`-iS4\`J_^*^OX;qi%G_fZ8iUdIsk2.aC;DOTK\ALHBfu\P*+n+)7bU&,j.=R1<
%)>-;1q<I-4^laEJg[meH`NXnA)bn$C)i0/cjRLZY>lF^D#@t--MoT\OFQ6OfRN(RXl^CS.PcIgrGcGmW_1\pk;is>@NTu-$)CRL]
%$tOkBXBf8C)_9&%'a@<SF$dTBS`>uX1qdKFZb!:ed]ht$<(NU23GXF+e?B&_[&;8Q[ZAJ)`eIt\bb.5A![P6X5U'Bi]l/'7Mk/sH
%6!hU+U01/)3Lf&*DMiRQ=-[mN]b-Gm7lpA?aplY0FK4+,PjG4TGRG$%AuGqq<o+DlVcp?[*9l)pf,0;HfbE]')\+OsS^Tp-Z&V8]
%%Hnu?9HM"]Vdg;J`rSkba>_Zp6645lY@C#&MU9#tfqWJU5fX3RK0A<t;(1pnP.feH'>e;Uef?#4kRiBU<\GG+7m6"">9Y@$d(,\Z
%J#:%RFPK<m:M(oR(JZqd(toCp5fWp.]2"CMQ;bo,A!R!YQRi1jh2-8*&5WEDG.&e%ku\,n3YihDf_[caMhcU!X6TppZrlj/'s!f.
%@u<sl+jg?+X/&rQM:\t*I9)>5jf\qsOh`tRSqC5s5U&lR>fr]/CrmSr*okn6geBa1@h"n=*Yf773GLVX%4d7c_;3p&HWe6!,1<[u
%UAG:Ngj'Scl[O/Y=SYV+h)R@iU;SMs3tZoUEi@/8:pGU32PRL77HH!1LLk,:.eZof-X;/%j:#!=bZLrJ<\+B0<:#<3.:a7c#c5:5
%Ynogt!Aa>1f!h\^n5@5'1nbBS'4/Yl<LlLpVA#"<q3%Tk[4n($g"0.P:keQNA)[n('#iq8?QsFl<E%$^@Y.i??pnYL_2?II/B[<3
%Fi#%#O^@"Z4WX^DPto":8T-kU9*Wb&CNMq*Psi/nZ:_A,!'i8b$8TSN!;)P))!$i+3?Pdm;bmW@cr\_X/-tsWAXi(tA3fKc%W][S
%n<+()6!V#0HS-0I'fQ/]6"U8fWFQ,;;I'Rg'?P>:#IX`j@Ycn(9K//$O@)^=lOFTMPU:G"A2i>e?$mh6kR*l<"CCJW5`laD5e2?!
%Q;FD;OUQ'Q6(i74r^laM![kJ4V[PApEZuA4#:PX_!d@/!8;@!i1eq)BRMmQ:l&CrEEjEjbRhNp):L^EI;JL!HR76HUaVY[:P2W=%
%0Vghsc_BuT-Bd=@'oT$>\FYPf5ht"J*T.s8P(=l+Qp:f3V-O7P.[^ou4$T>>VWX:W-`%OQ<.N=;W_fIO9F8G]TL@k%"m0rh<Y#<q
%=bf+UooU8+OsP2JbO8t76D@./+AQml=g=emR:HmP\6^6;1Wakf5*Lp`'^@eV(WsA\UnnJR3hRm`N.j!9#+8WPQ)b\J(S"##KP3s1
%OSiJGWC)MQi6/0hn13^,&T$ZaDT,njaoP*[A#1%gP.fJK/s.\fB#4g1jrjEe?NYH3bZn)Hd':IAlR2NVQm4j-[g'35&iE,!dg*&r
%A=(pQ8J%<K.2MepWPEm(Jj;Tfbj%$mKX36r,=8WQ,>e@hRL1I#*)ZDO]Thc:%IFE%7X`pF&L\1Xq*Q*0@!o&D'1?%sSt[He19f-=
%!XSl&b/d6d59g\:@FT@/5Qr[cA2[S*do<Jgp7nL@E9PZl!EmooP&#3#/9WAB7t`8.+Fhae.Ej>l7j62=\cf,#BH+2U]3DY<Q6il!
%i)Z/qPK&ZE9jml<@(N3LLn`BE0RJJ)+q;-@6HJZOi#kdj.\Q#/.+fZRZGmAR?1,.j+?FrtT87Z[]$quN9BaH\4rP.!,EC(7&hgJ;
%6VbsYJ=CY:ZmB&N+p$"h73gVOqFlIp1a.``LXNkEm0kKkgQ`JZ9"=Oc'A2F5\<=^"njAkCU->_i9>(sY_KHO:]!SB2#.->'!@#Yc
%aHm06[>/WigF6YgiWiI>o[Qagl?%+hVlgiH1o=PJVUDVE1Q3%SR02-Fb+2*UeuN$$_*PXO4-DNnf!7)=o)hD:%e0T0(8h`UBt[5o
%R!1tOPe8oXqo&(#1C9'B6&86ZQ&F6%`.:QART$/a%m*ZaTO)ar"+#nP87-UD/.l]JRG]\>3,2<X/a;Z;o[S;&qL8tdTpY?m\B^5)
%+BqD-r6Wc+U][5=]+ct0O(&nW*O(N-<duNX_^@/dHftc,(qLF)3S`N^\40s#A1bqQ5qmsL60-7@_b)J]1Q>ZET+UdO?kk:]nYCK7
%S7&:1NBB-/]&JA`D'"D9US_tIkGXM\],B?gS-@,`,9I!md'kPs!ZZ.u4)_ICJE9aIh,"KjSHd1@.>I>QeIQN]R+T[j8U,Gp2#tIt
%M>1e3*(Xl2(7._ai,,>4FD?:&M:$YYglmr5Eq'KrT66HD/E\Ps87UW+B+dBQ06cJ-"j]6iA`3c;:Q:-:W']f>Qo[cN-Y*Q,D48]s
%oY"7*/mmb%WA;1<9pjX#T`<\ERK$s4J!2AR?i,C6<T`[?`5hOrWm#t[#NGEC$g'dYO._:1Gr7sOBD=6.jK\Ut@%mp4BlI/\7c)U_
%.JaW)$KIB]O1/4Eq:+t0%c[kiXm;Z/T'RFX:o(Y0bQstgW3T2CO%VR<etXXb+C5WrbAhN!4@)6HLrd)`4gI)*<tBOV1TFK`<goe.
%<L(6KGA'='iX)?S`JcsQml61PTW=`99pU93h5cIn#m+F]1&K<60Ek;S6:=\`!9Bl!=Dri_l'E`0EYM:\"jB!/oe;7N+=%AR3AqM'
%.#M*Uf:S&=3VFeL?9's'i"\eBomHNb([Qe0VA#FDGQe8&64l4I\F&8eSq&<=h8c!2#iQ(6Ttn*'Kp='>LDtmL?Hk,a^'Wa1-jnoJ
%I8XVc^1ju!L%)<Q&4UQ8AO''#%he$Tq'_9^JU$JqTbniuTBnG*ijd-3?PSuW<A,_?G=PpuI>4,P@X.+9J_l.W(e'Qa%'QDK[&iD'
%,>X8-GZE!)\ZOC;lmRPM!Ds!GA,*(H]+il1%U866^loMiODN&6-k>08AH.:\L[o6m^_9,l-qXNQW]g_L]((plSXBO?&:-KXd:Fa6
%i8J(TX=_b".g>FBqYC=L9u\T3#B;=0X*@rah)PZ.K[iQ@k2A%6/u#fnF2[N8"lk1X$?hCCpcu1BO<a<_m^KlH6e1HfOkQmWIgZn.
%7o%2SQq4Oj7Z9Cl#4)%VMH0@mDQ=r*>/gIUia$lEB8\W_D5rD`Z=2=c'gMXZ3eK82+M`Bq(<J_)mo1gkV9'7mAu'um]b!l"oua:)
%IBHYRBGY)Q*\1h1<U5?Df%1S&2<tFtL&d<P@\HYK>s0C]X:4Zgog/k6+Kd)kdq_uYJ/$.?$J[R3W'WKag=(V(2(O\XBIamsWJ?8Z
%,*$s1Q;G1o[/F*f./FA=X"O%UL6?c7("Z0_[1WEuA*k`gQua&f).j79j]W6j'NTa6Ct9m"b-e7Q8VghJ0ikF[MNfW?CKrYUU`]nB
%QOCCKc4m?bZ"l$?/?PV)8@a=qgFXT99(Zc(fMq_$(J7MF3r#NXW"7o7qM]&\eufg@P?B-e>&#'m=7eNcd+q0G(i._B!<]m:D<09Q
%HM*(j^NpIKfGjg3@67I:kGho5d"J?,!o0+W,R4\M7]hg"2*KK]?GYK;l7GD8"ab[>G6Mt+g3FrEYa=XgiPR(+JqX4eo-2Kn.G0Z:
%[ic4hYoFZ_YRh-61d4btOFe3R&p&MHnCen]fXImPk:8gLjS+<]=qW_qWk_PjDSJ+Mb5Xr('4hf7J*aXq%Y0QoO:1JaA\Crg+NojN
%+OBAkhH9L$f_r84r'nDo.E09m^.m:26k,+`Ak:.u\#[^LH<gIb!c[q@7l4utM!4Nk(<^a+'g;3JTasCR^js)ZU&D?n;`EH@+17=+
%]SB>ULJF+Yg=8Z&`#5RoEUEmJ1h;W<'e(h&((CgH"N=M5hh&`XGPmP)0LD.C.2I;<)Km6V.9:_sf5?Y2#X[0g3d+:of,:B:kS86=
%E?DmG\g)>--D_^;'M(C:/=9g4<HZm('$`,Xc<Bu<C*:KfBh4:GO[?32SWmC/:nifrW)n<\:+elnR;KKi\*F/?PWjep\uH(^/g<]J
%s$35P4GV.=L&DUJgI^/7ShcC>D>eY,E*T+E:,pQIcfNfc"`T;dQ/(s*d>'*]OO5&J9h4gnU`^,4]BchEU,4.s,UcR_ZU,ZfI,[mN
%A/J'e(b\2JQi<#r&j5?9r"O*.;T;,[bJ1lW;Qf:64-iksos_RV6A1I&!g/n.L#At;RNeh!rN<4G-;[2'F<JN/&Xd%<Jt#jP\eU;q
%<4VfR`$X1VNI^q>HNF[S@P0\QM*5o*m7%k8Z:N]jkT#KIN6Dbg6NZ8Y2$6_g)e"7VZ"KkMC9^?]e:SN&-1S3pE>(:J3+E<rq;JEG
%l%]edR5]&lePa=\lm_,Nor+tSBXiNQ$`Gd@;3#i'+<Yj@jpU?P`ZN;0lqZkUQSe<5#na?6LgG?GjJQK/$B)AQ\-cjS4Q-goj$_2[
%=sqRN:kCCbfH\8?Pj\=-G(c)6rZOe!U_>b.j_cRn,i\Y5FI"%Sa0&)eHmD[q?L[k)VZVNnBMHWBOiQ3j]B0L"K$Gt=6\i4),0DYb
%3$8akF7r78??&&a=jANfk$1F2OSf'*M14ku4B';u.O9q4WiscfK-igg6SY#>25`gVN<_ncIT*kP?;BJSV]dbeqINLMlW8QG`oll,
%fYb8X*RSk;T8u0g++`G-BmTHn6ttPgXp>`PV24+QJ`:"NDZd'tRNW"D1?a3F_"s[?pFcTLs1KK["-i7M,!N/j"0DO9+,C$#\)q&@
%9,DF^CN*#?o4W9njin&umKe3_^EQKr:%!mt)>*j7mQ@+m,"JktSu<C;RFTErSm^5Th%iDMi#Bsl?L'aXNJ*n]qa)((#klpYQ9<!m
%q@H+-j,>H6DbWErjY>"(:[j?rXVD/g3Wt7%_1IdK;6+Rg#EI_H+%>a[Hdn$FNaU@YA(T'(SkNrdLkaM4+a&sP?\o>V-TD)d:GCAS
%A\HEbRQSD7;26r!/=]p-H]][X5b`"H0'Ejp"ccu\&-g5_]lU[8VL.uMao0(-Tu04lV/Ia"TBSm8'8RPK5rSkYE+6`:a$gP"Jd!Ft
%-EHD*m%*N+_)K$(k/M,1?_d2qitbqk6^RHfN]k2]MEJ`MXX51Om&E"94MeMXfN="VP#0gFN,=2'jc+?I].WRUhccMRg_0/\dfIg"
%$KkO]46P'/JY-I$,6nK[m5=7OTCIm)T1YKD.f*JMhmHrdj9Psej*/`?Ph?YM65(u%AhI81">_6@">e,+==iRRV12`ndh.PR>``kU
%O5br1&I_K'[]$Er[ML:2((b&PWHSIIESqdNWL"SdK$a[.A<GU2]H7t<URkV-4Ze45Fo&sp4)<3q#7P<s\+G(EZO^15%+]mPed"5)
%!Pd0S5PH?2OmMoT:ro,]s,)[jo$MF&lYO;U+<[nofqOljh8Lj/I9c1"FV?+G!sB@n8*U6?h#l'/PZIBeI_@me56+OR,%5j:!O'D-
%,4Kc-M?]f4YDXO?;J?<*:K4"g:k<1u?^>LMIKhg5U5/#UI(PYW!8BP8X"u!UO#j&S"R24:(6CrgFWJ.NH:1qt#S2_Wrg<X^QrEpC
%6ABQ'$2E*!2W4OX=(nS[&F0Rh5Jf@S?#`i<_4[Gj"/+sHTnIULi?A^B!$jMVBVgH1+TW-6^8JM9<29Ok#H.qZjZ@.:Y=*JZg<2!s
%3&g@=<,(8Gi#&%<;8Hl`69as-8ue)U1iP&.*F;/AMse+7.Lj)I(pl!o?;Zsl&29(+^eCoZ:]sH8=VmNSL/f-AB7rADnE+bV"qW/*
%1e2F[Pm.fHThdVOW(I/FGt(<>*2P+o+S']5^:XM[FKIJOWmUl'^`V@n15o+FrtQ6[A'=-L%[IL:'tT:l4eBM).ae;fm)D*_elOKP
%!+KVTb]^M+8:qMJV"#R7UnLFa.7ZfFH4u"g3lZ&r(0jh7T`PV7n2+bJ72gK3)C/$8?QPVbX:,.\12Bf&\SGlgVI_.QR>tZKmDGRA
%72f<ulmrr).ae<qY=D;U)PS@h?6+Bp<Q8@A_2'6/66N;Wd&#Y7>LlJ=.anCUJ1OCI&eq)r%FCpodF;@_T3S7U[@I`)C\bL\el$Wf
%n3_9V9Fr0G83ST[4f7`PT..j7KWo^$-h];)+=_j(6<*[fX#0H(Y%7&k)W9Ct;f9<?j1W0Q3J(U-,q=pD**jAL32IZ8Q)JR9$gP=W
%(qW+l2;sF#IR$Db-O7d3<S$`*^TX)d@Crk+8%j(7f/8rP7o5'P"J3Yt5lu*P5VT_T7)f`hKa]B`;.PH-_N6Y<C!-^S5GHN-9W,U.
%Xcp[<RAVK$0N>S]b!Np:Z9Fk&]YMV4%ec[2hI,U@@?5c8BEQBQ["er9lOi(V1!#un>7%WnhbV=5N[b(i3m%ZNs6^B!<b4V/#"Epo
%pU%-VW[(DO<=0!5k%R'!AgN6=7%54UafJ1WYEg9!*M#O'18.ZA5ZKm([D8k;W-I&Ujm590E>&nG=XbKGY>8Z8i%mg(;`Um:B7)_G
%'"@F^K6'^D$dHgneb/L?H=O9Z&9(*t_1a<l.hd<SnjCU5,W71C6a@+TWTl%iF_2r2r5^Od]nE8tYuup,6:cX!mCbim&qn)]C]m-[
%'bJ<s[o4Q)&:D.GW6hQ_IDMbCj#3*_^QQr%<*#_<>Z+s1$3K\'9?:s9kK'_u#L`A.*%`U"0ItP_X5O%R/S,438j\2o`e2@6`)9XY
%Yuuo(_$*]>OeitaPopK[iTWg$AgN7[6e(2N_B,VV$R2ni3p4AeT<ju5Sj.j*fOq?`%a7NSX"5&=1b1<4@6J?`.rg3\ZF_^C\--Ci
%+X48@K@m8!Rbo=UA!ra9>m\+O_XJCjBLBBe@>MI5S[F?rJR&S1I6jpt\<Sj(#U/IoIV9/T$11>Ubhbi):9MuWZ9"N:B<9?2gQ`?,
%pn=j3;W=iSWWP/rOC\_]Z7.c=/Do`oQXuT4I4NVl8.!:c6GL@g?-slXCG&I$UlRc48L3qks#NE#`[s^M/?ZM,8R(PhO_sXu8?92\
%_`Chk#;MlYdI'1"`U.m+8+O'n,G>?Bf(kA8jI&:5Z]Y1cBY/a-aoARC5TImqHP5jgI3-N1YPg`!rdq*j'hqe;@i,+=@=Z:J'3K$N
%%rco]Xm]OJB[OSLO@>n9Rcl2Y]T/cn&alA`cI().jp#Z&%C9cU[aEIp&q&"RN5^)rlgUl3cb>VD;,.r?o%Ij7Ek<4=IGCf0I1'K9
%N^anoCoPWP:M<3tQ`>JR)m,bRDh#D8gcdA-3&BYPR+HY[aP0P<3=WM%pLk<Y.@8KV'*pcH5M\ihn8rI4b,&L9e-n\dQIqu^#ssKD
%N7VHg*Bb;FWXH)Ckt8M%*+,G>:`Wcb!>'M'eKoPrXa.`InN.f@iTOJsRbn>7_O4u4T$h-k/GG63QR.dI4n]"U^mWM&h$39"&P>QZ
%a?=`qJMnpR/!_$\c\'(8G]n$:),r!@Hh<BV6c'>0/2>W31T3HC1,3IUHDt>ZM(PPU9^*ud3)cbY[;jP1_-Zie"0VUB0\tjK1EsDG
%!U-C&Jd2Z`S0M9soF2B+ku33FitPk2QYj&:`XhH,IH+</=Z3irJ[btu^S9<"Su%JmHBjG[M#]c"(!sR<#)bY*<rhb>2o"^rhCI=m
%kdPPa/4R')P3`L>[/g6c.CHV5RY\#g!-YUKr=W.cW0i0iIgTY4F'<#h)M#tdbS/nYOF'0!.Bgi5lJ17FJq62@6@$S@T8n!54h?!?
%qL0L21$:%gD%h$,/2?[?3QqpuHB6qJ"">84>)%d(a`YjLnYK)4>qVUQ4m/bAKp>9nKH-Y_&,KU)"@-uXW?c[V!n?d?(&3rs+aA3-
%_2E6B7_`dpqerIKHc]UCj_!l$3kDUcXLD^r.gkHNX'RkmC<lNRe,rf)$\%rHZ-&8,PN#X,atS*:hXR3McGXOmG2t[XAE95Q:P0l0
%%1cGH#f_k$qQsX`WgZ.[a]\V,rU<WQ"N*SOd'7/LX)[01Jj5b%9/mta;hN6H+JQWjd#B.$)>eB`Os&GT2NarPA[]925jb*KM\`2K
%Gik=E:p!I2V=m#39RJoh[5JbdlGFV7pWcT(Xli<Gcqm/2E-fO1QH2ni?^M3]1B2E+W%oPN<'?$G<C)EHH\Dj\:dqoU!^s/a:+=/:
%C./8O8I]2t[DG'VLo3@c/50$!2`/dhXeA="W7H#SJ`&=.fg_%i3rL>9TiuFjer6NJ:p&qANUYY51S35q'u\;FZ4m^[W1qgur(p`5
%oZ9oU9Ot(/kSsd&Cno,pd=]&66fOb3*B&io35&ud6],_[!L4VIdk^#8YYbS_3PcT"35T`2^5-UT$Cc?uW!Aq\#s\'e%]6@ZNJ[dd
%Lg+q[IUf.IL*'?^0J)msG@72?mX!n.Z;Co??8DfAoL%_FF#_61`JuuSZ&cJka@<;^*AuNKk`9\a#m/sQX[nY(H'AC=[A$oNal/%L
%<5M$].f-$DC_tg(n26jjMD^S,$sDZr>ZY_)Ha8V<iI7rO@$-EU#mI_KD$rsDUO%)l)jLtsN>d>;NJaQ_G\D[__PYUJ`K'MP_\ef?
%+Nq%PS</R7d[!$`dFjhG)'T.t%<>2h/#:QuPWsb)2'eWMdC3qbJm2QW0<p'8+]Xi(/%/7tkhK&c$!`-k>.Lb75I=5n'NqC,>@aF:
%]s'[rZb-AJ(#.U3M9&#;6<gi'>H$797K3&1acK1h>Vr+GR;7q=.bk#>X(S7u']T4$b.94+12i))MI%ZjA8IsVoLWi0%p>iE:3<%&
%VG:Nm&gFVX"-Bic@F[>oi6Ok,L?4*CP:87`@JO_u9a3*8qPl@)5^dEmqOHq"5>odM9RUhb?]e'S@/XZE<!bseW[1ZN<b4*7^$K>u
%9Bu'eZRSjT[f]Go5;[3Z<@h3Q=]inX";Y^ErL,uq\2YfHE_0SWAjY_MTEo2P3s\"p19`>2G[:[pifDZ-U[:aZT-A26iR)2A2^1ml
%I<<dR,Y-GYYPr(P&$1:s/+;YnV[Gc%n5VH#>!"<``=LF]P'cCpU)Y=;?2fdq&717WZZ&F+?(!Bo00F73h4-@%#-3=fH<ZLJf27TE
%An>nAZ*`[Yakt9B2f`if!<*Jm1'6CbG\'O#;(6Re<IOTu)MShsU?.Oe"5DA"PfZG5TORb5+>5ZA6s4bfKd6I7nDNB9+Q,>m[ADRL
%NIq:&Gat.\f#t/81:i!+2DUBV+_HZI(q<nr+$#rJ;jT_$JuI1Zd6MMR!a='ooCUDIqJHO\IjP>PW$516e2pH"O,+8k!:=FQ&1*b$
%7h\9AVXBE\&Skh,&3!nL=-\S/bL]\23'.Q9/FMV^^F/&cc<!<(3DPZKOQ>+<gI$JRQ0_t_Q*ck:@E7peY%&B15*5KikG4S`n@m;;
%`;KBk7;mpDoeRO3i?bqIg&ja9-9TAIK]rg%f$5.\1bhV3$r(]Yc"pm"q6AlBc^>J\hNX.?W(i.Ii:-6&-hNlbeDA;->#W'^^^":L
%qWqBiU8;8o=rL2Nj-q&TS?9H>KL$Ea580@pd2<*1n"@3K][ui9NM[\U>u3Dl(Gl8"GC7(JUSARJcF\i9T[nCIT)IP\S"Hl*2j(q`
%QZiCEkD93;1"sc)85K.`IVbUsX]c9lN'7s,LXQ$YY1()(k3&[?D=]3D$qru@a4a48C_?f;<ne1q#SC<%%mjZNm@_<hknmm=h/0nM
%mjjkd@A=4aENZ0'dFNN>i>]fhDK'OCWc@eYGTFr1BM,&1&,eOaNU+f%edn75emC;0;h?!qB&QSd+dc'l@X/V-h.6H'Hi[eA,!6tP
%q/c7&@:"KiE>RQWE>U^B,[gq*/#:GGS;#))IsBh"GD5b-"u?QIE[ar94u=JjMqTL5-to(UOEGE3/QJ@2!c;Z@Og@9760IOs8KZ_D
%-kq#%"=,o#LnU4Cmi4!48:AfOFj?J:'\IQ-liHCMTgn\@lqs.Vh-X`W7)!"P&:V7@0/9s%X0"$*p\Md<K)NNtpB1V.ZONX8M>AGn
%VHW;($,E^>]HLE,l*A;:E:6MOc/e_9T+j@+"k;V?&%Hr*gjuS-+ojRCDVi!5&1a\cp4Z>@6lbZ_>Q5.03YI7r;!r#gq<kP34%R%1
%3_#YQ!SUW@4!eLG8")`IEtl`7XU,gV[*`?En!'bD=aAkJ9%4=#2=WWhPc/\ds8@oVV+uk>g/gA'aBn/9L:";*(c*)!?+2VXf^-3-
%,a@>o-3i6T&I:,KS"4!;<D%`HEP1D/IBQ$=jAi(h;eHm=8gHfl=%sh.X>P)BQ`Krk+niS^Yp$BJg71DE[7UQ+_02A\1+FbLpY88r
%Y0^NSet^%b.beKX[gqs,VD!^^83%i%NAMSHqp-P+DSulWYF^]bLDJ<A[O_R'cT$().T(p!7Mj[97(!6QBr$$$WW1"C%CMXeSj/uN
%M'/PVmUcqAPF=R(3I"C4hJcKR/f/OLB\9^&VqIP1R:e4VDgnUIH%!8&"$K+A![Id5mJM2X^*Ooh.-`AIa?o8#M6LOiOn]2u82.9L
%<?'6m=lqoR.f`mFa0Y71M.e+FKo;O2Ee&(0=!Ehb5Qmh;KBRja8r-!Gc%LK,'d@XuV^V06gM?D%T3V)>hW<gjBGAmtE]e6X.#jf`
%s/S0Us4MSq+t*E*pB+i!qtlS5O6bhrr;YUar4hjr_KuipW3k!Vq1;%2I<cMkaTVGR*eY=#'ao<;\=DbT+GO:1f`UJ+&9@'sc*0+P
%"%[kG"\RsZd`3&mj"^+U..V,WBbfdOdej&,H@Qhi1,I*E?8hqQ0<9Tl4(o'J?R^/RFi=p0Z4K]+a?NF:5U.44AmHWZ,=.l7P_j61
%MAA)G,H=$8r?2lRb0LLjC@iA\f?Hd+&)U[)JN1VX\`Cj@`,Qm*qcL-bW?fua:M0PKZ*A1$:+W]NP`s-!G&:so!'I`:](7p/e'$=H
%&0tB_J(FZM%e959A'bCWmbCNTqAD#<$E?+iTj1$R!b"G;Z'uQgLU3q2%q`UVIg;*Yfs'`B)hAAUq!faa&@RN)[J?3"ge,NSH.'7j
%LN^V^LatV:A6i`qJ2G`Hr>gF<_1s\gdRIg9f`ZZ3ah&>'oa=nb`nOeEYeBu-L[oU1PJmL+ha.5)BE5.(,1/gZNQu@_gaao55pok,
%IT.m1n3cn1ge*5:XP;jMdEbsMae+,k,F=O3@Yb\[OC>7@pTNpMCE7%>Al]dpJ_'!Y3Hq?t!?nbObYZ!-F]/?NBROh?$LMDMUCXni
%q-MkVds-)WaT$[?r3HR]Dd1F7V`5'!2<qL'!bKXPACVl*iTC;RR1VjR3oQd`B:KT%^`crd]$P_P;HKGiV/&PmAH89I*N-jZ"A4\Y
%)F^DdW$%SUAX-,nZm<TN(HJ9'K"Ri(T^U2]3a!@fT$CI,#iJ%sS8oY5IFAEAnl[&ieiuM@q,=:CaMr"SPY#g_hW^itnUg.<2=7\=
%fBV/K<5H<R3pbBZ*"$"V+CLQoc/622,d2lV76]$k/8`P-VeJUeIH8r$'Z^9-Ljfb.+@I=ZrA;Q"4ei=-j`-nJ!j?Yf(,&;`b,RmC
%cEAihm[Vr)kAaW2&/#?=a5I-=]a;]5Qg&PL#(L5Fbq%UNoDobbC.Kkr2o;497-&H^c#Q4R6(qX&?"LCV2q@%&6P\44^AJkU72!^'
%##M;\i3#:J[)ih%F^?"?J;q@\McW6aYP_5/L+`O%n-0G[cu]'"EZRsjnA=fi7#8"D39+A>:@V$PlP&FZ[J*`e&(CZhC-D=S.&kb"
%!OjF9h:bbii^(<\:i*;FTDJm.rS7F*?PF*UFe`-)*j6QOM0Z':#ZpFZiM-#fqZ-33Wo"Ris5hGhJ)Y&5c'mSX$pOC0lfIS!'#1Xp
%+t.Gk^KJ\9IcfD:;UX9.U`>FLp*mE\We&*KWi-*.[Z+b</:D"F"9[kBfC';hk]CnP_D9$R.M8),r";Y#5LGJlDkF>BaO$pgq4Wq%
%ET4<V3A,FUWi[Bf'It'o(FT-f(pd=V&rK0b3A>)&V7q1p$%u'pnekThE!X(@j<fhA*Oj]nf^C1T<b!3)Z$<-/=lB$j(l!<"9`lDM
%d1EnTrtPA+[+:-3#n]LQ#g+)N<+#<er\GRo[`aF'8i1_fDF7SNK*%ES[h)i<`2`Z`B:aZ%/L,i\+qPbO/VTRGFqh3OV[G43Od;C7
%r>f(C3sHpj*Z9XA,T+H\:BZ(HZ+&tQ-W&5h:\fr3](/kn1J*EO>.odL#9mpnb=oW2n]&P)f9\LNh'5BEg[0X;[t<%E]\L9)'1A?j
%;^X?_f$=mO4AQ#elIWIN^Qa[02F*(l.>M)O7ps'u)ri8]KFp-![nXfc-l^igLp!7<r1cS5,?e32&D@tq^/OhF=k<\TQ5?:G*r)-[
%H`.)Ed7dm.:Wj@nWZ\sSS^<u?PG]rV,*D(TFO#=]`%&-dLuX:B`41i3bkc6rd*LOdKH5`DA18m(fTA)gF_@eV%ABiMTW^`V%r[HY
%687V)"N!F&$qcOMe$%uu4otmPLZ2%4o8,M93U[p=:EJKHCRh\U1GK&1UqEr)KkUYuqA"R7n<Z\qk<E?W.($t>aU:F*\U=Yp<`+,i
%mi:_`n682F-@rSFC%?DFVT;*<Wc"+UGWN7$9:r.1qU7f11qArAFh8K?a<Le>f\bEe3f^3dIJogV&o6_m'%QsnLj`'mO#RCVh$+[r
%-:o'&R\#;p(Rbo1ZetBp3!=\$o6=i[a*^,KY9<P!c4Z2?E][!9So2F`?3%&aGFM=sNuetqQi+=E+Lk!A.'9#;$WlqU0K*fncNGD7
%$uV/,E&'["dm\EXiW^V=W`\dQVr"G,cVu%JLo\dV6t.Q&FPFcf'+@%+T*a+g:uhK9dd]+rF`;Z4)RPJCXGSbTp6qLs^A\5&/i^Z\
%kL6<9(0EiE*+6oZN-LF\]An\-4(odM'*sd?$o].^H=B<eFNuEo<97T0BJu@)-^$4]"@"a&RoVk`hH\i=HsobNeib+Z?1KPC\<*b8
%^,R"](iI]2oq-R%*<uJb<^Z/]Jl'/i_>PdM2H'u;3Z3FZ@DeKK/+CZV1*Yiu@EA%fo#ZF79dnc"AhFN]M(>*WO_:e?H942SJ7-Dt
%XjI*tm!0]h<Os@?DP^(#n7U)R%kE(pAoF2+:aHhlk&eo<M?)"0"&B%u<L>t2'(i4,7F%We+V6%("/nM!WTIOs5BBqj_%Ilb]+oiK
%"h!T3V3P:mV_V*j9i,Og8.f&p]$\c"7<ha"cD)tIZM.G?n"f8h%f$4tLiKt+8PBslq[Os`AtAbboL@Djj`<.("G,<oO'rV=YN;04
%XK='g6X]2<.sfI]3Oo!`>a:Ja`l*3@S8e*/++G;tl]#*Hoou>Eo'bm"^+apYT-@NN?0?KHn*A8lJpNi<_<a&nL0kjNJCb:WN/i'#
%iHqE::;[c3j/'cA*^N'f@b:Y^(knSWKSU%'#5O#o/VP6u[%lhZ8VEe8.1qnHKKl5.7A.c!r(ria-hoJ7q7Z0OQ@bjOG<7jd5%X:)
%rlTmSOU?jug2jQeV_%q$'Clu$B3GQ1$>h/"3MHk#/l@qEs8=6I,9R+!hT,aj"dkFR`#r1t9K#Nd6d1jf)M/M,/aF2L#3iYVMZqiO
%an91"o#'X,l3ic),">g$07Gtp,!8X&q3N'QKjKD=UZbEDKV>:m&XT)uI,ff;np.9YIZD3=$9j)1-[Z(lOO'MC.3]h+8EEE^=MAOW
%,KPr[,Fufn**"AH0S4hC.CWPL5E1NCLe'"A&03V[L"M*&'QT`l$o>(7/mj.<pZQPe\OugO!d&[Rc!3eR](YC'rssefU-6U#1tpCP
%Tn0uRaL@joR(12oXQ4:ao;BrcnD</;_'!uYm&,0N63Gin;P$1?,e`ug)_u-CKVuK/YHCIFWNCVQ'KbQC[k1mOFI)%3:YWlNs&IUL
%ZP=7JIYFC)3jk$c;?D(L?pE[:84c=Xe(f'/r"$Q(MN7>]n3$j%ZlO6#6$pW+3\&Cq^ePVd+O[1Mo;qSKX_<rYf@PCNdK'rsr1S=;
%h:MRm$g#1ILAXXTY^a8.CI5D<j,#D>?#+HE'58<rS.L>.3R^TV<G4`3_g/O!gCe(Sp#"Z"4YYg08Tc<looRaONPGNF^6e;W5W3%Y
%nUJ$AIb)k3/ZTg224im4L\G6M`hT-Ts3Pbf*rYBS,pT/E,Z*MtLKb+2o_jfcHeULGLN^OJCRK%QT"'AkTanYR*ap+-JNWpIJfoj7
%?9R5R&8T@m37=T#=BYRF*D]YNn:7rnoSKl4La40qr&N4u4KHhX,*!nR&E>gg1@)]g5s?u!^GK0SEP`*SHcA:;Kle(IaDLVG'BiL#
%3e_8kF7,Blje)DU'`=I)#-PO`0Mo9[*fOV$ag/]I\Q>CfJUU$1oUg\>SmtmHkC9,),O$Ea=Clj?rAJ$2Ym(C4;QjQW'J+=P?`Tg3
%6IO"p?)'4WLf,"<'EB$hR/b$N<\:G9!J'UiLXgM8pDOp"-@ntmnYX0FDeim6&E\Z[q=TURn5nNX>U'?VP$O=q2WK"OeMTLEpJ-ct
%>pBH]XdJi<lDWf#"lhNWT0?G%+u1:paV*b]"<;7K%Jc((Wl,d.0pqI8e^9Zm9.=XiTUMW\/-6N:=cbbt2)p+UBa>1gjf6pX?c,YH
%4o>Ws#j?ptjd@SAZphjhbJ?m'$P)]1K*.5J"F`pXE$5#$;:aY*3h1'T8bg-f)B8`do*l-6Am^/mg2:uF]stQ')B?PaO4d6Wq!H84
%3rWQLaXr\UIHo>-iP9Q.o$oX.b+\u>?D@UFO$oEMp0(r/0^Uc2.K$W&N=cG*\#*urg*h(,bSuIoA,+DQg:<iK!7\K-fFTDn_7"Z_
%$"91%m%T1tP;(^$EJB[BH6NT?EN,]6i!$ou.F$=_?WY!)1bU$ULGc%ehcF*3qfOju%tkqM]8mQO*=G,,I;67!o\u-l=fX`1UHmf*
%TF,k-m6`f!7%m-S&JiK^a6_4hSrZC#)s/D$I0HLi.med&)k-mp$mD_b![)l8'^U(G&H^Yt=Lt[J!qZNMZn/1OmA[QK_Tu$-lUV$k
%RgMD(NkS+P2-^d6`gn#0'<PTYO"i'0YU:n7iB"81'Bq;LW.mU'eMk]e)!$J$IC(hA/I^*6[)>*t8;(_[1g*sEbcHOPbQeda(_mQ@
%<hL6uFi%-=XfFu%,J\uYi'JDDd+&<MNNbF)Q@/mN(uYh2A(&3teKSt\MWo^O-u36#S7&aDjC3WsC#K=`&qWDU$Y(W6%?$;`Q46.5
%Lq]&LA53>,_P#&&.)P<scV!tuhgp_722Nb'.*i9<=5]CQQLqEl^<hT;`3hTI_.Q#)nDnD69KH8e,%9R9kI?F@#K)OMi.lEom*."^
%!-m#.U(sJU"d,#]`:uU^8#V"W'W>E\#Gf;R\@Bse=9Y=a+c4a.G7LZ]m.u6&=`,9#`h<aZV=/S[ZM(7B7GLlX]M=S'.%5sn56"Fi
%_qD?;(Ac7WY<huTdHmCqE.Q1P4!(+@;T.M9C\<gR,).Hd]Ue6,@T(.'Losk\g(Z9F`%,<R:S`i(/>S,Z[%p(RKHa,187hO`Ne+!f
%$:RGsZ78&c/A/^.R>7eE5[aV5IQ5sl.]75kDfd\Z-`^]ST7JJ@Y@9`"CUhjt13skuiA,uqo\]\(Jeuh+6pa=HqEB/o(E`H2GS(V`
%pm[QHm:SVdCUcgB_Zh#"X)hCp5Ti\W^QD5=][ubB<CM$1f.D:f=61>(AO0V>j_Z+i8@[_5_5TS4=g%f[]QpBm`]K,Ek`gpgJ90l,
%qitQDYZ[KkM_j`*Q/3]cB:#!iY2RMU@>d['a\*]/IZ=He1gWL:FUe6dQbQ<HTdkS+6W?`EFJ49h+tY$k'4R%fBO6R/(>_p(Eh4o%
%\3sM0rqCX#:N[-@#`L^i6O8*qFU\JJo_lt'acC>9+ohXW>^ViZL1Lf\_n,l.Y=H*WlhgJd,GO3Dcq&,#Q:ia%Vupo#gij_Q2-d'6
%1f7<AJW%OpIId^sC*3dnn'aV%#U%c[Y9Y6Z:bdPL.g$u080EE%Zk1P1]UOH+Qmdu-*EANlhqjoJ'b(rtjfULJ<7*t(W1lS<r.'Xt
%\9=WVL!N$#ccq\HN%%q8<tJ,Onso[/JD=WeG^f-5]gk;HhhjFFOlt9)?#\67O1!iHUE#HH"bB9dF:,7Yfi*e`5tM"JBN^^Q\?NMm
%N+lcHN?&nMcboRqpj-?Mor#V#eb#B^4+C-(^Sid"fH"B14+r>Cgg4W6"J7^$$%28]@F(C]3*NPc03`Mcn'M:R9Y7/^O0!4nqn5H<
%ap[#Kf2iEE_`O)XP5WH0>r<Ap.:S^>B5m#*nZ+\(%Yl'&HCq!Sq2EmUoOCR3L#5\te7TPo+>iD5GS;ob26F8&=*M7"*0>N0J:J1i
%9:,s+CEEU8CgOp^g<Za(4SFKq#igTN'oVQo10SsoBY0&.TTtk%L`=&_`Z6LBO3slKEq_0@j49-4d*`h3K/m.V[n')H1AM_%F(%=R
%0=2>Yfg.";XkZ#0Rn)R/>.KBd6?l%?AP6(5@9LMJPH>tkEGJfma)PAUNG7XF"ce[!7u_=J3M<Im5,40HBJLcX=@'EaCJ,e7H!n0,
%oW<ZL>H\j_!.s1LKW<B)L=^3&B<n@r7>\(67d"&8`sE@B0`kdh*@N;P#*[t%A>FFW[Ti)]^!5cS.#3*olfN5_dj%Uj%OJH=ZCBR5
%/@2&W;Al!A@t:Y$We(/[NF"5J&>C?L$P@^#l:d-j:,m2Z:M(/f#2LCF.OQP2OULZ?"ee<]cndOc&/TTk\Pj`o!g!l;139e>P]#&d
%Y?9`U4C>fg+J<:^psc!_b(!GlCYgi:-b>Rpb+fo^F`'M2cLW?b$&"DnXsiAYTX?=,kb1SGCNNPf]?bXRgpsG+bX3jqM:+C2\Hr>D
%#Ehe*96YmlA4HdF:l>hfejVPcO>e=lKVT:/,!4rue'f8<Hn9j1$dQ^X+4h3VL*Su8"nO@>V^<"n*G&/nB,tJ<M(WI$>gJalR"uY(
%=KW=Y+#0t;ZO(Oui%q5<Yq+4f=T7^4q8l@S.D7b4nPJTYJZ/R$T#t$P&j<b()M[,9<)H#$ImsS+J3dMBn5?o2iZ/10NX/!uP).:2
%gRh?AZ@2NSJ&[hJn5=W[9=,onL`sY1RMqnP!J1t/N'Cr]#6dP13s!M:<JY^QZE.fu?D9Y!k!VrcWZ<5oeXq)%KW8.KB/^RCd-I50
%C<-FkM!-f)jLc);'(=3*%C&ufWT&=V6s8)<FPS-@k6jfT1VWX;Q9mG[_1nm$L<)^31nLu]L]eoQr%[e84KIt#,*!nRGeWj8A_)?X
%KDpLd*3oD8rjX1&7K<=9.&n$L$*LRA9A`7Iro,0[7^Z^b*e1MZ^\uC>,rl9!Ruj"VM<Q=i['1g25ZE,oF<pJ$JE.W7KH,?7\\MT;
%`jdO##p]1JT3%bNm6OFb1eF1H,69)rBRL^@9EI?0-rE^!]Xl)M5lX7n*.(OWN][M6,V7%J_1'>@GZh?$?gPmt1qDRYQD;;S3MNZX
%k?I'gF@&AQ3W'arHpT?W&sd2u<!bp6TjeoaD1LOX$:+$PK;CP>$$O6<a)l<[)j&W*s8+nMVkP.^C=SSX;%A/Up-eXubRlTr9b,7N
%<^26p3<5W<GP5L7PkLQ,#SA%(K<0l?=fu+g)$i`.(C!f,)p6oqUP^&\n@%S3Z:S'nlZ`,S*.f\]#XY@8Zk06F$+Am;@#-./8`Ro2
%!!6lU+Eti<&B?-6DOB/[U?k!8<:rrbp?oRD`rV=M($3QAMop#F'U@]D^`o^u+G4fMg#2$W!qFUMU0?0;OKHAkPF6NuD]Vb-LUlIs
%/dOHVCL^3nA?rps?3$6:K2gZmD2i;pfrY#NhOh5G[=FX8JO\lm?%)Q@#FE*99]gt5"'URIqV9/mKH$8D\H:!UL5CVfE#*j)MJnJd
%l!?(b>WG!/`fFml9:<0na[BX]?`#(=C25d:+Cs2oA"m\%$.FT7i@Iu+#sVtNQsAm+gU@c;r6V^'ZN+2"VKKSm[76;J6a%b8c%I`c
%]b(1WkqI1*mSth=XjL,8m'G6fd!j>AJ/5F67UU;<E8o1d`HD]3d!FXpDeh=*BqgHrf;kN0U%O:Z6]<5H.``1'g+*aX*\5ll$mLT@
%V^?1#3iZYb,r-n;/12rfXIls18_m3Lj&s_691J(qa3m#W-_:M3YlrA%Oc+>+-_<b-*_n,c?I-\p6t#Ugj&lLOi$PYt/@Jb;A7^a5
%L$%iX!DD05HRg$1Ve[E4%<4i?)N6u!h"))"jKf,K]Z.9sSJtI+S(JBt=3kXgB6i<DF?B%3c;JZ[MUYfpG`?<t+UAC@f4YpClis$$
%)U4.'K/W[$/m0)-ZBH\uep36e!J(fHI+1\t%%$Q(blXiX.K]7BeoQg_.H6ULTo.mV.Vb#VH1%aPeido]/b39id4CjAqF"Zr"TEOY
%_YVW9C?em/p5s^(TY?8F1>WN^)<+94+;]^:@jm!"s0Y=i!'hp-j(`$`?8Y'Ri!;VfI#HoJ"LS0\f!*nY_&b/?]nn'_7FF`pU$_JA
%:K9n[B<)67_?MY1\#]THrX?tu^Qbhm-a2/u\>.N;h%N+!\tJBQ)MKB0L'SFW%!"iXXCULW?pDkH!EhOk12/nh^V)SOm\L&1]sat(
%N,$E>'\/;E>_LlH6UPXtU@PN!5tt![Am?I[+]HagksqKe16qJ[,3oCZ7-5CC7Gug?#l,m7oJL.dg*E;o+_*=Jf8t^;OKTfPOKTfP
%A'!8`7CEcXOK"ONU,uU'7^c-Di+j!VO<OUf%Mc,ie#+j8#8%0eT2\1T[a;&bn>Y!lC<4m?H55Jq<("[6OKTf8D'<7R`h2cYA3aNr
%Mqi<QX7[cL$@%7;T2'3<$(8L9f1-pJOQhKCejOr0>Hr,RR2TX0QfPB(%-NgUK.8>o;gT8Je96k7284`;c+?uX;[JkLqpkW\Q&qur
%J-":URg/.na:tjBD1$nt#=K;;oFYFZ7E-el>cDIA;@^PN10%%>K="-Xiqb@Z:!+50ME:sf*FhpnQEZQuJq`PC4eho)Y@Ejb;$!)b
%VX;(5Pc\.fB66<I&J^DtB7'`J^6D\.63UnW^brd:os]nfaEU4hJ..6TFjU?'ZgOn+<KKY\o>:p@A:;d'K9Ypk'iD<&,Q:]cS%+lA
%INKT"j>c"D2$SP:^Qj[)E/;hE#6;bbBa@+\8jI2^/CchYJlk1!EGmY]KDI11#\JSEeTQqLE*M:d8B<[C.[XHc'\Jqj;>HO5FjVuN
%UVICKF^f53fUt?a0hlLa2#-GXf"r?C[mlN@;[&<N=64\hnu\\pHu[@"!I7(4^;Z^aAP0<B.X$\-6o@n2(TP(kdKTt<TE+#43EV,J
%Q!cu'E'tJf[S0iMqX8@LT;oB)W$R4nL"0B1U,jUVRu:,1eP;c5G7GfHRK=mS5NM.5E"JM2.7!BB1+'UM#-T;SRE33@)J-VT)c?PL
%R!@A.5hfenF:%4Y$,Q:="JJ^>=pS+j7JlUt;a_?M]ctT'#aU7)EMq"gEJtNHL\WNpMN=-M\pDAGH[jmPE$]qEb<NMumG)R"-P^8+
%.&u3W#b@*LW%RE'hh*#UL3%VZT)j4X^2e=.dFMX26D.[/W,ML'2M9DRFo,b-DM!K;4$5N*maDV3cZH.Cd#[[f4p(8G^7,iKR4XX\
%9-DBi-2C=C]TEu'4CD&VPY4[W/O7ZG%5:Pf"tO[#3nP#0H)?KY(RVYfinu$g$l@'Ujj3_W>@*1_iJi"KRD;3-T1hqcAH3_^6ej*q
%bA`sam"QC<M;n>s$0um:r>#0-6?6VG:tdIO..rl?!%%,(HA(j>8KCYX0kmup_8jY7Vd4q?3"6mEM"Q-\(M>?'Zum]cE("NO:uX$U
%`ol4,;CI5Xg(@lt'4E;YR"u\(=<oZA*H\Lua"5&]!hNo5Gh-H[HM2i8MuJp9jK<#4_met)GYS*cs'Kf?"FJR/'"k&*3*/<DaS0S=
%OLW?gXQ4:ao+t!?^$BJNH,^g_Ec8gjA.R\dgYVXO$;TRq"K'^[H"bO`;G%,\2Ua48Of2,uc6hrp8kbtKiL()S:&or-aZ\;_+)@Tu
%E_^X>F9k^oCt9;;Vqoq?X:$VB\J"$M[qkT$1LUH;WCD[-L,6ogo8#(HR6KY0Dr!`>IlH!iVZD.EE%8+?Ck1I8#seA:#:jeQ_A`j7
%NMtj)Q3ljps8Dol@mY3S]:o]IP!+V"DnGbJ:]bR=5m"5_"7ClU,;,1i;^SaS"Gb*l7#iY0'!i)=+U</?.)Qsn[sfRG88e0nVbNCm
%\#T,Qn*k18L`dko6TFhkXb/ESKAB?FYbqf*&pq1oLd2_2M"7"j6418]r-!nLQmSD94]R@'hqjp5$-DSc.D8N!3D<!;TJ.NlUo3ne
%'u8>'_9[N4ih&#N:#-_V6`Qq`;\#9'6qNdfoIC&%$bC+gD/I0rit@]Q[GS-bFTb%&:>$UG39Llf4K%q/GP;]*G8KpkN_%-g28R<7
%&2/r?CH_h89-9P)i%Y2.QaOA!k5:]TFN/>ro(Oj_bQW?EB\-fu;V)ZHht4#QD$fcOTPg+la?ffb7tg[s*^of_rS7&tjko]O*O7e3
%/%b]u8@@!7_20t"8?^<:6'l6*:7VMLj7?^YNJQN*F<Cn\D]n<!*#3Grq)@]L1!<R'J?L<.0)nBn<a@Hu./h.iGFX*q(l=c36_C(E
%)aPT&3?Mgu9"X^7!*6R3P^W]hZ&1M9^VP@0n29E8U@]ClX39k+3;o`12Ih$dRUQ%eHT@NTo*.Z;dLYVgFD]#dR5]`Mm*%0T"r>%U
%0gXdB)ZX8ocP-d_mI5ocpP(k!=XN!_k@Bj$gONS>/'hk*X35d>I=gOL$X1aAWCr`Fc8upeJf>JVcjM.(-gtFd<kn6N`cs^rlWuGA
%jrISmX;jm6Kcp2gmsW6/'Cpr5q1_(#aZ'1ReH[JZFDI\4)t`ctVW8]M&LH<?@I@-"#Dt>+X:Q`9`*2r"j;W@g_EL,C2VM\8T90*A
%s$JuHBM[hS)/SPaT@.(ojBJ6S9\eZH<q<_lq)nU'+&,8gAPl2V7)SX=!`>\MLglkL0^gaXbD;n@=b%]0mae8=B1of:"P++'R:ls^
%b1i$dDDMU,Fi5/>D][E\heNW]F@+tpZc))mpSC4mFkhTbc;=@u+OGNY'',ES?7Gj9mPaWUWZP"9&]?H++m:7GLbSd_53)6>r(8qQ
%-J/kWh0?M-iXV)/5k#'`+Eu2>'Ohj3;8@1C/B"tb=^q@(2s='%5PW(>,8$dP&;\b>FDHBMQ2uTCAUMo8W4Y35I,[mb3,ut`K&^C'
%:V*7tTA(>?[f#.qnpeH%0"f1!5PO:1U+$%3&BFK3I,c1jaT(cAc?/RaiImV,5Ep?OWC!"77+hPP843Z%)UYu+@MRTm`,S0\@U)E*
%B)T1tk\UCJI;)`,Y-:j>C#MaY0EF^tW6U[@g7rA7TDJo45;t?'<,PMFNfnm?:]1)!#kN4-r8u['\=n+"4>gET1k1JfDprIjE8_2q
%s$Md#!no,'Xgg!Y*U@N^$k/<@F-H@H@H/E`etEt;m4!RSCAj]M*4#IR'sopecTHtTdl1)Z\kW7dFi_>56:J3;nq\shDGYWeJ!q+1
%S4"$5PJMV_;nLju@B,'<mU(VUnr=Yq8boBec3lO0X=(:hlQ5YQ4C.4gS0"DuO^Op6d#PL$#1;s?Ei]LYlp!gQig(01)t/MAf$PaN
%H:QT]GN\.nZiA@=XGYV8mc\&?<Ec-6-]8k)06:!bY;(A$Wo\5$A%`!+^NW[f$,:b%9sT>kkU*Ff)5+7^ScNu8[@dTLR'WqJ74[:K
%B[8b0`Edk"7B's]nmYn,N&_%jCA-rVfao>[p`0l%H?e_n*QD"q>q^^>gIZLBnV".!Ks>Lh@?#.8m>O0>`WNKB:YBI5[S@kHBRf7R
%f/U&qCPnM.rS;#)IH^m^a*RA"nQh-"+nCfb35K5YBs8[raKS^R'3Q^eP:nd<k^Z"DG0GPg7X7_T,;F@j'h8r"2f'BVkS]jbCl;?&
%kWt[FB!Vu-gfQcP;XOaWOLk9LU_4fTj^lnE,-7mip3sqFPZR0GXa"`!(NTT)J[K5Vhs;A'f6&8kbTerBaP'9R%N[nPYgY&)$2'J`
%Ol?#a0R:5I!@*QQ#_T;14f1#h\(1]Qp[,MC%:_K*j'0Hb4U(^Tqa%]Nr+]N=IVsuAlfDtEq'kM[;"U?t)uuNUE-4^Cc6.qY@i`uj
%$c-4Hc/rl(IEVM=jOs<YaF^#MgM/[QdU2f\*/'=g=iX`*G%)'UlT!H-V%KW!PJ*QH'lI+8=1$CP@=D0-rF_^OYC-&H&c9;jSks8e
%,HCa;70N`(%U*(/f<-?s'sYIK&PCiAZ9b):-dN&WBNOF+\Tili<&PgS2Qt[s(NFO>q$6)e>.fLo%l485#XU7Ve3cc";:BhQE5*V?
%as&=U"k`%5I(@5f4Dj<h8GA'MOg)b^-,UhHZB2JT#d"1u0*KVfhlXMi9nQR3#X=<pXm<G/AJ;Q+=RV>OW'VZEL5<X6hEc8-ZkQsa
%m"f2\k;^fl-5]'u_nY.I(URI\R5"*E\Nm?BjS+Y\,B##B`Y406lcJN^8c"#,MGjDp"%MARj@'Ffll69rcDS]_#Mq,T<<n)%OfJu)
%Q]eBZ8@q`VD5?&;3M&E%$21_?b0plE`9I8m0YV"HBZgB>+i_$5VKEHRcuoJN,GGb,&n0JaIX?eJ<-8b_9.;ZgT;"N]T"Ig_U`VV#
%.+b)=?rSdEDR9BU*%-AdP!5-OGfLqn*<be!/j&Q/8hN1J%E0,9:iqp?:S4?QHG:0>dLUN>ao7kc<%pSU%1n(eA.Vfqlq8LFTcJhl
%k6]&Ml\We$i9`](&*aW[7`HPXH]CAu1WJb\qu9QQ37nn]]>9g4&0q2P,N$Ot6fK/:Z]`*%bia*R=^J`+k_cV4J3]?-%g8bC]\)*h
%l=Y6T/FAmX\q@*UGLgu(Y8G=t#`'7.h7PKT_F20_C,o)9,D#@&;g4A7)uMa;?UpWN?oN[>]A>qU#?_^BAL47N/cB(gk,L;OLShgg
%]ZM7U7mpnnr#(i/:Fi+qrEqjSlq^TSH3$N:rd/TB!QZ990>t1'D^SpN,)U#9VQ4A,pUB<]<<iN-);\6<J]CT-^$]\gB;6IFXA)aW
%V0(=4aG7[-"-Cn&;W"MYE!gI\8q70WP<eqe/LG-Wfgg1!6f:%-_8gX0d'd^:D/O9<D%hN%%L>B=p9YCRduX4_Zi,_1<%gM$AOIdM
%)<B)2<oQ)m[hJ6M;oQ)FVlT"XGF.JueH(K=omVq$%L<bK*T5#Jc>c]I_1s043>WRi;uN!TCJWr>^B(#]o8$Z8B\7)0ZXK$PjocK!
%[;Wmme%%E^CPE8S=30iPH)0Vs2fOTlT%3u'3&)EDd.qcr?^rnNn)cI=qAR)DDr`QGO+0S`BcS>D(8H\/,PHN<iitn9X;njjF<+LO
%JF@S$J1sX,_0hNsW4F.e&e"_%l7U`9)7:U]FKnBc#dL>Sb`R(`5]f%l1!_665!_<jf>*or>@Du'":7'E&bZ+A=i/$:(jY_s,65H$
%^U%,KXhKIB6&g$L!6"?WD&t6NXK<+D%,G.co<^CjBR+laq6:bZYXO7/@j514[t$(JF.3CK+WAW,hGQ1G[ib/`:M*J'Bo<@7W"Odk
%(8J.feQZ9\(d^Wdr/<OfJ"$>6/M8TI%afNmV'([:Cuaa=XJgY.\%dt3E,IC,qM=SNc3lYI9&ARE_1%US>?ogEKke<r8i)&p-j4Al
%NU)q?^bA>7dB\c^`,aLQf`K'_EH/\G()Zbh+35jSLIMD-Dh2=+[%L*cFBRK3Rb7]A!ftBAX$D4u=bd$nk.)(s[W_'p>)QRH-,b>X
%KWWj!0lD;kKsOe^Fc?^-s-F<6lOX9n]s0"]E9gX;X5J/@mWu'f@3E#XW^\p;IM`kDbB]T!Kt.%YL2c\kd,1MS)6)3G)Aje4KOA'f
%_mBtKa=_7938+mPXud_MZ=rHH?*,>&rLH`>+RY%/s0g#R`$URqFUJW`gkH9I/Mufr(,S+]aKT=R\*@T:%.AcZrtr@?GF=G:%]q]n
%!lH&^s%qGO_`Hpg.<LdRF0#,\3ZUQfnk)Qa$!dD+[)Ia*'fd:;,C)=(6\WB-/rW/"mG.aSS0Wa`f=eQqje['@87*u+n#5]S!d4Sa
%?,2eBQYr\&J,[hYitisrR!(&K+-Gm%%[c0s+P1TB%-r)P<-CG]iTJiskUTYVEN>W($KufQ#)GMS1?bT40Rb=.<=h/;U$XiMA@].Y
%Yif5aloGi:3WI@sEK<Yj\l+GpSaR-?1_V:;C"E#3RQZQ?l>Y0AjiSZsdU&+TeMJet2^)NYI+`Q020=^h3r.nq!6`tN.qhr8^8+o&
%GqbP+8#^K"1EiKUAchdkAcO`%ShFeY,6o\h^0*qb!L5LB`rsj)YKN.5eKQN9@`D*nTPlN+!*9A-:!\AZ--`rF([0E\Z_XRr=kuVA
%V\idg$lRG8,H@0*@7;t;Z=dTjdI?q2055%1_3[!6Q@gi)k0NgcAg$NLU7>te'nIa%L^q)aURGf&5;l*nCRTCdl`8iC/#t0?K8.=W
%l>V8B--[Q]H24_?JnC:`gLJ*%260@jo)plaDWSrd<AW;o;,sr;MoC;B7Et]'XbEK&R3b7#eBFQTe[n"55W-=WCib`5RV$\k@M%@4
%[C9DGN!kkO<=gA<MD=>Oqr.iRYpLU>\3&OZN4W)s7odfK^MV9sU?srf@16;W-fb8)9f%49QS`?GJ%')%.VVod/g*Ubc<csRUm\^P
%9:FD*Fe^e+hE5I<epHNT(F@=+IGZ6pa7-_ZDYF,/IjnVClj8g:?qYtT=+C43n&*[!EK@k;akqR001q\fWH7(IkU7BN1cl*^1q-EH
%&'`%&.VEX%LFB'@QR(Gol^=5F5-Gr?.R\.Z`]85[A8+N$G=6QsS?STqG*g)4=&PM^*)(TNUbgY!XjPpA8!I1kDRZBV/_\'4<0c8+
%eq<f^O,3(hq(oa(f<9k.ItJ2M&[A5A(F"4S"pdC9#5No6V0HV2*<duaFP5?5$1%BcmH+.R0lqCb:gl)b#B;J>bAU"&5oV<PV./TL
%]$bU6EoSW[LPX6=6,%r<Q;W.(R<A_QF%LFH(h)BM%F-_K"nCc)q1R[8AqG!PY$VGNrs&@o&n4WOY!ViH%1n(M,`k6'>)?l,hG:q,
%9GYsaT!600Df="7@V4!_>V*OdQJ#cB;J$2:)Tg5gp(<+0D2hVlIpHDoki.OUoQI#W>)Jc=i3<df,`k(.0O%XcWMlju`1@^#@*dOT
%:K_7'BH#F9Fe(8s:g7QfW7M@T,-]7M7s=J1g(C(N%sa8&)t^baUL6(RgesRkro"kTX3Q(K7FQ=f&Z/tdY#kiBAU_b@B(!V19ZLf,
%&L.udf29T9B9%&G;c?\Al^"8?=o;*3nd9+$Ni:Hd#_T?2Q84uhKo$`kpl%PdhA1j3in9$0'QG-*L7"<`9,HOR4^+nT03@ZQCM@p-
%r>T0Mgu`f[j9A&WNedoLdlQ)\c*$`qXW`pO;EYSY+,fXmm=%cZh^ak`P;_SLNlGpM)f@&<bj2og&$W[?<Cp,/Y5]K]f/e=\GIff0
%KN#9.:u87?G6rR1i=6m0Jj>p`qM'#J$Z&*P#RDK?H1[QZ;:jdhC1".AU*47G(C#<[TU-;4nM@->HmZ*#Z?PQNKQP^NAW9k1\+l2T
%UTW(R<VNZp&WL1HX6Gti^&l_O`NlNiY:fhgI-[qs6];DIp!3;/i-/RjVA6lK+k$"qEEE*Z2)PEl87FfkDHEd>^9nORgrl,U4Q#GX
%0/^##e-&'B><d6s7'_M48H"h(W:SJ1llG=/69InQN!:6;Y,<0G8J.FJC/d`=rNE:uk<Hh6h[>d(\>Xnqn`rkUDrM#]Ig>lbQ.Ytp
%:n?MC'#C7*rIP3V)8u)cau2!J\G/pSoS1%nL4<;[+tsl::j:S#kS^Y:q;`lHj:epu?*Epq@qbAR(:%4E=4dd5]M7u3eI9TYnN%+r
%p[6R>!uP(8:^^ULUO%(O?/S#1YC$5]+HUl3XJ0#)H.<uLW@4iZ98PK;e'nMog2RQXEm&\?NStRSfqTC&FjjZPae^QTh;J]7LZ&<Y
%SN47Y113k[^\#alKp/)g)%eQ8!-17/?AeJen;[Qo#a<5S<LC)1TQE@0K2S*[I>1?'Bdm#c)!m(E*^*r1FOJX(!J1%8(_T0B%ME<Z
%SOae7<Lcl3\pC@Rme6R`pbHgWE:G6f!iYnB^QQ/&13dVVnYL`AF4I(9p+mmR9*Y2i79YRmAFPT\G6el%lO5,CpWNcLNSQ[$+%W#t
%)FM7R/l`='`"e?)0O-L"M&RQ=M+Ab=e@ZLA0"ds8l\I75]L6#9!,q>R:[U&i//8a2[hsK_dBUK#/7^cJ>1*:eKL*ELPi^_eHhL)d
%a:mkt<Z!"Y>Jk(;hZ&>u:@dkbH#<%0FMtt]Wi9hDmo.m`+)'5+.gDuh<^fR4;f;Jt'<g79c-.p7qO:#C(dWtC,CKCS!t+s07$V`E
%#qY@t:,pfIOca4$hU<n:BVd#5*C^PnjU;$N`R(j/'>Hk18"l_@?L?:9dCjb=p1nm+d8$?njUp(1#)%rWGi.(1o*BJY)'3?d,bcE%
%cOBZ01P)r^h]3@l`9LgY"k+!<nN[(>9_$hKmfOi7TDAjSn8(H=Rllngdb,_E5Nl`tYk.5L,<#jf"0q_[(DjtJcS+Xp9stQD"ocs(
%ArAYI+TdKD+DfYAlhFj:<Q'N+BMLSL%ADIAChOa!s+#!Y.]DSt3+aG4#)'sJ?Zn4%4Tss.&3lqBG*n*Y0dZ7h[27Bd`XA^$k3JUu
%TH$F(To)hubWKM>GRV5fTM#q(Y-s=sPJso^MrhrOYUn1:SW%38.Wu4"d9Bj+cKH*`>G[m\FFO?9a4I/N,&.%A*RQ;pVU#QE!J5S?
%!1eFigG9S7Q]f`sX1%90$[/?.[4LG$k6M?Wi7FuW[d=?6lRm=!64OTJK>WWc1N4RipTE1r#L926mb3JQX!rc5@g,p4E6]%$3D$G1
%nKkDQ63mmdIV8nm<57M9#XC',LY!5:5r.hN$3.8enb['%HNQNbckkLo:J/<(H47#bd$4k@IR@@bAtsftG?HCVP),p!qkfpD!lXng
%'Jk#K[N^HYr=FOcknGD]GOUK/;E7R0>;aE+AHeiASif"Um*h*EP3#XG\5I4S\TV@qHtg!?r!1n&WfQ6@pl[378@0-RYd/WS+ggS$
%-^^aI4HV;[C4ekl>1qkFbd3KNnW0[k<Ni\roM'*0]$NZX5@Cr7H#.]d8oreKE(BK'=(uo[qZgEK4^h/lFm>ReK`&1n;1lXQR04XV
%[$rYA#(U=s,YTXaqf#Y,>_WC?Y.TXnp_<5_NBVMNN!CB.qk\N:(dD!pcMUYH,6eTB9f@N&?GXTQaJ2_fKP2ntSD]ap-_A_GOA3f#
%>.?gu$[FX.6\/o#%cg^PKl-]In;YP;-3RC3//dhM*.&a?hFUCmr[0TUa+VU/!$TDHW#L7Bp8E+9)OqBB<1!N%el`^08Jq_3dhiGU
%ht.R,o;aCb(;3Pr;jMPLSdpg6L2.r0$JZ'JlY`J[OK,Ck]O$q<A-KbuI\^H@@(p%jTi_'@A&MSQi"q#6KI4D!*<f_>L[Zf[XerB*
%l6J$)^^i>fa].bO)<UA1+sGAI+?1L\'X52WWcdr-n/(E\Ug.sqKH>s=%C0&b,\,4F\q[RVS7L&KCQlH=*Zp?!7]DgdMm14QWTVal
%hhV^*FNrYmYb*O&/H>L[5LPVmmm"nK$^:/\r(m;I^$kiJ&Zmt:<VsNq%bY,XV?g@BM@;9GGF&sU3grIG]$^sp.^;?ok=#.h2:$n_
%lt'i8iSJ1A_AIBc#]G;L47_Ei,"aHm8o5)LD-en>`8D71!'q`Q<d,8,_2iC5*keZZ=j;bN#bPCY;[_frg..t6?>pR9cB03W0sFqi
%bVM'I$3<`.ajR-<7'dtTQifq7D*ZAg]F#';atqr`"Dn>fQk2C+nBmYta#(X)Wd^5N9Kf'Ud1nIC0WeWj=ZMh0a!68H]1.gQ?Y@Td
%#ZHPCQsi/[H!XV0cLe/XS;7S!PGHoQKNA@&6:bQSVY[%g)'%kLJhG+ROhmAR;*60JpPkm\!S",\>(ViW8`hq]P#pV%;>#%T4u@;_
%.++N8]VHY^I+\o3r/dFrCMOYo5Lr"T_;>>QAIrCe#)!MHlj!na'lVF(4+#9Xq`-M6K"cV9W;056]D"t]l08d6O<G)G0r`4kg)O*O
%6H2N5\I>)CR!K."rbEWZW4^+20,=eW,8[V[j]'=,\7P&?&N\&rgJVO'`2^CLeX[n7Jg.YQlUW1L1cU3+;_,a$9^"]i]JrL/Z_!U;
%!8mR2VkO%2HunS(VBupCD,OX3)eQ=e)U;3n6jT<9VJjXRfR]=G1C.ZNq=^g,FXt#PPotU(k,2WPq>f"sgPI.T+9+hQpKFO?pA,GD
%'ZBSMZ_@Lt<p4W!6%0s;fU@p/XQ9uVk9m2&l]k"],M[fVm#TUpjHsL!-mS^1@_)bUA:7qIh3t^#l1=[`,715%kdQ/$]\M9%=Hhc4
%^&IP(6(ej<NU>)s;-(V9ZRNi<coaJS)/$*#Gn=\>W5MMA?Pl2_B(!,Ni(t7BFu'uqKL%f5"Csr;\M:s+32Yro8rNb.*_9]O0#,Bb
%5GPCf-fI1G(5o6_P=LZfL+L=7Qu4/YaR>(hNM;6\Gf(Kf8&WE1UX7-lgWGtXEC1Ve<gF^\Z/ne-B0i3_j2Q1%`,j64qU_$iVmS4*
%f>-iN4_#!PBTbM*Fsf.=K&8%++%JrI\<FR3d:VJ[X=(c:%HCff,M>^%+pQ*c:^`24DDT7$-)b541lD4GWo]86]\G>j<>CL_Q!MDd
%)@Z[2R_O[k`[:7(q4Xg83#O">GfaMQ-HNWYZYM^uh2_r?1Use^)eJ:8UKk$_jf]tQK^V\uJf1WpHO3%**]X&OQuV"[E?fic03s+<
%OPutR2/-$e#G?F'-d(=B8?.\\,!DQYqI_g\,:@mo?)UhWLmaQ_MSg5<QRU*gs2#j=Z*5\@RQ9X=Z<kUX"$\Zl$E>HCQ(qQEFVW2B
%mFsWoaTu<69["qgNGU%!#g*@IXmJ$3L8E\iOu'0&qOGBc"h`9=H;t*jo/$nc%"83V,G$^PEG#k)8ATZAF8].*^;<5-Ng/Geo*=Y&
%+Rd_aA?4Kc^WS2Z[5G/mKS:sXe@^@D1SI_c0=;2kr!XcT%dj+0#SDC(5M,hQJ+Rs1=WOLC"U/2<DGs:DXi!T:'dOW+Jq`d6o.qR1
%ZjAKu>+X\lO213h-s%5>Du<H$R1A+Q6:&PGTR*mL!chN5I33_t?soe^:(Iqc84tV_<W+`r(63.qeoE"e#=TGiAUq7CYa#KBp!cHe
%$a0+I*+U+mTDCnr`5_[[nM%J2m+InTT7M[C[g(EuU7_;kKGI=EB)Q^eJO6Zi,)!<i:E0Oc3cYNXW=4GDE>6GE6,eM(PR3=aE$.P/
%auAl>h4pHPB.hpO`[J/=!!`+b-ATV6nF[&E:+KbK.uoFe=GeG$&N,Up`Jk")PgPF>kNF`$/g*)u`WS[`T`;]1IX-E$I8ho;IL$\Y
%ZWLb>7S%Z/,<-=kgV!:)&$EZoB)MQp7Z9jp+XVaGakl-\1sr+#N"cj&.OG>u%7(.<`=LIbBmV%`hSQC^SrlbV;SOX8ltPT(h@'Ge
%f#cF2qWt_cAD5BZ5_te]PLQn^3]_DlisBh.[k]26o5p,"a30q>$,gu0SOE.2esBn+D\XeWgtl[s5SiBYU0`f(!Qa.Jd-hMtE`kTn
%r@'/^,I2cP5PGI4O;T81cpe$fVYYT$=KjJ-r4)pU;1XsHGq#A:+qi8KI0a$KjR3Y3Gt2mqX]f0t&6d#RQ1S540]<J?&*Cb>?d+to
%LZDBe8.g+S+'0P*MZ?Yk,k!M3UD=E:aD;fh]S[8@^Q3Z0h=]33,C3Z+$Z1JJ7f<2FQ7d;;LJBg%E26SoN0e+cd0MAGNN/;[)$i?%
%X[jA&fqiklBS@u/Z\C4*ho5;TQ.0[Rg7eg-5]H=PS^EPc_6+S/5"(IdA):+UFnBsO!S/56Y-1o<`X"X^88M]$))t6LGU`V@_`P_n
%lZeCuZlejlnQ%ddf09]=N.UeX#WGahFgPuk^4IaVQ<V`!j:542J-N3uHFtC%$'g10,"8\="1ed8M<k@NX@j%cQ2n`%&]PnKXb0`0
%[M*X#;2#k=':*nCm1igj?5`)ForjqJKm]`?g*A?X#l+d0[WOPbKe:l.&DQPmCeSXQ+kOr'L@pF!Be%WdC\RBMeNA2%Rmc@rR*$YD
%G%fn`;06Y3<b\KOmF1g","-OC"EO+qFX^cNab+#6\fnUQ%an\]`k^dh<R(CrDPYWh(g50Ba;&%!H<ETXGVOmIjSq*F'S-ghrk)h;
%'cl'gIV7]p_@9XbPZJ/TK4q;JlGRk.F/^HfM?nt?4+,'+_];$p'P&GZh$S7[0F>FXmTO75$RRJN,+1tE3U2J^06c!IY[AoO?"c_?
%f+DGIH&9%Y!T)WW=8aW#$"?M5N+12&QKMm75RmF/l0>(;B.s<C%q/oG=n`=/ie6\`df.*r0L,s5i$PA(]at#s32&>phSJd_M.T<V
%J-?#%!F_0CbO+7M(n^sAiEep,jkr.icl)lp@1Du'_"7jUi?9aO3&H[RGR(,lDa?L=]12B"^Oq*9GV)rhHD5%+"8EVTR(s,)'cCPV
%N\(5/6Vq;UqHs+*_bXYd%c5"TVR'?Q!\99##4AK\4$S:I5Y/2fe(SF;0481L"B<t(lh1Aa5?'ar2>Q>>S6X4*D;NMnn>6ZoKh3DV
%f'Mbu1[Z0kpFQp[:LI]aBlhtc"g%G-:Z-#SXn`cPE+StUQu@HC!e)X@`X<VHV\0oE=Fm8.n()J]ru+Ef[U"'pj4:=qNY6+'e."Il
%@1*V*cU+,!JY?3m_ENdabV\%L't&(DRV"e_*Q%$+IXr1UD+W8"=p2m!Jj+JNWb=0>95rVK"=:M4LiNVnOed-YD>MXSSh2\WU'MpE
%OC[n>a;80>+o4Q/,<I.*B9EHd`/^:&*[)*9[6j&\iF#(bXdMb+7#6RQZCu=OnG?oaj?S9P5XF[\c4[a-j9UC@]nu(D&>Yk7><[fF
%"X77Hn0/>kSAD#"KN;:XQ'LP&BObPbqeT<WB7Wa,j@@1>;KZ5HJ"a^2rk]r+]L@pkd89fN&B]=.qQNHle2q8]g$7i/7t\`+1(+3d
%35TlLVDep.iMq!8;[@_+UO*pmN3)j,#hUNS&e75/;;k&lRWd\eYSLFJM!I^jFRnSGGc7&<!@TpDmH'*>LNYL956V31_'%&9gA3dg
%$L&0W"F;2JOQg^ie?d.'OcaL'^KOEYI`V!eUfhPX70cu0i8U;A/`6'8q.6PJ]fgX$mP?4tD9!/X>n@2nk"ku2+)l3gD@5_gI6d^\
%G#`,-iE*r.KS]DS5g`HP0!SHfOJ<!2-_SP<TV))i'\F<*l8cUk0=%\\6=5>kntd=n)Hel0_430.4P:W4o&CF@2VNG=W?I3&9oA0K
%_t<S)6P/heVhKT$I)*SY9j#9bS_fTaV<=0Ki:N\TQpaH%X=@f([-ME4S&^91:_Tuh=jf-ljd2$<<55@S6/ZJ,+.'d1IVTu%I!OR@
%;D2=Fm&b)[Z;+'Ad:P9;.,ZfOOb<tP<)mt2Jl"r,.)t!UeVs]?g&FV3`g:SJi1A4(5X7Sl.(Gn:\k&2-0C$_;]nj:T9<UKh/A-H>
%*OBpJ3JODd*Ju,iIZ;3>$pf@M[u2"t/I<mQE+krX8iAJgrGq6?6cW4q9$;%5c_&%C)n@3<$L:!jFVH>+i#Z>+9Aa?MYL%uDk_D4V
%5F;WuNsRZ,Z+q]6B/qhCSZl=Pp6/'IMp61Jk^<[`hiMA&AJp%?QM5K&?h9$mW.2MWbN``?Qpe,P>P)5Q`*q'JNgbdX%YJT/Cl5?(
%%V%TZ?:.A;F0TN+5))rDnr%BHSh_8kg=ME#/T$+n7c[+3O&(i3)=jU+`QThCOLr95PC@u`64i=a"GESp$U[t);j0;q3rt!O@@')A
%X:mW+#iapoY-?;CXIgj`>8%L,I5%k1G<rZmV="NdM\FC;/5+KJ9T#C)i:%WVT@%]R)0Bc228/*r'^mB3DukW!3Z9H3+d0:QNmgH-
%\i`2VcBr4S;B(0b]-U#6C.KW%>MV$ure([1dUI_lIg]+;[oG?`]N[8+$&#`@%1RZ%e_e+N1`NZeF.Rcbi6EU/gq8BGEBZ<T+Z64Q
%=)1.6X3RM2V\B>`QQ2`nU7Mdmdn2SMiepT5,JAKO*Z:AIZ_p:fJ@[J6UBom_:/UMK>O4,U9[hOh.^u7:RtbuPh(hI&=%&m>>446h
%GmM$F<3tTjO.#j'QFHHMr<W%P^E[[Idd#(HII`@Sf%NVea9u:lj_.05U480FBSImD@qK^AOG]2051`cb'M5C'\Qkj;VWSOS<gM1Z
%.C1q8BGa8?Wo[[BJBr3E7TG1g9']D"Sg&jC+1u-<"OB?W#_Y3!a*E4I`h5p&VtnD(?Jma/=pqKqR<kLVIg:c28RubG1k,cTG<W\l
%Aae.k:Dm8:[r3-mLudD[f)gMF,uNgB^#otp)jg3P_%_;%mRT>KI>/91q3L3BP&pVND"nYAR'^Jc9_0<1o"dM^ih2dRgY4MS/!/^t
%NJr.hLIL2IKF%82Ya\S*;(@UfIXT)G^(qYVFdImpH)H^RT5uU^)hK8D%-m0*P!!mCIY8$!ObE8.8-+P)^T4VuBfqVj*%01an/<e?
%#UXKUR80Yh>NgZtPK/P1W*-6CN`lFPq&Lma[,i4'8dQPhV7YAGoStI3>#E"<7`TiS9LHWVDL$ZI>5LCe^n-a>SB^"2^EX+=gU4Ea
%Uj&UWE8sfqS#/'J^EXU.]H\:.*VF,,D3N(+"%?!RqROp;_)i9`n0jp$P7^gR4;2.2!2:)InKNB\NV(KHT>S!eDm<YU`W)sgjK.Ej
%C8m9SbV:9;>[Xf+O;)L)^1YDe_<?VhkrVSmZ_4G'r9N,q0dp)>"aQik5gRhFZJ:ldV]ObWau4DrB"><^?(D^JlG]!O\Z`t7X=u-+
%kd&DVPE!4+,J\_:94<R5'pcTL2+%bHTAPKI-LChA9CBL;4rOBT&GIOMD4o<`K#0&DBZ+\F!rsO=oWb-qhAP*1D13a+?VO?]:(E74
%D=D.a*n<P_-Aq\^S2aflJ^%D-$To/U6$-@]82Kq:T//6n[4#.;qWK/Ok(Ab!="F^S(b#]S^oY;G2mqP`Hr@bQRU\FDX6PP[iZU=G
%<@&eH4)#KSK'4b<0X*u@8.BSk@&BbW$s,/&b%`U.NhE2OEogo,O@d!B/ek]?dSf.q:+-IBdm<S<4L<s?^#`N3cbVg!]+#D5@R"lT
%KFC3M'(<^N'2Ee@]C6PMFg$Z!);R)n7PL?DesD'a%*k!58X"08#'"$Df/Mr=]'1N3MgZuEU7ljpjm8%uTuBl=(N#tTN>-F%)*sgq
%a@fr%e@*o[_,@<`jSR&ok0L"+kOFN7M+8sjY1&7g!p>F>;#Ybb%T\Zj^L$#OHB4.qLS@aiRCbse(GrnL9`6,$6oU)j?LuWD?t-4^
%1jMS&5GAe=1m!IY5\8fCArC&Ck>o!rjc$A9aqEQQ(0YF[d1A1Z7@mRThO^HP:Rg:bT-:c3USoa#SXtl0)QXHXSPe-L>,3_6\#*VA
%mccgCCV*(5\[M];Gb/K2]%eMH4/aB'&8!32Sqj5jeI_lQ)B1f'jJLa:eS25K]LIK#QOs9t+4IgWCaDHcAY^[aZEmHGeI^+QHFFtP
%9M2mu+Y=W/6SfB#("m[sqL$?eEPSIC?k9NlAqE(1&H\3U`&1oc+NdkWR$npaEaGLlR`YmN+`D"elYKnKAVBL_E@E,+>3r/ai%.NC
%7>-?P&je/8&e^chRD^D)](T&Zrr'JR>mVZ&"NNcQ.9'A8W._m*R>"L&U(TdU0)<A0eRFN.l#kh/*)-pMO!GoMQ>fI>GNB\IR2K]"
%_4`('g+^m+;F;QF=sAg>3nus&N"CaJ.AfI*/HW/B&aEM*n=a1UdJ[8e+cZd0T?I&?Q<b@O&=?[_DA.0D1AWcC!5rH%_/Hk>_I1'[
%N"?9%!AEL4r.rK$Q#;Ai$<jj9RkH!cd`W/Zr4).6Oe0Mfd4aIH:`$*8D;'i4$;V!MI0TB$E^G'D`$K8Yma2?%B=OmU:eRh'!sc'W
%@>oX46"P^7+RQ?<,qc=$p18mXK$+E%crNW7$\>+*7Pno<=lJ!D$lpUlNR0GI&ZRAq2D/.U&P#=8>"/e?_@_%$O[%&^&sSWqbn2q?
%Y(cCJT"Zk?b8;u9!sjo):\*IE+E"QT)6^4c;&Q(u^QA?*k?Ku"_FY6K,/Q:%o]K8Z0;gF;=N&p)F^,n1JE6),%DH.;s6;F+T9,Wr
%JcWdrJ&L]Wa3j&[It6b[-h7s?T6pSN>7.\SV`2_QT0',b=GI?.eNmeGl56=lAK/\=J:W`e,>/WU5HcH_Y^be%m?FmR/H"BCld?."
%AJ.DLT9hHm'<.afNZPG#Kgs>VmG5hCO:mOUDj+He63PjkK:4^K[a*YhkK,Br^Ckf^raDZgjQN>IB65E7cOaYZP0j;!!g1cr5N@$C
%@a2i3;951cQQk>*r=hDm9B;Aucfh5phE^_j=^=suJV$4]i*q0=EjpP_$A4P/ZP0Tabg-*G&-!))hC[/o2(h<YN?i5J<oBVeAS`fk
%*?AOLIkmc3ObZCkF(XMa#AUU4L!LZ"*-6igmO([bZd=SMd,"(M]]-.G@Z$rh*KbHZ7e@GSZ9$;Z?APhQ>cc<Ti4JqeKF2e+=%%tf
%64?8X,t&k))!&jIGU`$\+KoDNg#X5C*[`-?\S+*B.6^0J'SX*q3V-<7X7/G<a+aC6`q<kNk4b["H\Zus_hCd7L+Lg&`\_(H#GrHd
%[YXr%8=jI<H$j&R,p$D!Tcu_V*)o/0Z1Tq.e9\c<_l_0Tf@Ke%1ip*aM)g!e_D[aI7^Kqog-L);Aeh29V1r,Z:3-/iB[_[(e0ebY
%,9SM?'@rIL9k^Pq#Q4uqkZTP+W\Uj`'I<5_]p[,Ikm[E*+N2*n*b,`m=%3pgp&["fH&Wj_Y[;P9cd\?=q%*`2`A6c#40iV8N7.Ch
%O`:g#%-XF'ZXmt2%Cmdu?1:^_Fj-*liu28g$ZfJYk_Aiq8^d5080q!]HC`_T,7Z3F`eDqm1.>FE-@q<3%s*kD7AXe(d4ccFXRkc!
%5DVLFULee$,m6]Po]Os_Rc>I1bXN+2bnGr7JcHFXO-+(M<Q+/s!<@EEr>B;/6Q^>&n5[UqT,sr(.L70l;RE$8AlWbL5sUYXX\tDN
%"$h<]QpuKW^g(PK+HP(0QT3S<K[D+cf.BW5c"a1*8.[@9#2_@.6"n/U[(FXgcUC-OR"<r<5KQt10d8"R@SgGATj7gkFBRI,g`qkG
%+oD)-q[=0,=[A`6KPoo9G-WL]K$NP%O6We\]U.\9j`<tgI4DGb\V(W_Dt[q;.t0+%EK1\nqANM+rgfh>.0?>1'CLJ8&jWDK]hXR>
%#=6r!-Fg?'+D+tY2:&&7+MDg$Pc+17'a=iNf"&/?bKkl.mj3W+;CTBM2(-G@R==B`dL$UVGmYq@,:tHuR;qf7T2!V$7iHo(?@*>P
%mudl'@5L=&+7FdEC;O=u+()PYcBg*ELWG(p>P>\SFoW]a-I$/f_.UoW>cRB5dEX8)gF2ubC`;4L\tnF-&KS[24-MG\Op1u(]Z^S$
%/nmbeWmN&Ho_UFL*7A<SU[-A[TtDS9FF[et1_s+W`"CE)S^P+GF%Oq/V_etUR`2?kb7sS4Br1HU`j98oL-B<7YA1b"o+bhaiQR#'
%A@Z9+#FuqKbU$4&=`B@<L4Q67+>f%LJa2GT*AZ^+Jsq)85[aB(';=0/dX%Eb_`5Dn<ofn/5_uF%T1!)X8`KqB;5BVC)>^-2&Gr8U
%hf:pF@(ji5N=@+@4i(ti>=*S,[*h[uYDsE9=5]<Dg5B9.,>4)g-[LIC<%.IVJ60\C&nuM"@t6dbIQ\QO1C\j*8cp57CRH=`nk-ok
%TF^'>Yu_hLbi)62%fPOT%M7ul%R?Lb=r.6K<G^Fl^XTU`*J0N$W`%L8VrCC9rj7M*k93A(:Y"uWBOHOO?LbqiMpe$u-QM\F&KBhg
%bIWaB(anm2qksei<WmX[-A8=KCju5r-a!;rTV]@kYZZ\cK$\e>hhon=0:e;-d[n@/3KceskOk\DDhnGMf5Pqc(\,)/!CJn\#p\Ku
%fsM5'g*4aII3i8O#_D7H>\!Z0"W+>(G?qU4f?hIIrIi=O-J\=-1>R:WrZ0.YjGeGbct%h/OOi0C\Mr7Sn7OF/V`ZPF%FIXE84B>_
%^_)-Y+HK,S][<@?W1hh,cCTbO)7(brg<G!fKN%!pWuSLE^;r>U6tZUZ'3kf5R]\:7(dP6-BM"bd!@[EI&AN'>m^Mb)$j4n1C6hLP
%#KEl7>hJaI7I4e=[/gW)1T`n;h8!D^OM#2G.gh@422hP=Y2uT7Y^rhmINY\H8:$;`lo^K/)509JKRfAk=*0fn,7HAL_N-DV)n+IJ
%=Sr0J%11qZ=$RbmCd't9b*K:&7oH(e^V'B3AR/C7#5%*O7(.KO:l)pZjsfie&.+"8dQ-d?;@NXV:g@&03k>a%aZ_s8Z$W[#cgL+1
%n(FR;\`>6C;:&L.#h,D#;ZKOMAp/>4V>F5fkRkXbFm4^>kWoK-*/16)c?-/t0t9ZnB_?=f7._Ad(u09mK:#"2@"1_5l$P;i#2+"Z
%@@7<!fH!9$:H@d9j!CDR%Lj27[\cWon&k[:ghenk?^(9S0,S]Fd<&(4Cqi=[oF[/u_Ur2lN*hE;JDq"A#uF;3T)cj;--\kK'^7hC
%C&X'$(4%):b6@?Nk$7piBC>L+;SGO_e.UWF^]VDfmj!qCT1`Q>\DN<nrXD/\UbhR>PatoN\frDrUHDbaVeJ'aldbh$&Y:0\l>5AX
%_faqi,8J[MG/r["%+mlfi3Ra1LN+=Lp#e&8eKt(9WUD;2I@j(.[LdO_/GE]ffC*m8iK3FE;A^!7PYf4-gf&/)@0mP%D?@p9!K#.C
%ll*c7EA^S*,=nQ\KX3*B2kiPRX=Y$PY`O,Yr4IaqkO\5".H\*Lk0J9AiMCdJ$hcq]910rC-c3U05;&lZ$3]l'O\:`S)[5BEnEF/r
%&VHfnSs+Y<Hih12_5@E[*%\MT+fKh*L&Y$eK"*NL0AHBL;cD`cq]FO7c7280JRscoQ@E<tLXA8%)\7rm"sT[n[T[ei(_VG!n:Xnf
%pPTX[6\V'FmP>$kGOAu.#IfBjj^F29+qad@!L;!`UQT'.@6!a27T$rU,?r!:akhtiku!@$d8[<<DeEjV(a(l&`l,lCH,CL6Si%u>
%&$\s'FrR'(!ge2:VN4"8$QU],Rg(lTX#cRoN(i;oS7Rr(U0gIooq'qr&J;2a0=Mu</itCp=*(*U/dFZ48MLD@nS4]L;F8/[(YYq9
%dSY1%TVI@6bVQpboSfGSa$+=,5*O?s,<^-Fl60qk<0&LQU\@sXo-FEdPf:rEk^Q83TM>5tcA?K.&BGKoFrKKo%R8HIBk--OB-\Ii
%o@LXi5o8aDN^c[hF-p"FTTF<oc[>rm^?9?&Z1WeOcC4\n)?RIp)Z_A^eJ#hbWnb:c&GRI]GMW<j3+@X1K%qLl0IX*;]Yj^\JR\;4
%p>tJ<HO$f>8qrIF3@F&Hl_@t*4_pP9*UkULdUO,`j\No!0*%.?k)`4bnh$G%hkd&TCp4kdh>dWD=me+oc9^cUI%H.dcQQ&7PQsP+
%:e.b/FNN*[,=$56N<&$CDZBh4c7;f\$e_d0\^5BGiA_`s)n+$25[_6K[?_KGSQk7d:faq8jq6`a(:f_K35S>VE?2.i)"BEC9CBG)
%Jpca@&@C2pW%^a'YFNp%MfQ;P)p7$@E`.h^ps'gd?;/M0m_BpobX0u%bV1OCK0YY:hTH_eJKbfS!f)iIm8")spR/$IoN;1T"7b;u
%n;<aA.B9'.#*'U.Hr9m3]$*r5AJ]1_=OKOF[MrU7dAkLumN5<\N<$n62t1$!MO*BhjOZ@n;`7HhK%2P!f<uXNG"./;qA*9$f!jH8
%W5#q"%A3@JFsCf""QA6Q$)GCa*C:,(dMbK$'9*4.J5i9KJ+T.%7&F4c7hGI0)pe]O9M=R.T^`4OA#aY^\o%Y^K^QlBQ1T-CL<I#_
%Lu.\.rh/Q]#]q]$C)NgV">te/r^_s#Q(2GU%ae9Hi/P?d0N7bL)p7<;LA1\cCY+OG_-Judd+3=ALljeU$O!r1)qY[!-0dL[cilQk
%!0S/<@s.fj4ZAUPDe(oZf,1VANDN1W]f$(M1Lfi#*72+>9HF++7nLh$-C^8W>6G]s;q?i<=6K31hfM4SmqB^Prcm=B,7rb8ksgKu
%9fE+bpX=B5]<:Bf7eOM57-EUXO#"(7f/BKR$D>Ze\"IE:X7[O(e_ke+(:k&>,BD6R-YO5H[M7QH`f6Yp/Ta+j`2dX(Qp<A3,(X8X
%]9kC]1>5ZsGV#\")=_A#eh(Hq6ko\i\?s\V-;'f$"VCMoS``/i?24W*>Ya[HG$:*dU&W^IXT60D=og$*P`$=6MR&\VpENN,DPa!&
%%)`HUTMTqt0KWo\!J(GZnmM?lU'1fZl&rY?4;X.G\5_kg[?U9-%lF-"4QDEq<`@/5)!',P;>3#`n:HT@N%)C$4Jq$mmOn8K/bEbV
%O:BZo(o:p)dT**mR]$Wm[-66?$n]3k6&*rp$*cVkd)\[_)tOXS5@)[u"7I0(^Fr6n$D+C/3qm[p?fB=Z":Cd(!R<EB]_70Q4XdsV
%roZHH"[=ra\_*<WGkTpJ2@:;C%Vo#/ImXc^NMae)H.;m<=/6cWfNUXZh^fJ)IoXle8CfX26VJ`+H0dehI6"1JNo5`7Ece(dL(>+P
%>iE1dr>O'0:>uiVktBkh+sH*\SY?4"O<E]$f(+iQ%(3#ogMNfnp_a[o1F_6Z@@Q\a3n\8nb789/oS62K*LhI9K*I)rS-S\H3SdeW
%KSZ`:p\:F&KON*RjO4QG.1,=27R"\J>Dj/:;4-/MB6*M<p)LglMXVU+dW1;q<h+n&$`GcnU0(<Nn"kX]g@Me9mO(Y%2FcJB]*)*K
%9BCh/Z+Q<MoKiL83"o4Dqmgfk6eY5A3F^!P8Au0&s(Qh>(]]^?O/lB)64a;a\YjSY2n&^j/+AGn_W"%=gXEnH9gmE>4dR9&bQq<'
%V;up"oLB/iDO8gud^ZY7`0,NT,Bb*S#(W@Z5]Kb;b<O>98A,to%'Qo4)#sq>PKGZ3%R"GmcFfV;Ou''QQ['SHUqd>Y&SOi''_`K9
%>2QN]LBD*SJ8OC3bM&TFD8,m>7Y?g%<),lM"bJ/d%WXd0/"`A/&Ohi>)/jplCh(SO.1,(@&qAYNA39%%e_9fZ7Vuh%Amt:M;/Q]'
%fX:(NRq2NW&hH>Vp0>isI!@4K%4L\;4#fKugMlP6Y9l(o\StLE.jF1@KDHkhba"go7;Fk%]I(LmpY!iJ[Q5:(*Y+JB24e,Y+q"s,
%m'QT:U-c'adCr$K^W-#.+!ONc/0+TsSFTa.no.mJY0%_E!G`.lX>:RIX(f";SsjJ=UTq1=,h7&PH]9D8&.[RWli40VC3h_IM=<[V
%reL6Ra/ll>m^@Os;*[Mo"X+B2ctHPtcqK%7,7smHHHK6*G?#+D*f2(0a\5F<gFh7Rq)iaMV(AUB9cKMqDT<*H<m)S-:]I)7BH5A0
%i>,q]Qr3)Cgsq*r<B:5o_QXGSNqKJ/KgGinFBi]9HEi)G)CipWare!r%2!D.(OC-"_4a9c3s4")K/QAd]YMIA9-$U21Od('MloDG
%<^l6kSR4J<g"h`\LunBZQ9LH\N!UR-SX#@#*]GPh%4/(N$sO+%:^67*A`IV1CYIgG.s*fob8uh7aWB2fbWX=HUSjba;R)Jg_]@;C
%^8@4t*o<@uSMWg)0co#p,MauC^g"#C/fi2T)O1i2n^%#3)WSmc7X6(/'UZR)cK'VZ'TJ(.-PYWiE#n(8'<Gu2pVEWH@U%-&PKitY
%3(u?XP/&L7__lqU<eIk(mt6Kj%GiKGb4TdCFlJ9(DQiGdmo\(hd`BNg4_s3(@t6/@C_Mtuc23TUaiOd5T,f@F3]3^'+isQIB`2W+
%4QB]'a%HP\+"q0r4rDF">AQ[+oL0^fE5q_8'0c_X:eAomiK`*7&"7Jq,1Z'+S+tqpd"GO6LF#RjGf:((5EV%#r'Wm'^c"eDo7ed-
%SLj8s`"+@Kc/Qef7#@N<r<#=%m"),YnUh%lFYpp)M')B:U(:c/0i?p8.SaX)R^3j8r\5qdkB\/VEo1,2F/Y5@[jaaTR/8%\+<0]-
%D/5L8!A_s/%<V=epHoRGiGie>jF4a<OS^1EqS_d&Rs)=aBI=gVTP-@_E\FsF'YC8!2%o)$(bn]iR2k=;:lqf.Db0Z>#?;iDd_Rf=
%)M@l0]g7:k+E=[3aSFH3%i^8&S_Z%ujp*K^Zq,>tA\$l_^JN],H0\e*P<T%s6Qs^Q(QFSBW/IPqoQo=<9)_)6&J#shEW3m[d4r=/
%B1n?aEE_=a5JV1e_n1hi5@,O)r^9*)j:?u3el9mm*S31I_[R)d]]MZ2JPl7KbmE3J?.G^@ZTe[G4o.IJ!fjQN.*t252&Jl?G1,3Y
%$$(CRa)HqDq7i\E_.A,+:l'"H'*9N%ro!\Xi:i*!BsU&'%(Fo^8A\qf]MO^gGuK!*p89SQ`p)fRm90Yf'$17gc]XZ5,AjI_,2OX,
%WQG+nmZ9GZ0/N\I4i]=ETJ%Ot+5;/E>N:DTO3?*I.R_a/UqJV]oWc.9>VBeFHpNg,j%1:X>(Xr97d0,M$U[C#=q9L;*hpc_6K&>C
%G-c[h&X)D5@5[e6`umG!@<$&.\S+fR#,(6e%Ja6hhCD-+(W$(3r<'Xk-?PZ]hli.Oplr.G3Ct<_mn*-a7NZmT=J89ji$[^X;=.\`
%5hGu#mLh;00AI+F7NJ^b/tMZgX:DQi"h]"iK(fP602<ibX8&%;,o#NK]NgPFEMJE:(aB]3!;j(6KO3!;nD"-?Xd(GlGMr>X$\7k9
%p/5O-M!.*&77f?W3%(ni2&$(eK:mYC;O5DJ###No&Fau>$>Rc@Sq)?tNl[ca0W0a.5*57V<e6>aWHLY6+]SJ1N9+23^n\Zc:5nLX
%G*D53A%+piIpEkS_/YM:8/4kmL#)A^PQK/dB*GSu^PLkCkXF5S^9eOUe1G45`%qlMf1Q6^jFuqu]:h3,EF0DoSXUJ"]QS>o#'ao*
%c,R=22PYT_$eira2Qh&_EfriI.k..Rh^qn1^'r6Q;O:4mS#r;YDMj0ODiVOP&pZu.@GFhlrocO.?!/Ne/Z9=<n7Fcs>eT=.C.Raf
%Mel"[2KT%;SKgMq_DNTRaU0/!ni7Ik_Jd!cGb?Cl[EH?XF\dQaMX6uSB7;+:nrp%R!C!E\$i`N6GTsWA%?]&NOMj"ilK6Yj7-C9X
%U6XR?^$p1QL17R0I8Qe^DIT.(g:?nAs4/g.D,Uo*XtA+R+IV_LW$r8bDV7L>1h&akGhst3WL<l3_pnkr;itItRNNd2XK2MiWJR5>
%!NB-]/*&Rr'TN;eTo_*qLK]S3e.sYXmjpp?-SW;J!DWJ?j9m#-)^sHkp*NUf(@DeJ#Ud)+MoQkm23DKi\?4<CXR<VQ2*h:?A7o&-
%j_G,I4B#0$'J+Aq8'IjnaX^!DKH`e1^$\(XTL>n_7Z(pop[X$:M<>aJT)mVYM4,Q\#mM]O[ldBtiX$_@_ose;&<K-^;Vf=-p6TDr
%\N4(@m,H),Bt5\(EK:,C@8`AHdR"CNhHFG5jd_X8#t!\Yds[V/f^r`ur>B%#Rbg5Ce/\8]Xs<tnL;Al'@Fu>LM5G.baE0&rQ2.YK
%I^s`ta%0n4reu3ACHi=NqH"Z/J&&gJ97LsYrjL\_na?F)b[3*[+6[&R37LON"HlB!Ibkj59-Y."JA)H9+u^o(i(b1M9'H,r\)i>u
%_FiDll?]]&#Q=!b:O)1!oO%7h/&7Qd'XGW'j%#k[FP/YGd&ZT-DQ*G43]S__(^Y%@D*nq.!k?,7q"Ai2kW'7_?5Kg-0D0+pFt^;-
%2>5I#+4P@B\uu<PgP/=U6`Z9[B>29B<=:kn6I-:fVVAIm0tik2a=\K>BDN9K6hcDl[6528Do.Ub$dT\#<m(7q`C/TV2^!('q_8Ch
%5Lc]6V:n9fQ&\Bm+DtHV$nAufpXMYE34e<;^;R1U&;Z6'ZHEJ3_8--1FC?W#87j^O\PriBGuDo+h%-/X+q')F&[<W:04Y8\h(7JS
%V4#MK<[u6(MBC-$27peUKri3[0,V4%FekCC.`@9ZJb"A%UKQ2N,AOVB3U&t_Y[/LsVIeR\,10WQ+1mDmiETSfW`CVqBsp@ogms0W
%HQgTIq4:OY*.9#AQ##2dc]9*>&^h^fk1?.raX"X*T"M>=2rGi)f7]!;o;)]VVO3FG*8A9EBD]_AKKA7KE*48*09dAs2\_c%'pMa(
%$+1"FKFP2i6AKVoR][<V]).Bm\]M6pl.=!K4PZ\E/k82P"9-4e^T^Z+,!kVFnB!4Lra>mlAd=3JK`Y&MB1Mf.J.Po]H>HJ87$bSg
%.'j$`^Y$u"TFIoQAWu*)ohmpTf;f[@@qUXh]Wdh^(PcfmS"[-iKZ(g`O[dT4n/,9cbIVFE@AFVI5qB7ZPdG"s=_u6LW!<]5!)"7K
%/Jb(g?HGJJ4u?59d(+HXCQjc"q,/>K,tQ>s'6]Y02(oW5/+Bl:K1JpPp?rXJJE[A)89f4tUY"<L"9oh9r&TjcYO'11Fi]D6=1hpL
%NpUqB7Mep']1i&uE'DiI4+=UUh3A*CG:VTa,7-+:@QB7UiLZg@&hm]f7C@R%cY]ngafc@hm?ri`Sdi*0Xb:AknnZ;O"ckBb!+?3\
%aHM2b>5jA9fLj5CBSsqeb3pI;aVU$O[TftE8Ko`2eStuj4[Qr[_I+-Kf@Ii&LVoW'5mi^TLOMFhrp*p;Y`t/IGsr3r&.2]/+EsW&
%VQU4W8H:%)<"j*+A&8A3+Pqh_T7IMDS$/R%?^bjm6jH-E1H:0u,0_F0:*LqN[u>?.I?>*C.Lr2!UHdB@Ks!NhK&3!5(SO'<6$ri:
%;`ut1I@ZbL$l:`!PFYsA5d%Cb0B^T`Od5^oP<@$OVG:+j(e2]@b+ef1Z8Kn$0B.@/.CR*rq2%\_IWKRG"el_e14Ge]34uEHcO!Us
%cAL4Y40r8jhqCJ>I,57#;+Xq%Nb'/X\5imqD@:m)`*E-cDf_*IR!<QO's2;kFb^WP'0'h(I.S/G[2L<D.LX5Ti*!.3:ltZ$?3t_:
%egu(c0+k@b'<60,TjL*"+>=M@Np<dt;l!MdGUjD?rurA0c!#K'eSA(m[!WJQV9t7Nm9R:map<<&E\hS3&QJlp_[(4mc$'*W@pcsM
%fK(#RAcC^VpAd5Q8b'at]*hF9Bc="YK86'!/EVA\1A*F(kSDn)<O'mKCc[Dd;61>[Q7dQmBQ&>J?9dcmKkb3I`bVWG=0M.4D4Cip
%I7@@AgWgM5SUm+u#W#<A5U]g_Mo[CHbrO43\]W89`&O/1!NK@XlJ`gN1N6$i*#qmH+868ieF%6Sk;Umt8\77lPuh;;>V3ZcYohX`
%XiTrNjS4s]hP%9/Uq(2`Xs`&-Igd?C)'B=2pDOMfdh:*j2]@dp01'RW=c]W#2>`42a(SeG!D;8tf1JG7l@l=F]:iWMjJc(qI8FO!
%-\\diH+V?/p+GVJ2hB4n'8rDGd^GZNYj5dF6kQTFllT_;`Jqec>jsUOCYarZh;K^RXo7iF&JFjr3`)$ONpHKe'LIDOmS]Ifp\Y,t
%rlA(VS="L,7IH+9^Uo/\)Pe\9F13'Z]+EXnW=<1/NTl;@in;qDNs5b4e)N"7F\WJ>$P=n+V$jsXO?J.U6`8R`4eQg>Du%=hF4LUf
%QqEZ,71/Ard6b.6p63>/56e&(A/]TtnNL9j>k\S]l*]]i:b59FYQhenA0ZMbnfUN#mI5<(,c<ds38$20-*d(LNqIB*3/R-dE'he0
%#Z*#XrO\b.GE)VD=MMXflK,1(m]5ZT^kbJVP]WkE<8>\Y6ej7iAC%l1p5cJiK&?VXT>k%9Q,@"=XE76,:Y2Z0AnKZt-DI`[3:1@_
%R;LHn7)ugjrT7j4YW@>d1i1=MlYJffRVG6]L,K0;lQLtZ.59SoXFrL]d@Cqr!3Mn3Er`6GN^Q6f](:BPTeBjY+pE*Eegke$E/p4\
%SB*p9Zf9b&40_Peh"!i?g(Mn'O\R,)78ie<-4"NS'#Ym`g%-87&:bOb@\%>_]YLU>g>:AS\TJP4$<\Oec?:UB<U:NU)J:G;/$>FJ
%YP`<UU"SW$_L^%dcu-Nm>pR\sVbrSS!lAn*j*"Hcf9=R0-8F'');o%PRS)t;:P"B9^d/K-<p+NbM/YbOOL9'^'FeY%8OcuK/UYsq
%j:samQl+`uN)6>Aq\iW]=(U!t\s:*\]DA$,D<dlrd5\3:^q`$@9U":YI5c")>+bKO6sm-F_SLdQZChACaNk"#3.QrJ4C^=>:*NjU
%/*)(Q2\`G;p5;6pZP2B,e]t5IppW/A.g'Q6)P2N40i`G36pcH5R[N(GOO'D\B\k%gfBj7;hX`6a$dFl%DVZG?+sg4/3K-.Lni1fi
%am9Yp5#WNT*9"s;U5O<5We_GfrErg5%#Q8j>m/JYE*j8a=%hp3fT<Ti-`mNd#CnQuBk('5(t9pc3G69nXtCCk2X&p98jXS>'_CmB
%O@c@85!qmA+)&e);Woi/VD@,ffUF7Mi%3A]'Su&U0=!q'=p&ghNJaJmKn>7\0W)I8^hQl7nlSk,]4s9oL?Jf(mLYuR!IUnj/FDLb
%Wmr'HYaQ[L;C83d8qkX+P4MO-_d\U28C6tRC+EqX5e"b4)-A^lhjlY`*Rf=?\0iDe.?S)IghDkGXei@$6XlgC[f^s_XD">&<0T)q
%A)I<'T,EYEPJQ^c46qq>@'7s8*h#3;o:Y=q',fmRd`DmQCM)]lq%CgQR^FIn;c9'VH\IPoVmYE9YjX;oh*"*sI;>=0Z_'UYnc@*h
%dKr;l[\A_/42gRT>8Sb=oKTI0%fm<=8/pfl<3KnAaO(WdK>C5`2+WPKS"p4I^5*u:k_`Q@mJrE[PT<'Llst=TIY_U^$ADCuD-lfd
%,9^!p&#Q9F'O6cQMMgEC:GUT5(KVCc4(,4uk*RlF&"LO8Y0FQcN$4'9+ltg&[lQ28"/*f"&5IBF"@lu<N8d+>-j(Qc<[^kHKrJ^b
%&u4>7'V2W!Fa"-tG@/!'SBPo]g5mWh>k6X$#3'YjQir*M)nAl^30#C=jF:2_-hKiFoRdL<A?s0N(EOCL=eW(h/tkHt=OIf##n-4'
%:fqrY]^F'#_I(C9I(c_:0HkTjU#ko=%@E9'N+>2u#)id=hgXq2E^rDil>j2$h'!J+SK%9.6@R_RDa`cmQmnRtbR@,?X9FMAP'HU3
%_/R1UhoM9n-P!RHKZq%2H6hYkOUD:TD6"dRla4-OU,tt=6_M6J3R0f=d*g;*:m@aZ>Zg&u/6=ra"'eT(Z$&^;!RGbbA['nhI;`&=
%m`Z:YQmZMKI3D+R9uSCb>g@JJBX&6LHpU%k.&WtqE7@M_iefRn/4rR&!*M<,KJ4Z[S#iIi0HQD0H2U65'e,DS\uAVi5UBG_2*qa6
%WBsl*iZoi>F=]8O6Q#V#$/j!JLf$`C]au$-BW*;L"3NOu3.r1Ujb2\61aZF<JW+2QI4XuqcoB`31m[\RD5-;@3Pb!Xa^(A=K!7RD
%d=JCJq-W>YPc+03Z;t0'+rti-6<%AT]*_I.(ncHH'9FBYKkOY'C/G]#&L[:#Dj'VX@pRW/f!76;gSMMSe.<]rHBVN!7nKlp-M^ZR
%p0"&IM_0'.S6FK@jMpd`-;c/0?@'MIP@9oT'8T/%f`osLJ]s@/;ZW6jNg]W.ACLWp9dip`!<ls)lemssEK>&UOVtLQHoGY`:`'r/
%p$CuQZqVgsp0H$'h;j2>W(`=mDE]@r+:229PPEc<oM2\crs5N`J2sD]6ND\520C#fp%tbNM:P[1qb.fj44Al(D"B+ufYpEbI),eA
%%4%^eKXA=kZ2Zsh9]8tF"%-F)7'9`.c$5)Rq52qA[*9,/Wg(N."HAokhsi9HYH3XiM[fRi]$OWYEFcp1OPA/IA#fU^'b+=Kb9Z$b
%W2O];@Y"_CYL=3)#ta$ce@Kk]?&B'B,#LEs7c>1i"qXs&QF*Eb?SL^8U?.ld/-4YT;r2:Scj.M;JD$[7+:3*8n'Mk\n)t2=N'LIP
%"37>%c>[jO7T6aqh>mO>YKQA&4oY<62t)7h]D^(5rV2`"VuM/@o'NpYKD3-1qY]T=?_78rr9;D:Da&Z!qU_Y"duQ`mo^gPXTDhEs
%\paSKl0HY[IJJ!^qR<*rNM#-i`ZMjCs4n4Xm/I,".o3t~>
%AI9_PrivateDataEnd
